// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: sql/sem/semenumpb/trigger.proto

package semenumpb

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// TriggerActionTime describes the timing of a trigger: before, after, or
// instead of the event.
type TriggerActionTime int32

const (
	TriggerActionTime_ACTION_UNKNOWN TriggerActionTime = 0
	TriggerActionTime_BEFORE         TriggerActionTime = 1
	TriggerActionTime_AFTER          TriggerActionTime = 2
	TriggerActionTime_INSTEAD_OF     TriggerActionTime = 3
)

var TriggerActionTime_name = map[int32]string{
	0: "ACTION_UNKNOWN",
	1: "BEFORE",
	2: "AFTER",
	3: "INSTEAD_OF",
}

var TriggerActionTime_value = map[string]int32{
	"ACTION_UNKNOWN": 0,
	"BEFORE":         1,
	"AFTER":          2,
	"INSTEAD_OF":     3,
}

func (x TriggerActionTime) String() string {
	return proto.EnumName(TriggerActionTime_name, int32(x))
}

func (TriggerActionTime) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_677c5490404e076b, []int{0}
}

// TriggerEventType describes the event that will cause a trigger to fire:
// insert, update, delete, truncate, or upsert.
type TriggerEventType int32

const (
	TriggerEventType_EVENT_UNKNOWN TriggerEventType = 0
	TriggerEventType_INSERT        TriggerEventType = 1
	TriggerEventType_UPDATE        TriggerEventType = 2
	TriggerEventType_DELETE        TriggerEventType = 3
	TriggerEventType_TRUNCATE      TriggerEventType = 4
)

var TriggerEventType_name = map[int32]string{
	0: "EVENT_UNKNOWN",
	1: "INSERT",
	2: "UPDATE",
	3: "DELETE",
	4: "TRUNCATE",
}

var TriggerEventType_value = map[string]int32{
	"EVENT_UNKNOWN": 0,
	"INSERT":        1,
	"UPDATE":        2,
	"DELETE":        3,
	"TRUNCATE":      4,
}

func (x TriggerEventType) String() string {
	return proto.EnumName(TriggerEventType_name, int32(x))
}

func (TriggerEventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_677c5490404e076b, []int{1}
}

func init() {
	proto.RegisterEnum("cockroach.parser.sql.sem.semenumpb.TriggerActionTime", TriggerActionTime_name, TriggerActionTime_value)
	proto.RegisterEnum("cockroach.parser.sql.sem.semenumpb.TriggerEventType", TriggerEventType_name, TriggerEventType_value)
}

func init() { proto.RegisterFile("sql/sem/semenumpb/trigger.proto", fileDescriptor_677c5490404e076b) }

var fileDescriptor_677c5490404e076b = []byte{
	// 281 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0xc1, 0x4a, 0xc3, 0x40,
	0x14, 0x45, 0x33, 0xad, 0x16, 0x1d, 0xb4, 0x4c, 0x67, 0x2b, 0x8c, 0xfb, 0x2e, 0x92, 0x85, 0xe0,
	0x3e, 0x6d, 0x5f, 0x20, 0x28, 0x13, 0x49, 0x5f, 0xac, 0xb8, 0x29, 0x26, 0x0e, 0x69, 0x68, 0x93,
	0x49, 0x93, 0x54, 0xf0, 0x2f, 0xfc, 0xac, 0x2e, 0xbb, 0xec, 0x52, 0x93, 0x1f, 0x91, 0xa8, 0x54,
	0xc4, 0xc5, 0x83, 0x03, 0xef, 0x72, 0xe1, 0x1e, 0x7a, 0x59, 0xae, 0x57, 0x56, 0xa9, 0xd2, 0xf6,
	0x54, 0xb6, 0x49, 0xf3, 0xd0, 0xaa, 0x8a, 0x24, 0x8e, 0x55, 0x61, 0xe6, 0x85, 0xae, 0x34, 0xbf,
	0x88, 0x74, 0xb4, 0x2c, 0xf4, 0x53, 0xb4, 0x30, 0xcb, 0xf5, 0xca, 0x2c, 0x55, 0x6a, 0x1e, 0xa2,
	0x43, 0x49, 0x07, 0xf8, 0x9d, 0xb6, 0xa3, 0x2a, 0xd1, 0x19, 0x26, 0xa9, 0xe2, 0x9c, 0xf6, 0xed,
	0x31, 0xba, 0x9e, 0x9c, 0x07, 0xf2, 0x46, 0x7a, 0x33, 0xc9, 0x0c, 0x4e, 0x69, 0x6f, 0x04, 0x8e,
	0xe7, 0x03, 0x23, 0xfc, 0x94, 0x1e, 0xdb, 0x0e, 0x82, 0xcf, 0x3a, 0xbc, 0x4f, 0xa9, 0x2b, 0xa7,
	0x08, 0xf6, 0x64, 0xee, 0x39, 0xac, 0x3b, 0x9c, 0x51, 0xf6, 0xd3, 0x07, 0x2f, 0x2a, 0xab, 0xf0,
	0x35, 0x57, 0x7c, 0x40, 0xcf, 0xe1, 0x1e, 0x24, 0xfe, 0x6d, 0x73, 0xe5, 0x14, 0x7c, 0x64, 0xa4,
	0xe5, 0xe0, 0x6e, 0x62, 0x23, 0xb0, 0x4e, 0xcb, 0x13, 0xb8, 0x05, 0x04, 0xd6, 0xe5, 0x67, 0xf4,
	0x04, 0xfd, 0x40, 0x8e, 0xdb, 0xcf, 0xd1, 0xe8, 0x61, 0xfb, 0x21, 0x8c, 0x6d, 0x2d, 0xc8, 0xae,
	0x16, 0x64, 0x5f, 0x0b, 0xf2, 0x5e, 0x0b, 0xf2, 0xd6, 0x08, 0x63, 0xd7, 0x08, 0x63, 0xdf, 0x08,
	0xe3, 0xf1, 0x3a, 0x4e, 0xaa, 0xc5, 0x26, 0x34, 0x23, 0x9d, 0x5a, 0x87, 0xc9, 0xcf, 0xe1, 0x2f,
	0x5b, 0xf9, 0x32, 0xb6, 0xfe, 0xd9, 0x0a, 0x7b, 0x5f, 0x9a, 0xae, 0x3e, 0x03, 0x00, 0x00, 0xff,
	0xff, 0xeb, 0xfb, 0x65, 0xd8, 0x49, 0x01, 0x00, 0x00,
}

