// Code generated by goyacc -p sql -o bazel-out/darwin_arm64-fastbuild/bin/pkg/sql/parser/sql.go sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import __yyfmt__ "fmt"

//line sql-gen.y:24

import (
	"fmt"
	"math"
	"strings"

	"go/constant"

	"github.com/cockroachdb/cockroachdb-parser/pkg/geo/geopb"
	"github.com/cockroachdb/cockroachdb-parser/pkg/security/username"
	"github.com/cockroachdb/cockroachdb-parser/pkg/sql/pgwire/pgcode"
	"github.com/cockroachdb/cockroachdb-parser/pkg/sql/pgwire/pgerror"
	"github.com/cockroachdb/cockroachdb-parser/pkg/sql/privilege"
	"github.com/cockroachdb/cockroachdb-parser/pkg/sql/scanner"
	"github.com/cockroachdb/cockroachdb-parser/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroachdb-parser/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroachdb-parser/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroachdb-parser/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroachdb-parser/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:168

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() username.SQLUsername {
	return u.val.(username.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *username.SQLUsername {
	return u.val.(*username.SQLUsername)
}
func (u *sqlSymUnion) users() []username.SQLUsername {
	return u.val.([]username.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) compositeTypeList() []tree.CompositeTypeElem {
	return u.val.([]tree.CompositeTypeElem)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colTableDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) colDef() tree.ColumnDef {
	return u.val.(tree.ColumnDef)
}
func (u *sqlSymUnion) colDefList() tree.ColumnDefList {
	return u.val.(tree.ColumnDefList)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) tenantCapability() tree.TenantCapability {
	return u.val.(tree.TenantCapability)
}
func (u *sqlSymUnion) tenantCapabilities() []tree.TenantCapability {
	if capabilities, ok := u.val.([]tree.TenantCapability); ok {
		return capabilities
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) batch() *tree.Batch {
	if batch, ok := u.val.(*tree.Batch); ok {
		return batch
	}
	return nil
}
func (u *sqlSymUnion) batchParam() tree.BatchParam {
	return u.val.(tree.BatchParam)
}
func (u *sqlSymUnion) batchParams() []tree.BatchParam {
	return u.val.([]tree.BatchParam)
}
func (u *sqlSymUnion) superRegion() tree.SuperRegion {
	return u.val.(tree.SuperRegion)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) backupTargetList() tree.BackupTargetList {
	return u.val.(tree.BackupTargetList)
}
func (u *sqlSymUnion) backupTargetListPtr() *tree.BackupTargetList {
	return u.val.(*tree.BackupTargetList)
}
func (u *sqlSymUnion) grantTargetList() tree.GrantTargetList {
	return u.val.(tree.GrantTargetList)
}
func (u *sqlSymUnion) grantTargetListPtr() *tree.GrantTargetList {
	return u.val.(*tree.GrantTargetList)
}
func (u *sqlSymUnion) changefeedTargets() tree.ChangefeedTargets {
	return u.val.(tree.ChangefeedTargets)
}
func (u *sqlSymUnion) changefeedTarget() tree.ChangefeedTarget {
	return u.val.(tree.ChangefeedTarget)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterBackupScheduleCmd() tree.AlterBackupScheduleCmd {
	return u.val.(tree.AlterBackupScheduleCmd)
}
func (u *sqlSymUnion) alterBackupScheduleCmds() tree.AlterBackupScheduleCmds {
	return u.val.(tree.AlterBackupScheduleCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) indexInvisibility() tree.IndexInvisibility {
	return u.val.(tree.IndexInvisibility)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) showJobOptions() *tree.ShowJobOptions {
	return u.val.(*tree.ShowJobOptions)
}
func (u *sqlSymUnion) showBackupDetails() tree.ShowBackupDetails {
	return u.val.(tree.ShowBackupDetails)
}
func (u *sqlSymUnion) showBackupOptions() *tree.ShowBackupOptions {
	return u.val.(*tree.ShowBackupOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) resolvableFuncRef() tree.ResolvableFunctionReference {
	return u.val.(tree.ResolvableFunctionReference)
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) scheduleLabelSpec() *tree.LabelSpec {
	return u.val.(*tree.LabelSpec)
}
func (u *sqlSymUnion) labelSpec() *tree.LabelSpec {
	return u.val.(*tree.LabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) targetObjectType() privilege.TargetObjectType {
	return u.val.(privilege.TargetObjectType)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) cursorStmt() tree.CursorStmt {
	return u.val.(tree.CursorStmt)
}
func (u *sqlSymUnion) asTenantClause() tree.TenantID {
	return u.val.(tree.TenantID)
}
func (u *sqlSymUnion) routineOptions() tree.RoutineOptions {
	return u.val.(tree.RoutineOptions)
}
func (u *sqlSymUnion) functionOption() tree.RoutineOption {
	return u.val.(tree.RoutineOption)
}
func (u *sqlSymUnion) routineParams() tree.RoutineParams {
	return u.val.(tree.RoutineParams)
}
func (u *sqlSymUnion) routineParam() tree.RoutineParam {
	return u.val.(tree.RoutineParam)
}
func (u *sqlSymUnion) routineParamClass() tree.RoutineParamClass {
	return u.val.(tree.RoutineParamClass)
}
func (u *sqlSymUnion) stmts() tree.Statements {
	return u.val.(tree.Statements)
}
func (u *sqlSymUnion) routineBody() *tree.RoutineBody {
	return u.val.(*tree.RoutineBody)
}
func (u *sqlSymUnion) functionObj() tree.RoutineObj {
	return u.val.(tree.RoutineObj)
}
func (u *sqlSymUnion) routineObjs() tree.RoutineObjs {
	return u.val.(tree.RoutineObjs)
}
func (u *sqlSymUnion) tenantReplicationOptions() *tree.TenantReplicationOptions {
	return u.val.(*tree.TenantReplicationOptions)
}
func (u *sqlSymUnion) showRangesOpts() *tree.ShowRangesOptions {
	return u.val.(*tree.ShowRangesOptions)
}
func (u *sqlSymUnion) tenantSpec() *tree.TenantSpec {
	return u.val.(*tree.TenantSpec)
}
func (u *sqlSymUnion) likeTenantSpec() *tree.LikeTenantSpec {
	return u.val.(*tree.LikeTenantSpec)
}
func (u *sqlSymUnion) cteMaterializeClause() tree.CTEMaterializeClause {
	return u.val.(tree.CTEMaterializeClause)
}
func (u *sqlSymUnion) showTenantOpts() tree.ShowTenantOptions {
	return u.val.(tree.ShowTenantOptions)
}
func (u *sqlSymUnion) showCreateFormatOption() tree.ShowCreateFormatOption {
	return u.val.(tree.ShowCreateFormatOption)
}
func (u *sqlSymUnion) beginTransaction() *tree.BeginTransaction {
	return u.val.(*tree.BeginTransaction)
}

//line sql-gen.y:1044
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = 57346
const SCONST = 57347
const BCONST = 57348
const BITCONST = 57349
const ICONST = 57350
const FCONST = 57351
const PLACEHOLDER = 57352
const TYPECAST = 57353
const TYPEANNOTATE = 57354
const DOT_DOT = 57355
const LESS_EQUALS = 57356
const GREATER_EQUALS = 57357
const NOT_EQUALS = 57358
const NOT_REGMATCH = 57359
const REGIMATCH = 57360
const NOT_REGIMATCH = 57361
const ERROR = 57362
const ABORT = 57363
const ABSOLUTE = 57364
const ACCESS = 57365
const ACTION = 57366
const ADD = 57367
const ADMIN = 57368
const AFTER = 57369
const AGGREGATE = 57370
const ALL = 57371
const ALTER = 57372
const ALWAYS = 57373
const ANALYSE = 57374
const ANALYZE = 57375
const AND = 57376
const AND_AND = 57377
const ANY = 57378
const ANNOTATE_TYPE = 57379
const ARRAY = 57380
const AS = 57381
const ASC = 57382
const AS_JSON = 57383
const AT_AT = 57384
const ASENSITIVE = 57385
const ASYMMETRIC = 57386
const AT = 57387
const ATOMIC = 57388
const ATTRIBUTE = 57389
const AUTHORIZATION = 57390
const AUTOMATIC = 57391
const AVAILABILITY = 57392
const BACKUP = 57393
const BACKUPS = 57394
const BACKWARD = 57395
const BATCH = 57396
const BEFORE = 57397
const BEGIN = 57398
const BETWEEN = 57399
const BIGINT = 57400
const BIGSERIAL = 57401
const BINARY = 57402
const BIT = 57403
const BUCKET_COUNT = 57404
const BOOLEAN = 57405
const BOTH = 57406
const BOX2D = 57407
const BUNDLE = 57408
const BY = 57409
const CACHE = 57410
const CALL = 57411
const CALLED = 57412
const CANCEL = 57413
const CANCELQUERY = 57414
const CAPABILITIES = 57415
const CAPABILITY = 57416
const CASCADE = 57417
const CASE = 57418
const CAST = 57419
const CBRT = 57420
const CHANGEFEED = 57421
const CHAR = 57422
const CHARACTER = 57423
const CHARACTERISTICS = 57424
const CHECK = 57425
const CHECK_FILES = 57426
const CLOSE = 57427
const CLUSTER = 57428
const CLUSTERS = 57429
const COALESCE = 57430
const COLLATE = 57431
const COLLATION = 57432
const COLUMN = 57433
const COLUMNS = 57434
const COMMENT = 57435
const COMMENTS = 57436
const COMMIT = 57437
const COMMITTED = 57438
const COMPACT = 57439
const COMPLETE = 57440
const COMPLETIONS = 57441
const CONCAT = 57442
const CONCURRENTLY = 57443
const CONFIGURATION = 57444
const CONFIGURATIONS = 57445
const CONFIGURE = 57446
const CONFLICT = 57447
const CONNECTION = 57448
const CONNECTIONS = 57449
const CONSTRAINT = 57450
const CONSTRAINTS = 57451
const CONTAINS = 57452
const CONTROLCHANGEFEED = 57453
const CONTROLJOB = 57454
const CONVERSION = 57455
const CONVERT = 57456
const COPY = 57457
const COST = 57458
const COVERING = 57459
const CREATE = 57460
const CREATEDB = 57461
const CREATELOGIN = 57462
const CREATEROLE = 57463
const CROSS = 57464
const CSV = 57465
const CUBE = 57466
const CURRENT = 57467
const CURRENT_CATALOG = 57468
const CURRENT_DATE = 57469
const CURRENT_SCHEMA = 57470
const CURRENT_ROLE = 57471
const CURRENT_TIME = 57472
const CURRENT_TIMESTAMP = 57473
const CURRENT_USER = 57474
const CURSOR = 57475
const CYCLE = 57476
const DATA = 57477
const DATABASE = 57478
const DATABASES = 57479
const DATE = 57480
const DAY = 57481
const DEBUG_IDS = 57482
const DEBUG_PAUSE_ON = 57483
const DEC = 57484
const DEBUG_DUMP_METADATA_SST = 57485
const DECIMAL = 57486
const DEFAULT = 57487
const DEFAULTS = 57488
const DEFINER = 57489
const DEALLOCATE = 57490
const DECLARE = 57491
const DEFERRABLE = 57492
const DEFERRED = 57493
const DELETE = 57494
const DELIMITER = 57495
const DEPENDS = 57496
const DESC = 57497
const DESTINATION = 57498
const DETACHED = 57499
const DETAILS = 57500
const DISCARD = 57501
const DISTINCT = 57502
const DO = 57503
const DOMAIN = 57504
const DOUBLE = 57505
const DROP = 57506
const ELSE = 57507
const ENCODING = 57508
const ENCRYPTED = 57509
const ENCRYPTION_INFO_DIR = 57510
const ENCRYPTION_PASSPHRASE = 57511
const END = 57512
const ENUM = 57513
const ENUMS = 57514
const ESCAPE = 57515
const EXCEPT = 57516
const EXCLUDE = 57517
const EXCLUDING = 57518
const EXISTS = 57519
const EXECUTE = 57520
const EXECUTION = 57521
const EXPERIMENTAL = 57522
const EXPERIMENTAL_FINGERPRINTS = 57523
const EXPERIMENTAL_REPLICA = 57524
const EXPERIMENTAL_AUDIT = 57525
const EXPERIMENTAL_RELOCATE = 57526
const EXPIRATION = 57527
const EXPLAIN = 57528
const EXPORT = 57529
const EXTENSION = 57530
const EXTERNAL = 57531
const EXTRACT = 57532
const EXTRACT_DURATION = 57533
const EXTREMES = 57534
const FAILURE = 57535
const FALSE = 57536
const FAMILY = 57537
const FETCH = 57538
const FETCHVAL = 57539
const FETCHTEXT = 57540
const FETCHVAL_PATH = 57541
const FETCHTEXT_PATH = 57542
const FILES = 57543
const FILTER = 57544
const FIRST = 57545
const FLOAT = 57546
const FLOAT4 = 57547
const FLOAT8 = 57548
const FLOORDIV = 57549
const FOLLOWING = 57550
const FOR = 57551
const FORCE = 57552
const FORCE_INDEX = 57553
const FORCE_NOT_NULL = 57554
const FORCE_NULL = 57555
const FORCE_QUOTE = 57556
const FORCE_ZIGZAG = 57557
const FOREIGN = 57558
const FORMAT = 57559
const FORWARD = 57560
const FREEZE = 57561
const FROM = 57562
const FULL = 57563
const FUNCTION = 57564
const FUNCTIONS = 57565
const GENERATED = 57566
const GEOGRAPHY = 57567
const GEOMETRY = 57568
const GEOMETRYM = 57569
const GEOMETRYZ = 57570
const GEOMETRYZM = 57571
const GEOMETRYCOLLECTION = 57572
const GEOMETRYCOLLECTIONM = 57573
const GEOMETRYCOLLECTIONZ = 57574
const GEOMETRYCOLLECTIONZM = 57575
const GLOBAL = 57576
const GOAL = 57577
const GRANT = 57578
const GRANTEE = 57579
const GRANTS = 57580
const GREATEST = 57581
const GROUP = 57582
const GROUPING = 57583
const GROUPS = 57584
const HAVING = 57585
const HASH = 57586
const HEADER = 57587
const HIGH = 57588
const HISTOGRAM = 57589
const HOLD = 57590
const HOUR = 57591
const IDENTITY = 57592
const IF = 57593
const IFERROR = 57594
const IFNULL = 57595
const IGNORE_FOREIGN_KEYS = 57596
const ILIKE = 57597
const IMMEDIATE = 57598
const IMMUTABLE = 57599
const IMPORT = 57600
const IN = 57601
const INCLUDE = 57602
const INCLUDING = 57603
const INCLUDE_ALL_SECONDARY_TENANTS = 57604
const INCLUDE_ALL_VIRTUAL_CLUSTERS = 57605
const INCREMENT = 57606
const INCREMENTAL = 57607
const INCREMENTAL_LOCATION = 57608
const INET = 57609
const INET_CONTAINED_BY_OR_EQUALS = 57610
const INET_CONTAINS_OR_EQUALS = 57611
const INDEX = 57612
const INDEXES = 57613
const INHERITS = 57614
const INJECT = 57615
const INITIALLY = 57616
const INDEX_BEFORE_PAREN = 57617
const INDEX_BEFORE_NAME_THEN_PAREN = 57618
const INDEX_AFTER_ORDER_BY_BEFORE_AT = 57619
const INNER = 57620
const INOUT = 57621
const INPUT = 57622
const INSENSITIVE = 57623
const INSERT = 57624
const INT = 57625
const INTEGER = 57626
const INTERSECT = 57627
const INTERVAL = 57628
const INTO = 57629
const INTO_DB = 57630
const INVERTED = 57631
const INVOKER = 57632
const IS = 57633
const ISERROR = 57634
const ISNULL = 57635
const ISOLATION = 57636
const JOB = 57637
const JOBS = 57638
const JOIN = 57639
const JSON = 57640
const JSONB = 57641
const JSON_SOME_EXISTS = 57642
const JSON_ALL_EXISTS = 57643
const KEY = 57644
const KEYS = 57645
const KMS = 57646
const KV = 57647
const LABEL = 57648
const LANGUAGE = 57649
const LAST = 57650
const LATERAL = 57651
const LATEST = 57652
const LC_CTYPE = 57653
const LC_COLLATE = 57654
const LEADING = 57655
const LEASE = 57656
const LEAST = 57657
const LEAKPROOF = 57658
const LEFT = 57659
const LESS = 57660
const LEVEL = 57661
const LIKE = 57662
const LIMIT = 57663
const LINESTRING = 57664
const LINESTRINGM = 57665
const LINESTRINGZ = 57666
const LINESTRINGZM = 57667
const LIST = 57668
const LOCAL = 57669
const LOCALITY = 57670
const LOCALTIME = 57671
const LOCALTIMESTAMP = 57672
const LOCKED = 57673
const LOGIN = 57674
const LOOKUP = 57675
const LOW = 57676
const LSHIFT = 57677
const MATCH = 57678
const MATERIALIZED = 57679
const MERGE = 57680
const MINVALUE = 57681
const MAXVALUE = 57682
const METHOD = 57683
const MINUTE = 57684
const MODIFYCLUSTERSETTING = 57685
const MODIFYSQLCLUSTERSETTING = 57686
const MONTH = 57687
const MOVE = 57688
const MULTILINESTRING = 57689
const MULTILINESTRINGM = 57690
const MULTILINESTRINGZ = 57691
const MULTILINESTRINGZM = 57692
const MULTIPOINT = 57693
const MULTIPOINTM = 57694
const MULTIPOINTZ = 57695
const MULTIPOINTZM = 57696
const MULTIPOLYGON = 57697
const MULTIPOLYGONM = 57698
const MULTIPOLYGONZ = 57699
const MULTIPOLYGONZM = 57700
const NAN = 57701
const NAME = 57702
const NAMES = 57703
const NATURAL = 57704
const NEVER = 57705
const NEW_DB_NAME = 57706
const NEW_KMS = 57707
const NEXT = 57708
const NO = 57709
const NOCANCELQUERY = 57710
const NOCONTROLCHANGEFEED = 57711
const NOCONTROLJOB = 57712
const NOCREATEDB = 57713
const NOCREATELOGIN = 57714
const NOCREATEROLE = 57715
const NOLOGIN = 57716
const NOMODIFYCLUSTERSETTING = 57717
const NOREPLICATION = 57718
const NOSQLLOGIN = 57719
const NO_INDEX_JOIN = 57720
const NO_ZIGZAG_JOIN = 57721
const NO_FULL_SCAN = 57722
const NONE = 57723
const NONVOTERS = 57724
const NORMAL = 57725
const NOT = 57726
const NOTHING = 57727
const NOTHING_AFTER_RETURNING = 57728
const NOTNULL = 57729
const NOVIEWACTIVITY = 57730
const NOVIEWACTIVITYREDACTED = 57731
const NOVIEWCLUSTERSETTING = 57732
const NOWAIT = 57733
const NULL = 57734
const NULLIF = 57735
const NULLS = 57736
const NUMERIC = 57737
const OF = 57738
const OFF = 57739
const OFFSET = 57740
const OID = 57741
const OIDS = 57742
const OIDVECTOR = 57743
const OLD_KMS = 57744
const ON = 57745
const ONLY = 57746
const OPT = 57747
const OPTION = 57748
const OPTIONS = 57749
const OR = 57750
const ORDER = 57751
const ORDINALITY = 57752
const OTHERS = 57753
const OUT = 57754
const OUTER = 57755
const OVER = 57756
const OVERLAPS = 57757
const OVERLAY = 57758
const OWNED = 57759
const OWNER = 57760
const OPERATOR = 57761
const PARALLEL = 57762
const PARENT = 57763
const PARTIAL = 57764
const PARTITION = 57765
const PARTITIONS = 57766
const PASSWORD = 57767
const PAUSE = 57768
const PAUSED = 57769
const PHYSICAL = 57770
const PLACEMENT = 57771
const PLACING = 57772
const PLAN = 57773
const PLANS = 57774
const POINT = 57775
const POINTM = 57776
const POINTZ = 57777
const POINTZM = 57778
const POLYGON = 57779
const POLYGONM = 57780
const POLYGONZ = 57781
const POLYGONZM = 57782
const POSITION = 57783
const PRECEDING = 57784
const PRECISION = 57785
const PREPARE = 57786
const PRESERVE = 57787
const PRIMARY = 57788
const PRIOR = 57789
const PRIORITY = 57790
const PRIVILEGES = 57791
const PROCEDURAL = 57792
const PROCEDURE = 57793
const PROCEDURES = 57794
const PUBLIC = 57795
const PUBLICATION = 57796
const QUERIES = 57797
const QUERY = 57798
const QUOTE = 57799
const RANGE = 57800
const RANGES = 57801
const READ = 57802
const REAL = 57803
const REASON = 57804
const REASSIGN = 57805
const RECURSIVE = 57806
const RECURRING = 57807
const REDACT = 57808
const REF = 57809
const REFERENCES = 57810
const REFRESH = 57811
const REGCLASS = 57812
const REGION = 57813
const REGIONAL = 57814
const REGIONS = 57815
const REGNAMESPACE = 57816
const REGPROC = 57817
const REGPROCEDURE = 57818
const REGROLE = 57819
const REGTYPE = 57820
const REINDEX = 57821
const RELATIVE = 57822
const RELOCATE = 57823
const REMOVE_PATH = 57824
const REMOVE_REGIONS = 57825
const RENAME = 57826
const REPEATABLE = 57827
const REPLACE = 57828
const REPLICATION = 57829
const RELEASE = 57830
const RESET = 57831
const RESTART = 57832
const RESTORE = 57833
const RESTRICT = 57834
const RESTRICTED = 57835
const RESUME = 57836
const RETENTION = 57837
const RETURNING = 57838
const RETURN = 57839
const RETURNS = 57840
const RETRY = 57841
const REVISION_HISTORY = 57842
const REVOKE = 57843
const RIGHT = 57844
const ROLE = 57845
const ROLES = 57846
const ROLLBACK = 57847
const ROLLUP = 57848
const ROUTINES = 57849
const ROW = 57850
const ROWS = 57851
const RSHIFT = 57852
const RULE = 57853
const RUNNING = 57854
const SAVEPOINT = 57855
const SCANS = 57856
const SCATTER = 57857
const SCHEDULE = 57858
const SCHEDULES = 57859
const SCROLL = 57860
const SCHEMA = 57861
const SCHEMA_ONLY = 57862
const SCHEMAS = 57863
const SCRUB = 57864
const SEARCH = 57865
const SECOND = 57866
const SECONDARY = 57867
const SECURITY = 57868
const SELECT = 57869
const SEQUENCE = 57870
const SEQUENCES = 57871
const SERIALIZABLE = 57872
const SERVER = 57873
const SERVICE = 57874
const SESSION = 57875
const SESSIONS = 57876
const SESSION_USER = 57877
const SET = 57878
const SETOF = 57879
const SETS = 57880
const SETTING = 57881
const SETTINGS = 57882
const SHARE = 57883
const SHARED = 57884
const SHOW = 57885
const SIMILAR = 57886
const SIMPLE = 57887
const SIZE = 57888
const SKIP = 57889
const SKIP_LOCALITIES_CHECK = 57890
const SKIP_MISSING_FOREIGN_KEYS = 57891
const SKIP_MISSING_SEQUENCES = 57892
const SKIP_MISSING_SEQUENCE_OWNERS = 57893
const SKIP_MISSING_VIEWS = 57894
const SKIP_MISSING_UDFS = 57895
const SMALLINT = 57896
const SMALLSERIAL = 57897
const SNAPSHOT = 57898
const SOME = 57899
const SPLIT = 57900
const SQL = 57901
const SQLLOGIN = 57902
const STABLE = 57903
const START = 57904
const STATE = 57905
const STATISTICS = 57906
const STATUS = 57907
const STDIN = 57908
const STDOUT = 57909
const STOP = 57910
const STREAM = 57911
const STRICT = 57912
const STRING = 57913
const STORAGE = 57914
const STORE = 57915
const STORED = 57916
const STORING = 57917
const SUBSTRING = 57918
const SUPER = 57919
const SUPPORT = 57920
const SURVIVE = 57921
const SURVIVAL = 57922
const SYMMETRIC = 57923
const SYNTAX = 57924
const SYSTEM = 57925
const SQRT = 57926
const SUBSCRIPTION = 57927
const STATEMENTS = 57928
const TABLE = 57929
const TABLES = 57930
const TABLESPACE = 57931
const TEMP = 57932
const TEMPLATE = 57933
const TEMPORARY = 57934
const TENANT = 57935
const TENANT_NAME = 57936
const TENANTS = 57937
const TESTING_RELOCATE = 57938
const TEXT = 57939
const THEN = 57940
const TIES = 57941
const TIME = 57942
const TIMETZ = 57943
const TIMESTAMP = 57944
const TIMESTAMPTZ = 57945
const TO = 57946
const THROTTLING = 57947
const TRAILING = 57948
const TRACE = 57949
const TRANSACTION = 57950
const TRANSACTIONS = 57951
const TRANSFER = 57952
const TRANSFORM = 57953
const TREAT = 57954
const TRIGGER = 57955
const TRIM = 57956
const TRUE = 57957
const TRUNCATE = 57958
const TRUSTED = 57959
const TYPE = 57960
const TYPES = 57961
const TRACING = 57962
const UNBOUNDED = 57963
const UNCOMMITTED = 57964
const UNION = 57965
const UNIQUE = 57966
const UNKNOWN = 57967
const UNLISTEN = 57968
const UNLOGGED = 57969
const UNSAFE_RESTORE_INCOMPATIBLE_VERSION = 57970
const UNSPLIT = 57971
const UPDATE = 57972
const UPDATES_CLUSTER_MONITORING_METRICS = 57973
const UPSERT = 57974
const UNSET = 57975
const UNTIL = 57976
const USE = 57977
const USER = 57978
const USERS = 57979
const USING = 57980
const UUID = 57981
const VALID = 57982
const VALIDATE = 57983
const VALUE = 57984
const VALUES = 57985
const VARBIT = 57986
const VARCHAR = 57987
const VARIADIC = 57988
const VERIFY_BACKUP_TABLE_DATA = 57989
const VIEW = 57990
const VARYING = 57991
const VIEWACTIVITY = 57992
const VIEWACTIVITYREDACTED = 57993
const VIEWDEBUG = 57994
const VIEWCLUSTERMETADATA = 57995
const VIEWCLUSTERSETTING = 57996
const VIRTUAL = 57997
const VISIBLE = 57998
const INVISIBLE = 57999
const VISIBILITY = 58000
const VOLATILE = 58001
const VOTERS = 58002
const VIRTUAL_CLUSTER_NAME = 58003
const VIRTUAL_CLUSTER = 58004
const WHEN = 58005
const WHERE = 58006
const WINDOW = 58007
const WITH = 58008
const WITHIN = 58009
const WITHOUT = 58010
const WORK = 58011
const WRITE = 58012
const YEAR = 58013
const ZONE = 58014
const NOT_LA = 58015
const NULLS_LA = 58016
const WITH_LA = 58017
const AS_LA = 58018
const GENERATED_ALWAYS = 58019
const GENERATED_BY_DEFAULT = 58020
const RESET_ALL = 58021
const ROLE_ALL = 58022
const USER_ALL = 58023
const ON_LA = 58024
const TENANT_ALL = 58025
const CLUSTER_ALL = 58026
const SET_TRACING = 58027
const CONTAINED_BY = 58028
const POSTFIXOP = 58029
const INTERVAL_SIMPLE = 58030
const UMINUS = 58031
const HELPTOKEN = 58032

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"AS_JSON",
	"AT_AT",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATOMIC",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BATCH",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CALL",
	"CALLED",
	"CANCEL",
	"CANCELQUERY",
	"CAPABILITIES",
	"CAPABILITY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CHECK_FILES",
	"CLOSE",
	"CLUSTER",
	"CLUSTERS",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"COMPLETIONS",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONNECTIONS",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COST",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_IDS",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DEBUG_DUMP_METADATA_SST",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEFINER",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DEPENDS",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DETAILS",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_INFO_DIR",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTERNAL",
	"EXTRACT",
	"EXTRACT_DURATION",
	"EXTREMES",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_NOT_NULL",
	"FORCE_NULL",
	"FORCE_QUOTE",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORMAT",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTEE",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HEADER",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMMUTABLE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCLUDE_ALL_SECONDARY_TENANTS",
	"INCLUDE_ALL_VIRTUAL_CLUSTERS",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INDEX_BEFORE_PAREN",
	"INDEX_BEFORE_NAME_THEN_PAREN",
	"INDEX_AFTER_ORDER_BY_BEFORE_AT",
	"INNER",
	"INOUT",
	"INPUT",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"INVOKER",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LABEL",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEAKPROOF",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MODIFYSQLCLUSTERSETTING",
	"MONTH",
	"MOVE",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOREPLICATION",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTHING_AFTER_RETURNING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOVIEWCLUSTERSETTING",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARALLEL",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PROCEDURE",
	"PROCEDURES",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"QUOTE",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REDACT",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"REMOVE_REGIONS",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTART",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETENTION",
	"RETURNING",
	"RETURN",
	"RETURNS",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMA_ONLY",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SECONDARY",
	"SECURITY",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SERVICE",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETOF",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHARED",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SIZE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SKIP_MISSING_UDFS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"STABLE",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STDOUT",
	"STOP",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SUPER",
	"SUPPORT",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TENANT_NAME",
	"TENANTS",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TRANSFORM",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLISTEN",
	"UNLOGGED",
	"UNSAFE_RESTORE_INCOMPATIBLE_VERSION",
	"UNSPLIT",
	"UPDATE",
	"UPDATES_CLUSTER_MONITORING_METRICS",
	"UPSERT",
	"UNSET",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VERIFY_BACKUP_TABLE_DATA",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIEWDEBUG",
	"VIEWCLUSTERMETADATA",
	"VIEWCLUSTERSETTING",
	"VIRTUAL",
	"VISIBLE",
	"INVISIBLE",
	"VISIBILITY",
	"VOLATILE",
	"VOTERS",
	"VIRTUAL_CLUSTER_NAME",
	"VIRTUAL_CLUSTER",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"TENANT_ALL",
	"CLUSTER_ALL",
	"SET_TRACING",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"';'",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:18061

//line yacctab:1
var sqlExca = [...]int16{
	-1, 0,
	1, 5,
	-2, 2171,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 67,
	307, 668,
	-2, 0,
	-1, 79,
	8, 1232,
	29, 1232,
	696, 1232,
	697, 1232,
	-2, 0,
	-1, 80,
	8, 1232,
	29, 1232,
	696, 1232,
	697, 1232,
	-2, 0,
	-1, 83,
	182, 1404,
	305, 1404,
	455, 1358,
	534, 1358,
	586, 1358,
	607, 1404,
	609, 1358,
	-2, 0,
	-1, 84,
	1, 2015,
	150, 2015,
	294, 2015,
	384, 2015,
	448, 2015,
	460, 2015,
	676, 2015,
	709, 2015,
	-2, 0,
	-1, 85,
	1, 2015,
	709, 2015,
	-2, 0,
	-1, 91,
	287, 305,
	604, 305,
	-2, 0,
	-1, 106,
	222, 558,
	270, 1887,
	289, 1887,
	307, 558,
	450, 558,
	451, 558,
	464, 1621,
	511, 558,
	528, 1621,
	587, 1621,
	617, 558,
	648, 1621,
	-2, 0,
	-1, 114,
	152, 2171,
	282, 2171,
	630, 2171,
	632, 2171,
	-2, 0,
	-1, 132,
	174, 2142,
	196, 2142,
	209, 2142,
	285, 2142,
	321, 2142,
	398, 2142,
	409, 2142,
	623, 2142,
	-2, 2113,
	-1, 182,
	4, 2173,
	21, 2173,
	22, 2173,
	23, 2173,
	24, 2173,
	25, 2173,
	26, 2173,
	27, 2173,
	28, 2173,
	30, 2173,
	31, 2173,
	37, 2173,
	41, 2173,
	43, 2173,
	45, 2173,
	46, 2173,
	47, 2173,
	49, 2173,
	50, 2173,
	51, 2173,
	52, 2173,
	53, 2173,
	54, 2173,
	55, 2173,
	56, 2173,
	57, 2173,
	58, 2173,
	60, 2173,
	61, 2173,
	62, 2173,
	63, 2173,
	65, 2173,
	66, 2173,
	67, 2173,
	68, 2173,
	69, 2173,
	70, 2173,
	71, 2173,
	72, 2173,
	73, 2173,
	74, 2173,
	75, 2173,
	79, 2173,
	80, 2173,
	81, 2173,
	82, 2173,
	84, 2173,
	85, 2173,
	86, 2173,
	87, 2173,
	88, 2173,
	92, 2173,
	93, 2173,
	94, 2173,
	95, 2173,
	96, 2173,
	97, 2173,
	98, 2173,
	99, 2173,
	102, 2173,
	103, 2173,
	104, 2173,
	105, 2173,
	106, 2173,
	107, 2173,
	109, 2173,
	111, 2173,
	112, 2173,
	113, 2173,
	114, 2173,
	115, 2173,
	116, 2173,
	117, 2173,
	119, 2173,
	120, 2173,
	121, 2173,
	123, 2173,
	124, 2173,
	125, 2173,
	133, 2173,
	134, 2173,
	135, 2173,
	136, 2173,
	137, 2173,
	139, 2173,
	140, 2173,
	141, 2173,
	142, 2173,
	143, 2173,
	144, 2173,
	146, 2173,
	147, 2173,
	148, 2173,
	149, 2173,
	151, 2173,
	152, 2173,
	153, 2173,
	154, 2173,
	156, 2173,
	157, 2173,
	158, 2173,
	159, 2173,
	162, 2173,
	163, 2173,
	164, 2173,
	166, 2173,
	167, 2173,
	168, 2173,
	169, 2173,
	171, 2173,
	172, 2173,
	173, 2173,
	175, 2173,
	176, 2173,
	177, 2173,
	178, 2173,
	179, 2173,
	180, 2173,
	181, 2173,
	182, 2173,
	183, 2173,
	184, 2173,
	185, 2173,
	186, 2173,
	187, 2173,
	188, 2173,
	189, 2173,
	190, 2173,
	191, 2173,
	192, 2173,
	193, 2173,
	195, 2173,
	201, 2173,
	202, 2173,
	203, 2173,
	204, 2173,
	208, 2173,
	210, 2173,
	211, 2173,
	212, 2173,
	213, 2173,
	214, 2173,
	215, 2173,
	217, 2173,
	218, 2173,
	219, 2173,
	222, 2173,
	223, 2173,
	224, 2173,
	225, 2173,
	226, 2173,
	227, 2173,
	228, 2173,
	229, 2173,
	230, 2173,
	231, 2173,
	232, 2173,
	233, 2173,
	234, 2173,
	235, 2173,
	237, 2173,
	238, 2173,
	239, 2173,
	241, 2173,
	242, 2173,
	244, 2173,
	245, 2173,
	246, 2173,
	247, 2173,
	248, 2173,
	249, 2173,
	250, 2173,
	251, 2173,
	252, 2173,
	253, 2173,
	254, 2173,
	256, 2173,
	257, 2173,
	258, 2173,
	260, 2173,
	261, 2173,
	262, 2173,
	263, 2173,
	264, 2173,
	265, 2173,
	266, 2173,
	270, 2173,
	271, 2173,
	272, 2173,
	273, 2173,
	275, 2173,
	276, 2173,
	277, 2173,
	279, 2173,
	280, 2173,
	281, 2173,
	282, 2173,
	283, 2173,
	284, 2173,
	286, 2173,
	288, 2173,
	289, 2173,
	290, 2173,
	292, 2173,
	294, 2173,
	295, 2173,
	296, 2173,
	298, 2173,
	302, 2173,
	303, 2173,
	304, 2173,
	305, 2173,
	306, 2173,
	307, 2173,
	308, 2173,
	310, 2173,
	311, 2173,
	312, 2173,
	314, 2173,
	315, 2173,
	316, 2173,
	318, 2173,
	319, 2173,
	322, 2173,
	323, 2173,
	324, 2173,
	325, 2173,
	326, 2173,
	327, 2173,
	328, 2173,
	331, 2173,
	332, 2173,
	333, 2173,
	334, 2173,
	336, 2173,
	337, 2173,
	338, 2173,
	339, 2173,
	340, 2173,
	341, 2173,
	342, 2173,
	343, 2173,
	344, 2173,
	345, 2173,
	346, 2173,
	347, 2173,
	348, 2173,
	349, 2173,
	350, 2173,
	351, 2173,
	352, 2173,
	353, 2173,
	354, 2173,
	355, 2173,
	356, 2173,
	357, 2173,
	358, 2173,
	359, 2173,
	361, 2173,
	363, 2173,
	364, 2173,
	365, 2173,
	366, 2173,
	367, 2173,
	368, 2173,
	369, 2173,
	370, 2173,
	371, 2173,
	372, 2173,
	373, 2173,
	374, 2173,
	375, 2173,
	376, 2173,
	377, 2173,
	378, 2173,
	379, 2173,
	380, 2173,
	382, 2173,
	383, 2173,
	385, 2173,
	386, 2173,
	388, 2173,
	389, 2173,
	390, 2173,
	391, 2173,
	393, 2173,
	394, 2173,
	395, 2173,
	396, 2173,
	397, 2173,
	400, 2173,
	402, 2173,
	404, 2173,
	405, 2173,
	406, 2173,
	407, 2173,
	410, 2173,
	411, 2173,
	412, 2173,
	414, 2173,
	416, 2173,
	417, 2173,
	418, 2173,
	419, 2173,
	420, 2173,
	421, 2173,
	422, 2173,
	423, 2173,
	424, 2173,
	425, 2173,
	426, 2173,
	427, 2173,
	428, 2173,
	429, 2173,
	431, 2173,
	432, 2173,
	433, 2173,
	434, 2173,
	435, 2173,
	436, 2173,
	437, 2173,
	438, 2173,
	439, 2173,
	440, 2173,
	441, 2173,
	442, 2173,
	443, 2173,
	444, 2173,
	445, 2173,
	447, 2173,
	448, 2173,
	449, 2173,
	451, 2173,
	452, 2173,
	453, 2173,
	454, 2173,
	455, 2173,
	456, 2173,
	457, 2173,
	458, 2173,
	459, 2173,
	460, 2173,
	461, 2173,
	462, 2173,
	463, 2173,
	464, 2173,
	465, 2173,
	466, 2173,
	467, 2173,
	469, 2173,
	471, 2173,
	472, 2173,
	473, 2173,
	479, 2173,
	480, 2173,
	481, 2173,
	483, 2173,
	484, 2173,
	485, 2173,
	486, 2173,
	487, 2173,
	488, 2173,
	489, 2173,
	490, 2173,
	491, 2173,
	492, 2173,
	493, 2173,
	494, 2173,
	495, 2173,
	497, 2173,
	498, 2173,
	499, 2173,
	500, 2173,
	501, 2173,
	503, 2173,
	504, 2173,
	505, 2173,
	506, 2173,
	507, 2173,
	508, 2173,
	509, 2173,
	511, 2173,
	512, 2173,
	513, 2173,
	514, 2173,
	515, 2173,
	516, 2173,
	517, 2173,
	518, 2173,
	519, 2173,
	520, 2173,
	521, 2173,
	522, 2173,
	523, 2173,
	524, 2173,
	525, 2173,
	526, 2173,
	528, 2173,
	529, 2173,
	530, 2173,
	531, 2173,
	532, 2173,
	533, 2173,
	534, 2173,
	536, 2173,
	537, 2173,
	538, 2173,
	539, 2173,
	540, 2173,
	541, 2173,
	542, 2173,
	543, 2173,
	545, 2173,
	546, 2173,
	547, 2173,
	548, 2173,
	549, 2173,
	550, 2173,
	551, 2173,
	552, 2173,
	553, 2173,
	554, 2173,
	556, 2173,
	558, 2173,
	559, 2173,
	560, 2173,
	561, 2173,
	562, 2173,
	563, 2173,
	564, 2173,
	565, 2173,
	566, 2173,
	567, 2173,
	568, 2173,
	569, 2173,
	570, 2173,
	571, 2173,
	572, 2173,
	573, 2173,
	574, 2173,
	575, 2173,
	576, 2173,
	577, 2173,
	578, 2173,
	579, 2173,
	580, 2173,
	582, 2173,
	583, 2173,
	585, 2173,
	586, 2173,
	588, 2173,
	589, 2173,
	590, 2173,
	591, 2173,
	592, 2173,
	593, 2173,
	594, 2173,
	595, 2173,
	596, 2173,
	597, 2173,
	599, 2173,
	600, 2173,
	601, 2173,
	602, 2173,
	603, 2173,
	605, 2173,
	607, 2173,
	608, 2173,
	609, 2173,
	610, 2173,
	611, 2173,
	612, 2173,
	613, 2173,
	614, 2173,
	616, 2173,
	617, 2173,
	618, 2173,
	619, 2173,
	620, 2173,
	621, 2173,
	622, 2173,
	625, 2173,
	626, 2173,
	627, 2173,
	628, 2173,
	629, 2173,
	630, 2173,
	631, 2173,
	632, 2173,
	633, 2173,
	634, 2173,
	635, 2173,
	637, 2173,
	640, 2173,
	641, 2173,
	642, 2173,
	643, 2173,
	644, 2173,
	645, 2173,
	647, 2173,
	648, 2173,
	649, 2173,
	650, 2173,
	651, 2173,
	652, 2173,
	653, 2173,
	654, 2173,
	655, 2173,
	656, 2173,
	657, 2173,
	658, 2173,
	659, 2173,
	660, 2173,
	661, 2173,
	662, 2173,
	667, 2173,
	668, 2173,
	669, 2173,
	670, 2173,
	671, 2173,
	672, 2173,
	-2, 0,
	-1, 184,
	1, 2015,
	709, 2015,
	712, 2015,
	-2, 0,
	-1, 185,
	1, 2015,
	604, 2015,
	709, 2015,
	712, 2015,
	-2, 0,
	-1, 231,
	174, 2141,
	196, 2141,
	209, 2141,
	285, 2141,
	321, 2141,
	398, 2141,
	409, 2141,
	623, 2141,
	-2, 2116,
	-1, 295,
	4, 2180,
	5, 2180,
	6, 2180,
	7, 2180,
	8, 2180,
	9, 2180,
	10, 2180,
	21, 2180,
	22, 2180,
	23, 2180,
	24, 2180,
	25, 2180,
	26, 2180,
	27, 2180,
	28, 2180,
	30, 2180,
	31, 2180,
	37, 2180,
	38, 2180,
	41, 2180,
	43, 2180,
	45, 2180,
	46, 2180,
	47, 2180,
	48, 2180,
	49, 2180,
	50, 2180,
	51, 2180,
	52, 2180,
	53, 2180,
	54, 2180,
	55, 2180,
	56, 2180,
	57, 2180,
	58, 2180,
	60, 2180,
	61, 2180,
	62, 2180,
	63, 2180,
	65, 2180,
	66, 2180,
	67, 2180,
	68, 2180,
	69, 2180,
	70, 2180,
	71, 2180,
	72, 2180,
	73, 2180,
	74, 2180,
	75, 2180,
	76, 2180,
	77, 2180,
	78, 2180,
	79, 2180,
	80, 2180,
	81, 2180,
	82, 2180,
	84, 2180,
	85, 2180,
	86, 2180,
	87, 2180,
	88, 2180,
	90, 2180,
	92, 2180,
	93, 2180,
	94, 2180,
	95, 2180,
	96, 2180,
	97, 2180,
	98, 2180,
	99, 2180,
	102, 2180,
	103, 2180,
	104, 2180,
	105, 2180,
	106, 2180,
	107, 2180,
	109, 2180,
	111, 2180,
	112, 2180,
	113, 2180,
	114, 2180,
	115, 2180,
	116, 2180,
	117, 2180,
	119, 2180,
	120, 2180,
	121, 2180,
	122, 2180,
	123, 2180,
	124, 2180,
	125, 2180,
	126, 2180,
	127, 2180,
	128, 2180,
	129, 2180,
	130, 2180,
	131, 2180,
	132, 2180,
	133, 2180,
	134, 2180,
	135, 2180,
	136, 2180,
	137, 2180,
	138, 2180,
	139, 2180,
	140, 2180,
	141, 2180,
	142, 2180,
	143, 2180,
	144, 2180,
	145, 2180,
	146, 2180,
	147, 2180,
	148, 2180,
	149, 2180,
	151, 2180,
	152, 2180,
	153, 2180,
	154, 2180,
	156, 2180,
	157, 2180,
	158, 2180,
	159, 2180,
	162, 2180,
	163, 2180,
	164, 2180,
	166, 2180,
	167, 2180,
	168, 2180,
	169, 2180,
	171, 2180,
	172, 2180,
	173, 2180,
	175, 2180,
	176, 2180,
	177, 2180,
	178, 2180,
	179, 2180,
	180, 2180,
	181, 2180,
	182, 2180,
	183, 2180,
	184, 2180,
	185, 2180,
	186, 2180,
	187, 2180,
	188, 2180,
	189, 2180,
	190, 2180,
	191, 2180,
	192, 2180,
	193, 2180,
	194, 2180,
	195, 2180,
	201, 2180,
	202, 2180,
	203, 2180,
	204, 2180,
	208, 2180,
	210, 2180,
	211, 2180,
	212, 2180,
	213, 2180,
	214, 2180,
	215, 2180,
	217, 2180,
	218, 2180,
	219, 2180,
	221, 2180,
	222, 2180,
	223, 2180,
	224, 2180,
	225, 2180,
	226, 2180,
	227, 2180,
	228, 2180,
	229, 2180,
	230, 2180,
	231, 2180,
	232, 2180,
	233, 2180,
	234, 2180,
	235, 2180,
	237, 2180,
	238, 2180,
	239, 2180,
	241, 2180,
	242, 2180,
	244, 2180,
	245, 2180,
	246, 2180,
	247, 2180,
	248, 2180,
	249, 2180,
	250, 2180,
	251, 2180,
	252, 2180,
	253, 2180,
	254, 2180,
	255, 2180,
	256, 2180,
	257, 2180,
	258, 2180,
	260, 2180,
	261, 2180,
	262, 2180,
	263, 2180,
	264, 2180,
	265, 2180,
	266, 2180,
	270, 2180,
	271, 2180,
	272, 2180,
	273, 2180,
	275, 2180,
	276, 2180,
	277, 2180,
	278, 2180,
	279, 2180,
	280, 2180,
	281, 2180,
	282, 2180,
	283, 2180,
	284, 2180,
	286, 2180,
	288, 2180,
	289, 2180,
	290, 2180,
	291, 2180,
	292, 2180,
	293, 2180,
	294, 2180,
	295, 2180,
	296, 2180,
	297, 2180,
	298, 2180,
	302, 2180,
	303, 2180,
	304, 2180,
	305, 2180,
	306, 2180,
	307, 2180,
	308, 2180,
	310, 2180,
	311, 2180,
	312, 2180,
	314, 2180,
	315, 2180,
	316, 2180,
	317, 2180,
	318, 2180,
	319, 2180,
	320, 2180,
	322, 2180,
	323, 2180,
	324, 2180,
	325, 2180,
	326, 2180,
	327, 2180,
	328, 2180,
	329, 2180,
	330, 2180,
	331, 2180,
	332, 2180,
	333, 2180,
	334, 2180,
	336, 2180,
	337, 2180,
	338, 2180,
	339, 2180,
	340, 2180,
	341, 2180,
	342, 2180,
	343, 2180,
	344, 2180,
	345, 2180,
	346, 2180,
	347, 2180,
	348, 2180,
	349, 2180,
	350, 2180,
	351, 2180,
	352, 2180,
	353, 2180,
	354, 2180,
	355, 2180,
	356, 2180,
	357, 2180,
	358, 2180,
	359, 2180,
	361, 2180,
	362, 2180,
	363, 2180,
	364, 2180,
	365, 2180,
	366, 2180,
	367, 2180,
	368, 2180,
	369, 2180,
	370, 2180,
	371, 2180,
	372, 2180,
	373, 2180,
	374, 2180,
	375, 2180,
	376, 2180,
	377, 2180,
	378, 2180,
	379, 2180,
	380, 2180,
	381, 2180,
	382, 2180,
	383, 2180,
	384, 2180,
	385, 2180,
	386, 2180,
	387, 2180,
	388, 2180,
	389, 2180,
	390, 2180,
	391, 2180,
	392, 2180,
	393, 2180,
	394, 2180,
	395, 2180,
	396, 2180,
	397, 2180,
	400, 2180,
	402, 2180,
	405, 2180,
	406, 2180,
	407, 2180,
	410, 2180,
	411, 2180,
	412, 2180,
	413, 2180,
	414, 2180,
	415, 2180,
	416, 2180,
	417, 2180,
	418, 2180,
	419, 2180,
	420, 2180,
	421, 2180,
	422, 2180,
	423, 2180,
	424, 2180,
	425, 2180,
	426, 2180,
	427, 2180,
	428, 2180,
	429, 2180,
	431, 2180,
	432, 2180,
	433, 2180,
	434, 2180,
	435, 2180,
	436, 2180,
	437, 2180,
	438, 2180,
	439, 2180,
	440, 2180,
	441, 2180,
	442, 2180,
	443, 2180,
	444, 2180,
	445, 2180,
	447, 2180,
	448, 2180,
	449, 2180,
	451, 2180,
	452, 2180,
	453, 2180,
	454, 2180,
	455, 2180,
	456, 2180,
	457, 2180,
	458, 2180,
	459, 2180,
	460, 2180,
	461, 2180,
	462, 2180,
	463, 2180,
	464, 2180,
	465, 2180,
	466, 2180,
	467, 2180,
	469, 2180,
	471, 2180,
	472, 2180,
	473, 2180,
	479, 2180,
	480, 2180,
	481, 2180,
	483, 2180,
	484, 2180,
	485, 2180,
	486, 2180,
	487, 2180,
	488, 2180,
	489, 2180,
	490, 2180,
	491, 2180,
	492, 2180,
	493, 2180,
	494, 2180,
	495, 2180,
	497, 2180,
	498, 2180,
	499, 2180,
	500, 2180,
	501, 2180,
	502, 2180,
	503, 2180,
	504, 2180,
	505, 2180,
	506, 2180,
	507, 2180,
	508, 2180,
	509, 2180,
	511, 2180,
	512, 2180,
	513, 2180,
	514, 2180,
	515, 2180,
	516, 2180,
	517, 2180,
	518, 2180,
	519, 2180,
	520, 2180,
	521, 2180,
	522, 2180,
	523, 2180,
	524, 2180,
	525, 2180,
	526, 2180,
	528, 2180,
	529, 2180,
	530, 2180,
	531, 2180,
	532, 2180,
	533, 2180,
	534, 2180,
	535, 2180,
	536, 2180,
	537, 2180,
	538, 2180,
	539, 2180,
	540, 2180,
	541, 2180,
	542, 2180,
	543, 2180,
	544, 2180,
	545, 2180,
	546, 2180,
	547, 2180,
	548, 2180,
	549, 2180,
	550, 2180,
	551, 2180,
	552, 2180,
	553, 2180,
	554, 2180,
	556, 2180,
	558, 2180,
	559, 2180,
	560, 2180,
	561, 2180,
	562, 2180,
	563, 2180,
	564, 2180,
	565, 2180,
	566, 2180,
	567, 2180,
	568, 2180,
	569, 2180,
	570, 2180,
	571, 2180,
	572, 2180,
	573, 2180,
	574, 2180,
	575, 2180,
	576, 2180,
	577, 2180,
	578, 2180,
	579, 2180,
	580, 2180,
	582, 2180,
	583, 2180,
	584, 2180,
	585, 2180,
	586, 2180,
	588, 2180,
	589, 2180,
	590, 2180,
	591, 2180,
	592, 2180,
	593, 2180,
	594, 2180,
	595, 2180,
	596, 2180,
	597, 2180,
	599, 2180,
	600, 2180,
	601, 2180,
	602, 2180,
	603, 2180,
	605, 2180,
	607, 2180,
	608, 2180,
	609, 2180,
	610, 2180,
	611, 2180,
	612, 2180,
	613, 2180,
	614, 2180,
	615, 2180,
	616, 2180,
	617, 2180,
	618, 2180,
	619, 2180,
	620, 2180,
	621, 2180,
	622, 2180,
	624, 2180,
	625, 2180,
	626, 2180,
	627, 2180,
	628, 2180,
	629, 2180,
	630, 2180,
	631, 2180,
	632, 2180,
	633, 2180,
	634, 2180,
	635, 2180,
	636, 2180,
	637, 2180,
	640, 2180,
	641, 2180,
	642, 2180,
	643, 2180,
	644, 2180,
	645, 2180,
	647, 2180,
	648, 2180,
	649, 2180,
	650, 2180,
	651, 2180,
	652, 2180,
	653, 2180,
	654, 2180,
	655, 2180,
	656, 2180,
	657, 2180,
	658, 2180,
	659, 2180,
	660, 2180,
	661, 2180,
	662, 2180,
	667, 2180,
	668, 2180,
	669, 2180,
	670, 2180,
	671, 2180,
	672, 2180,
	673, 2180,
	689, 2180,
	696, 2180,
	697, 2180,
	698, 2180,
	704, 2180,
	706, 2180,
	710, 2180,
	-2, 0,
	-1, 867,
	706, 2933,
	-2, 4161,
	-1, 868,
	706, 2953,
	-2, 2944,
	-1, 869,
	706, 2954,
	-2, 2945,
	-1, 873,
	706, 4060,
	-2, 2942,
	-1, 953,
	4, 1885,
	21, 1885,
	22, 1885,
	23, 1885,
	24, 1885,
	25, 1885,
	26, 1885,
	27, 1885,
	28, 1885,
	30, 1885,
	31, 1885,
	37, 1885,
	41, 1885,
	43, 1885,
	45, 1885,
	46, 1885,
	47, 1885,
	49, 1885,
	50, 1885,
	51, 1885,
	52, 1885,
	53, 1885,
	54, 1885,
	55, 1885,
	56, 1885,
	57, 1885,
	58, 1885,
	60, 1885,
	61, 1885,
	62, 1885,
	63, 1885,
	65, 1885,
	66, 1885,
	67, 1885,
	68, 1885,
	69, 1885,
	70, 1885,
	71, 1885,
	72, 1885,
	73, 1885,
	74, 1885,
	75, 1885,
	79, 1885,
	80, 1885,
	81, 1885,
	82, 1885,
	84, 1885,
	85, 1885,
	86, 1885,
	87, 1885,
	88, 1885,
	92, 1885,
	93, 1885,
	94, 1885,
	95, 1885,
	96, 1885,
	97, 1885,
	98, 1885,
	99, 1885,
	102, 1885,
	103, 1885,
	104, 1885,
	105, 1885,
	106, 1885,
	107, 1885,
	109, 1885,
	111, 1885,
	112, 1885,
	113, 1885,
	114, 1885,
	115, 1885,
	116, 1885,
	117, 1885,
	119, 1885,
	120, 1885,
	121, 1885,
	123, 1885,
	124, 1885,
	125, 1885,
	133, 1885,
	134, 1885,
	135, 1885,
	136, 1885,
	137, 1885,
	139, 1885,
	140, 1885,
	141, 1885,
	142, 1885,
	143, 1885,
	144, 1885,
	146, 1885,
	147, 1885,
	148, 1885,
	149, 1885,
	151, 1885,
	152, 1885,
	153, 1885,
	154, 1885,
	156, 1885,
	157, 1885,
	158, 1885,
	159, 1885,
	162, 1885,
	163, 1885,
	164, 1885,
	166, 1885,
	167, 1885,
	168, 1885,
	169, 1885,
	171, 1885,
	172, 1885,
	173, 1885,
	175, 1885,
	176, 1885,
	177, 1885,
	178, 1885,
	179, 1885,
	180, 1885,
	181, 1885,
	182, 1885,
	183, 1885,
	184, 1885,
	185, 1885,
	186, 1885,
	187, 1885,
	188, 1885,
	189, 1885,
	190, 1885,
	191, 1885,
	192, 1885,
	193, 1885,
	195, 1885,
	201, 1885,
	202, 1885,
	203, 1885,
	204, 1885,
	208, 1885,
	210, 1885,
	211, 1885,
	212, 1885,
	213, 1885,
	214, 1885,
	215, 1885,
	217, 1885,
	218, 1885,
	219, 1885,
	222, 1885,
	223, 1885,
	224, 1885,
	225, 1885,
	226, 1885,
	227, 1885,
	228, 1885,
	229, 1885,
	230, 1885,
	231, 1885,
	232, 1885,
	233, 1885,
	234, 1885,
	235, 1885,
	237, 1885,
	238, 1885,
	239, 1885,
	241, 1885,
	242, 1885,
	244, 1885,
	245, 1885,
	246, 1885,
	247, 1885,
	248, 1885,
	249, 1885,
	250, 1885,
	251, 1885,
	252, 1885,
	253, 1885,
	254, 1885,
	256, 1885,
	257, 1885,
	258, 1885,
	260, 1885,
	261, 1885,
	262, 1885,
	263, 1885,
	264, 1885,
	265, 1885,
	266, 1885,
	270, 1885,
	271, 1885,
	272, 1885,
	273, 1885,
	275, 1885,
	276, 1885,
	277, 1885,
	279, 1885,
	280, 1885,
	281, 1885,
	282, 1885,
	283, 1885,
	284, 1885,
	286, 1885,
	288, 1885,
	289, 1885,
	290, 1885,
	292, 1885,
	294, 1885,
	295, 1885,
	296, 1885,
	298, 1885,
	302, 1885,
	303, 1885,
	304, 1885,
	305, 1885,
	306, 1885,
	307, 1885,
	308, 1885,
	310, 1885,
	311, 1885,
	312, 1885,
	314, 1885,
	315, 1885,
	316, 1885,
	318, 1885,
	319, 1885,
	322, 1885,
	323, 1885,
	324, 1885,
	325, 1885,
	326, 1885,
	327, 1885,
	328, 1885,
	331, 1885,
	332, 1885,
	333, 1885,
	334, 1885,
	336, 1885,
	337, 1885,
	338, 1885,
	339, 1885,
	340, 1885,
	341, 1885,
	342, 1885,
	343, 1885,
	344, 1885,
	345, 1885,
	346, 1885,
	347, 1885,
	348, 1885,
	349, 1885,
	350, 1885,
	351, 1885,
	352, 1885,
	353, 1885,
	354, 1885,
	355, 1885,
	356, 1885,
	357, 1885,
	358, 1885,
	359, 1885,
	361, 1885,
	363, 1885,
	364, 1885,
	365, 1885,
	366, 1885,
	367, 1885,
	368, 1885,
	369, 1885,
	370, 1885,
	371, 1885,
	372, 1885,
	373, 1885,
	374, 1885,
	375, 1885,
	376, 1885,
	377, 1885,
	378, 1885,
	379, 1885,
	380, 1885,
	382, 1885,
	383, 1885,
	385, 1885,
	386, 1885,
	388, 1885,
	389, 1885,
	390, 1885,
	391, 1885,
	393, 1885,
	394, 1885,
	395, 1885,
	396, 1885,
	397, 1885,
	400, 1885,
	402, 1885,
	405, 1885,
	406, 1885,
	407, 1885,
	410, 1885,
	411, 1885,
	412, 1885,
	414, 1885,
	416, 1885,
	417, 1885,
	418, 1885,
	419, 1885,
	420, 1885,
	421, 1885,
	422, 1885,
	423, 1885,
	424, 1885,
	425, 1885,
	426, 1885,
	427, 1885,
	428, 1885,
	429, 1885,
	431, 1885,
	432, 1885,
	433, 1885,
	434, 1885,
	435, 1885,
	436, 1885,
	437, 1885,
	438, 1885,
	439, 1885,
	440, 1885,
	441, 1885,
	442, 1885,
	443, 1885,
	444, 1885,
	445, 1885,
	447, 1885,
	448, 1885,
	449, 1885,
	451, 1885,
	452, 1885,
	453, 1885,
	454, 1885,
	455, 1885,
	456, 1885,
	457, 1885,
	458, 1885,
	459, 1885,
	460, 1885,
	461, 1885,
	462, 1885,
	463, 1885,
	464, 1885,
	465, 1885,
	466, 1885,
	467, 1885,
	469, 1885,
	471, 1885,
	472, 1885,
	473, 1885,
	479, 1885,
	480, 1885,
	481, 1885,
	483, 1885,
	484, 1885,
	485, 1885,
	486, 1885,
	487, 1885,
	488, 1885,
	489, 1885,
	490, 1885,
	491, 1885,
	492, 1885,
	493, 1885,
	494, 1885,
	495, 1885,
	497, 1885,
	498, 1885,
	499, 1885,
	500, 1885,
	501, 1885,
	503, 1885,
	504, 1885,
	505, 1885,
	506, 1885,
	507, 1885,
	508, 1885,
	509, 1885,
	511, 1885,
	512, 1885,
	513, 1885,
	514, 1885,
	515, 1885,
	516, 1885,
	517, 1885,
	518, 1885,
	519, 1885,
	520, 1885,
	521, 1885,
	522, 1885,
	523, 1885,
	524, 1885,
	525, 1885,
	526, 1885,
	528, 1885,
	529, 1885,
	530, 1885,
	531, 1885,
	532, 1885,
	533, 1885,
	534, 1885,
	536, 1885,
	537, 1885,
	538, 1885,
	539, 1885,
	540, 1885,
	541, 1885,
	542, 1885,
	543, 1885,
	545, 1885,
	546, 1885,
	547, 1885,
	548, 1885,
	549, 1885,
	550, 1885,
	551, 1885,
	552, 1885,
	553, 1885,
	554, 1885,
	556, 1885,
	558, 1885,
	559, 1885,
	560, 1885,
	561, 1885,
	562, 1885,
	563, 1885,
	564, 1885,
	565, 1885,
	566, 1885,
	567, 1885,
	568, 1885,
	569, 1885,
	570, 1885,
	571, 1885,
	572, 1885,
	573, 1885,
	574, 1885,
	575, 1885,
	576, 1885,
	577, 1885,
	578, 1885,
	579, 1885,
	580, 1885,
	582, 1885,
	583, 1885,
	585, 1885,
	586, 1885,
	588, 1885,
	589, 1885,
	590, 1885,
	591, 1885,
	592, 1885,
	593, 1885,
	594, 1885,
	595, 1885,
	596, 1885,
	597, 1885,
	599, 1885,
	600, 1885,
	601, 1885,
	602, 1885,
	603, 1885,
	605, 1885,
	607, 1885,
	608, 1885,
	609, 1885,
	610, 1885,
	611, 1885,
	612, 1885,
	613, 1885,
	614, 1885,
	616, 1885,
	617, 1885,
	618, 1885,
	619, 1885,
	620, 1885,
	621, 1885,
	622, 1885,
	625, 1885,
	626, 1885,
	627, 1885,
	628, 1885,
	629, 1885,
	630, 1885,
	631, 1885,
	632, 1885,
	633, 1885,
	634, 1885,
	635, 1885,
	637, 1885,
	640, 1885,
	641, 1885,
	642, 1885,
	643, 1885,
	644, 1885,
	645, 1885,
	647, 1885,
	648, 1885,
	649, 1885,
	650, 1885,
	651, 1885,
	652, 1885,
	653, 1885,
	654, 1885,
	655, 1885,
	656, 1885,
	657, 1885,
	658, 1885,
	659, 1885,
	660, 1885,
	661, 1885,
	662, 1885,
	667, 1885,
	668, 1885,
	669, 1885,
	670, 1885,
	671, 1885,
	672, 1885,
	-2, 0,
	-1, 975,
	220, 3023,
	604, 3023,
	688, 3023,
	708, 3023,
	-2, 0,
	-1, 976,
	220, 3007,
	604, 3007,
	688, 3007,
	708, 3007,
	-2, 0,
	-1, 978,
	220, 3329,
	604, 3329,
	688, 3329,
	708, 3329,
	-2, 0,
	-1, 981,
	220, 3162,
	604, 3162,
	688, 3162,
	708, 3162,
	-2, 0,
	-1, 982,
	220, 3383,
	604, 3383,
	688, 3383,
	708, 3383,
	-2, 0,
	-1, 990,
	220, 3191,
	604, 3191,
	688, 3191,
	708, 3191,
	-2, 1089,
	-1, 1006,
	8, 1231,
	29, 1231,
	696, 1231,
	697, 1231,
	-2, 1236,
	-1, 1010,
	1, 3086,
	709, 3086,
	712, 3086,
	-2, 1236,
	-1, 1011,
	1, 3149,
	709, 3149,
	712, 3149,
	-2, 1236,
	-1, 1014,
	1, 3196,
	709, 3196,
	712, 3196,
	-2, 1229,
	-1, 1015,
	1, 3255,
	709, 3255,
	712, 3255,
	-2, 1230,
	-1, 1016,
	1, 3095,
	709, 3095,
	712, 3095,
	-2, 1233,
	-1, 1017,
	1, 2988,
	709, 2988,
	712, 2988,
	-2, 1234,
	-1, 1036,
	220, 1278,
	-2, 0,
	-1, 1037,
	455, 1359,
	534, 1359,
	586, 1359,
	609, 1359,
	-2, 0,
	-1, 1038,
	455, 1358,
	534, 1358,
	586, 1358,
	609, 1358,
	-2, 1249,
	-1, 1042,
	1, 1426,
	705, 1426,
	707, 1426,
	709, 1426,
	712, 1426,
	-2, 0,
	-1, 1044,
	1, 1331,
	705, 1331,
	707, 1331,
	709, 1331,
	712, 1331,
	-2, 0,
	-1, 1045,
	1, 1335,
	705, 1335,
	707, 1335,
	709, 1335,
	712, 1335,
	-2, 0,
	-1, 1046,
	1, 1525,
	209, 1525,
	705, 1525,
	707, 1525,
	709, 1525,
	712, 1525,
	-2, 0,
	-1, 1056,
	1, 1364,
	705, 1364,
	707, 1364,
	709, 1364,
	712, 1364,
	-2, 0,
	-1, 1063,
	1, 1426,
	705, 1426,
	707, 1426,
	709, 1426,
	712, 1426,
	-2, 0,
	-1, 1064,
	1, 1415,
	705, 1415,
	707, 1415,
	709, 1415,
	712, 1415,
	-2, 0,
	-1, 1065,
	1, 1419,
	705, 1419,
	707, 1419,
	709, 1419,
	712, 1419,
	-2, 0,
	-1, 1066,
	1, 1428,
	705, 1428,
	707, 1428,
	709, 1428,
	712, 1428,
	-2, 0,
	-1, 1067,
	1, 1431,
	705, 1431,
	707, 1431,
	709, 1431,
	712, 1431,
	-2, 0,
	-1, 1075,
	1, 1471,
	705, 1471,
	707, 1471,
	709, 1471,
	712, 1471,
	-2, 0,
	-1, 1076,
	1, 1473,
	705, 1473,
	707, 1473,
	709, 1473,
	712, 1473,
	-2, 0,
	-1, 1079,
	1, 1499,
	705, 1499,
	707, 1499,
	709, 1499,
	712, 1499,
	-2, 0,
	-1, 1081,
	1, 1517,
	705, 1517,
	707, 1517,
	709, 1517,
	712, 1517,
	-2, 0,
	-1, 1137,
	708, 2944,
	711, 2944,
	-2, 1537,
	-1, 1138,
	708, 2946,
	711, 2946,
	-2, 1538,
	-1, 1139,
	708, 2945,
	711, 2945,
	-2, 1539,
	-1, 1140,
	711, 2865,
	-2, 1540,
	-1, 1146,
	4, 532,
	8, 532,
	-2, 3375,
	-1, 1169,
	209, 346,
	-2, 0,
	-1, 1192,
	48, 2916,
	-2, 0,
	-1, 1193,
	648, 1858,
	-2, 1622,
	-1, 1207,
	220, 744,
	-2, 0,
	-1, 1210,
	4, 2339,
	21, 2339,
	22, 2339,
	23, 2339,
	24, 2339,
	25, 2339,
	26, 2339,
	27, 2339,
	28, 2339,
	30, 2339,
	31, 2339,
	37, 2339,
	41, 2339,
	43, 2339,
	45, 2339,
	46, 2339,
	47, 2339,
	49, 2339,
	50, 2339,
	51, 2339,
	52, 2339,
	53, 2339,
	54, 2339,
	55, 2339,
	56, 2339,
	57, 2339,
	58, 2339,
	60, 2339,
	61, 2339,
	62, 2339,
	63, 2339,
	65, 2339,
	66, 2339,
	67, 2339,
	68, 2339,
	69, 2339,
	70, 2339,
	71, 2339,
	72, 2339,
	73, 2339,
	74, 2339,
	75, 2339,
	79, 2339,
	80, 2339,
	81, 2339,
	82, 2339,
	84, 2339,
	85, 2339,
	86, 2339,
	87, 2339,
	88, 2339,
	92, 2339,
	93, 2339,
	94, 2339,
	95, 2339,
	96, 2339,
	97, 2339,
	98, 2339,
	99, 2339,
	102, 2339,
	103, 2339,
	104, 2339,
	105, 2339,
	106, 2339,
	107, 2339,
	109, 2339,
	111, 2339,
	112, 2339,
	113, 2339,
	114, 2339,
	115, 2339,
	116, 2339,
	117, 2339,
	119, 2339,
	120, 2339,
	121, 2339,
	123, 2339,
	124, 2339,
	125, 2339,
	133, 2339,
	134, 2339,
	135, 2339,
	136, 2339,
	137, 2339,
	139, 2339,
	140, 2339,
	141, 2339,
	142, 2339,
	143, 2339,
	144, 2339,
	146, 2339,
	147, 2339,
	148, 2339,
	149, 2339,
	151, 2339,
	152, 2339,
	153, 2339,
	154, 2339,
	156, 2339,
	157, 2339,
	158, 2339,
	159, 2339,
	162, 2339,
	163, 2339,
	164, 2339,
	166, 2339,
	167, 2339,
	168, 2339,
	169, 2339,
	171, 2339,
	172, 2339,
	173, 2339,
	175, 2339,
	176, 2339,
	177, 2339,
	178, 2339,
	179, 2339,
	180, 2339,
	181, 2339,
	182, 2339,
	183, 2339,
	184, 2339,
	185, 2339,
	186, 2339,
	187, 2339,
	188, 2339,
	189, 2339,
	190, 2339,
	191, 2339,
	192, 2339,
	193, 2339,
	195, 2339,
	201, 2339,
	202, 2339,
	203, 2339,
	204, 2339,
	208, 2339,
	210, 2339,
	211, 2339,
	212, 2339,
	213, 2339,
	214, 2339,
	215, 2339,
	217, 2339,
	218, 2339,
	219, 2339,
	222, 2339,
	223, 2339,
	224, 2339,
	225, 2339,
	226, 2339,
	227, 2339,
	228, 2339,
	229, 2339,
	230, 2339,
	231, 2339,
	232, 2339,
	233, 2339,
	234, 2339,
	235, 2339,
	237, 2339,
	238, 2339,
	239, 2339,
	241, 2339,
	242, 2339,
	244, 2339,
	245, 2339,
	246, 2339,
	247, 2339,
	248, 2339,
	249, 2339,
	250, 2339,
	251, 2339,
	252, 2339,
	253, 2339,
	254, 2339,
	256, 2339,
	257, 2339,
	258, 2339,
	260, 2339,
	261, 2339,
	262, 2339,
	263, 2339,
	264, 2339,
	265, 2339,
	266, 2339,
	270, 2339,
	271, 2339,
	272, 2339,
	273, 2339,
	275, 2339,
	276, 2339,
	277, 2339,
	279, 2339,
	280, 2339,
	281, 2339,
	282, 2339,
	283, 2339,
	284, 2339,
	286, 2339,
	288, 2339,
	289, 2339,
	290, 2339,
	292, 2339,
	294, 2339,
	295, 2339,
	296, 2339,
	298, 2339,
	302, 2339,
	303, 2339,
	304, 2339,
	305, 2339,
	306, 2339,
	307, 2339,
	308, 2339,
	310, 2339,
	311, 2339,
	312, 2339,
	314, 2339,
	315, 2339,
	316, 2339,
	318, 2339,
	319, 2339,
	322, 2339,
	323, 2339,
	324, 2339,
	325, 2339,
	326, 2339,
	327, 2339,
	328, 2339,
	331, 2339,
	332, 2339,
	333, 2339,
	334, 2339,
	336, 2339,
	337, 2339,
	338, 2339,
	339, 2339,
	340, 2339,
	341, 2339,
	342, 2339,
	343, 2339,
	344, 2339,
	345, 2339,
	346, 2339,
	347, 2339,
	348, 2339,
	349, 2339,
	350, 2339,
	351, 2339,
	352, 2339,
	353, 2339,
	354, 2339,
	355, 2339,
	356, 2339,
	357, 2339,
	358, 2339,
	359, 2339,
	361, 2339,
	363, 2339,
	364, 2339,
	365, 2339,
	366, 2339,
	367, 2339,
	368, 2339,
	369, 2339,
	370, 2339,
	371, 2339,
	372, 2339,
	373, 2339,
	374, 2339,
	375, 2339,
	376, 2339,
	377, 2339,
	378, 2339,
	379, 2339,
	380, 2339,
	382, 2339,
	383, 2339,
	385, 2339,
	386, 2339,
	388, 2339,
	389, 2339,
	390, 2339,
	391, 2339,
	393, 2339,
	394, 2339,
	395, 2339,
	396, 2339,
	397, 2339,
	400, 2339,
	402, 2339,
	405, 2339,
	406, 2339,
	407, 2339,
	410, 2339,
	411, 2339,
	412, 2339,
	414, 2339,
	416, 2339,
	417, 2339,
	418, 2339,
	419, 2339,
	420, 2339,
	421, 2339,
	422, 2339,
	423, 2339,
	424, 2339,
	425, 2339,
	426, 2339,
	427, 2339,
	428, 2339,
	429, 2339,
	431, 2339,
	432, 2339,
	433, 2339,
	434, 2339,
	435, 2339,
	436, 2339,
	437, 2339,
	438, 2339,
	439, 2339,
	440, 2339,
	441, 2339,
	442, 2339,
	443, 2339,
	444, 2339,
	445, 2339,
	447, 2339,
	448, 2339,
	449, 2339,
	451, 2339,
	452, 2339,
	453, 2339,
	454, 2339,
	455, 2339,
	456, 2339,
	457, 2339,
	458, 2339,
	459, 2339,
	460, 2339,
	461, 2339,
	462, 2339,
	463, 2339,
	464, 2339,
	465, 2339,
	466, 2339,
	467, 2339,
	469, 2339,
	471, 2339,
	472, 2339,
	473, 2339,
	479, 2339,
	480, 2339,
	481, 2339,
	483, 2339,
	484, 2339,
	485, 2339,
	486, 2339,
	487, 2339,
	488, 2339,
	489, 2339,
	490, 2339,
	491, 2339,
	492, 2339,
	493, 2339,
	494, 2339,
	495, 2339,
	497, 2339,
	498, 2339,
	499, 2339,
	500, 2339,
	501, 2339,
	503, 2339,
	504, 2339,
	505, 2339,
	506, 2339,
	507, 2339,
	508, 2339,
	509, 2339,
	511, 2339,
	512, 2339,
	513, 2339,
	514, 2339,
	515, 2339,
	516, 2339,
	517, 2339,
	518, 2339,
	519, 2339,
	520, 2339,
	521, 2339,
	522, 2339,
	523, 2339,
	524, 2339,
	525, 2339,
	526, 2339,
	528, 2339,
	529, 2339,
	530, 2339,
	531, 2339,
	532, 2339,
	533, 2339,
	534, 2339,
	536, 2339,
	537, 2339,
	538, 2339,
	539, 2339,
	540, 2339,
	541, 2339,
	542, 2339,
	543, 2339,
	545, 2339,
	546, 2339,
	547, 2339,
	548, 2339,
	549, 2339,
	550, 2339,
	551, 2339,
	552, 2339,
	553, 2339,
	554, 2339,
	556, 2339,
	558, 2339,
	559, 2339,
	560, 2339,
	561, 2339,
	562, 2339,
	563, 2339,
	564, 2339,
	565, 2339,
	566, 2339,
	567, 2339,
	568, 2339,
	569, 2339,
	570, 2339,
	571, 2339,
	572, 2339,
	573, 2339,
	574, 2339,
	575, 2339,
	576, 2339,
	577, 2339,
	578, 2339,
	579, 2339,
	580, 2339,
	582, 2339,
	583, 2339,
	585, 2339,
	586, 2339,
	588, 2339,
	589, 2339,
	590, 2339,
	591, 2339,
	592, 2339,
	593, 2339,
	594, 2339,
	595, 2339,
	596, 2339,
	597, 2339,
	599, 2339,
	600, 2339,
	601, 2339,
	602, 2339,
	603, 2339,
	605, 2339,
	607, 2339,
	608, 2339,
	609, 2339,
	610, 2339,
	611, 2339,
	612, 2339,
	613, 2339,
	614, 2339,
	616, 2339,
	617, 2339,
	618, 2339,
	619, 2339,
	620, 2339,
	621, 2339,
	622, 2339,
	625, 2339,
	626, 2339,
	627, 2339,
	628, 2339,
	629, 2339,
	630, 2339,
	631, 2339,
	632, 2339,
	633, 2339,
	634, 2339,
	635, 2339,
	637, 2339,
	640, 2339,
	641, 2339,
	642, 2339,
	643, 2339,
	644, 2339,
	645, 2339,
	647, 2339,
	648, 2339,
	649, 2339,
	650, 2339,
	651, 2339,
	652, 2339,
	653, 2339,
	654, 2339,
	655, 2339,
	656, 2339,
	657, 2339,
	658, 2339,
	659, 2339,
	660, 2339,
	661, 2339,
	662, 2339,
	667, 2339,
	668, 2339,
	669, 2339,
	670, 2339,
	671, 2339,
	672, 2339,
	-2, 0,
	-1, 1224,
	307, 668,
	-2, 0,
	-1, 1225,
	182, 1404,
	305, 1404,
	455, 1358,
	534, 1358,
	586, 1358,
	607, 1404,
	609, 1358,
	-2, 0,
	-1, 1346,
	196, 2184,
	209, 2184,
	321, 2184,
	398, 2184,
	-2, 2120,
	-1, 1364,
	196, 2183,
	209, 2183,
	321, 2183,
	398, 2183,
	-2, 2117,
	-1, 1393,
	5, 4073,
	706, 4073,
	-2, 1097,
	-1, 1394,
	708, 2943,
	-2, 1098,
	-1, 1429,
	5, 2935,
	706, 2932,
	-2, 2923,
	-1, 1438,
	708, 2941,
	-2, 2922,
	-1, 1460,
	5, 2956,
	706, 2953,
	-2, 2944,
	-1, 1461,
	5, 2957,
	706, 2954,
	-2, 2945,
	-1, 1462,
	5, 2958,
	38, 2958,
	145, 2958,
	688, 2958,
	704, 2958,
	707, 2958,
	708, 2958,
	711, 2958,
	-2, 4059,
	-1, 1463,
	5, 2414,
	-2, 4029,
	-1, 1464,
	5, 2415,
	-2, 4030,
	-1, 1465,
	5, 2416,
	-2, 4045,
	-1, 1466,
	5, 2417,
	-2, 4007,
	-1, 1467,
	5, 2418,
	-2, 4042,
	-1, 1468,
	5, 2426,
	-2, 4020,
	-1, 1470,
	5, 2413,
	-2, 4016,
	-1, 1471,
	5, 2413,
	-2, 4015,
	-1, 1472,
	5, 2413,
	-2, 4035,
	-1, 1473,
	5, 2424,
	-2, 4009,
	-1, 1474,
	5, 2429,
	706, 2441,
	-2, 4008,
	-1, 1475,
	5, 2431,
	-2, 4055,
	-1, 1478,
	5, 2453,
	-2, 4048,
	-1, 1479,
	5, 2445,
	-2, 4049,
	-1, 1480,
	5, 2453,
	-2, 4050,
	-1, 1481,
	5, 2449,
	-2, 4051,
	-1, 1482,
	5, 2397,
	-2, 4021,
	-1, 1483,
	5, 2398,
	-2, 4022,
	-1, 1484,
	5, 2399,
	-2, 4010,
	-1, 1495,
	5, 2436,
	706, 2436,
	-2, 4056,
	-1, 1496,
	5, 2437,
	706, 2437,
	-2, 4046,
	-1, 1497,
	5, 2438,
	649, 2438,
	706, 2438,
	-2, 4011,
	-1, 1498,
	5, 2439,
	649, 2439,
	706, 2439,
	-2, 4012,
	-1, 1659,
	220, 3383,
	604, 3383,
	688, 3383,
	708, 3383,
	-2, 0,
	-1, 1664,
	1, 1073,
	709, 1073,
	712, 1073,
	-2, 2023,
	-1, 1723,
	220, 1279,
	-2, 3318,
	-1, 1724,
	220, 1280,
	-2, 3084,
	-1, 1725,
	220, 1281,
	-2, 3266,
	-1, 1726,
	220, 1282,
	-2, 3408,
	-1, 1741,
	1, 1499,
	705, 1499,
	707, 1499,
	709, 1499,
	712, 1499,
	-2, 0,
	-1, 1742,
	455, 1359,
	534, 1359,
	586, 1359,
	609, 1359,
	-2, 0,
	-1, 1753,
	1, 1962,
	259, 1962,
	705, 1962,
	707, 1962,
	709, 1962,
	712, 1962,
	-2, 0,
	-1, 1772,
	1, 1354,
	705, 1354,
	707, 1354,
	709, 1354,
	712, 1354,
	-2, 0,
	-1, 1773,
	1, 1405,
	705, 1405,
	707, 1405,
	709, 1405,
	712, 1405,
	-2, 0,
	-1, 1774,
	1, 1421,
	705, 1421,
	707, 1421,
	709, 1421,
	712, 1421,
	-2, 0,
	-1, 1777,
	1, 1363,
	705, 1363,
	707, 1363,
	709, 1363,
	712, 1363,
	-2, 0,
	-1, 1780,
	1, 1370,
	705, 1370,
	707, 1370,
	709, 1370,
	712, 1370,
	-2, 0,
	-1, 1784,
	1, 1366,
	705, 1366,
	707, 1366,
	709, 1366,
	712, 1366,
	-2, 0,
	-1, 1789,
	1, 1385,
	705, 1385,
	707, 1385,
	709, 1385,
	712, 1385,
	-2, 0,
	-1, 1831,
	1, 3307,
	666, 3307,
	705, 3307,
	707, 3307,
	708, 3307,
	709, 3307,
	712, 3307,
	-2, 0,
	-1, 1836,
	1, 1482,
	705, 1482,
	707, 1482,
	709, 1482,
	712, 1482,
	-2, 0,
	-1, 1860,
	1, 2018,
	709, 2018,
	712, 2018,
	-2, 2023,
	-1, 1960,
	418, 2917,
	484, 2917,
	536, 2917,
	698, 2917,
	-2, 2903,
	-1, 1970,
	220, 178,
	314, 178,
	382, 178,
	660, 178,
	-2, 3378,
	-1, 1971,
	220, 179,
	314, 179,
	382, 179,
	660, 179,
	-2, 3075,
	-1, 1972,
	220, 180,
	314, 180,
	382, 180,
	660, 180,
	-2, 3281,
	-1, 1978,
	710, 2917,
	-2, 2919,
	-1, 1981,
	25, 3307,
	259, 3307,
	-2, 0,
	-1, 1994,
	1, 1855,
	489, 1807,
	536, 1807,
	679, 1807,
	685, 1807,
	705, 1855,
	707, 1855,
	709, 1855,
	712, 1855,
	-2, 2169,
	-1, 2000,
	236, 1962,
	259, 1962,
	501, 1962,
	-2, 0,
	-1, 2071,
	48, 2915,
	-2, 1584,
	-1, 2078,
	1, 1855,
	705, 1855,
	707, 1855,
	709, 1855,
	712, 1855,
	-2, 2169,
	-1, 2081,
	464, 1621,
	648, 1621,
	-2, 557,
	-1, 2087,
	4, 1885,
	21, 1885,
	22, 1885,
	23, 1885,
	24, 1885,
	25, 1885,
	26, 1885,
	27, 1885,
	28, 1885,
	30, 1885,
	31, 1885,
	37, 1885,
	41, 1885,
	43, 1885,
	45, 1885,
	46, 1885,
	47, 1885,
	49, 1885,
	50, 1885,
	51, 1885,
	52, 1885,
	53, 1885,
	54, 1885,
	55, 1885,
	56, 1885,
	57, 1885,
	58, 1885,
	60, 1885,
	61, 1885,
	62, 1885,
	63, 1885,
	65, 1885,
	66, 1885,
	67, 1885,
	68, 1885,
	69, 1885,
	70, 1885,
	71, 1885,
	72, 1885,
	73, 1885,
	74, 1885,
	75, 1885,
	79, 1885,
	80, 1885,
	81, 1885,
	82, 1885,
	84, 1885,
	85, 1885,
	86, 1885,
	87, 1885,
	88, 1885,
	92, 1885,
	93, 1885,
	94, 1885,
	95, 1885,
	96, 1885,
	97, 1885,
	98, 1885,
	99, 1885,
	102, 1885,
	103, 1885,
	104, 1885,
	105, 1885,
	106, 1885,
	107, 1885,
	109, 1885,
	111, 1885,
	112, 1885,
	113, 1885,
	114, 1885,
	115, 1885,
	116, 1885,
	117, 1885,
	119, 1885,
	120, 1885,
	121, 1885,
	123, 1885,
	124, 1885,
	125, 1885,
	133, 1885,
	134, 1885,
	135, 1885,
	136, 1885,
	137, 1885,
	139, 1885,
	140, 1885,
	141, 1885,
	142, 1885,
	143, 1885,
	144, 1885,
	146, 1885,
	147, 1885,
	148, 1885,
	149, 1885,
	151, 1885,
	152, 1885,
	153, 1885,
	154, 1885,
	156, 1885,
	157, 1885,
	158, 1885,
	159, 1885,
	162, 1885,
	163, 1885,
	164, 1885,
	166, 1885,
	167, 1885,
	168, 1885,
	169, 1885,
	171, 1885,
	172, 1885,
	173, 1885,
	175, 1885,
	176, 1885,
	177, 1885,
	178, 1885,
	179, 1885,
	180, 1885,
	181, 1885,
	182, 1885,
	183, 1885,
	184, 1885,
	185, 1885,
	186, 1885,
	187, 1885,
	188, 1885,
	189, 1885,
	190, 1885,
	191, 1885,
	192, 1885,
	193, 1885,
	201, 1885,
	202, 1885,
	203, 1885,
	204, 1885,
	208, 1885,
	210, 1885,
	211, 1885,
	212, 1885,
	213, 1885,
	214, 1885,
	215, 1885,
	217, 1885,
	218, 1885,
	219, 1885,
	222, 1885,
	223, 1885,
	224, 1885,
	225, 1885,
	226, 1885,
	227, 1885,
	228, 1885,
	229, 1885,
	230, 1885,
	231, 1885,
	232, 1885,
	233, 1885,
	234, 1885,
	235, 1885,
	237, 1885,
	238, 1885,
	239, 1885,
	241, 1885,
	242, 1885,
	244, 1885,
	245, 1885,
	246, 1885,
	247, 1885,
	248, 1885,
	249, 1885,
	250, 1885,
	251, 1885,
	252, 1885,
	253, 1885,
	254, 1885,
	256, 1885,
	257, 1885,
	258, 1885,
	260, 1885,
	261, 1885,
	262, 1885,
	263, 1885,
	264, 1885,
	265, 1885,
	266, 1885,
	270, 1885,
	271, 1885,
	272, 1885,
	273, 1885,
	279, 1885,
	280, 1885,
	281, 1885,
	282, 1885,
	283, 1885,
	284, 1885,
	286, 1885,
	288, 1885,
	289, 1885,
	290, 1885,
	292, 1885,
	294, 1885,
	295, 1885,
	296, 1885,
	298, 1885,
	302, 1885,
	303, 1885,
	304, 1885,
	305, 1885,
	306, 1885,
	307, 1885,
	308, 1885,
	310, 1885,
	311, 1885,
	312, 1885,
	314, 1885,
	315, 1885,
	316, 1885,
	318, 1885,
	319, 1885,
	322, 1885,
	323, 1885,
	324, 1885,
	325, 1885,
	326, 1885,
	327, 1885,
	328, 1885,
	331, 1885,
	332, 1885,
	333, 1885,
	334, 1885,
	336, 1885,
	337, 1885,
	338, 1885,
	339, 1885,
	340, 1885,
	341, 1885,
	342, 1885,
	343, 1885,
	344, 1885,
	345, 1885,
	346, 1885,
	347, 1885,
	348, 1885,
	349, 1885,
	350, 1885,
	351, 1885,
	352, 1885,
	353, 1885,
	354, 1885,
	355, 1885,
	356, 1885,
	357, 1885,
	358, 1885,
	359, 1885,
	361, 1885,
	363, 1885,
	364, 1885,
	365, 1885,
	366, 1885,
	367, 1885,
	368, 1885,
	369, 1885,
	370, 1885,
	371, 1885,
	372, 1885,
	373, 1885,
	374, 1885,
	375, 1885,
	376, 1885,
	377, 1885,
	378, 1885,
	379, 1885,
	380, 1885,
	382, 1885,
	383, 1885,
	385, 1885,
	388, 1885,
	389, 1885,
	390, 1885,
	391, 1885,
	393, 1885,
	394, 1885,
	395, 1885,
	396, 1885,
	397, 1885,
	400, 1885,
	402, 1885,
	403, 1885,
	405, 1885,
	406, 1885,
	407, 1885,
	410, 1885,
	411, 1885,
	412, 1885,
	414, 1885,
	416, 1885,
	417, 1885,
	418, 1885,
	419, 1885,
	420, 1885,
	421, 1885,
	422, 1885,
	423, 1885,
	424, 1885,
	425, 1885,
	426, 1885,
	427, 1885,
	428, 1885,
	429, 1885,
	431, 1885,
	432, 1885,
	433, 1885,
	434, 1885,
	435, 1885,
	436, 1885,
	437, 1885,
	438, 1885,
	439, 1885,
	440, 1885,
	441, 1885,
	442, 1885,
	443, 1885,
	444, 1885,
	445, 1885,
	447, 1885,
	448, 1885,
	449, 1885,
	451, 1885,
	452, 1885,
	453, 1885,
	454, 1885,
	455, 1885,
	456, 1885,
	457, 1885,
	458, 1885,
	459, 1885,
	460, 1885,
	461, 1885,
	462, 1885,
	463, 1885,
	464, 1885,
	465, 1885,
	466, 1885,
	467, 1885,
	469, 1885,
	471, 1885,
	472, 1885,
	473, 1885,
	479, 1885,
	480, 1885,
	481, 1885,
	483, 1885,
	484, 1885,
	485, 1885,
	486, 1885,
	487, 1885,
	488, 1885,
	489, 1885,
	490, 1885,
	491, 1885,
	492, 1885,
	493, 1885,
	494, 1885,
	495, 1885,
	497, 1885,
	498, 1885,
	499, 1885,
	500, 1885,
	501, 1885,
	503, 1885,
	504, 1885,
	505, 1885,
	506, 1885,
	507, 1885,
	508, 1885,
	509, 1885,
	511, 1885,
	512, 1885,
	513, 1885,
	514, 1885,
	515, 1885,
	516, 1885,
	517, 1885,
	518, 1885,
	519, 1885,
	520, 1885,
	521, 1885,
	522, 1885,
	523, 1885,
	524, 1885,
	525, 1885,
	526, 1885,
	528, 1885,
	529, 1885,
	530, 1885,
	531, 1885,
	532, 1885,
	533, 1885,
	534, 1885,
	536, 1885,
	537, 1885,
	538, 1885,
	539, 1885,
	540, 1885,
	541, 1885,
	542, 1885,
	543, 1885,
	545, 1885,
	546, 1885,
	547, 1885,
	548, 1885,
	549, 1885,
	550, 1885,
	551, 1885,
	552, 1885,
	553, 1885,
	554, 1885,
	556, 1885,
	558, 1885,
	559, 1885,
	560, 1885,
	561, 1885,
	562, 1885,
	563, 1885,
	564, 1885,
	565, 1885,
	566, 1885,
	567, 1885,
	568, 1885,
	569, 1885,
	570, 1885,
	571, 1885,
	572, 1885,
	573, 1885,
	574, 1885,
	575, 1885,
	576, 1885,
	577, 1885,
	578, 1885,
	579, 1885,
	580, 1885,
	582, 1885,
	583, 1885,
	585, 1885,
	586, 1885,
	588, 1885,
	589, 1885,
	590, 1885,
	591, 1885,
	592, 1885,
	593, 1885,
	594, 1885,
	595, 1885,
	596, 1885,
	597, 1885,
	599, 1885,
	600, 1885,
	601, 1885,
	602, 1885,
	603, 1885,
	605, 1885,
	607, 1885,
	608, 1885,
	609, 1885,
	610, 1885,
	611, 1885,
	612, 1885,
	613, 1885,
	614, 1885,
	616, 1885,
	617, 1885,
	618, 1885,
	619, 1885,
	620, 1885,
	621, 1885,
	622, 1885,
	625, 1885,
	626, 1885,
	627, 1885,
	628, 1885,
	629, 1885,
	630, 1885,
	631, 1885,
	632, 1885,
	633, 1885,
	634, 1885,
	635, 1885,
	637, 1885,
	640, 1885,
	641, 1885,
	642, 1885,
	643, 1885,
	644, 1885,
	645, 1885,
	647, 1885,
	648, 1885,
	649, 1885,
	650, 1885,
	651, 1885,
	652, 1885,
	653, 1885,
	654, 1885,
	655, 1885,
	656, 1885,
	657, 1885,
	658, 1885,
	659, 1885,
	660, 1885,
	661, 1885,
	662, 1885,
	667, 1885,
	668, 1885,
	669, 1885,
	670, 1885,
	671, 1885,
	672, 1885,
	-2, 0,
	-1, 2111,
	1, 836,
	705, 836,
	707, 836,
	709, 836,
	712, 836,
	-2, 2140,
	-1, 2114,
	4, 4054,
	11, 4054,
	12, 4054,
	14, 4054,
	15, 4054,
	16, 4054,
	17, 4054,
	18, 4054,
	19, 4054,
	21, 4054,
	22, 4054,
	23, 4054,
	24, 4054,
	25, 4054,
	26, 4054,
	27, 4054,
	28, 4054,
	30, 4054,
	31, 4054,
	34, 4054,
	35, 4054,
	37, 4054,
	39, 4054,
	41, 4054,
	42, 4054,
	43, 4054,
	45, 4054,
	46, 4054,
	47, 4054,
	49, 4054,
	50, 4054,
	51, 4054,
	52, 4054,
	53, 4054,
	54, 4054,
	55, 4054,
	56, 4054,
	57, 4054,
	58, 4054,
	60, 4054,
	61, 4054,
	62, 4054,
	63, 4054,
	65, 4054,
	66, 4054,
	67, 4054,
	68, 4054,
	69, 4054,
	70, 4054,
	71, 4054,
	72, 4054,
	73, 4054,
	74, 4054,
	75, 4054,
	78, 4054,
	79, 4054,
	80, 4054,
	81, 4054,
	82, 4054,
	84, 4054,
	85, 4054,
	86, 4054,
	87, 4054,
	88, 4054,
	89, 4054,
	92, 4054,
	93, 4054,
	94, 4054,
	95, 4054,
	96, 4054,
	97, 4054,
	98, 4054,
	99, 4054,
	100, 4054,
	102, 4054,
	103, 4054,
	104, 4054,
	105, 4054,
	106, 4054,
	107, 4054,
	109, 4054,
	110, 4054,
	111, 4054,
	112, 4054,
	113, 4054,
	114, 4054,
	115, 4054,
	116, 4054,
	117, 4054,
	119, 4054,
	120, 4054,
	121, 4054,
	122, 4054,
	123, 4054,
	124, 4054,
	125, 4054,
	133, 4054,
	134, 4054,
	135, 4054,
	136, 4054,
	137, 4054,
	139, 4054,
	140, 4054,
	141, 4054,
	142, 4054,
	143, 4054,
	144, 4054,
	146, 4054,
	147, 4054,
	148, 4054,
	149, 4054,
	151, 4054,
	152, 4054,
	153, 4054,
	154, 4054,
	156, 4054,
	157, 4054,
	158, 4054,
	159, 4054,
	162, 4054,
	163, 4054,
	164, 4054,
	166, 4054,
	167, 4054,
	168, 4054,
	169, 4054,
	171, 4054,
	172, 4054,
	173, 4054,
	175, 4054,
	176, 4054,
	177, 4054,
	178, 4054,
	179, 4054,
	180, 4054,
	181, 4054,
	182, 4054,
	183, 4054,
	184, 4054,
	185, 4054,
	186, 4054,
	187, 4054,
	188, 4054,
	189, 4054,
	190, 4054,
	191, 4054,
	192, 4054,
	193, 4054,
	197, 4054,
	198, 4054,
	199, 4054,
	200, 4054,
	201, 4054,
	202, 4054,
	203, 4054,
	204, 4054,
	207, 4054,
	208, 4054,
	210, 4054,
	211, 4054,
	212, 4054,
	213, 4054,
	214, 4054,
	215, 4054,
	217, 4054,
	218, 4054,
	219, 4054,
	221, 4054,
	222, 4054,
	223, 4054,
	224, 4054,
	225, 4054,
	226, 4054,
	227, 4054,
	228, 4054,
	229, 4054,
	230, 4054,
	231, 4054,
	232, 4054,
	233, 4054,
	234, 4054,
	235, 4054,
	237, 4054,
	238, 4054,
	239, 4054,
	241, 4054,
	242, 4054,
	244, 4054,
	245, 4054,
	246, 4054,
	247, 4054,
	248, 4054,
	249, 4054,
	250, 4054,
	251, 4054,
	252, 4054,
	253, 4054,
	254, 4054,
	255, 4054,
	256, 4054,
	257, 4054,
	258, 4054,
	259, 4054,
	260, 4054,
	261, 4054,
	262, 4054,
	263, 4054,
	264, 4054,
	265, 4054,
	266, 4054,
	268, 4054,
	269, 4054,
	270, 4054,
	271, 4054,
	272, 4054,
	273, 4054,
	278, 4054,
	279, 4054,
	280, 4054,
	281, 4054,
	282, 4054,
	283, 4054,
	284, 4054,
	286, 4054,
	288, 4054,
	289, 4054,
	290, 4054,
	291, 4054,
	292, 4054,
	293, 4054,
	294, 4054,
	295, 4054,
	296, 4054,
	297, 4054,
	298, 4054,
	300, 4054,
	301, 4054,
	302, 4054,
	303, 4054,
	304, 4054,
	305, 4054,
	306, 4054,
	307, 4054,
	308, 4054,
	310, 4054,
	311, 4054,
	312, 4054,
	314, 4054,
	315, 4054,
	316, 4054,
	317, 4054,
	318, 4054,
	319, 4054,
	320, 4054,
	322, 4054,
	323, 4054,
	324, 4054,
	325, 4054,
	326, 4054,
	327, 4054,
	328, 4054,
	331, 4054,
	332, 4054,
	333, 4054,
	334, 4054,
	335, 4054,
	336, 4054,
	337, 4054,
	338, 4054,
	339, 4054,
	340, 4054,
	341, 4054,
	342, 4054,
	343, 4054,
	344, 4054,
	345, 4054,
	346, 4054,
	347, 4054,
	348, 4054,
	349, 4054,
	350, 4054,
	351, 4054,
	352, 4054,
	353, 4054,
	354, 4054,
	355, 4054,
	356, 4054,
	357, 4054,
	358, 4054,
	359, 4054,
	361, 4054,
	362, 4054,
	363, 4054,
	364, 4054,
	365, 4054,
	366, 4054,
	367, 4054,
	368, 4054,
	369, 4054,
	370, 4054,
	371, 4054,
	372, 4054,
	373, 4054,
	374, 4054,
	375, 4054,
	376, 4054,
	377, 4054,
	378, 4054,
	379, 4054,
	380, 4054,
	382, 4054,
	383, 4054,
	385, 4054,
	387, 4054,
	388, 4054,
	389, 4054,
	390, 4054,
	391, 4054,
	393, 4054,
	394, 4054,
	395, 4054,
	396, 4054,
	397, 4054,
	400, 4054,
	402, 4054,
	405, 4054,
	406, 4054,
	407, 4054,
	408, 4054,
	410, 4054,
	411, 4054,
	412, 4054,
	414, 4054,
	416, 4054,
	417, 4054,
	418, 4054,
	419, 4054,
	420, 4054,
	421, 4054,
	422, 4054,
	423, 4054,
	424, 4054,
	425, 4054,
	426, 4054,
	427, 4054,
	428, 4054,
	429, 4054,
	431, 4054,
	432, 4054,
	433, 4054,
	434, 4054,
	435, 4054,
	436, 4054,
	437, 4054,
	438, 4054,
	439, 4054,
	440, 4054,
	441, 4054,
	442, 4054,
	443, 4054,
	444, 4054,
	445, 4054,
	447, 4054,
	448, 4054,
	449, 4054,
	451, 4054,
	452, 4054,
	453, 4054,
	454, 4054,
	455, 4054,
	456, 4054,
	457, 4054,
	458, 4054,
	459, 4054,
	460, 4054,
	461, 4054,
	462, 4054,
	463, 4054,
	464, 4054,
	465, 4054,
	466, 4054,
	467, 4054,
	469, 4054,
	471, 4054,
	472, 4054,
	473, 4054,
	479, 4054,
	480, 4054,
	481, 4054,
	482, 4054,
	483, 4054,
	484, 4054,
	485, 4054,
	486, 4054,
	487, 4054,
	488, 4054,
	489, 4054,
	490, 4054,
	491, 4054,
	492, 4054,
	493, 4054,
	494, 4054,
	495, 4054,
	497, 4054,
	498, 4054,
	499, 4054,
	500, 4054,
	501, 4054,
	502, 4054,
	503, 4054,
	504, 4054,
	505, 4054,
	506, 4054,
	507, 4054,
	508, 4054,
	509, 4054,
	510, 4054,
	511, 4054,
	512, 4054,
	513, 4054,
	514, 4054,
	515, 4054,
	516, 4054,
	517, 4054,
	518, 4054,
	519, 4054,
	520, 4054,
	521, 4054,
	522, 4054,
	523, 4054,
	524, 4054,
	525, 4054,
	526, 4054,
	528, 4054,
	529, 4054,
	530, 4054,
	531, 4054,
	532, 4054,
	533, 4054,
	534, 4054,
	536, 4054,
	537, 4054,
	538, 4054,
	539, 4054,
	540, 4054,
	541, 4054,
	542, 4054,
	543, 4054,
	544, 4054,
	545, 4054,
	546, 4054,
	547, 4054,
	548, 4054,
	549, 4054,
	550, 4054,
	551, 4054,
	552, 4054,
	553, 4054,
	554, 4054,
	556, 4054,
	558, 4054,
	559, 4054,
	560, 4054,
	561, 4054,
	562, 4054,
	563, 4054,
	564, 4054,
	565, 4054,
	566, 4054,
	567, 4054,
	568, 4054,
	569, 4054,
	570, 4054,
	571, 4054,
	572, 4054,
	573, 4054,
	574, 4054,
	575, 4054,
	576, 4054,
	577, 4054,
	578, 4054,
	579, 4054,
	580, 4054,
	582, 4054,
	583, 4054,
	584, 4054,
	585, 4054,
	586, 4054,
	588, 4054,
	589, 4054,
	590, 4054,
	591, 4054,
	592, 4054,
	593, 4054,
	594, 4054,
	595, 4054,
	596, 4054,
	597, 4054,
	599, 4054,
	600, 4054,
	601, 4054,
	602, 4054,
	603, 4054,
	605, 4054,
	607, 4054,
	608, 4054,
	609, 4054,
	610, 4054,
	611, 4054,
	612, 4054,
	613, 4054,
	614, 4054,
	616, 4054,
	617, 4054,
	618, 4054,
	619, 4054,
	620, 4054,
	621, 4054,
	622, 4054,
	625, 4054,
	626, 4054,
	627, 4054,
	628, 4054,
	629, 4054,
	630, 4054,
	631, 4054,
	632, 4054,
	633, 4054,
	634, 4054,
	635, 4054,
	637, 4054,
	640, 4054,
	641, 4054,
	642, 4054,
	643, 4054,
	644, 4054,
	645, 4054,
	647, 4054,
	648, 4054,
	649, 4054,
	650, 4054,
	651, 4054,
	652, 4054,
	653, 4054,
	654, 4054,
	655, 4054,
	656, 4054,
	657, 4054,
	658, 4054,
	659, 4054,
	660, 4054,
	661, 4054,
	662, 4054,
	667, 4054,
	668, 4054,
	669, 4054,
	670, 4054,
	671, 4054,
	672, 4054,
	673, 4054,
	675, 4054,
	686, 4054,
	687, 4054,
	688, 4054,
	689, 4054,
	690, 4054,
	691, 4054,
	693, 4054,
	694, 4054,
	695, 4054,
	696, 4054,
	697, 4054,
	698, 4054,
	699, 4054,
	700, 4054,
	701, 4054,
	704, 4054,
	707, 4054,
	708, 4054,
	710, 4054,
	711, 4054,
	-2, 0,
	-1, 2119,
	220, 3329,
	604, 3329,
	688, 3329,
	708, 3329,
	-2, 0,
	-1, 2161,
	196, 2183,
	209, 2183,
	321, 2183,
	398, 2183,
	-2, 2121,
	-1, 2264,
	174, 2142,
	196, 2142,
	209, 2142,
	285, 2142,
	321, 2142,
	398, 2142,
	409, 2142,
	623, 2142,
	-2, 2619,
	-1, 2311,
	706, 2440,
	-2, 2430,
	-1, 2328,
	707, 2797,
	-2, 0,
	-1, 2364,
	174, 2142,
	196, 2142,
	209, 2142,
	285, 2142,
	321, 2142,
	398, 2142,
	409, 2142,
	623, 2142,
	-2, 2294,
	-1, 2418,
	708, 2944,
	711, 2944,
	-2, 1526,
	-1, 2419,
	708, 2946,
	711, 2946,
	-2, 1527,
	-1, 2420,
	708, 2945,
	711, 2945,
	-2, 1528,
	-1, 2421,
	711, 2865,
	-2, 1529,
	-1, 2458,
	706, 2441,
	-2, 2429,
	-1, 2475,
	220, 3325,
	708, 3325,
	711, 3325,
	-2, 0,
	-1, 2533,
	1, 1075,
	709, 1075,
	712, 1075,
	-2, 2023,
	-1, 2603,
	1, 1356,
	705, 1356,
	707, 1356,
	709, 1356,
	712, 1356,
	-2, 0,
	-1, 2604,
	1, 1407,
	705, 1407,
	707, 1407,
	709, 1407,
	712, 1407,
	-2, 0,
	-1, 2605,
	1, 1423,
	705, 1423,
	707, 1423,
	709, 1423,
	712, 1423,
	-2, 0,
	-1, 2606,
	1, 1484,
	705, 1484,
	707, 1484,
	709, 1484,
	712, 1484,
	-2, 0,
	-1, 2656,
	1, 1387,
	705, 1387,
	707, 1387,
	709, 1387,
	712, 1387,
	-2, 0,
	-1, 2687,
	1, 1463,
	705, 1463,
	707, 1463,
	709, 1463,
	712, 1463,
	-2, 0,
	-1, 2891,
	259, 340,
	-2, 2952,
	-1, 2892,
	259, 341,
	-2, 413,
	-1, 3023,
	508, 2220,
	509, 2220,
	-2, 2474,
	-1, 3057,
	14, 0,
	15, 0,
	16, 0,
	686, 0,
	687, 0,
	688, 0,
	-2, 2494,
	-1, 3058,
	14, 0,
	15, 0,
	16, 0,
	686, 0,
	687, 0,
	688, 0,
	-2, 2495,
	-1, 3059,
	110, 0,
	300, 0,
	301, 0,
	690, 0,
	691, 0,
	-2, 2496,
	-1, 3060,
	110, 0,
	300, 0,
	301, 0,
	690, 0,
	691, 0,
	-2, 2497,
	-1, 3061,
	110, 0,
	300, 0,
	301, 0,
	690, 0,
	691, 0,
	-2, 2498,
	-1, 3062,
	110, 0,
	300, 0,
	301, 0,
	690, 0,
	691, 0,
	-2, 2499,
	-1, 3063,
	110, 0,
	300, 0,
	301, 0,
	690, 0,
	691, 0,
	-2, 2500,
	-1, 3064,
	14, 0,
	15, 0,
	16, 0,
	686, 0,
	687, 0,
	688, 0,
	-2, 2501,
	-1, 3077,
	14, 0,
	15, 0,
	16, 0,
	686, 0,
	687, 0,
	688, 0,
	-2, 2514,
	-1, 3078,
	14, 0,
	15, 0,
	16, 0,
	686, 0,
	687, 0,
	688, 0,
	-2, 2515,
	-1, 3079,
	14, 0,
	15, 0,
	16, 0,
	686, 0,
	687, 0,
	688, 0,
	-2, 2516,
	-1, 3083,
	17, 0,
	18, 0,
	19, 0,
	57, 0,
	255, 0,
	259, 0,
	320, 0,
	544, 0,
	673, 0,
	689, 0,
	-2, 2523,
	-1, 3089,
	17, 0,
	18, 0,
	19, 0,
	57, 0,
	255, 0,
	259, 0,
	320, 0,
	544, 0,
	673, 0,
	689, 0,
	-2, 2527,
	-1, 3091,
	17, 0,
	18, 0,
	19, 0,
	57, 0,
	255, 0,
	259, 0,
	320, 0,
	544, 0,
	673, 0,
	689, 0,
	-2, 2535,
	-1, 3092,
	17, 0,
	18, 0,
	19, 0,
	57, 0,
	255, 0,
	259, 0,
	320, 0,
	544, 0,
	673, 0,
	689, 0,
	-2, 2536,
	-1, 3093,
	17, 0,
	18, 0,
	19, 0,
	57, 0,
	255, 0,
	259, 0,
	320, 0,
	544, 0,
	673, 0,
	689, 0,
	-2, 2537,
	-1, 3094,
	17, 0,
	18, 0,
	19, 0,
	57, 0,
	255, 0,
	259, 0,
	320, 0,
	544, 0,
	673, 0,
	689, 0,
	-2, 2538,
	-1, 3266,
	5, 2956,
	220, 2808,
	706, 2953,
	-2, 2944,
	-1, 3267,
	220, 2809,
	-2, 3427,
	-1, 3268,
	220, 2810,
	-2, 3189,
	-1, 3269,
	220, 2811,
	-2, 3042,
	-1, 3270,
	220, 2812,
	-2, 3117,
	-1, 3271,
	220, 2813,
	-2, 3173,
	-1, 3272,
	220, 2814,
	-2, 3321,
	-1, 3273,
	220, 2815,
	-2, 2602,
	-1, 3316,
	29, 2783,
	36, 2783,
	557, 2783,
	-2, 3690,
	-1, 3317,
	29, 2785,
	36, 2785,
	557, 2785,
	-2, 3633,
	-1, 3320,
	1, 3461,
	2, 3461,
	174, 3461,
	196, 3461,
	209, 3461,
	220, 3461,
	240, 3461,
	243, 3461,
	285, 3461,
	321, 3461,
	398, 3461,
	403, 3461,
	409, 3461,
	496, 3461,
	623, 3461,
	664, 3461,
	665, 3461,
	666, 3461,
	705, 3461,
	707, 3461,
	709, 3461,
	711, 3461,
	712, 3461,
	-2, 2849,
	-1, 3924,
	1, 2295,
	2, 2295,
	122, 2295,
	174, 2295,
	196, 2295,
	209, 2295,
	221, 2295,
	240, 2295,
	243, 2295,
	278, 2295,
	285, 2295,
	297, 2295,
	317, 2295,
	321, 2295,
	362, 2295,
	398, 2295,
	403, 2295,
	409, 2295,
	496, 2295,
	502, 2295,
	623, 2295,
	638, 2295,
	664, 2295,
	665, 2295,
	666, 2295,
	676, 2295,
	705, 2295,
	707, 2295,
	709, 2295,
	711, 2295,
	712, 2295,
	-2, 2294,
	-1, 3939,
	706, 2924,
	-2, 2939,
	-1, 3951,
	1, 436,
	664, 436,
	712, 436,
	-2, 2169,
	-1, 3953,
	1, 436,
	712, 436,
	-2, 2169,
	-1, 4022,
	38, 2956,
	145, 2956,
	688, 2956,
	704, 2956,
	707, 2956,
	708, 2956,
	711, 2956,
	-2, 2953,
	-1, 4023,
	38, 2957,
	145, 2957,
	688, 2957,
	704, 2957,
	707, 2957,
	708, 2957,
	711, 2957,
	-2, 2954,
	-1, 4153,
	1, 1467,
	705, 1467,
	707, 1467,
	709, 1467,
	712, 1467,
	-2, 0,
	-1, 4385,
	1, 1855,
	489, 1807,
	536, 1807,
	679, 1807,
	685, 1807,
	705, 1855,
	707, 1855,
	709, 1855,
	712, 1855,
	-2, 2169,
	-1, 4406,
	287, 305,
	-2, 0,
	-1, 4407,
	4, 734,
	21, 734,
	22, 734,
	23, 734,
	24, 734,
	25, 734,
	26, 734,
	27, 734,
	28, 734,
	30, 734,
	31, 734,
	37, 734,
	41, 734,
	43, 734,
	45, 734,
	46, 734,
	47, 734,
	49, 734,
	50, 734,
	51, 734,
	52, 734,
	53, 734,
	54, 734,
	55, 734,
	56, 734,
	57, 734,
	58, 734,
	60, 734,
	61, 734,
	62, 734,
	63, 734,
	65, 734,
	66, 734,
	67, 734,
	68, 734,
	69, 734,
	70, 734,
	71, 734,
	72, 734,
	73, 734,
	74, 734,
	75, 734,
	79, 734,
	80, 734,
	81, 734,
	82, 734,
	84, 734,
	85, 734,
	86, 734,
	87, 734,
	88, 734,
	92, 734,
	93, 734,
	94, 734,
	95, 734,
	96, 734,
	97, 734,
	98, 734,
	99, 734,
	102, 734,
	103, 734,
	104, 734,
	105, 734,
	106, 734,
	107, 734,
	109, 734,
	111, 734,
	112, 734,
	113, 734,
	114, 734,
	115, 734,
	116, 734,
	117, 734,
	119, 734,
	120, 734,
	121, 734,
	123, 734,
	124, 734,
	125, 734,
	133, 734,
	134, 734,
	135, 734,
	136, 734,
	137, 734,
	139, 734,
	140, 734,
	141, 734,
	142, 734,
	143, 734,
	144, 734,
	146, 734,
	147, 734,
	148, 734,
	149, 734,
	151, 734,
	152, 734,
	153, 734,
	154, 734,
	156, 734,
	157, 734,
	158, 734,
	159, 734,
	162, 734,
	163, 734,
	164, 734,
	166, 734,
	167, 734,
	168, 734,
	169, 734,
	171, 734,
	172, 734,
	173, 734,
	175, 734,
	176, 734,
	177, 734,
	178, 734,
	179, 734,
	180, 734,
	181, 734,
	182, 734,
	183, 734,
	184, 734,
	185, 734,
	186, 734,
	187, 734,
	188, 734,
	189, 734,
	190, 734,
	191, 734,
	192, 734,
	193, 734,
	195, 734,
	201, 734,
	202, 734,
	203, 734,
	204, 734,
	208, 734,
	210, 734,
	211, 734,
	212, 734,
	213, 734,
	214, 734,
	215, 734,
	217, 734,
	218, 734,
	219, 734,
	222, 734,
	223, 734,
	224, 734,
	225, 734,
	226, 734,
	227, 734,
	228, 734,
	229, 734,
	230, 734,
	231, 734,
	232, 734,
	233, 734,
	234, 734,
	235, 734,
	237, 734,
	238, 734,
	239, 734,
	241, 734,
	242, 734,
	244, 734,
	245, 734,
	246, 734,
	247, 734,
	248, 734,
	249, 734,
	250, 734,
	251, 734,
	252, 734,
	253, 734,
	254, 734,
	256, 734,
	257, 734,
	258, 734,
	260, 734,
	261, 734,
	262, 734,
	263, 734,
	264, 734,
	265, 734,
	266, 734,
	270, 734,
	271, 734,
	272, 734,
	273, 734,
	275, 734,
	276, 734,
	277, 734,
	279, 734,
	280, 734,
	281, 734,
	282, 734,
	283, 734,
	284, 734,
	286, 734,
	288, 734,
	289, 734,
	290, 734,
	292, 734,
	294, 734,
	295, 734,
	296, 734,
	298, 734,
	302, 734,
	303, 734,
	304, 734,
	305, 734,
	306, 734,
	307, 734,
	308, 734,
	310, 734,
	311, 734,
	312, 734,
	314, 734,
	315, 734,
	316, 734,
	318, 734,
	319, 734,
	322, 734,
	323, 734,
	324, 734,
	325, 734,
	326, 734,
	327, 734,
	328, 734,
	331, 734,
	332, 734,
	333, 734,
	334, 734,
	336, 734,
	337, 734,
	338, 734,
	339, 734,
	340, 734,
	341, 734,
	342, 734,
	343, 734,
	344, 734,
	345, 734,
	346, 734,
	347, 734,
	348, 734,
	349, 734,
	350, 734,
	351, 734,
	352, 734,
	353, 734,
	354, 734,
	355, 734,
	356, 734,
	357, 734,
	358, 734,
	359, 734,
	361, 734,
	363, 734,
	364, 734,
	365, 734,
	366, 734,
	367, 734,
	368, 734,
	369, 734,
	370, 734,
	371, 734,
	372, 734,
	373, 734,
	374, 734,
	375, 734,
	376, 734,
	377, 734,
	378, 734,
	379, 734,
	380, 734,
	382, 734,
	383, 734,
	385, 734,
	386, 734,
	388, 734,
	389, 734,
	390, 734,
	391, 734,
	393, 734,
	394, 734,
	395, 734,
	396, 734,
	397, 734,
	400, 734,
	402, 734,
	405, 734,
	406, 734,
	407, 734,
	410, 734,
	411, 734,
	412, 734,
	414, 734,
	416, 734,
	417, 734,
	418, 734,
	419, 734,
	420, 734,
	421, 734,
	422, 734,
	423, 734,
	424, 734,
	425, 734,
	426, 734,
	427, 734,
	428, 734,
	429, 734,
	431, 734,
	432, 734,
	433, 734,
	434, 734,
	435, 734,
	436, 734,
	437, 734,
	438, 734,
	439, 734,
	440, 734,
	441, 734,
	442, 734,
	443, 734,
	444, 734,
	445, 734,
	447, 734,
	448, 734,
	449, 734,
	451, 734,
	452, 734,
	453, 734,
	454, 734,
	455, 734,
	456, 734,
	457, 734,
	458, 734,
	459, 734,
	460, 734,
	461, 734,
	462, 734,
	463, 734,
	464, 734,
	465, 734,
	466, 734,
	467, 734,
	469, 734,
	471, 734,
	472, 734,
	473, 734,
	479, 734,
	480, 734,
	481, 734,
	483, 734,
	484, 734,
	485, 734,
	486, 734,
	487, 734,
	488, 734,
	489, 734,
	490, 734,
	491, 734,
	492, 734,
	493, 734,
	494, 734,
	495, 734,
	497, 734,
	498, 734,
	499, 734,
	500, 734,
	501, 734,
	503, 734,
	504, 734,
	505, 734,
	506, 734,
	507, 734,
	508, 734,
	509, 734,
	511, 734,
	512, 734,
	513, 734,
	514, 734,
	515, 734,
	516, 734,
	517, 734,
	518, 734,
	519, 734,
	520, 734,
	521, 734,
	522, 734,
	523, 734,
	524, 734,
	525, 734,
	526, 734,
	528, 734,
	529, 734,
	530, 734,
	531, 734,
	532, 734,
	533, 734,
	534, 734,
	536, 734,
	537, 734,
	538, 734,
	539, 734,
	540, 734,
	541, 734,
	542, 734,
	543, 734,
	545, 734,
	546, 734,
	547, 734,
	548, 734,
	549, 734,
	550, 734,
	551, 734,
	552, 734,
	553, 734,
	554, 734,
	556, 734,
	558, 734,
	559, 734,
	560, 734,
	561, 734,
	562, 734,
	563, 734,
	564, 734,
	565, 734,
	566, 734,
	567, 734,
	568, 734,
	569, 734,
	570, 734,
	571, 734,
	572, 734,
	573, 734,
	574, 734,
	575, 734,
	576, 734,
	577, 734,
	578, 734,
	579, 734,
	580, 734,
	582, 734,
	583, 734,
	585, 734,
	586, 734,
	588, 734,
	589, 734,
	590, 734,
	591, 734,
	592, 734,
	593, 734,
	594, 734,
	595, 734,
	596, 734,
	597, 734,
	599, 734,
	600, 734,
	601, 734,
	602, 734,
	603, 734,
	605, 734,
	607, 734,
	608, 734,
	609, 734,
	610, 734,
	611, 734,
	612, 734,
	613, 734,
	614, 734,
	616, 734,
	617, 734,
	618, 734,
	619, 734,
	620, 734,
	621, 734,
	622, 734,
	625, 734,
	626, 734,
	627, 734,
	628, 734,
	629, 734,
	630, 734,
	631, 734,
	632, 734,
	633, 734,
	634, 734,
	635, 734,
	637, 734,
	640, 734,
	641, 734,
	642, 734,
	643, 734,
	644, 734,
	645, 734,
	647, 734,
	648, 734,
	649, 734,
	650, 734,
	651, 734,
	652, 734,
	653, 734,
	654, 734,
	655, 734,
	656, 734,
	657, 734,
	658, 734,
	659, 734,
	660, 734,
	661, 734,
	662, 734,
	667, 734,
	668, 734,
	669, 734,
	670, 734,
	671, 734,
	672, 734,
	-2, 0,
	-1, 4507,
	404, 2223,
	-2, 4043,
	-1, 4508,
	404, 2224,
	-2, 3304,
	-1, 4512,
	508, 2876,
	509, 2876,
	-2, 2600,
	-1, 4513,
	508, 2880,
	509, 2880,
	-2, 2601,
	-1, 4514,
	508, 2877,
	509, 2877,
	-2, 2600,
	-1, 4515,
	508, 2881,
	509, 2881,
	-2, 2601,
	-1, 4529,
	17, 0,
	18, 0,
	19, 0,
	57, 0,
	255, 0,
	259, 0,
	320, 0,
	544, 0,
	673, 0,
	689, 0,
	-2, 2525,
	-1, 4530,
	17, 0,
	18, 0,
	19, 0,
	57, 0,
	255, 0,
	259, 0,
	320, 0,
	544, 0,
	673, 0,
	689, 0,
	-2, 2529,
	-1, 4536,
	17, 0,
	18, 0,
	19, 0,
	57, 0,
	255, 0,
	259, 0,
	320, 0,
	544, 0,
	673, 0,
	689, 0,
	-2, 2531,
	-1, 4728,
	1, 436,
	712, 436,
	-2, 2169,
	-1, 4791,
	1, 1070,
	705, 1070,
	707, 1070,
	709, 1070,
	712, 1070,
	-2, 2023,
	-1, 5101,
	48, 2915,
	-2, 1585,
	-1, 5106,
	1, 1855,
	705, 1855,
	707, 1855,
	709, 1855,
	712, 1855,
	-2, 2169,
	-1, 5210,
	17, 0,
	18, 0,
	19, 0,
	57, 0,
	255, 0,
	259, 0,
	320, 0,
	544, 0,
	673, 0,
	689, 0,
	-2, 2533,
	-1, 5217,
	291, 0,
	293, 0,
	387, 0,
	-2, 2552,
	-1, 5282,
	14, 0,
	15, 0,
	16, 0,
	686, 0,
	687, 0,
	688, 0,
	-2, 2581,
	-1, 5283,
	14, 0,
	15, 0,
	16, 0,
	686, 0,
	687, 0,
	688, 0,
	-2, 2582,
	-1, 5284,
	14, 0,
	15, 0,
	16, 0,
	686, 0,
	687, 0,
	688, 0,
	-2, 2583,
	-1, 5288,
	14, 0,
	15, 0,
	16, 0,
	686, 0,
	687, 0,
	688, 0,
	-2, 2587,
	-1, 5289,
	14, 0,
	15, 0,
	16, 0,
	686, 0,
	687, 0,
	688, 0,
	-2, 2588,
	-1, 5290,
	14, 0,
	15, 0,
	16, 0,
	686, 0,
	687, 0,
	688, 0,
	-2, 2589,
	-1, 5340,
	706, 2925,
	-2, 2940,
	-1, 5648,
	708, 4163,
	-2, 2095,
	-1, 5695,
	291, 0,
	293, 0,
	387, 0,
	-2, 2553,
	-1, 5698,
	17, 0,
	18, 0,
	19, 0,
	57, 0,
	255, 0,
	259, 0,
	320, 0,
	544, 0,
	673, 0,
	689, 0,
	-2, 2556,
	-1, 5699,
	17, 0,
	18, 0,
	19, 0,
	57, 0,
	255, 0,
	259, 0,
	320, 0,
	544, 0,
	673, 0,
	689, 0,
	-2, 2558,
	-1, 5857,
	708, 2941,
	-2, 1895,
	-1, 6057,
	17, 0,
	18, 0,
	19, 0,
	57, 0,
	255, 0,
	259, 0,
	320, 0,
	544, 0,
	673, 0,
	689, 0,
	-2, 2557,
	-1, 6058,
	17, 0,
	18, 0,
	19, 0,
	57, 0,
	255, 0,
	259, 0,
	320, 0,
	544, 0,
	673, 0,
	689, 0,
	-2, 2559,
	-1, 6068,
	291, 0,
	-2, 2592,
	-1, 6318,
	291, 0,
	-2, 2593,
	-1, 6575,
	57, 0,
	255, 0,
	320, 0,
	544, 0,
	673, 0,
	689, 0,
	-2, 4006,
}

const sqlPrivate = 57344

const sqlLast = 184886

var sqlAct = [...]int16{
	338, 6810, 6502, 6803, 6788, 4665, 6758, 6746, 4464, 6716,
	6650, 6195, 6632, 6380, 6405, 6561, 6163, 1639, 6574, 6436,
	5015, 6533, 5001, 6589, 6729, 6453, 6542, 5425, 4324, 6501,
	6492, 5087, 6513, 6196, 6516, 6591, 6590, 2888, 6659, 6289,
	6267, 6244, 6372, 2733, 1696, 1529, 6252, 6273, 1220, 6,
	5615, 1222, 11, 1221, 10, 6587, 1519, 869, 4285, 3158,
	5961, 1223, 8, 5246, 1373, 219, 6245, 6226, 6322, 4,
	6018, 6573, 6013, 6005, 5969, 4015, 6168, 2564, 5202, 5913,
	4431, 6077, 3033, 4875, 6050, 1729, 5638, 5129, 2985, 908,
	5515, 6419, 1139, 4748, 5609, 5627, 5755, 5854, 4521, 1395,
	5834, 2433, 2983, 4191, 3941, 4878, 5088, 2340, 5853, 1624,
	2170, 3106, 4666, 6294, 5120, 5111, 5607, 5071, 5591, 5963,
	2435, 5570, 5331, 1139, 5568, 5076, 4881, 3044, 2934, 4302,
	2742, 1538, 2370, 5156, 4451, 5158, 3034, 3035, 1365, 2510,
	4419, 5078, 4862, 4446, 5075, 5020, 5067, 6073, 4812, 5016,
	4864, 4863, 4814, 865, 920, 1866, 1631, 5536, 3966, 4730,
	5042, 5350, 4714, 2946, 2590, 4688, 1430, 5041, 4325, 4680,
	4479, 4484, 4465, 987, 4647, 2135, 2137, 4448, 2981, 219,
	1227, 2877, 4456, 2908, 4671, 2848, 5057, 4315, 4669, 4392,
	6633, 1679, 1025, 4902, 5048, 4104, 5424, 1750, 4075, 2875,
	4077, 4725, 5730, 5068, 2414, 3925, 4705, 2754, 5308, 2337,
	2006, 2795, 3918, 3041, 4646, 2314, 2391, 3917, 3167, 1957,
	6323, 3180, 2242, 3119, 4505, 4478, 4352, 1215, 3920, 2073,
	5019, 5065, 2826, 983, 2846, 2931, 1461, 1134, 1425, 1634,
	2822, 2818, 2721, 2842, 4013, 2639, 131, 2516, 332, 2725,
	1600, 1860, 2508, 3898, 2005, 4014, 331, 4190, 2341, 3295,
	3973, 1520, 3171, 3103, 2930, 2360, 2563, 1840, 3005, 2010,
	1603, 3022, 1610, 2560, 3003, 2112, 4458, 1698, 4432, 1731,
	2103, 1614, 2076, 1694, 2069, 2851, 4215, 2876, 895, 958,
	2357, 1625, 918, 1031, 6804, 4216, 5079, 135, 869, 6454,
	2672, 2553, 1140, 2638, 5968, 1666, 3967, 1606, 4176, 1577,
	1562, 1574, 2306, 1376, 1636, 121, 3174, 2863, 3310, 3907,
	1523, 3165, 1502, 2350, 3228, 1380, 2256, 231, 968, 1003,
	3262, 2171, 232, 1140, 2172, 979, 6274, 2484, 1193, 2110,
	1147, 3004, 2034, 2614, 3006, 6651, 1141, 940, 1150, 2913,
	6717, 2618, 1789, 1691, 1772, 913, 1408, 1525, 53, 50,
	1500, 39, 52, 2177, 41, 6024, 37, 1427, 1859, 1782,
	1854, 1147, 1969, 909, 1054, 922, 4553, 1141, 1429, 1150,
	1129, 5322, 2009, 2486, 5323, 5352, 2486, 4667, 2486, 2486,
	2486, 2486, 6699, 6829, 6796, 4749, 1194, 3897, 3897, 1143,
	6795, 6776, 6774, 6585, 3897, 5547, 5008, 996, 999, 6757,
	6755, 6682, 6634, 6167, 6167, 2896, 6635, 6615, 6584, 6583,
	6532, 3897, 2187, 2188, 861, 2221, 2222, 2223, 2232, 2233,
	2234, 6129, 6613, 6610, 5138, 866, 3897, 6611, 6607, 1617,
	2525, 6126, 6608, 6571, 6125, 2225, 2218, 2896, 5353, 6124,
	2187, 2188, 5059, 2219, 6570, 6569, 2190, 6559, 2896, 4489,
	6557, 6167, 6548, 6123, 6167, 6546, 6167, 956, 2238, 6167,
	5783, 6511, 6473, 6459, 2218, 6167, 3985, 2896, 5354, 6120,
	1370, 5351, 1517, 1029, 2190, 6119, 6118, 6117, 6435, 2244,
	1125, 5362, 2896, 6433, 5998, 6431, 5139, 6167, 5360, 6167,
	2189, 6403, 4766, 2935, 6349, 5947, 1172, 1779, 3897, 6348,
	1216, 2209, 6320, 3897, 4105, 2525, 3985, 2244, 1503, 1503,
	6304, 2206, 6269, 1358, 5665, 6261, 5434, 6186, 2189, 6167,
	6185, 2896, 1675, 6174, 2896, 5361, 2147, 2896, 90, 6173,
	1219, 1218, 6166, 6167, 5357, 6134, 6167, 1347, 4424, 5412,
	6092, 6084, 1346, 6059, 6093, 2896, 4759, 3985, 6033, 91,
	114, 3944, 4489, 3944, 5999, 2128, 4740, 2982, 5008, 5908,
	5358, 5881, 5810, 3897, 5745, 3897, 4805, 56, 5746, 96,
	5697, 5656, 2070, 5650, 3985, 5151, 2522, 5151, 1675, 4007,
	3312, 5588, 2522, 2522, 2522, 5589, 1536, 1569, 1364, 5465,
	5433, 58, 5337, 5466, 5434, 6391, 5338, 4562, 2212, 2213,
	2214, 2215, 5335, 4563, 1559, 5315, 5336, 4867, 2195, 3897,
	5230, 5150, 3177, 5312, 2896, 5151, 106, 5126, 4769, 4723,
	4664, 5127, 4770, 3897, 3897, 4662, 4658, 4657, 4608, 4663,
	3897, 3897, 4609, 4606, 4595, 4593, 2195, 4607, 4596, 3897,
	4564, 1504, 3980, 1506, 3897, 1507, 3132, 3133, 3134, 3151,
	3152, 3153, 5008, 1389, 2525, 1531, 2229, 4488, 4617, 4618,
	2239, 4489, 1224, 2522, 4475, 5547, 866, 3154, 2970, 2217,
	2220, 4474, 4520, 4049, 3155, 2970, 59, 3897, 130, 3984,
	3897, 6474, 6415, 3985, 114, 127, 2525, 2525, 6324, 3964,
	6315, 3955, 2235, 3897, 2236, 2896, 1406, 2217, 2220, 3896,
	6314, 2204, 2205, 3897, 1783, 2969, 6307, 5355, 295, 2970,
	2244, 1560, 4489, 5312, 3311, 5356, 6009, 5947, 2522, 5882,
	5751, 2227, 3178, 5665, 5631, 5590, 5582, 5550, 4292, 4175,
	2747, 2896, 3144, 1783, 5412, 2539, 2210, 2895, 4060, 4424,
	4997, 4125, 3140, 2514, 4805, 4617, 4618, 4632, 2485, 4312,
	4167, 4069, 3974, 862, 2335, 2501, 115, 1560, 2003, 5483,
	5205, 4818, 1783, 2358, 2210, 2835, 5140, 3936, 297, 1752,
	3935, 3934, 5359, 3933, 3932, 2401, 2400, 2029, 295, 2399,
	4617, 4618, 2398, 4635, 4636, 4637, 5141, 5346, 2237, 1508,
	2487, 1505, 1357, 2487, 1356, 2487, 2487, 2487, 2487, 1355,
	1354, 1353, 1352, 5693, 90, 1351, 1350, 1349, 1345, 2226,
	2023, 4139, 2009, 1344, 1343, 3179, 1342, 1341, 3176, 1340,
	2241, 1339, 1338, 1337, 296, 91, 1336, 1335, 1334, 3145,
	3146, 3147, 3148, 1333, 1332, 2017, 1331, 1330, 297, 3139,
	1329, 1328, 1327, 56, 1326, 96, 1325, 289, 2241, 1324,
	1323, 6025, 1322, 3897, 4623, 3942, 290, 1321, 1320, 1319,
	1318, 1317, 1316, 1315, 6600, 1314, 4424, 58, 1301, 4632,
	1300, 1299, 1298, 1297, 1296, 1295, 1294, 1293, 1292, 1291,
	1290, 1289, 5706, 2216, 2522, 4617, 4618, 233, 1288, 1287,
	5378, 295, 106, 1286, 296, 1285, 1284, 3208, 3206, 2522,
	2522, 3311, 1283, 1282, 1281, 1280, 1279, 1225, 1278, 1277,
	5152, 2211, 2522, 1276, 1275, 1274, 1273, 1272, 2646, 1271,
	3192, 1270, 2522, 4824, 119, 2522, 1269, 1268, 4183, 1267,
	2522, 1266, 3149, 3150, 1265, 1264, 1263, 1262, 1224, 2211,
	1261, 4623, 6599, 1260, 2522, 2230, 1249, 1461, 219, 1641,
	1461, 297, 59, 1248, 130, 1247, 2525, 233, 1242, 1241,
	114, 127, 1234, 1428, 1233, 1232, 1214, 3142, 1213, 1212,
	1211, 1168, 4617, 4618, 1167, 3311, 4623, 5138, 1166, 1461,
	1461, 1461, 4633, 1560, 1165, 2243, 1164, 229, 1163, 122,
	1561, 1154, 126, 1153, 862, 1152, 4424, 3181, 1151, 2151,
	4461, 1109, 994, 993, 1571, 992, 974, 296, 326, 2525,
	6310, 325, 4034, 2243, 2522, 2514, 2485, 2998, 324, 323,
	322, 5349, 295, 321, 4716, 295, 2028, 1734, 320, 319,
	289, 318, 115, 317, 1226, 4183, 316, 2522, 315, 290,
	314, 1225, 1783, 313, 312, 311, 1628, 310, 309, 1461,
	308, 295, 1461, 307, 306, 305, 1683, 1684, 1685, 2022,
	4639, 304, 303, 2132, 302, 1647, 2241, 301, 1372, 4633,
	233, 3311, 300, 4575, 2228, 1670, 2187, 2188, 1560, 1461,
	295, 4623, 297, 299, 298, 297, 4558, 2201, 2202, 2208,
	2231, 2207, 2203, 6027, 2200, 2198, 2199, 2191, 2192, 2193,
	2194, 2196, 2197, 1869, 4633, 4555, 4401, 4441, 6495, 1461,
	2190, 297, 1734, 4142, 182, 1461, 1461, 4141, 4109, 5471,
	1641, 3989, 2200, 2198, 2199, 2191, 2192, 2193, 2194, 2196,
	2197, 3950, 3940, 235, 2361, 3190, 2317, 1994, 296, 2719,
	297, 296, 3143, 2316, 3175, 2566, 2524, 1461, 2317, 1461,
	2382, 1461, 2283, 2241, 2189, 2316, 2012, 4634, 1781, 1855,
	1734, 1778, 1687, 1461, 289, 1537, 2184, 296, 4623, 1534,
	290, 4617, 4618, 290, 2320, 2910, 6596, 230, 1628, 3994,
	6158, 6572, 6556, 234, 6448, 1641, 2315, 2274, 2241, 6440,
	289, 6327, 6089, 6072, 6031, 6008, 296, 1670, 5728, 290,
	119, 233, 2078, 5722, 1217, 1662, 5721, 5720, 1734, 4633,
	6011, 5713, 1609, 1613, 5712, 1628, 2243, 5710, 1734, 289,
	1979, 5705, 5630, 5603, 1664, 5587, 4181, 1461, 290, 1461,
	233, 2281, 5585, 1579, 1734, 5581, 5379, 5345, 5344, 5303,
	5302, 5301, 1545, 1461, 4634, 1461, 1544, 5262, 1542, 1974,
	1541, 1798, 1621, 5226, 5221, 4718, 4712, 2106, 4654, 233,
	2949, 1532, 2038, 229, 4645, 122, 2007, 4616, 126, 4613,
	4612, 4610, 2195, 219, 219, 4605, 4617, 4618, 4604, 4634,
	4603, 4600, 1701, 1702, 4599, 4598, 4594, 4574, 4556, 4554,
	4476, 3948, 3924, 2241, 3163, 2184, 4633, 2083, 2086, 4617,
	4618, 295, 295, 1516, 1656, 2397, 4180, 2274, 2901, 2899,
	1226, 2183, 2518, 6819, 6737, 6736, 1713, 1225, 3129, 3130,
	3131, 3156, 3141, 3135, 1690, 3137, 3138, 3136, 3123, 3124,
	3125, 3126, 3127, 3128, 6696, 295, 5481, 6649, 4754, 6647,
	4628, 4626, 4627, 4619, 4620, 4621, 4622, 4624, 4625, 1539,
	1693, 5248, 6503, 2104, 1703, 1704, 5604, 6417, 1992, 2276,
	295, 297, 297, 1862, 6393, 1954, 1959, 4623, 6388, 6387,
	1850, 6386, 1461, 1461, 1461, 1461, 1461, 1461, 1461, 1461,
	2241, 1147, 295, 2275, 4634, 2273, 6366, 6365, 6363, 1150,
	182, 6326, 6325, 2004, 4443, 297, 6026, 6309, 1670, 6302,
	3109, 6287, 6284, 1743, 6282, 6265, 1461, 1989, 6263, 235,
	6182, 6153, 1461, 4180, 6070, 1962, 1964, 296, 296, 5991,
	297, 5987, 2071, 5985, 5983, 5948, 5820, 2152, 4626, 4627,
	4619, 4620, 4621, 4622, 4624, 4625, 2115, 2117, 5819, 5727,
	289, 289, 297, 295, 5666, 5594, 5469, 5468, 5449, 290,
	290, 296, 5448, 230, 1370, 4629, 4630, 4631, 1856, 234,
	5446, 4180, 4628, 4626, 4627, 4619, 4620, 4621, 4622, 4624,
	4625, 4634, 4623, 5413, 289, 2162, 296, 4706, 2338, 5318,
	233, 233, 5305, 290, 5216, 2261, 5153, 2113, 5110, 5100,
	4977, 4913, 4880, 4806, 2260, 4623, 4579, 2297, 296, 289,
	1461, 1461, 1461, 297, 4578, 3115, 1461, 4573, 290, 4545,
	6330, 4709, 4418, 869, 233, 869, 4416, 2016, 4415, 4208,
	2323, 289, 2322, 2321, 295, 1869, 1461, 2318, 1869, 5604,
	290, 2312, 2307, 2304, 3938, 3931, 2263, 3895, 3219, 233,
	3188, 2959, 2490, 2339, 2332, 2331, 1461, 1966, 2330, 2420,
	1641, 2329, 2328, 2327, 2158, 2326, 2185, 2446, 2420, 296,
	1641, 4460, 2325, 1641, 1734, 2347, 2324, 4628, 4626, 4627,
	4619, 4620, 4621, 4622, 4624, 4625, 2313, 2302, 2301, 2241,
	6329, 219, 289, 2300, 297, 2385, 2299, 2298, 295, 2297,
	295, 290, 2296, 295, 2295, 2294, 2293, 2127, 2292, 2291,
	2290, 6121, 3207, 3205, 2289, 2413, 2288, 2287, 2344, 2345,
	1630, 2276, 2262, 2146, 956, 1029, 2259, 2254, 1655, 1566,
	1461, 1555, 233, 4633, 6328, 3191, 1535, 5997, 2272, 5789,
	2089, 5701, 5377, 5334, 5321, 4561, 2109, 3987, 3949, 1641,
	296, 5791, 4442, 2163, 3929, 2747, 1461, 2408, 297, 5744,
	297, 5376, 1370, 297, 2275, 4752, 4627, 4619, 4620, 4621,
	4622, 4624, 4625, 289, 2159, 5144, 2257, 2378, 4617, 4618,
	1461, 5884, 290, 1680, 1682, 4286, 2187, 2188, 1869, 6728,
	2407, 6398, 6389, 1697, 2559, 5583, 2319, 6311, 6217, 6045,
	6030, 1347, 5935, 5927, 5926, 5924, 1346, 2167, 5923, 2367,
	2166, 5922, 2161, 233, 296, 2531, 296, 2241, 1697, 296,
	2190, 1734, 5921, 2557, 1734, 1734, 1734, 1734, 1734, 5920,
	1503, 2180, 2181, 2443, 5883, 2745, 5769, 289, 5675, 289,
	4617, 4618, 289, 4635, 4636, 4637, 290, 5674, 290, 5673,
	5672, 290, 1630, 5671, 1697, 6012, 2187, 2188, 5670, 1649,
	2420, 1675, 1670, 5692, 2189, 2109, 5669, 5668, 1681, 2421,
	5667, 1370, 2471, 2193, 2194, 2196, 2197, 233, 2421, 233,
	5548, 1697, 233, 1697, 2308, 2309, 1461, 2403, 2405, 1630,
	2190, 2368, 2808, 2551, 2550, 5435, 5416, 1697, 2559, 5415,
	5414, 5326, 5325, 5324, 1697, 5155, 5154, 1147, 4634, 2396,
	4916, 2359, 5010, 2423, 5009, 1150, 1147, 5006, 4811, 4810,
	4809, 4808, 2423, 5203, 1150, 1695, 6592, 2530, 6678, 4632,
	6676, 6588, 1461, 2361, 2189, 4967, 1630, 1851, 1853, 4350,
	1676, 1858, 4234, 5610, 48, 2365, 2317, 2297, 2297, 5506,
	3189, 2297, 1461, 2316, 1742, 4602, 2502, 4601, 4527, 4219,
	2545, 1678, 2336, 5464, 5002, 2736, 4619, 4620, 4621, 4622,
	4624, 4625, 5610, 5090, 2429, 5089, 5612, 5596, 1312, 5401,
	2363, 5402, 2195, 4882, 2477, 2377, 2375, 2480, 2372, 2376,
	1531, 2373, 1531, 2371, 6157, 1841, 6358, 2586, 6359, 2334,
	2878, 866, 4667, 866, 5608, 5612, 1799, 2642, 2600, 2589,
	2285, 2533, 2597, 1751, 1675, 6406, 2430, 2491, 6534, 2935,
	6268, 6006, 4485, 5049, 6359, 5931, 2591, 2879, 2406, 3177,
	4999, 4667, 5580, 2529, 2554, 5512, 4623, 2950, 2499, 1313,
	5503, 6074, 2282, 1675, 2504, 5474, 2108, 1752, 2506, 4998,
	5195, 1628, 1842, 4789, 2673, 2511, 4094, 2979, 2912, 2513,
	2671, 1711, 4567, 2527, 2624, 4667, 5250, 3172, 6747, 2521,
	2421, 6780, 2827, 4621, 4622, 4624, 4625, 2832, 4217, 6177,
	6597, 4299, 2807, 2714, 1672, 963, 2402, 6149, 2806, 963,
	2311, 4288, 2333, 5107, 4619, 4620, 4621, 4622, 4624, 4625,
	2814, 2942, 1734, 1734, 2082, 1999, 1651, 1503, 1147, 2599,
	1605, 2833, 4309, 1869, 2423, 6822, 1150, 1515, 6612, 6609,
	4639, 2571, 5900, 2572, 5896, 5134, 5440, 6381, 6014, 2534,
	2852, 6510, 2746, 2579, 2580, 2552, 4885, 4306, 1734, 3178,
	4304, 1717, 5459, 2676, 2140, 4753, 2817, 964, 2573, 2574,
	5125, 964, 5033, 6680, 6679, 2577, 2578, 6180, 6176, 2817,
	6155, 6598, 5196, 2186, 4633, 2108, 2743, 1682, 2817, 6210,
	4793, 1734, 4981, 6720, 1677, 2556, 1375, 5870, 5525, 2266,
	3013, 2044, 2052, 2271, 4050, 4817, 2662, 2001, 6812, 4179,
	1310, 1308, 1306, 5868, 2241, 1100, 6214, 2803, 2603, 2812,
	4394, 6104, 6399, 5865, 6656, 2823, 4177, 1108, 5004, 2739,
	2394, 1105, 2625, 1839, 2844, 6203, 2555, 1734, 6188, 1734,
	5940, 1734, 2660, 1207, 1797, 5939, 2546, 5523, 5522, 5514,
	5489, 1796, 3179, 5488, 5486, 3176, 5485, 4107, 1673, 1734,
	1734, 5473, 5432, 2717, 2656, 3011, 5549, 2744, 2241, 4179,
	1674, 1681, 5431, 1734, 1767, 5932, 2962, 5039, 2962, 5003,
	5524, 5038, 5014, 1374, 4969, 4739, 4177, 3090, 4572, 2853,
	1368, 4571, 4570, 4817, 1461, 1665, 1461, 1676, 2889, 2893,
	2740, 4569, 4531, 1461, 4348, 4347, 1461, 4193, 2446, 2446,
	1869, 4795, 1461, 1461, 1461, 1461, 1461, 1461, 1461, 1461,
	1461, 1461, 1461, 1461, 1461, 1461, 1461, 1461, 1461, 1461,
	1461, 1461, 1461, 1461, 1461, 1461, 1461, 1461, 1461, 1461,
	1461, 1461, 1461, 1461, 1461, 1461, 1461, 1461, 1461, 862,
	1461, 862, 1461, 1461, 1461, 1461, 2753, 2741, 5584, 4634,
	6749, 6748, 6750, 6178, 2829, 2828, 2830, 2715, 1715, 2378,
	2974, 6150, 1147, 1208, 1795, 1682, 4965, 4329, 1461, 4311,
	1150, 2883, 1461, 1461, 2894, 2815, 2800, 2775, 5058, 4298,
	1461, 2956, 4290, 4279, 1461, 4882, 1461, 1461, 2943, 5443,
	4278, 1367, 3015, 3046, 1869, 2881, 2882, 2867, 2867, 4915,
	1461, 1461, 1461, 1461, 3224, 2939, 1461, 1461, 1461, 1461,
	1461, 1461, 1461, 1461, 2977, 2866, 2866, 2879, 2869, 5000,
	2045, 966, 2799, 3988, 3181, 2987, 2591, 2796, 6721, 3012,
	4196, 1672, 3159, 1676, 2816, 1461, 1461, 1461, 1461, 1461,
	1461, 1461, 1461, 1461, 2965, 1461, 3169, 2816, 3002, 1681,
	1461, 2813, 5864, 4266, 2885, 4106, 2816, 2821, 966, 6657,
	3223, 4265, 869, 6231, 2443, 2443, 5849, 1991, 4263, 1869,
	4021, 5866, 3216, 1370, 4252, 1370, 1675, 869, 4625, 2953,
	2047, 2191, 2192, 2193, 2194, 2196, 2197, 5885, 3040, 4452,
	2906, 2561, 2562, 1869, 3265, 3265, 3279, 1461, 1461, 1461,
	3298, 3299, 3301, 2688, 2918, 2916, 2113, 2967, 2113, 3309,
	5842, 6243, 4250, 3013, 2002, 1369, 1699, 1700, 3010, 4245,
	4244, 1677, 4240, 4224, 4223, 4629, 4630, 4631, 2992, 4184,
	2945, 3965, 4628, 4626, 4627, 4619, 4620, 4621, 4622, 4624,
	4625, 3956, 1641, 2431, 1628, 1852, 2960, 2160, 2963, 4238,
	1744, 2056, 1699, 1700, 1776, 1303, 2197, 3946, 3947, 3027,
	5818, 2933, 3039, 3026, 1776, 1656, 2971, 4966, 2972, 1591,
	3172, 3175, 5843, 1205, 6723, 1204, 4802, 1672, 3011, 1699,
	1700, 1699, 1700, 2797, 2584, 1673, 2048, 5546, 2802, 4813,
	1641, 3982, 2095, 3121, 2094, 2561, 2562, 1674, 3912, 2999,
	2702, 4023, 1699, 1700, 2395, 2997, 1532, 219, 1532, 3182,
	2701, 3023, 3014, 3007, 3001, 1347, 1370, 3000, 1347, 1347,
	3030, 1857, 1423, 3031, 3032, 1630, 1370, 6213, 5801, 1461,
	1370, 6098, 6103, 2604, 3218, 2064, 1641, 1641, 4221, 3220,
	3221, 6679, 3222, 1773, 2154, 3225, 3904, 3226, 3227, 1848,
	2093, 2854, 2092, 4044, 4057, 2810, 3105, 4277, 4000, 4267,
	4195, 2367, 2747, 5059, 2698, 3105, 1794, 1677, 6790, 1842,
	5862, 3009, 2804, 4269, 1503, 2611, 4003, 1869, 5826, 4308,
	1752, 2641, 1842, 3968, 965, 1775, 6095, 1752, 4729, 6724,
	3954, 5403, 3117, 3157, 4816, 1775, 1813, 4070, 4207, 1734,
	1734, 4457, 6374, 3952, 4815, 2993, 4792, 3928, 2605, 4134,
	3971, 1210, 5470, 1209, 3903, 2669, 1819, 4307, 1774, 4157,
	4807, 965, 2798, 1370, 5867, 4542, 2349, 4271, 1628, 1366,
	1641, 1673, 1641, 3911, 4037, 3916, 3303, 5012, 3922, 3923,
	3997, 3996, 4305, 1674, 2699, 4303, 4503, 6232, 2855, 6096,
	1739, 1670, 3012, 1654, 4020, 4518, 1461, 5825, 3261, 4540,
	3290, 6230, 1461, 3282, 3990, 4268, 3274, 2443, 3305, 6228,
	2653, 6411, 4178, 3893, 3894, 1090, 2608, 2602, 2155, 4270,
	6732, 1147, 4816, 1147, 3909, 3910, 3905, 1716, 2319, 1150,
	4042, 1150, 4815, 2165, 6594, 3975, 6761, 2365, 2655, 6722,
	1362, 2661, 1734, 4047, 4012, 3976, 1106, 1106, 1305, 2612,
	4316, 5838, 4206, 1675, 2964, 4830, 6726, 967, 3281, 5839,
	4829, 5532, 4053, 1106, 4136, 2353, 1461, 1106, 6227, 1531,
	5844, 2687, 4048, 5530, 1147, 2684, 2077, 2659, 4194, 6239,
	866, 3010, 1150, 5535, 1531, 6376, 5099, 4055, 1543, 3978,
	3979, 3113, 5236, 4160, 967, 866, 3981, 5802, 3111, 6229,
	5545, 4027, 4102, 4333, 4346, 1023, 2446, 4089, 4090, 4091,
	4092, 3993, 4041, 5841, 4256, 6805, 4074, 5817, 2308, 2309,
	1817, 2870, 2356, 3181, 1258, 6347, 1609, 4001, 1613, 4112,
	4032, 5532, 4056, 4617, 4618, 5845, 4635, 4636, 4637, 4005,
	2075, 2351, 2685, 5530, 4006, 4008, 4276, 1091, 6346, 5860,
	4009, 4517, 5560, 5535, 4024, 1646, 5220, 4099, 4054, 4933,
	4039, 2354, 6345, 4031, 4537, 1628, 5181, 5182, 5863, 4331,
	5534, 5456, 4038, 2686, 4117, 4924, 4119, 5938, 4121, 3972,
	4123, 4124, 2557, 2557, 5487, 5237, 1869, 5484, 4162, 4163,
	4029, 4045, 4851, 1791, 4051, 4220, 4033, 4538, 1734, 1675,
	1549, 4543, 4185, 2933, 3999, 5385, 2352, 5239, 5533, 4617,
	4618, 4140, 4635, 4636, 4637, 4046, 2794, 1551, 5561, 5384,
	4852, 2697, 4632, 5383, 4389, 4934, 5382, 2809, 5371, 3087,
	5370, 1641, 5219, 5800, 5369, 6595, 5181, 5182, 5368, 1021,
	5534, 4925, 5045, 2055, 2811, 1546, 4159, 4682, 4385, 5037,
	1461, 1780, 1461, 4065, 4066, 4108, 3969, 4067, 4068, 4963,
	1461, 1590, 4819, 3998, 4182, 4310, 4264, 3114, 4251, 4243,
	5559, 4222, 2443, 4798, 2645, 2644, 6531, 4932, 5533, 2706,
	4116, 4156, 2805, 2266, 4110, 2793, 4111, 2808, 6725, 1641,
	4390, 5840, 1714, 4923, 1090, 4127, 2768, 1552, 4632, 2716,
	6708, 2700, 4036, 6707, 4132, 4850, 4430, 2708, 2747, 3963,
	5454, 4226, 6730, 4064, 4427, 3970, 4510, 4511, 6763, 1362,
	4166, 1734, 1096, 1095, 4301, 4148, 4149, 6469, 907, 4623,
	5013, 1553, 6664, 1734, 2801, 1734, 4241, 4853, 5430, 5861,
	1734, 1630, 4388, 5429, 5850, 5851, 2355, 5043, 1630, 3101,
	4211, 2791, 2015, 5046, 2021, 902, 2027, 4173, 6593, 1628,
	4821, 6246, 2769, 4284, 4225, 2106, 2610, 3181, 5957, 1461,
	5018, 5017, 1092, 4188, 6241, 1461, 1461, 2810, 4242, 1550,
	1304, 5569, 4317, 3099, 219, 4274, 4198, 4201, 2745, 3181,
	4280, 1461, 2705, 4232, 4233, 4235, 4236, 4237, 4239, 5131,
	6375, 4101, 4145, 2792, 5531, 4623, 4337, 2750, 862, 6625,
	4158, 5132, 1814, 4639, 2767, 4800, 2583, 4118, 4396, 4120,
	4539, 4122, 4398, 862, 2707, 4247, 1091, 3085, 4439, 2486,
	4541, 3088, 2126, 3104, 2131, 1461, 1461, 6731, 4349, 4260,
	4261, 1461, 4533, 4386, 4387, 5062, 4273, 1741, 2145, 1250,
	2150, 4272, 4282, 4336, 1461, 1461, 4434, 4633, 4296, 4289,
	1461, 1461, 4335, 6097, 4063, 4334, 1461, 4322, 4323, 2156,
	4494, 4495, 2081, 2751, 5531, 4328, 1251, 2807, 2874, 1846,
	4959, 6733, 4681, 2806, 6806, 6382, 4321, 4961, 1022, 4639,
	4869, 4165, 3084, 4728, 1147, 3953, 5018, 5017, 6487, 1812,
	4399, 4169, 1150, 6141, 5131, 336, 4477, 3951, 2836, 4486,
	4487, 4960, 1461, 2843, 1093, 4492, 4490, 1818, 2654, 1461,
	2867, 4958, 4496, 1461, 4497, 2749, 4108, 1738, 1740, 4957,
	1653, 2755, 1630, 4633, 4954, 5537, 90, 4287, 2866, 1461,
	4345, 2241, 1235, 6467, 2873, 4470, 1094, 4472, 3095, 4422,
	4534, 4411, 1024, 4147, 2607, 2601, 1020, 91, 5004, 2077,
	2759, 3915, 6563, 4794, 6564, 4423, 1815, 1259, 4483, 1240,
	2164, 4559, 4468, 3096, 4482, 56, 4897, 96, 4438, 1811,
	962, 3097, 2187, 2188, 4480, 3102, 2000, 4450, 2827, 4454,
	4463, 2868, 1753, 1564, 6468, 4903, 4473, 4509, 2811, 58,
	2113, 1096, 1095, 2305, 4750, 5537, 2218, 2861, 2868, 4471,
	4498, 1098, 5044, 2219, 4557, 2809, 2190, 2241, 6642, 3112,
	4500, 5028, 4849, 6663, 106, 4499, 2756, 2833, 1547, 5979,
	6643, 1097, 4634, 4332, 1461, 1461, 1461, 1461, 2871, 4896,
	4504, 2353, 3027, 1461, 1461, 1461, 3026, 2837, 1461, 2244,
	1613, 1092, 4519, 2833, 4905, 2871, 5426, 4526, 6428, 2737,
	2189, 5777, 1461, 869, 6062, 1461, 1461, 1461, 1461, 5778,
	1224, 2209, 1099, 1869, 3162, 1532, 6689, 6759, 6521, 5902,
	4179, 2206, 5455, 1816, 59, 2746, 130, 928, 2825, 2253,
	1532, 3908, 114, 127, 4506, 4577, 1548, 4199, 2356, 4330,
	4775, 4532, 3298, 3298, 3298, 6764, 1370, 4656, 4634, 2704,
	3921, 4283, 3944, 1369, 6622, 5252, 3086, 3906, 90, 2824,
	5994, 2374, 5849, 6420, 5683, 4962, 5684, 4904, 4870, 1630,
	2777, 5943, 5198, 5788, 5776, 5539, 5372, 2354, 6421, 91,
	1570, 1394, 1252, 1253, 5691, 2864, 6053, 1568, 4617, 4618,
	4501, 4635, 4636, 4637, 6437, 6626, 2760, 56, 903, 96,
	2187, 2188, 2819, 6528, 115, 1758, 5842, 6452, 2212, 2213,
	2214, 2215, 5835, 6286, 6240, 6422, 2787, 5942, 2195, 3282,
	3282, 58, 4560, 4566, 2218, 5941, 4597, 5636, 2777, 5116,
	4943, 5833, 2726, 1093, 2190, 4941, 4764, 2727, 4254, 3962,
	2744, 5837, 6247, 2929, 3098, 2346, 106, 4338, 4629, 4630,
	4631, 1567, 1558, 894, 3100, 4628, 4626, 4627, 4619, 4620,
	4621, 4622, 4624, 4625, 6220, 1094, 4078, 2244, 5843, 4799,
	2582, 2761, 2762, 2820, 2787, 1236, 1237, 4632, 2189, 2217,
	2220, 5602, 2175, 2668, 2174, 2174, 2487, 5725, 6409, 2783,
	5578, 5427, 1224, 6424, 1360, 904, 1090, 6662, 2169, 2757,
	2829, 2828, 2830, 5292, 3029, 2748, 59, 2547, 130, 4079,
	6175, 2204, 2205, 2349, 114, 127, 6769, 6113, 5836, 6423,
	5980, 1362, 5492, 4942, 4629, 4630, 4631, 4078, 4255, 6296,
	1098, 4628, 4626, 4627, 4619, 4620, 4621, 4622, 4624, 4625,
	6425, 2840, 4651, 4652, 4653, 4731, 2210, 2783, 6051, 2758,
	1097, 6641, 4876, 6052, 6356, 5637, 905, 2780, 906, 5031,
	4668, 4660, 2355, 1630, 5032, 4082, 5518, 5493, 4088, 5441,
	4079, 2728, 119, 5439, 5117, 2859, 2544, 5105, 1361, 4872,
	4440, 4433, 4420, 2957, 4623, 2951, 115, 2944, 2937, 2911,
	2732, 1099, 2905, 4087, 4085, 4320, 2195, 3019, 5235, 3282,
	3282, 3282, 3282, 1254, 1255, 2049, 6438, 2838, 4661, 2173,
	2173, 6278, 2353, 5397, 1582, 2780, 2785, 973, 5306, 2647,
	3899, 6493, 2764, 5199, 4183, 5925, 4082, 5676, 1091, 4088,
	2241, 2174, 6455, 2856, 4228, 229, 4640, 122, 2868, 2909,
	126, 4617, 4618, 2860, 4635, 4636, 4637, 4259, 2670, 5639,
	2865, 2540, 4690, 6019, 4087, 4085, 5685, 2217, 2220, 2839,
	4417, 1592, 6258, 6256, 2542, 3902, 6152, 2776, 4639, 2356,
	1531, 4888, 1630, 295, 2785, 4200, 4884, 4883, 2585, 2729,
	2734, 866, 1226, 4524, 2786, 2862, 2175, 2175, 2351, 1225,
	2253, 4083, 4502, 2216, 2763, 5320, 1238, 1239, 4679, 4678,
	1785, 1784, 2990, 5364, 2980, 2903, 6054, 5838, 2354, 3901,
	1777, 2857, 4633, 2543, 3900, 5839, 2087, 2858, 2773, 3961,
	2790, 2211, 4944, 5726, 2210, 4257, 5844, 5293, 3960, 4084,
	4632, 3959, 3958, 297, 3957, 2088, 2102, 2100, 1257, 5294,
	2068, 5574, 2786, 1367, 2570, 5894, 5491, 5597, 5598, 6164,
	2681, 6369, 4083, 2352, 119, 5970, 2173, 1630, 1630, 4204,
	3020, 5686, 182, 6768, 5447, 2955, 5352, 4691, 5052, 5841,
	5436, 2747, 6260, 6686, 2730, 1012, 2849, 6139, 2790, 6132,
	6131, 235, 6130, 4393, 2771, 4105, 5192, 2765, 4803, 296,
	4084, 5845, 4763, 4762, 4761, 2243, 2241, 4760, 2778, 4982,
	4744, 1155, 4743, 1096, 1095, 4742, 1759, 4697, 2241, 2788,
	4741, 4491, 289, 6499, 1013, 4397, 4081, 229, 2070, 122,
	4395, 290, 126, 4689, 2984, 230, 2784, 4696, 1162, 5353,
	2737, 234, 4076, 6426, 6160, 2878, 2772, 4623, 6439, 4229,
	4230, 6427, 1720, 6277, 6370, 5398, 2517, 6147, 5497, 6507,
	4248, 6159, 2118, 1092, 5807, 295, 2778, 6259, 5806, 5354,
	6490, 2781, 5351, 5731, 1226, 4945, 4695, 2788, 4258, 5309,
	2779, 1225, 5362, 6165, 4086, 3187, 1760, 4081, 2789, 5360,
	6116, 5373, 1843, 1536, 2784, 6530, 1461, 4634, 1461, 4674,
	4675, 4857, 6690, 2355, 4249, 2693, 2735, 869, 6688, 2211,
	1845, 2207, 2203, 6148, 2200, 2198, 2199, 2191, 2192, 2193,
	2194, 2196, 2197, 3186, 1838, 297, 5361, 2434, 6500, 2781,
	6614, 4639, 6401, 1807, 6390, 5357, 5502, 6128, 2779, 869,
	1805, 1869, 4732, 1461, 1803, 4086, 2789, 1630, 1630, 1630,
	1630, 1869, 1801, 4858, 182, 4676, 5030, 5840, 1771, 6371,
	6069, 5358, 972, 5955, 1769, 1766, 1641, 5797, 1764, 2782,
	1762, 1755, 5437, 235, 1749, 4633, 1747, 5724, 5573, 5390,
	4648, 296, 4080, 2243, 4715, 5215, 2446, 5193, 4970, 4758,
	1869, 4611, 2569, 4544, 4421, 4410, 1641, 4297, 4291, 4218,
	4692, 4693, 4694, 4151, 289, 1093, 3995, 2989, 1641, 2975,
	5850, 5851, 2958, 290, 4023, 2446, 2713, 230, 2709, 862,
	2847, 2680, 2588, 234, 6234, 4767, 2479, 2782, 2381, 2887,
	2139, 2101, 2099, 1256, 1847, 1359, 2658, 1094, 5805, 2616,
	4649, 4845, 4844, 4080, 2116, 4834, 4686, 2169, 4138, 1461,
	4721, 4722, 4137, 4072, 3008, 4983, 2904, 1790, 2731, 2241,
	2619, 1461, 2478, 2476, 4711, 2286, 2153, 1499, 6586, 5098,
	5903, 5505, 5504, 4629, 4630, 4631, 5996, 5490, 5907, 2439,
	4628, 4626, 4627, 4619, 4620, 4621, 4622, 4624, 4625, 4772,
	4774, 4684, 5880, 1104, 4765, 2191, 2192, 2193, 2194, 2196,
	2197, 6660, 1098, 4128, 1156, 1157, 6489, 1641, 5355, 1641,
	6017, 5912, 2695, 5898, 5895, 5232, 5356, 5831, 4733, 4734,
	4735, 4736, 1097, 2694, 5373, 5830, 4790, 5121, 1844, 4685,
	4700, 5635, 5622, 4726, 4698, 4726, 5521, 5495, 4796, 6655,
	4701, 4702, 1837, 4708, 1394, 1394, 1394, 5462, 4699, 2412,
	4634, 1806, 2443, 1670, 5460, 4727, 4704, 1869, 1804, 4683,
	1869, 5438, 1802, 1099, 5109, 5103, 5091, 4020, 4453, 4445,
	1800, 4437, 4429, 5359, 4782, 4413, 1770, 4412, 2736, 1107,
	2443, 2443, 1768, 1765, 4408, 1641, 1763, 4391, 1761, 1754,
	4703, 2446, 1748, 4035, 1746, 4707, 4030, 2902, 2900, 2880,
	4801, 2834, 4871, 2766, 6568, 2752, 2738, 2526, 1461, 2523,
	2515, 4756, 2512, 2507, 2736, 2505, 2500, 2494, 2492, 2488,
	2178, 4994, 4126, 1147, 1641, 1512, 2843, 4253, 6680, 4522,
	5677, 1150, 2548, 6368, 4170, 4745, 2886, 2536, 2537, 4804,
	4384, 4921, 4171, 2657, 4168, 1641, 2615, 4746, 6550, 6445,
	6032, 5919, 1513, 1641, 5804, 4481, 4797, 2712, 2565, 4773,
	6046, 1136, 4936, 2054, 1159, 1158, 1641, 1641, 1952, 4771,
	4940, 6298, 4179, 4179, 1531, 4205, 4153, 6290, 1307, 1309,
	4738, 4779, 3977, 4948, 4949, 866, 1532, 4786, 4783, 4177,
	4202, 1461, 1461, 2691, 2037, 2832, 1573, 5649, 2747, 1869,
	4843, 4950, 4791, 4955, 2832, 4887, 1531, 2606, 4892, 2954,
	4757, 4894, 1641, 4873, 2710, 4842, 4825, 866, 4826, 1615,
	4827, 1835, 1836, 1616, 1867, 2651, 4629, 4630, 4631, 4992,
	1461, 6549, 2643, 4628, 4626, 4627, 4619, 4620, 4621, 4622,
	4624, 4625, 1160, 1161, 4523, 2613, 4968, 4768, 5871, 1641,
	5914, 2179, 2187, 2188, 4337, 1361, 1649, 2443, 1745, 4900,
	4995, 4918, 4776, 1692, 2711, 4778, 5026, 2187, 2188, 4780,
	4781, 4828, 1001, 4406, 4784, 5024, 4785, 4344, 2535, 5022,
	4787, 4209, 6313, 1514, 1244, 4341, 2190, 6162, 4922, 1689,
	5732, 5711, 4901, 4720, 4210, 4231, 1734, 2182, 1734, 1648,
	1572, 4407, 1869, 5619, 4343, 6674, 327, 1139, 1616, 1734,
	1734, 4914, 4340, 1461, 5517, 4835, 4023, 4023, 1616, 4210,
	5029, 4820, 2097, 4822, 6621, 4856, 2938, 5538, 4978, 5011,
	2189, 4846, 4847, 4848, 4859, 4860, 1660, 4306, 1641, 4304,
	4313, 6412, 5516, 1004, 1004, 2189, 4293, 4295, 4214, 4342,
	4212, 5007, 1810, 1018, 4906, 5106, 4886, 4339, 1461, 4890,
	6498, 6475, 859, 4294, 4213, 4937, 6443, 6441, 6367, 6279,
	4927, 6276, 6140, 5953, 2098, 5633, 5621, 5601, 1734, 5108,
	4462, 4426, 4409, 3306, 2532, 2432, 6727, 6161, 4129, 4130,
	1734, 5031, 1734, 5031, 6308, 4281, 5032, 2872, 5032, 2718,
	1998, 1997, 1990, 1849, 1363, 4747, 2849, 6767, 4617, 4618,
	6781, 5122, 5063, 5021, 2187, 2188, 5021, 6692, 4928, 5928,
	4931, 1461, 4929, 5995, 4930, 4973, 5031, 4300, 1461, 1461,
	2009, 5032, 1461, 1461, 1461, 2845, 1461, 2576, 4059, 219,
	219, 2009, 4980, 4979, 1719, 1461, 2446, 5703, 3042, 3043,
	1718, 5136, 5095, 5005, 1461, 5115, 4993, 2575, 4058, 1869,
	5375, 2008, 4984, 2392, 4986, 2009, 5104, 4990, 1461, 4020,
	4020, 4996, 5047, 5023, 5050, 4143, 1869, 3217, 5027, 2576,
	2575, 6539, 2443, 2443, 4274, 5035, 2446, 2446, 1461, 1461,
	5629, 1461, 1461, 1461, 5118, 1809, 6280, 4840, 1808, 6250,
	6204, 6110, 6106, 6105, 5916, 5147, 5911, 5910, 4854, 5779,
	2406, 4855, 1461, 862, 5775, 5774, 1461, 1140, 2446, 2446,
	1461, 1461, 1461, 1461, 1461, 1461, 1461, 1461, 1461, 1461,
	1461, 1461, 1461, 1461, 1461, 1461, 1461, 1461, 1461, 1461,
	4226, 1461, 5702, 5171, 5054, 862, 5423, 5218, 5069, 1461,
	1461, 2446, 5265, 5040, 5266, 1147, 1461, 5200, 5201, 5102,
	5096, 1141, 5189, 1150, 5374, 5243, 5187, 5190, 1461, 5101,
	4988, 5191, 5056, 5036, 4985, 4146, 5074, 2280, 2279, 869,
	869, 4174, 2720, 1461, 6752, 6709, 5133, 6554, 6479, 6478,
	1952, 5135, 6477, 1952, 6400, 5142, 6338, 6333, 6332, 6254,
	2439, 2439, 5145, 5146, 6192, 6122, 6115, 1370, 6114, 6112,
	6109, 6108, 2443, 6107, 6102, 5304, 6101, 1869, 4480, 4964,
	1461, 1461, 5989, 5956, 5869, 5790, 5773, 4480, 5772, 5197,
	5661, 5347, 5655, 5586, 5458, 5450, 5114, 4893, 4837, 4777,
	1641, 1641, 4444, 4414, 4203, 4403, 2383, 4405, 4152, 2393,
	4135, 4098, 2443, 2443, 4097, 4096, 4095, 4026, 3992, 1641,
	1641, 3991, 3116, 2952, 2924, 2420, 2923, 1641, 2922, 2921,
	2920, 4023, 2446, 2919, 2446, 2696, 2652, 5223, 5225, 2637,
	2636, 2635, 5231, 2634, 2443, 2443, 2497, 2496, 2495, 2493,
	5242, 2411, 5238, 5240, 5241, 2410, 1461, 2063, 5247, 5254,
	2062, 2061, 2060, 2059, 1734, 4459, 2058, 2057, 4459, 1734,
	1734, 1734, 1734, 5261, 2053, 2051, 5263, 2443, 2050, 1869,
	5264, 5296, 1985, 1984, 5034, 1834, 1833, 1756, 1712, 5268,
	1709, 5270, 5365, 1708, 1707, 1394, 1706, 1705, 1652, 1599,
	4920, 1598, 1597, 1952, 1596, 1595, 1594, 5393, 5311, 5394,
	1593, 1587, 1586, 1585, 1584, 1583, 1494, 5343, 3282, 3282,
	2538, 4935, 5297, 5316, 5317, 1311, 1302, 6373, 5848, 4939,
	5847, 5846, 2692, 2932, 113, 2046, 4246, 105, 5174, 5173,
	1532, 1461, 4947, 5313, 5314, 2841, 5457, 2703, 6414, 6538,
	6628, 2770, 5962, 5123, 6536, 4010, 2489, 5066, 6249, 2567,
	2774, 6410, 6242, 1174, 1060, 6529, 2032, 1189, 6509, 5327,
	4726, 5329, 1532, 4895, 1461, 1461, 5328, 4351, 1757, 2620,
	4710, 5339, 3930, 6466, 4020, 5333, 5707, 4576, 4991, 6321,
	5363, 6061, 3185, 2284, 4659, 107, 1416, 2443, 2443, 1459,
	2443, 5978, 5977, 5832, 3928, 3282, 3282, 3282, 3282, 3282,
	3282, 3282, 3282, 3282, 3282, 3282, 3282, 3282, 3282, 3282,
	3282, 3282, 3282, 3282, 3282, 5025, 3282, 5444, 5077, 5386,
	1461, 1461, 5974, 5475, 5392, 2421, 5973, 2436, 1461, 2438,
	5405, 1379, 5442, 1872, 3323, 5408, 5409, 3326, 5494, 6562,
	2549, 5496, 2558, 1630, 5499, 2310, 3264, 1437, 1476, 1734,
	1734, 1432, 5507, 2439, 1433, 5407, 5406, 1734, 2440, 1436,
	1734, 1734, 1434, 1147, 1435, 2303, 5419, 5420, 5498, 2423,
	1431, 1150, 5112, 5628, 5097, 4466, 5143, 2107, 2105, 5422,
	1062, 3926, 3110, 3170, 1734, 4565, 2277, 5513, 1396, 1641,
	5428, 1418, 5540, 3166, 1565, 1407, 1531, 1531, 5480, 5482,
	4687, 5130, 3307, 5330, 5366, 5367, 5557, 866, 866, 3018,
	1734, 1199, 1028, 4614, 3173, 1554, 5552, 3287, 3280, 3276,
	4455, 4788, 5124, 5380, 5381, 2446, 1630, 2157, 6076, 2255,
	4467, 5391, 1686, 1400, 3108, 2268, 4549, 3028, 5137, 5479,
	4713, 2096, 5500, 5501, 5519, 5467, 3986, 6541, 5342, 5472,
	1461, 5251, 3943, 4144, 2928, 1511, 1510, 1563, 1509, 1438,
	6515, 6512, 2831, 5981, 2446, 5072, 4227, 5395, 5073, 2541,
	4052, 5396, 5529, 1734, 3120, 5092, 869, 1412, 4113, 5618,
	5643, 4114, 1461, 5562, 5563, 1977, 2678, 4838, 4672, 4226,
	869, 1461, 5599, 5651, 2065, 6169, 1422, 863, 2240, 1734,
	4378, 4377, 6362, 1671, 1734, 1734, 1734, 1669, 1668, 1667,
	6789, 4319, 4314, 5592, 334, 334, 334, 334, 1952, 897,
	898, 2850, 914, 897, 914, 926, 5528, 5542, 971, 5453,
	5640, 5452, 991, 5541, 5451, 5526, 5576, 998, 998, 998,
	998, 4317, 334, 1734, 294, 5611, 1630, 1630, 4516, 2176,
	2168, 334, 5565, 5558, 291, 5613, 1869, 5617, 5641, 1461,
	1461, 293, 292, 5551, 4899, 1461, 1461, 2446, 5646, 5754,
	1461, 1461, 5348, 1461, 2897, 1231, 5567, 5614, 5461, 5571,
	5463, 4093, 334, 1721, 5632, 1461, 5566, 5477, 5051, 5647,
	28, 2443, 5662, 5575, 1005, 1006, 5572, 5579, 5555, 1007,
	4062, 1461, 2568, 1688, 5400, 27, 26, 25, 24, 136,
	29, 51, 32, 5600, 31, 5, 23, 181, 2439, 179,
	156, 5624, 177, 5626, 176, 146, 175, 174, 5658, 173,
	2443, 172, 5700, 1630, 1630, 1630, 1630, 1630, 1630, 1630,
	1630, 1630, 1630, 1630, 1630, 1630, 1630, 1630, 1630, 1630,
	1630, 1630, 1630, 5687, 1630, 5642, 5623, 2581, 1710, 171,
	5645, 5652, 170, 869, 5644, 178, 169, 168, 5696, 163,
	167, 869, 5660, 5620, 5520, 1869, 1869, 166, 5653, 165,
	164, 5659, 162, 2446, 160, 5688, 161, 155, 159, 869,
	158, 1394, 157, 154, 2726, 1952, 153, 1869, 152, 2727,
	151, 150, 149, 148, 5729, 1734, 1734, 147, 145, 5678,
	180, 144, 143, 5680, 236, 142, 141, 140, 5681, 5679,
	219, 139, 30, 138, 137, 984, 985, 71, 70, 1869,
	133, 134, 22, 2443, 4715, 862, 862, 49, 17, 75,
	76, 1641, 21, 16, 44, 110, 4468, 125, 124, 897,
	897, 3045, 123, 45, 120, 43, 20, 334, 19, 4480,
	18, 118, 117, 116, 42, 1734, 1734, 1461, 40, 14,
	12, 46, 1540, 2369, 15, 7, 112, 1869, 228, 227,
	224, 223, 226, 222, 225, 109, 1461, 5418, 221, 1952,
	111, 220, 108, 5723, 38, 13, 5750, 869, 212, 869,
	5606, 99, 216, 215, 5740, 5742, 214, 213, 103, 211,
	5781, 5782, 210, 209, 201, 218, 97, 208, 102, 5748,
	101, 5827, 207, 98, 1641, 217, 100, 104, 36, 9,
	74, 6049, 5194, 2728, 1869, 128, 1641, 5736, 5739, 1641,
	129, 5879, 5855, 1531, 5855, 3183, 47, 5733, 95, 2443,
	94, 5749, 2732, 5888, 866, 5738, 5891, 1531, 93, 92,
	5753, 35, 1461, 5824, 1952, 1869, 5734, 5735, 866, 73,
	34, 287, 288, 286, 5780, 5784, 5785, 5786, 5787, 5897,
	285, 283, 5899, 5808, 284, 282, 5901, 281, 1952, 5793,
	5794, 5795, 5796, 196, 261, 5799, 5798, 260, 259, 1461,
	258, 257, 1461, 256, 255, 254, 253, 5858, 248, 252,
	250, 249, 5812, 251, 5829, 5811, 247, 277, 5873, 276,
	5809, 275, 274, 273, 1734, 1734, 5929, 272, 271, 1461,
	270, 264, 5816, 4023, 1461, 1461, 5823, 263, 5737, 269,
	268, 2729, 2734, 267, 3939, 869, 266, 265, 262, 280,
	206, 205, 202, 204, 203, 88, 246, 245, 244, 242,
	238, 241, 243, 240, 239, 237, 279, 5874, 278, 200,
	1641, 199, 89, 194, 195, 87, 193, 192, 191, 5937,
	190, 189, 188, 187, 5918, 86, 1869, 6000, 198, 197,
	5855, 1734, 33, 2, 5909, 1, 0, 0, 5934, 0,
	5889, 0, 1532, 1532, 0, 5556, 0, 0, 0, 0,
	0, 0, 5950, 0, 0, 0, 0, 0, 1734, 1734,
	1734, 1734, 1734, 1461, 1734, 1734, 1734, 0, 5954, 0,
	1531, 0, 0, 0, 0, 0, 2730, 0, 1531, 5821,
	5822, 866, 1461, 1461, 1461, 0, 5936, 5933, 6020, 866,
	0, 6001, 5993, 5982, 5952, 5803, 1531, 1869, 5930, 5892,
	5611, 0, 1461, 0, 0, 1461, 1461, 866, 5872, 5859,
	5613, 0, 1952, 0, 5021, 1461, 6021, 5945, 2446, 5958,
	0, 5972, 1461, 1461, 5944, 5976, 4020, 4909, 5875, 5876,
	5984, 0, 2737, 0, 0, 0, 5992, 5990, 0, 2443,
	0, 5951, 1461, 0, 0, 0, 6004, 1734, 6007, 1734,
	1734, 0, 5946, 0, 0, 6015, 5949, 0, 0, 0,
	1734, 0, 0, 0, 0, 0, 0, 6022, 4061, 5915,
	0, 5917, 6023, 0, 0, 0, 6003, 6055, 0, 0,
	6029, 0, 0, 0, 0, 0, 0, 0, 1641, 0,
	6035, 6034, 0, 4907, 0, 0, 0, 0, 2735, 0,
	0, 0, 4546, 4547, 1531, 0, 1531, 0, 0, 0,
	1461, 1461, 0, 5171, 5171, 866, 0, 866, 0, 6071,
	0, 0, 862, 0, 0, 0, 1869, 0, 0, 0,
	0, 0, 0, 0, 1461, 6037, 862, 5971, 6064, 6065,
	6042, 6047, 0, 0, 0, 4908, 0, 1461, 0, 0,
	6048, 0, 0, 0, 0, 0, 1461, 0, 0, 6088,
	0, 2446, 0, 0, 6085, 0, 6086, 6087, 0, 6137,
	6138, 1461, 6082, 6083, 1461, 0, 0, 6146, 6090, 6091,
	0, 0, 0, 0, 2443, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1461, 0, 0, 1461, 0,
	5758, 0, 6197, 5756, 0, 1869, 0, 0, 0, 0,
	0, 1734, 1461, 5768, 1734, 1734, 0, 1461, 1461, 6194,
	5764, 0, 0, 1461, 6172, 0, 1461, 6143, 0, 6144,
	1641, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 6142, 6224, 6136, 0,
	2731, 6191, 1531, 6145, 0, 0, 1734, 6151, 0, 5766,
	5767, 5765, 2736, 866, 5757, 6238, 5761, 0, 0, 0,
	0, 0, 0, 0, 869, 0, 869, 0, 0, 0,
	0, 1952, 4641, 4642, 4643, 4644, 0, 0, 6209, 0,
	0, 0, 5762, 0, 0, 0, 0, 0, 0, 1556,
	6233, 2446, 0, 6253, 0, 0, 0, 6193, 1869, 862,
	914, 1734, 0, 0, 6271, 0, 0, 862, 0, 5855,
	6257, 5855, 6198, 0, 914, 6222, 0, 2443, 0, 0,
	334, 334, 6206, 0, 0, 862, 1734, 0, 1589, 0,
	3282, 6251, 0, 0, 0, 2962, 6189, 4910, 4911, 334,
	4912, 334, 334, 0, 1620, 334, 0, 1635, 0, 6235,
	1461, 2446, 0, 6236, 0, 0, 0, 0, 6291, 0,
	1650, 0, 6248, 0, 0, 0, 0, 0, 991, 5878,
	6255, 991, 6262, 0, 6264, 0, 0, 5611, 0, 1532,
	6215, 6216, 5887, 0, 6225, 5890, 6292, 5613, 0, 6270,
	0, 6272, 6127, 1532, 998, 0, 0, 0, 1641, 1641,
	1641, 1641, 0, 0, 1641, 1641, 1641, 1641, 6283, 1641,
	1641, 6281, 0, 0, 6295, 6275, 0, 6293, 4974, 4975,
	6295, 4976, 6300, 6299, 0, 0, 6237, 6288, 0, 5759,
	0, 0, 0, 862, 1461, 862, 1461, 5760, 1461, 0,
	6301, 0, 6303, 0, 0, 0, 6312, 0, 869, 3282,
	0, 0, 6319, 6350, 0, 0, 0, 2443, 0, 0,
	0, 1461, 0, 869, 334, 0, 0, 0, 0, 0,
	6331, 0, 0, 0, 0, 0, 1394, 0, 6355, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	6183, 6184, 1630, 5855, 5763, 0, 0, 0, 1734, 0,
	6306, 334, 0, 334, 334, 334, 334, 1620, 5855, 334,
	334, 0, 0, 0, 0, 0, 0, 2443, 1635, 0,
	1461, 1461, 1630, 0, 0, 6354, 0, 6353, 1461, 5074,
	0, 6205, 334, 6207, 2011, 6208, 0, 6266, 0, 6357,
	6404, 6384, 0, 0, 869, 6377, 869, 0, 6378, 0,
	0, 0, 2030, 0, 330, 6430, 0, 0, 0, 6442,
	0, 0, 0, 2042, 6416, 869, 1532, 0, 869, 0,
	0, 6385, 1734, 0, 1532, 6394, 6297, 0, 0, 0,
	2067, 862, 1635, 1734, 0, 0, 0, 334, 334, 5855,
	1620, 5855, 1532, 0, 1461, 1461, 1461, 0, 0, 0,
	6396, 0, 0, 0, 6402, 1461, 0, 0, 0, 0,
	5855, 0, 0, 5855, 0, 0, 991, 0, 334, 334,
	6408, 0, 6199, 0, 0, 0, 4751, 6407, 0, 0,
	2133, 1531, 6429, 1531, 0, 0, 0, 1027, 0, 0,
	0, 2141, 866, 0, 866, 6418, 1231, 5993, 0, 0,
	0, 0, 6432, 6470, 6434, 5611, 0, 6456, 6447, 0,
	6457, 0, 6458, 0, 0, 5613, 0, 6461, 1630, 1461,
	1461, 6462, 6463, 6449, 1461, 3282, 6451, 6471, 6472, 1734,
	1641, 0, 1641, 0, 6460, 0, 6476, 0, 0, 0,
	1461, 2446, 334, 0, 6514, 6517, 0, 0, 0, 0,
	1532, 0, 1532, 0, 0, 6522, 0, 0, 6480, 6481,
	6482, 6483, 6334, 6335, 6336, 6337, 6540, 6488, 6339, 6340,
	6341, 6342, 0, 6343, 6344, 6545, 6496, 6497, 6518, 0,
	0, 0, 0, 6523, 0, 0, 6505, 6504, 0, 0,
	0, 0, 0, 6547, 0, 6567, 0, 6519, 1461, 1461,
	1461, 0, 0, 6544, 0, 0, 6524, 0, 1952, 0,
	0, 3282, 0, 0, 0, 0, 6537, 6506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2439, 0,
	0, 0, 6484, 6485, 6486, 0, 3282, 1630, 0, 6535,
	0, 1461, 0, 0, 6565, 6551, 0, 0, 6601, 0,
	6555, 0, 0, 6558, 0, 6606, 2439, 2439, 6566, 0,
	0, 0, 0, 0, 4673, 1531, 0, 0, 0, 6582,
	6579, 6580, 0, 6581, 6620, 0, 866, 6395, 0, 0,
	1531, 4879, 0, 0, 2736, 6624, 6223, 0, 0, 0,
	6638, 866, 0, 6603, 0, 0, 0, 0, 1532, 0,
	0, 6646, 0, 0, 6636, 6525, 1461, 2443, 6640, 6464,
	6623, 6465, 0, 0, 1641, 1641, 1641, 6, 6637, 2962,
	11, 0, 10, 6645, 6661, 6253, 6619, 6627, 6644, 1630,
	8, 0, 6648, 219, 0, 6631, 6654, 6681, 6630, 0,
	6653, 897, 0, 0, 0, 0, 0, 0, 6667, 6668,
	6617, 6652, 0, 0, 0, 0, 6675, 1461, 6677, 6695,
	0, 1531, 334, 1531, 334, 6683, 6514, 6672, 334, 6517,
	6604, 6685, 866, 0, 866, 6705, 6687, 0, 869, 2011,
	869, 6693, 1531, 0, 6639, 1531, 1620, 1635, 334, 6691,
	334, 2409, 6701, 866, 6718, 6711, 866, 6703, 334, 6698,
	914, 0, 0, 0, 0, 6543, 6710, 334, 6714, 0,
	6719, 6704, 0, 0, 0, 0, 0, 0, 0, 6712,
	862, 1641, 862, 5855, 6673, 5855, 0, 0, 6658, 0,
	0, 0, 2498, 2439, 0, 6734, 0, 6735, 6743, 0,
	0, 0, 6751, 6684, 6526, 334, 6527, 6741, 6740, 6742,
	0, 0, 0, 6739, 334, 0, 6697, 0, 1461, 1461,
	6753, 6762, 0, 1630, 6745, 6760, 0, 1461, 1461, 0,
	0, 6700, 6754, 6702, 0, 0, 6765, 6706, 0, 0,
	6778, 6777, 6770, 0, 0, 6775, 6713, 0, 6715, 6782,
	0, 0, 6786, 991, 0, 0, 6783, 0, 6794, 6785,
	6793, 6792, 0, 6602, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 6798, 6797, 0, 0, 0,
	6799, 0, 1641, 0, 6801, 0, 6771, 6772, 6811, 6809,
	6787, 998, 6808, 998, 0, 0, 6813, 6814, 0, 6807,
	6744, 0, 0, 998, 998, 6818, 0, 6802, 6791, 1630,
	1461, 6756, 6821, 6823, 0, 0, 6825, 6828, 6800, 6826,
	6815, 6831, 6811, 6830, 6827, 0, 0, 0, 0, 0,
	6817, 0, 0, 0, 1630, 0, 0, 0, 991, 0,
	0, 0, 6779, 0, 0, 0, 334, 0, 0, 0,
	0, 6784, 6616, 0, 2617, 6618, 0, 0, 0, 334,
	0, 334, 0, 334, 862, 334, 0, 0, 334, 6824,
	334, 0, 0, 0, 0, 0, 0, 0, 897, 862,
	0, 0, 0, 6543, 0, 0, 0, 0, 6669, 6670,
	6671, 0, 0, 2726, 1630, 0, 2434, 2663, 2727, 6816,
	2664, 0, 2665, 0, 2666, 0, 2667, 0, 0, 0,
	0, 0, 6820, 0, 0, 0, 0, 0, 2439, 2439,
	0, 334, 334, 334, 334, 0, 0, 334, 334, 0,
	0, 0, 0, 0, 0, 0, 3042, 5255, 0, 0,
	0, 0, 0, 5625, 0, 0, 0, 1532, 0, 1532,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	862, 0, 862, 0, 0, 0, 0, 0, 3042, 5271,
	4468, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 862, 0, 0, 862, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 6738, 0, 0, 0, 0,
	0, 5300, 0, 0, 0, 1531, 0, 1531, 0, 4468,
	0, 0, 0, 90, 0, 0, 866, 0, 866, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 5682, 0,
	0, 0, 2728, 0, 91, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2439, 0,
	0, 2732, 0, 0, 96, 0, 0, 0, 0, 0,
	0, 0, 0, 1630, 0, 0, 6773, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2187, 2188, 0, 1952, 0, 2439, 2439,
	0, 0, 0, 0, 0, 0, 1952, 0, 0, 334,
	0, 106, 0, 334, 0, 0, 0, 2218, 0, 0,
	0, 0, 0, 0, 2219, 0, 2587, 2190, 0, 0,
	2439, 2439, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1532, 0, 0, 0, 1952, 0, 0, 0, 0,
	2729, 2734, 4717, 0, 334, 334, 1532, 1224, 0, 0,
	2244, 0, 4724, 2439, 0, 0, 0, 0, 0, 0,
	0, 2189, 0, 130, 334, 0, 0, 0, 0, 114,
	127, 0, 2209, 0, 0, 334, 0, 0, 0, 0,
	0, 0, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 4755, 0, 0, 1394, 1578, 1578, 0, 0, 334,
	0, 334, 0, 0, 0, 897, 1394, 334, 0, 0,
	0, 0, 0, 0, 1604, 0, 1604, 1604, 0, 991,
	1027, 0, 0, 1231, 0, 0, 0, 1532, 0, 1532,
	0, 5211, 5212, 0, 0, 2730, 0, 0, 0, 0,
	0, 115, 0, 0, 0, 0, 0, 0, 1532, 0,
	0, 1532, 0, 0, 0, 1620, 334, 0, 0, 0,
	971, 0, 0, 0, 991, 5964, 0, 0, 0, 2212,
	2213, 2214, 2215, 2439, 2439, 0, 2439, 0, 0, 2195,
	1630, 0, 0, 0, 0, 0, 2724, 0, 0, 0,
	0, 2737, 0, 0, 0, 0, 2777, 0, 0, 0,
	0, 0, 1952, 0, 0, 1952, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 5272, 5273,
	5274, 5275, 5276, 5277, 5278, 5279, 5280, 5281, 5282, 5283,
	5284, 5285, 5286, 5287, 5288, 5289, 5290, 5291, 0, 5295,
	2217, 2220, 2787, 0, 862, 5905, 862, 0, 0, 0,
	0, 0, 2722, 0, 0, 0, 0, 2735, 4839, 0,
	3122, 1867, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1960,
	1578, 1578, 0, 0, 1978, 1027, 0, 0, 3983, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2723, 0, 0, 2210, 0, 119,
	0, 0, 0, 0, 0, 2783, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4879, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 897, 5988, 0, 3308, 0,
	0, 0, 0, 0, 1952, 0, 0, 0, 0, 0,
	0, 334, 0, 0, 0, 0, 6002, 0, 0, 0,
	897, 0, 1027, 1027, 0, 0, 334, 0, 897, 0,
	0, 0, 229, 0, 122, 0, 0, 126, 0, 0,
	334, 0, 0, 2780, 0, 6028, 0, 0, 0, 0,
	0, 2241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2731,
	295, 0, 0, 0, 90, 334, 1635, 0, 0, 1226,
	0, 0, 334, 0, 334, 2011, 1225, 334, 334, 0,
	0, 0, 0, 5965, 0, 91, 0, 0, 0, 0,
	0, 0, 2785, 0, 0, 0, 0, 1952, 0, 0,
	0, 0, 0, 0, 2216, 96, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2434, 0, 0,
	297, 0, 334, 1635, 0, 334, 914, 2439, 914, 0,
	0, 0, 2211, 0, 0, 334, 0, 0, 334, 0,
	0, 0, 334, 0, 4025, 0, 0, 0, 0, 182,
	334, 334, 106, 4717, 0, 334, 0, 334, 0, 0,
	2786, 1532, 1620, 1532, 334, 334, 2439, 0, 235, 0,
	0, 0, 1635, 1635, 4043, 0, 296, 0, 0, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	6133, 0, 0, 0, 0, 0, 2790, 0, 1224, 289,
	0, 0, 0, 0, 0, 0, 2243, 0, 290, 0,
	0, 0, 230, 0, 130, 0, 0, 0, 234, 0,
	114, 127, 0, 998, 998, 0, 0, 998, 998, 0,
	0, 0, 0, 5747, 334, 0, 0, 0, 0, 233,
	0, 0, 0, 1386, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1952, 0, 0, 0, 0, 0,
	334, 1620, 334, 0, 0, 0, 0, 0, 0, 2439,
	0, 1952, 4115, 334, 2778, 0, 0, 1620, 0, 1620,
	0, 1620, 0, 0, 0, 2788, 0, 0, 0, 0,
	0, 0, 115, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2784, 0, 0, 0, 0, 0, 0, 0,
	5228, 0, 4249, 0, 0, 2200, 2198, 2199, 2191, 2192,
	2193, 2194, 2196, 2197, 0, 0, 0, 5244, 0, 0,
	334, 0, 0, 0, 0, 0, 0, 2781, 0, 0,
	0, 0, 0, 0, 0, 0, 2779, 334, 334, 334,
	334, 1620, 0, 0, 2789, 0, 0, 0, 0, 0,
	0, 1620, 0, 0, 334, 1978, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4192, 0, 0, 0,
	0, 0, 0, 0, 0, 2439, 0, 5966, 334, 0,
	0, 0, 0, 4617, 4618, 0, 4635, 4636, 4637, 0,
	0, 0, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1952, 0, 0, 0, 334, 0, 0, 0,
	1604, 0, 0, 0, 0, 0, 0, 0, 0, 1978,
	0, 0, 0, 0, 0, 2782, 0, 0, 0, 4262,
	0, 5967, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 991, 0, 0, 0, 0, 991, 0, 0, 0,
	119, 0, 0, 0, 0, 0, 0, 0, 5340, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4632, 0, 334, 2187, 2188, 0, 2221, 2222,
	2223, 2232, 2233, 2234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4326, 2011, 0, 0, 2225, 2218,
	0, 0, 0, 0, 1952, 0, 2219, 0, 0, 2190,
	0, 0, 0, 229, 0, 122, 0, 0, 126, 0,
	0, 2238, 1417, 132, 2187, 2188, 0, 0, 0, 0,
	2232, 2233, 2234, 0, 0, 334, 4400, 0, 0, 0,
	0, 0, 2244, 0, 0, 0, 0, 0, 2218, 0,
	0, 295, 0, 2189, 0, 2219, 0, 0, 2190, 0,
	1226, 0, 0, 0, 2209, 0, 0, 1225, 0, 2011,
	2238, 0, 334, 0, 2206, 4326, 6392, 0, 0, 4623,
	0, 0, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 2244, 0, 4449, 0, 0, 0, 0, 0, 0,
	0, 0, 2189, 0, 4192, 0, 897, 0, 0, 0,
	0, 297, 0, 2209, 0, 1231, 4192, 0, 2434, 0,
	0, 0, 0, 2206, 0, 2439, 0, 0, 2677, 2679,
	0, 0, 2682, 2683, 0, 0, 0, 132, 334, 0,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 6444, 0, 0, 6446, 0, 0, 0, 0, 235,
	0, 2212, 2213, 2214, 2215, 0, 0, 296, 0, 334,
	0, 2195, 0, 0, 0, 0, 0, 0, 334, 0,
	0, 2187, 2188, 0, 0, 0, 0, 0, 0, 0,
	289, 0, 0, 1722, 0, 0, 0, 0, 0, 290,
	0, 0, 0, 230, 0, 2218, 0, 4633, 0, 234,
	2212, 2213, 2214, 2215, 0, 2190, 0, 0, 0, 2229,
	2195, 0, 0, 2239, 0, 0, 0, 0, 0, 0,
	233, 0, 2217, 2220, 0, 0, 0, 0, 0, 0,
	0, 0, 1348, 0, 0, 0, 0, 0, 2244, 0,
	0, 0, 0, 0, 0, 2235, 1371, 2236, 0, 2189,
	0, 6181, 0, 0, 2204, 2205, 0, 0, 2229, 0,
	2439, 0, 2239, 0, 0, 0, 0, 0, 1982, 0,
	0, 2217, 2220, 0, 2227, 0, 0, 0, 0, 0,
	0, 2241, 186, 0, 0, 0, 0, 0, 0, 2210,
	0, 90, 2011, 55, 54, 0, 0, 0, 0, 0,
	0, 0, 0, 2204, 2205, 0, 6552, 0, 6553, 0,
	1521, 0, 91, 0, 0, 0, 2035, 84, 0, 0,
	0, 0, 0, 2227, 0, 0, 0, 0, 0, 0,
	56, 0, 96, 0, 0, 0, 0, 0, 2210, 2915,
	2915, 2237, 0, 0, 0, 0, 77, 0, 0, 0,
	0, 0, 0, 0, 58, 0, 184, 0, 0, 0,
	0, 0, 2226, 0, 0, 0, 0, 2195, 0, 0,
	2677, 0, 4634, 2241, 2121, 0, 57, 0, 0, 106,
	0, 1952, 0, 0, 0, 0, 0, 0, 0, 0,
	2136, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2439, 0, 0, 0, 0, 0, 60,
	78, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	61, 0, 2241, 0, 0, 67, 0, 0, 2217, 2220,
	0, 85, 0, 0, 0, 0, 2216, 0, 0, 59,
	0, 130, 334, 0, 0, 0, 0, 114, 127, 0,
	0, 2434, 0, 6068, 0, 0, 0, 79, 0, 0,
	0, 0, 0, 0, 2211, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2210, 0, 62, 2230, 0,
	1952, 1952, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2211, 0, 0, 0, 0, 0, 115,
	0, 0, 1952, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2243, 0,
	0, 0, 0, 2439, 0, 0, 0, 2230, 4629, 4630,
	4631, 0, 0, 0, 1952, 4628, 4626, 4627, 4619, 4620,
	4621, 4622, 4624, 4625, 0, 0, 0, 0, 0, 0,
	0, 0, 6154, 0, 0, 0, 0, 0, 5752, 2241,
	0, 0, 0, 0, 0, 0, 0, 2243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1952, 2439, 0, 0, 0, 80, 0, 0,
	5792, 1394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2201, 2202, 2208, 2231, 2207, 2203, 0, 2200, 2198, 2199,
	2191, 2192, 2193, 2194, 2196, 2197, 0, 0, 1867, 1952,
	0, 5716, 0, 0, 0, 5715, 0, 0, 0, 0,
	2211, 0, 0, 0, 0, 0, 2228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 119, 0, 0,
	1952, 0, 2231, 2207, 2203, 0, 2200, 2198, 2199, 2191,
	2192, 2193, 2194, 2196, 2197, 63, 0, 0, 0, 0,
	1027, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2482, 0, 1578, 1578, 66, 0, 0, 1394, 0, 0,
	69, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 0, 2243, 0, 0, 0, 0, 68,
	229, 0, 122, 0, 0, 126, 0, 0, 0, 0,
	0, 0, 64, 0, 0, 0, 185, 1027, 0, 0,
	0, 0, 0, 0, 65, 0, 0, 0, 0, 0,
	1578, 0, 0, 1578, 0, 0, 0, 1578, 295, 0,
	0, 0, 0, 0, 0, 1604, 4028, 72, 6318, 0,
	1604, 0, 1604, 0, 83, 0, 0, 0, 0, 1027,
	1027, 1952, 0, 0, 0, 0, 2187, 2188, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2218, 0, 0, 0, 0, 0, 0, 0, 297, 0,
	2190, 0, 0, 0, 2198, 2199, 2191, 2192, 2193, 2194,
	2196, 2197, 0, 0, 0, 0, 0, 0, 0, 0,
	2592, 2593, 2594, 2595, 2596, 0, 0, 182, 0, 0,
	0, 0, 1952, 2244, 6361, 0, 0, 82, 0, 0,
	0, 0, 0, 0, 2189, 0, 235, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 132, 1978, 0, 6383,
	0, 0, 0, 0, 0, 0, 0, 0, 1027, 0,
	0, 0, 0, 0, 0, 2187, 2188, 289, 2221, 2222,
	2223, 2232, 2233, 2234, 0, 0, 290, 0, 5752, 0,
	230, 0, 0, 2439, 0, 0, 234, 0, 0, 2218,
	0, 0, 0, 0, 0, 0, 2219, 0, 0, 2190,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	3, 2238, 0, 132, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2244, 1978, 1978, 0, 0, 0, 0, 0,
	0, 0, 0, 2189, 0, 0, 0, 0, 0, 0,
	0, 1952, 2195, 0, 2209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2206, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 334, 0, 0, 0,
	0, 897, 0, 0, 0, 0, 897, 0, 0, 897,
	0, 0, 897, 897, 0, 0, 0, 897, 0, 1394,
	897, 1960, 0, 0, 0, 0, 0, 3045, 334, 132,
	0, 0, 0, 2217, 2220, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1952, 0, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2224, 0, 334, 0, 0, 2011, 0, 0,
	0, 2212, 2213, 2214, 2215, 0, 0, 0, 0, 0,
	0, 2195, 0, 0, 0, 0, 0, 0, 0, 1978,
	0, 0, 0, 0, 914, 0, 1527, 0, 0, 0,
	2210, 0, 0, 0, 0, 0, 3045, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	334, 0, 0, 0, 334, 334, 0, 0, 0, 2229,
	132, 0, 132, 2239, 132, 0, 0, 0, 0, 0,
	0, 0, 2217, 2220, 2035, 0, 0, 0, 0, 0,
	0, 329, 329, 1952, 892, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2204, 2205, 0, 2936, 0, 5169,
	0, 0, 0, 0, 2241, 0, 0, 0, 0, 0,
	1371, 132, 132, 0, 2227, 5167, 0, 0, 0, 4823,
	0, 0, 0, 0, 0, 0, 0, 5159, 0, 2210,
	132, 0, 132, 0, 0, 0, 0, 5178, 5179, 0,
	0, 0, 0, 0, 0, 0, 132, 2973, 132, 4831,
	0, 4832, 4833, 0, 0, 2011, 0, 0, 0, 0,
	0, 334, 0, 0, 0, 2986, 2988, 1620, 334, 0,
	334, 0, 0, 0, 0, 0, 0, 0, 1620, 2991,
	0, 1620, 0, 0, 0, 0, 4192, 4192, 334, 0,
	4865, 4868, 0, 0, 0, 2211, 0, 4192, 0, 2409,
	0, 0, 0, 0, 1604, 0, 0, 0, 4192, 2409,
	0, 4192, 2409, 2241, 0, 2409, 0, 0, 4865, 0,
	5181, 5182, 0, 0, 5172, 0, 0, 0, 0, 0,
	334, 334, 4868, 0, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 5161, 0, 2224, 0,
	0, 0, 0, 4868, 0, 334, 0, 0, 0, 0,
	4938, 4868, 5160, 0, 0, 0, 1348, 0, 0, 2243,
	0, 0, 0, 4946, 4868, 0, 2216, 4952, 0, 4952,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1620,
	2258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2211, 0, 0, 0, 2264, 0,
	0, 0, 2270, 0, 4192, 0, 4192, 0, 4989, 4192,
	4868, 0, 5170, 4192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2230, 0,
	0, 0, 0, 2187, 2188, 0, 0, 0, 0, 991,
	0, 0, 991, 0, 0, 0, 0, 4868, 4369, 0,
	991, 0, 0, 0, 0, 5157, 0, 2218, 0, 0,
	0, 0, 0, 0, 2219, 0, 0, 2190, 2243, 0,
	2199, 2191, 2192, 2193, 2194, 2196, 2197, 0, 0, 0,
	2224, 0, 0, 0, 1620, 0, 2224, 4359, 4357, 0,
	0, 334, 0, 0, 0, 4361, 4363, 4353, 0, 0,
	2244, 0, 0, 0, 0, 2362, 334, 2364, 0, 132,
	0, 2189, 0, 5064, 0, 0, 0, 5070, 4192, 0,
	0, 334, 2209, 0, 0, 0, 0, 0, 0, 1635,
	0, 5180, 2206, 0, 0, 1394, 0, 0, 0, 0,
	0, 0, 5113, 4381, 0, 334, 0, 0, 0, 0,
	4449, 0, 0, 1620, 0, 0, 0, 2228, 0, 0,
	4192, 0, 897, 0, 0, 0, 0, 0, 5175, 4192,
	2201, 2202, 2208, 2231, 2207, 2203, 0, 2200, 2198, 2199,
	2191, 2192, 2193, 2194, 2196, 2197, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 5214, 5168, 5162, 5163, 5164,
	5165, 5166, 0, 2187, 2188, 0, 2221, 2222, 2223, 2232,
	2233, 2234, 0, 0, 0, 0, 0, 0, 0, 2212,
	2213, 2214, 2215, 0, 334, 0, 2225, 2218, 0, 2195,
	0, 0, 0, 0, 2219, 0, 0, 2190, 0, 0,
	0, 5185, 5183, 0, 0, 0, 0, 0, 0, 2238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2224, 0, 0, 0, 0, 0, 0, 0,
	2244, 0, 0, 0, 0, 0, 5177, 5249, 0, 0,
	2224, 2189, 0, 0, 0, 0, 0, 0, 0, 0,
	2217, 2220, 2209, 0, 0, 5176, 0, 0, 0, 0,
	0, 0, 2206, 0, 0, 4073, 0, 2224, 4355, 5184,
	5186, 0, 2224, 0, 0, 0, 0, 0, 2224, 4371,
	0, 0, 2204, 2205, 0, 0, 0, 0, 1110, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4370, 4360, 4358, 4362, 4364, 4354,
	4356, 4372, 4380, 4374, 1123, 0, 0, 2210, 0, 0,
	0, 0, 0, 5307, 4366, 4368, 4376, 132, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1121, 334, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2212,
	2213, 2214, 2215, 0, 0, 0, 0, 0, 0, 2195,
	0, 4382, 0, 897, 0, 1124, 5332, 897, 4154, 0,
	0, 0, 0, 0, 0, 897, 0, 0, 2224, 0,
	0, 0, 0, 2224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2224, 0, 0,
	0, 2241, 2224, 0, 0, 0, 0, 2229, 0, 0,
	0, 2239, 0, 0, 0, 0, 0, 0, 0, 0,
	2217, 2220, 1117, 4379, 334, 0, 0, 0, 0, 0,
	0, 1133, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2235, 0, 2236, 0, 0, 1122, 0,
	0, 0, 2204, 2205, 0, 0, 0, 0, 0, 0,
	0, 0, 334, 0, 2216, 0, 0, 0, 0, 0,
	0, 0, 2227, 0, 0, 0, 0, 0, 0, 4868,
	0, 0, 0, 0, 4043, 0, 0, 2210, 0, 0,
	0, 0, 2211, 0, 0, 0, 4373, 0, 0, 2224,
	2224, 2224, 2224, 2224, 2224, 2224, 2224, 0, 1115, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2224,
	0, 0, 0, 0, 4318, 0, 966, 0, 0, 0,
	0, 0, 2224, 0, 0, 0, 0, 0, 0, 2237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1119, 0, 0, 0,
	2226, 0, 0, 0, 0, 0, 2243, 0, 0, 0,
	0, 2241, 0, 0, 0, 991, 4383, 0, 0, 0,
	0, 3286, 0, 0, 0, 0, 4365, 4367, 0, 0,
	4375, 0, 0, 0, 0, 0, 2224, 0, 0, 0,
	0, 0, 2224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4952, 0, 0, 4952, 0, 0,
	4952, 0, 0, 1132, 0, 0, 0, 0, 4952, 0,
	0, 0, 0, 0, 2216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1371,
	0, 1371, 2211, 0, 0, 0, 4493, 0, 4326, 0,
	0, 0, 2207, 2203, 0, 2200, 2198, 2199, 2191, 2192,
	2193, 2194, 2196, 2197, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2187, 2188, 2230, 4868, 0, 334,
	0, 0, 0, 914, 914, 1635, 0, 0, 0, 1112,
	0, 0, 0, 0, 0, 0, 0, 0, 2218, 0,
	1348, 0, 0, 1348, 1348, 2219, 0, 0, 2190, 0,
	0, 0, 0, 0, 0, 0, 2243, 1116, 0, 0,
	334, 1820, 5595, 0, 1118, 4449, 2409, 0, 0, 0,
	0, 334, 0, 0, 0, 0, 2348, 0, 5616, 0,
	4326, 2244, 0, 334, 0, 0, 0, 334, 0, 334,
	0, 0, 2189, 2224, 0, 0, 334, 0, 1864, 0,
	0, 0, 3107, 2209, 0, 334, 1976, 0, 0, 965,
	0, 0, 0, 2206, 0, 0, 0, 0, 4192, 334,
	0, 0, 1371, 0, 0, 1128, 0, 0, 0, 0,
	1231, 4192, 2264, 0, 1114, 0, 2264, 0, 0, 0,
	0, 0, 0, 0, 0, 2228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2201, 2202,
	2208, 2231, 2207, 2203, 0, 2200, 2198, 2199, 2191, 2192,
	2193, 2194, 2196, 2197, 0, 1604, 5209, 0, 0, 1978,
	1978, 0, 0, 5714, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1111, 0, 0, 0, 0, 0, 963,
	2212, 2213, 2214, 2215, 0, 0, 0, 0, 0, 0,
	2195, 0, 0, 0, 1521, 2122, 2123, 0, 0, 0,
	0, 0, 2224, 0, 1120, 0, 0, 0, 5708, 2364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 967, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1113, 0, 0, 0, 0, 0,
	0, 1127, 0, 2224, 0, 0, 0, 0, 0, 0,
	0, 2217, 2220, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1130, 1131, 0, 1126,
	0, 0, 334, 0, 0, 132, 0, 0, 2011, 0,
	334, 0, 0, 2204, 2205, 1978, 0, 0, 0, 0,
	0, 0, 1378, 0, 0, 0, 0, 0, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1635, 1635,
	1635, 1635, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1635, 1635, 1635, 1635, 1978, 334, 1635, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2677, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4192, 4192, 0, 4865, 0, 0, 4952, 4192, 0,
	0, 0, 2241, 0, 0, 0, 5857, 0, 5857, 2011,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4192, 0, 2409, 0, 0, 0, 4865, 0, 2011, 2011,
	334, 4868, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4868, 0, 334, 4868, 0, 334,
	5893, 0, 0, 0, 0, 4952, 0, 0, 4952, 0,
	0, 0, 4952, 0, 0, 2216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4192, 0, 4192, 334, 0, 132, 132, 0, 0,
	0, 0, 0, 2211, 0, 2379, 0, 0, 0, 4326,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	991, 0, 0, 0, 0, 2404, 0, 1976, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4192,
	4192, 0, 0, 0, 5857, 0, 4449, 0, 5986, 0,
	0, 0, 0, 0, 4865, 0, 0, 2243, 0, 0,
	1027, 2224, 0, 0, 0, 2224, 0, 0, 0, 0,
	0, 1976, 334, 0, 0, 0, 0, 0, 0, 0,
	2224, 6010, 0, 0, 0, 0, 334, 0, 0, 0,
	0, 2224, 2224, 2224, 2224, 2224, 2224, 2224, 2224, 2224,
	2224, 2224, 2224, 2224, 2224, 2224, 2224, 2224, 2224, 2224,
	2224, 2224, 2224, 2224, 2224, 2224, 2224, 2224, 2224, 2224,
	2224, 2224, 2224, 2224, 2224, 2224, 2224, 2224, 0, 0,
	0, 0, 0, 2224, 0, 2224, 2224, 2224, 2224, 0,
	0, 0, 0, 0, 0, 0, 0, 3286, 3286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2224, 2207, 2203, 0, 2200, 2198, 2199, 2191,
	2192, 2193, 2194, 2196, 2197, 0, 5169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 5167, 0, 0, 0, 5332, 0, 0, 0,
	0, 0, 0, 2609, 5159, 0, 0, 0, 2224, 0,
	0, 0, 0, 0, 5178, 5179, 0, 0, 2626, 0,
	2628, 0, 2630, 0, 0, 2632, 0, 2633, 0, 0,
	0, 0, 0, 132, 0, 132, 0, 0, 2224, 0,
	0, 2224, 0, 0, 2224, 0, 0, 2224, 0, 0,
	0, 0, 0, 2224, 2224, 2224, 2224, 2224, 2224, 2224,
	0, 0, 0, 0, 0, 0, 0, 334, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2674, 2675,
	4192, 2409, 0, 2409, 0, 0, 5616, 0, 0, 0,
	0, 0, 0, 132, 0, 334, 132, 5181, 5182, 0,
	0, 5172, 132, 0, 0, 6170, 0, 6170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2224, 5161, 0, 4638, 0, 3286, 3286, 3286,
	3286, 0, 991, 2224, 0, 2224, 0, 0, 0, 5160,
	2224, 0, 0, 0, 0, 4952, 4952, 0, 0, 0,
	4952, 0, 1620, 0, 0, 0, 0, 0, 3257, 3258,
	3259, 3260, 3253, 3254, 3255, 3256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4868, 0,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 5170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3107, 0, 0, 0, 0, 0, 0, 0, 5616,
	0, 0, 0, 5857, 0, 5857, 0, 2011, 0, 0,
	0, 4192, 2264, 0, 0, 0, 0, 0, 334, 0,
	0, 0, 0, 0, 3233, 3234, 3235, 3236, 0, 0,
	0, 0, 5113, 0, 6285, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2011, 0, 0, 3245,
	3246, 3247, 3248, 3241, 3242, 3243, 3244, 3249, 3250, 3251,
	3252, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 5180, 0,
	0, 2926, 0, 0, 5249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1378, 1378, 1378, 0, 2948,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 5175, 2961, 0, 2961, 0,
	0, 0, 0, 0, 2968, 3229, 3230, 3231, 3232, 3237,
	3238, 3239, 3240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 5168, 5162, 5163, 5164, 5165, 5166, 4952,
	6352, 0, 0, 0, 0, 0, 0, 5616, 0, 1027,
	0, 0, 0, 0, 0, 1786, 0, 0, 1792, 0,
	0, 0, 0, 2995, 0, 0, 0, 5857, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 5185, 5183,
	0, 0, 5857, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1521, 0, 0, 0, 0,
	0, 0, 0, 0, 3107, 0, 0, 0, 0, 0,
	334, 0, 0, 5177, 0, 1968, 0, 0, 0, 0,
	0, 1986, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 5176, 0, 914, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 5184, 5186, 0, 0,
	0, 0, 0, 2013, 0, 2018, 0, 2024, 0, 0,
	0, 0, 0, 5857, 0, 5857, 0, 0, 2677, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 5857, 0, 334, 5857, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2409, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2011,
	0, 2011, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2124, 0, 2129, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1635, 1635, 1635, 0, 2143,
	0, 2148, 0, 0, 2187, 2188, 0, 2221, 2222, 2223,
	2232, 2233, 2234, 6494, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2225, 2218, 6170,
	0, 0, 334, 0, 1462, 2219, 0, 3937, 2190, 0,
	0, 4952, 0, 0, 0, 0, 0, 0, 0, 0,
	2238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4192, 0, 0,
	0, 2244, 0, 0, 0, 5060, 5061, 0, 0, 0,
	0, 0, 2189, 0, 0, 0, 0, 0, 0, 0,
	0, 872, 0, 2209, 0, 0, 0, 0, 0, 0,
	0, 0, 334, 2206, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 5249, 0, 0, 0, 2245, 2246,
	2247, 2248, 2249, 2250, 2251, 2252, 0, 0, 0, 0,
	0, 0, 0, 0, 5149, 0, 0, 0, 0, 0,
	0, 0, 0, 2011, 0, 0, 5188, 0, 0, 0,
	0, 0, 2265, 0, 2187, 2188, 0, 0, 2278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 334, 0, 0, 0, 2948, 0, 2218, 2224,
	2212, 2213, 2214, 2215, 0, 2219, 0, 0, 2190, 0,
	2195, 0, 1027, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2244, 0, 0, 0, 0, 5616, 0, 0, 0,
	0, 4071, 2189, 0, 0, 0, 0, 0, 2229, 0,
	0, 0, 2239, 2209, 0, 0, 2342, 2342, 2342, 0,
	0, 2217, 2220, 2206, 0, 0, 0, 4100, 0, 4103,
	0, 0, 4326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2235, 4192, 2236, 0, 0, 0,
	0, 0, 0, 2204, 2205, 0, 0, 5857, 0, 5857,
	0, 0, 4952, 0, 2677, 0, 0, 0, 0, 0,
	0, 0, 0, 2227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 5208, 0, 2210, 0,
	0, 0, 872, 0, 0, 0, 0, 4150, 0, 1027,
	0, 0, 0, 0, 4326, 0, 0, 0, 0, 0,
	2212, 2213, 2214, 2215, 4161, 1976, 1976, 4164, 0, 0,
	2195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4172, 4192, 0, 0, 2224, 2519, 2224, 0, 0,
	2237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4192, 2241, 0, 0, 0, 0, 0, 0, 0,
	0, 2217, 2220, 0, 0, 0, 1378, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1521,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2204, 2205, 0, 4952, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4952, 0, 0, 2216, 0, 5410, 5411, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2210, 0,
	0, 1976, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2211, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2648, 0, 0, 0, 0, 2230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2241, 0, 0, 0, 0, 2243, 2689, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4425,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2948,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1978, 0, 2216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2224, 0, 2224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2211, 0, 5527, 2228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 5543, 5544, 0, 2201,
	2202, 2208, 2231, 2207, 2203, 0, 2200, 2198, 2199, 2191,
	2192, 2193, 2194, 2196, 2197, 4525, 0, 0, 0, 0,
	5553, 0, 0, 0, 5222, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 5577, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2243, 0, 0,
	0, 0, 0, 0, 0, 132, 132, 0, 132, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2224, 2224, 0, 3286, 3286, 0, 0,
	2224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4638, 4638, 0, 0, 2224, 2224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2224, 0, 0, 5657, 0, 0, 0, 0,
	2986, 5663, 5664, 0, 2224, 0, 132, 132, 0, 132,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2207, 2203, 0, 2200, 2198, 2199, 2191,
	2192, 2193, 2194, 2196, 2197, 0, 0, 0, 0, 0,
	0, 0, 0, 3286, 3286, 3286, 3286, 3286, 3286, 3286,
	3286, 3286, 3286, 3286, 3286, 3286, 3286, 3286, 3286, 3286,
	3286, 3286, 3286, 0, 3286, 4638, 4638, 4638, 4638, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3017, 2224, 3021, 0, 0, 0, 0, 0, 0, 3036,
	0, 0, 1378, 0, 0, 0, 0, 0, 3047, 3048,
	3049, 3050, 3051, 3052, 3053, 3054, 3055, 3056, 3057, 3058,
	3059, 3060, 3061, 3062, 3063, 3064, 3065, 3066, 3067, 3068,
	3069, 3070, 3071, 3072, 3073, 3074, 3075, 3076, 3077, 3078,
	3079, 3080, 3081, 3082, 3083, 0, 3089, 0, 3091, 3092,
	3093, 3094, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1371, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3118, 0, 0, 132, 132, 0,
	0, 0, 0, 0, 0, 0, 2265, 0, 0, 0,
	3164, 5770, 5771, 0, 0, 1027, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3194, 3197, 3200, 3203,
	0, 0, 3209, 3210, 3211, 3212, 3213, 3214, 3215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 872, 0, 3278, 0, 3289, 3291, 3296, 0, 0,
	0, 5813, 5814, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2187, 2188, 0, 2221,
	2222, 2223, 2232, 2233, 2234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2225,
	2218, 0, 0, 3945, 0, 0, 0, 2219, 0, 0,
	2190, 0, 2224, 0, 0, 0, 0, 872, 0, 0,
	0, 0, 2238, 0, 0, 0, 872, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2209, 0, 0, 0, 0,
	0, 0, 0, 0, 872, 2206, 0, 0, 0, 0,
	0, 1521, 1521, 0, 0, 2224, 2224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2986, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 872, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 872, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 872, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2212, 2213, 2214, 2215, 0, 0, 0, 0,
	0, 0, 2195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 6036, 0, 6038, 6039, 6040, 0,
	0, 6043, 6044, 0, 0, 0, 0, 0, 0, 0,
	2229, 0, 0, 0, 2239, 0, 0, 0, 0, 0,
	0, 0, 0, 2217, 2220, 0, 0, 0, 0, 0,
	0, 0, 2224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2235, 0, 2236, 0,
	0, 0, 4131, 0, 0, 2204, 2205, 0, 4133, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2227, 0, 0, 0, 0,
	0, 0, 0, 6094, 0, 6099, 6100, 0, 0, 0,
	2210, 0, 0, 0, 0, 0, 6111, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2224, 2224, 0, 0, 2224, 4638, 4638, 2224, 0, 0,
	0, 2224, 0, 0, 0, 0, 0, 0, 2224, 0,
	0, 0, 0, 0, 0, 0, 0, 2224, 0, 0,
	0, 0, 2237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2224, 2224, 2224, 2224, 2224, 0, 0, 0, 0, 0,
	0, 2224, 0, 2224, 2241, 0, 4638, 4638, 4638, 4638,
	4638, 4638, 4638, 4638, 4638, 4638, 4638, 4638, 4638, 4638,
	4638, 4638, 4638, 4638, 4638, 4638, 0, 0, 0, 4638,
	0, 0, 2224, 2224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2224, 0, 0, 872, 0, 872,
	0, 0, 0, 2224, 0, 0, 0, 0, 0, 872,
	0, 0, 872, 0, 0, 0, 0, 2216, 0, 0,
	0, 0, 0, 0, 0, 2224, 0, 6211, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2447, 0, 0, 0, 2211, 0, 0, 872, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4737,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2230,
	0, 132, 0, 2224, 0, 0, 4402, 0, 4404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1521, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1521, 0, 0, 0, 0, 0, 0, 2243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2224,
	0, 1976, 1976, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 6305, 0, 0, 0, 0, 0, 0, 0,
	2224, 0, 872, 0, 0, 0, 132, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2224, 2224, 0, 872, 0, 0, 872, 872,
	872, 872, 872, 0, 0, 0, 0, 0, 2228, 0,
	0, 2245, 2246, 0, 0, 0, 0, 0, 0, 0,
	0, 2201, 2202, 2208, 2231, 2207, 2203, 1378, 2200, 2198,
	2199, 2191, 2192, 2193, 2194, 2196, 2197, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4836, 0,
	0, 0, 0, 0, 0, 4841, 0, 1976, 2187, 2188,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4529, 4530, 0, 0, 4861, 0, 4536, 132, 0,
	0, 0, 2218, 0, 0, 1521, 0, 0, 0, 2219,
	0, 0, 2190, 1521, 0, 0, 4550, 4551, 0, 0,
	0, 0, 3164, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4917, 4919, 0,
	0, 2948, 0, 0, 6397, 2244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2189, 0, 2224, 0,
	0, 0, 0, 0, 0, 0, 0, 2209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2206, 0, 4568,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2224, 2224, 4580, 0, 0, 2224, 2224,
	0, 0, 2224, 2224, 0, 0, 0, 0, 2224, 0,
	0, 0, 0, 2224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3286, 2986,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4535, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2212, 2213, 2214, 2215, 0, 0,
	0, 0, 0, 0, 2195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 872, 872, 0, 3296,
	3296, 3296, 0, 132, 0, 0, 0, 872, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2342, 2224,
	0, 3081, 3082, 3083, 3089, 0, 0, 0, 0, 0,
	0, 0, 872, 0, 0, 2217, 2220, 0, 5093, 0,
	0, 0, 0, 0, 0, 0, 0, 3286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 872, 0, 2204, 2205, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 132, 0, 0, 0, 0, 0,
	0, 0, 2210, 0, 0, 0, 0, 0, 0, 0,
	2224, 872, 0, 872, 132, 872, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 872, 872, 0, 0, 0, 0, 0,
	0, 5204, 0, 132, 0, 0, 0, 872, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2224, 2224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2447, 2447, 872, 0, 2241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1175, 0, 0,
	0, 0, 1176, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2224, 0, 0, 0, 2216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2224, 2224, 2224, 0, 0, 0, 0, 0, 0, 0,
	2224, 2224, 4638, 3286, 0, 0, 0, 2211, 872, 2224,
	0, 1177, 2224, 1191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 132, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1178, 0, 0, 0, 0, 1179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1200, 0, 0, 0, 0, 0, 872, 0, 0, 1180,
	0, 2243, 0, 872, 0, 0, 0, 0, 4638, 3286,
	0, 872, 0, 0, 0, 0, 1198, 0, 0, 0,
	0, 0, 0, 0, 0, 2224, 0, 872, 0, 0,
	0, 0, 0, 2224, 3286, 0, 0, 0, 0, 0,
	0, 2224, 1173, 1170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2224, 0, 2224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2224, 0, 0, 5404,
	1181, 0, 2224, 2224, 0, 2224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1202, 0,
	0, 0, 0, 0, 966, 0, 0, 2187, 2188, 0,
	2221, 2222, 2223, 2232, 2233, 2234, 0, 2207, 2203, 0,
	2200, 2198, 2199, 2191, 2192, 2193, 2194, 2196, 2197, 0,
	2225, 2218, 0, 0, 0, 0, 0, 0, 2219, 0,
	0, 2190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2238, 0, 0, 2187, 2188, 0, 2221,
	2222, 2223, 2232, 2233, 2234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2244, 0, 0, 0, 0, 2225,
	2218, 0, 4638, 3107, 0, 2189, 0, 2219, 0, 0,
	2190, 1201, 0, 0, 0, 0, 2209, 0, 0, 0,
	0, 1196, 2238, 0, 0, 0, 2206, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 872, 0, 2244, 2224, 4638, 0, 0, 2224, 0,
	0, 0, 0, 0, 2189, 0, 0, 0, 0, 0,
	0, 0, 0, 872, 872, 2209, 0, 4638, 0, 0,
	0, 0, 0, 0, 0, 2206, 0, 0, 0, 0,
	0, 0, 0, 0, 4677, 0, 0, 0, 0, 0,
	0, 0, 1195, 0, 0, 0, 0, 2224, 0, 0,
	0, 0, 0, 1182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2212, 2213, 2214, 2215, 0, 0, 0,
	0, 0, 0, 2195, 0, 0, 0, 0, 0, 4677,
	0, 0, 0, 0, 0, 0, 2948, 0, 1183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2212, 2213, 2214, 2215, 872, 0, 0, 0,
	0, 2229, 2195, 0, 132, 2239, 0, 5593, 0, 0,
	0, 0, 0, 0, 2217, 2220, 0, 965, 5605, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1169, 0, 0, 1192, 2948, 0, 2948, 2235, 0, 2236,
	0, 0, 0, 5634, 0, 1184, 2204, 2205, 0, 0,
	2229, 0, 0, 0, 2239, 0, 0, 0, 0, 0,
	2447, 0, 0, 2217, 2220, 1378, 2227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1378, 1190, 132,
	0, 2210, 132, 0, 0, 0, 2235, 0, 2236, 0,
	0, 0, 2224, 0, 0, 2204, 2205, 0, 0, 1185,
	0, 0, 0, 1186, 1205, 0, 1204, 963, 0, 0,
	0, 1187, 0, 0, 0, 2227, 0, 0, 0, 2224,
	0, 0, 0, 0, 0, 0, 0, 1188, 0, 0,
	2210, 0, 1197, 2237, 0, 0, 0, 0, 1206, 0,
	872, 1203, 0, 0, 0, 0, 0, 0, 0, 0,
	967, 0, 872, 0, 2226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2241, 0, 0, 0, 964,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4898, 0, 0, 0, 2216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 132, 0, 132, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2211, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 872, 0, 2216, 0, 0,
	2224, 0, 0, 0, 0, 0, 0, 872, 0, 872,
	2230, 0, 0, 0, 872, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2211, 0, 4971, 4972, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2243, 0, 0, 0, 0, 0, 0, 0, 0, 2230,
	0, 132, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 5877, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2948, 0, 0, 0, 0, 0, 2228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2201, 2202, 2208, 2231, 2207, 2203, 0, 2200,
	2198, 2199, 2191, 2192, 2193, 2194, 2196, 2197, 0, 0,
	0, 0, 0, 4589, 0, 0, 0, 4590, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2228, 0,
	0, 0, 0, 0, 5128, 0, 0, 0, 0, 0,
	0, 2201, 2202, 2208, 2231, 2207, 2203, 0, 2200, 2198,
	2199, 2191, 2192, 2193, 2194, 2196, 2197, 0, 0, 0,
	0, 0, 3160, 0, 2187, 2188, 3161, 2221, 2222, 2223,
	2232, 2233, 2234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2225, 2218, 0,
	0, 0, 0, 0, 0, 2219, 0, 3036, 2190, 0,
	0, 0, 0, 0, 5206, 5207, 0, 0, 5210, 2948,
	2238, 0, 5213, 0, 0, 0, 0, 0, 0, 0,
	0, 5217, 0, 6016, 0, 0, 0, 0, 0, 0,
	5224, 2244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2189, 0, 5233, 0, 0, 0, 0, 0,
	0, 0, 0, 2209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2206, 5256, 5257, 0, 5258, 5259, 5260,
	0, 0, 0, 0, 0, 0, 0, 872, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 872, 5267, 0,
	0, 0, 5269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 5298, 5299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 5310, 0, 0, 0, 0, 0,
	2212, 2213, 2214, 2215, 0, 0, 0, 0, 0, 5319,
	2195, 0, 0, 0, 0, 0, 0, 2187, 2188, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2218, 0, 0, 0, 0, 5341, 3036, 2219, 0,
	0, 2190, 0, 0, 6135, 1976, 0, 0, 2229, 0,
	0, 0, 2239, 0, 0, 0, 0, 0, 0, 0,
	0, 2217, 2220, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 6156, 0, 2244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2235, 2189, 2236, 0, 0, 0,
	0, 0, 0, 2204, 2205, 0, 2209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2206, 0, 0, 0,
	0, 0, 5399, 2227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2210, 0,
	0, 2187, 2188, 0, 2221, 2222, 2223, 2232, 2233, 2234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2225, 2218, 0, 0, 0, 0,
	0, 0, 2219, 0, 0, 2190, 0, 2948, 0, 4528,
	0, 0, 0, 0, 0, 0, 0, 2238, 0, 0,
	2237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2212, 2213, 2214, 2215, 5445, 2244, 0,
	0, 2226, 0, 2195, 0, 0, 0, 0, 0, 2189,
	0, 0, 2241, 0, 0, 0, 0, 0, 0, 0,
	2209, 0, 0, 0, 0, 2961, 0, 0, 0, 0,
	2206, 5476, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1426, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2217, 2220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 5508, 5509, 0, 0,
	0, 0, 0, 0, 0, 0, 2204, 2205, 333, 333,
	871, 333, 0, 2211, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2212, 2213, 2214,
	2215, 0, 0, 0, 0, 0, 333, 2195, 0, 0,
	0, 2210, 0, 0, 0, 1148, 0, 2230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1148, 0, 0, 0,
	0, 0, 0, 0, 0, 2229, 0, 2243, 0, 2239,
	0, 0, 0, 0, 0, 0, 0, 0, 2217, 2220,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2235, 0, 2236, 0, 2241, 2342, 0, 0, 0,
	2204, 2205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2227, 0, 0, 0, 0, 0, 0, 0, 2342, 0,
	0, 0, 0, 0, 0, 2210, 0, 5654, 0, 0,
	0, 0, 0, 0, 0, 0, 2228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2216, 2201,
	2202, 2208, 2231, 2207, 2203, 0, 2200, 2198, 2199, 2191,
	2192, 2193, 2194, 2196, 2197, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4592, 0, 2211, 2237, 0, 0,
	0, 872, 0, 6450, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 5689, 5690, 0, 2226, 0,
	0, 5694, 5695, 0, 0, 0, 5698, 5699, 0, 2241,
	0, 1533, 0, 872, 0, 872, 0, 0, 0, 0,
	0, 5704, 0, 0, 0, 872, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 5709, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2447, 0, 0, 0, 872, 0, 0, 0, 0, 0,
	0, 0, 2216, 0, 0, 0, 0, 0, 0, 6508,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2447,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 870,
	2211, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2187, 2188, 0, 2221, 2222, 2223,
	2232, 2233, 2234, 0, 2230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2225, 2218, 6560,
	0, 0, 0, 0, 0, 2219, 2207, 2203, 2190, 2200,
	2198, 2199, 2191, 2192, 2193, 2194, 2196, 2197, 0, 0,
	2238, 0, 0, 0, 2243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2189, 5815, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2209, 0, 0, 0, 0, 0, 0,
	0, 0, 1378, 2206, 0, 0, 0, 0, 0, 2961,
	0, 872, 0, 0, 872, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2228, 0, 2447, 0, 0, 2187, 2188,
	0, 0, 0, 0, 0, 0, 2201, 2202, 2208, 2231,
	2207, 2203, 0, 2200, 2198, 2199, 2191, 2192, 2193, 2194,
	2196, 2197, 2218, 0, 0, 0, 0, 0, 5906, 2219,
	0, 4591, 2190, 0, 0, 0, 0, 0, 0, 0,
	2212, 2213, 2214, 2215, 0, 0, 0, 0, 0, 0,
	2195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2244, 0, 0, 1378, 0,
	0, 0, 0, 0, 0, 0, 2189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2206, 2229, 0,
	5959, 5960, 2239, 872, 0, 0, 0, 0, 0, 0,
	0, 2217, 2220, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2235, 0, 2236, 0, 0, 0,
	0, 0, 0, 2204, 2205, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2210, 0,
	0, 0, 0, 0, 2212, 2213, 2214, 2215, 0, 6041,
	0, 0, 0, 0, 2195, 0, 0, 0, 0, 0,
	872, 0, 872, 0, 0, 0, 872, 0, 6056, 6057,
	6058, 0, 0, 872, 872, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3036, 0,
	2237, 6066, 6067, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 948, 0, 0, 0, 6075, 6078,
	0, 2226, 0, 0, 0, 2217, 2220, 0, 0, 0,
	0, 0, 2241, 0, 0, 932, 0, 0, 3036, 0,
	933, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 872, 0, 0, 0, 0, 2204, 2205, 0,
	0, 0, 0, 0, 872, 0, 872, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 934,
	0, 0, 2210, 0, 0, 2216, 0, 0, 0, 0,
	0, 0, 935, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2447, 0, 0, 2211, 0, 936, 0, 0, 0, 0,
	0, 0, 0, 872, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 6171, 333, 333, 0, 0, 954, 0,
	872, 0, 6179, 0, 0, 0, 0, 2230, 0, 0,
	2447, 2447, 0, 333, 0, 333, 333, 6187, 0, 333,
	1378, 0, 0, 0, 937, 0, 2241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 6200, 2447, 2447, 6202, 0, 0, 2243, 0, 0,
	938, 929, 0, 0, 0, 0, 0, 0, 6212, 0,
	0, 0, 0, 6218, 6219, 0, 0, 0, 0, 6221,
	0, 0, 0, 0, 0, 2447, 0, 0, 939, 0,
	0, 0, 0, 0, 930, 0, 0, 0, 0, 2216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 966, 872, 872, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2211, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 953, 0, 0, 0, 2228, 0, 333, 0,
	0, 872, 0, 0, 0, 0, 0, 0, 0, 2201,
	2202, 2208, 2231, 2207, 2203, 0, 2200, 2198, 2199, 2191,
	2192, 2193, 2194, 2196, 2197, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4588, 333, 0, 333, 333, 333,
	333, 0, 0, 333, 333, 0, 0, 0, 0, 0,
	0, 2243, 0, 0, 0, 0, 2447, 0, 2447, 950,
	0, 0, 0, 0, 0, 0, 1148, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 872, 0,
	0, 0, 0, 872, 872, 872, 872, 0, 0, 0,
	0, 0, 0, 872, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 333, 333, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 961,
	0, 941, 0, 0, 0, 0, 0, 0, 0, 0,
	6360, 0, 333, 333, 6364, 0, 0, 2207, 2203, 0,
	2200, 2198, 2199, 2191, 2192, 2193, 2194, 2196, 2197, 0,
	0, 0, 962, 931, 0, 0, 942, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 965, 333, 0, 0, 0,
	0, 0, 0, 943, 0, 0, 2342, 0, 959, 960,
	0, 957, 0, 0, 6413, 0, 0, 0, 0, 0,
	951, 0, 0, 944, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 872, 872, 0, 0, 0, 0, 0,
	0, 872, 0, 0, 872, 872, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 945, 0, 952,
	0, 3036, 3036, 0, 0, 963, 0, 0, 872, 946,
	0, 6078, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 947, 0, 0, 0, 0,
	955, 0, 0, 0, 872, 0, 1736, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 967, 2447,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	949, 0, 0, 0, 0, 0, 0, 964, 0, 0,
	0, 0, 0, 0, 0, 0, 1378, 0, 0, 2187,
	2188, 0, 2221, 2222, 2223, 2232, 2233, 2234, 2447, 0,
	0, 0, 0, 0, 0, 0, 0, 872, 0, 0,
	872, 0, 2225, 2218, 0, 0, 0, 0, 0, 0,
	2219, 0, 1871, 2190, 872, 0, 0, 0, 0, 0,
	0, 1736, 0, 872, 0, 2238, 0, 0, 872, 872,
	872, 873, 0, 0, 0, 0, 871, 0, 1533, 0,
	0, 0, 333, 0, 0, 0, 2244, 0, 0, 0,
	0, 0, 0, 0, 6578, 6578, 6578, 2189, 0, 0,
	0, 0, 333, 871, 333, 0, 0, 872, 2209, 1736,
	0, 0, 1148, 0, 0, 0, 0, 0, 2206, 0,
	872, 1148, 0, 0, 0, 0, 335, 335, 0, 335,
	0, 2447, 0, 0, 0, 0, 0, 6605, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 335, 0, 0, 1736, 0, 333,
	0, 0, 0, 335, 0, 0, 0, 1736, 333, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1736, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 335, 0, 0, 0, 0, 0,
	0, 0, 6578, 0, 0, 2212, 2213, 2214, 2215, 0,
	0, 0, 0, 0, 0, 2195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 872, 0, 0,
	0, 0, 0, 0, 0, 872, 0, 0, 0, 872,
	872, 0, 0, 0, 0, 0, 0, 2447, 0, 0,
	0, 0, 0, 872, 0, 0, 0, 0, 0, 0,
	0, 872, 0, 2229, 0, 0, 0, 2239, 0, 872,
	872, 0, 0, 0, 0, 0, 2217, 2220, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 872, 0, 0, 0, 0, 0, 2235,
	333, 2236, 0, 0, 0, 0, 0, 0, 2204, 2205,
	0, 948, 0, 1148, 0, 333, 0, 333, 0, 333,
	0, 0, 333, 0, 333, 0, 0, 0, 2227, 872,
	872, 0, 932, 0, 0, 0, 0, 933, 0, 0,
	0, 872, 0, 2210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 6578, 6766, 0, 0, 0, 0,
	0, 872, 0, 872, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 333, 333, 333, 333, 0,
	0, 333, 333, 0, 0, 0, 934, 0, 0, 0,
	0, 0, 0, 0, 0, 2237, 0, 0, 872, 935,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2226, 0, 0, 0,
	0, 0, 936, 0, 0, 0, 0, 2241, 0, 872,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 954, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 937, 0, 0, 1871, 0, 0, 1871, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 872, 872,
	2216, 0, 0, 0, 0, 0, 0, 938, 929, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 872,
	0, 0, 0, 1736, 0, 0, 0, 0, 2211, 0,
	0, 0, 0, 0, 0, 939, 0, 0, 0, 0,
	0, 930, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 966,
	872, 0, 2230, 333, 0, 872, 0, 1148, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 953,
	0, 0, 872, 872, 872, 872, 872, 0, 872, 872,
	872, 0, 2243, 0, 0, 0, 0, 0, 333, 333,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 333, 0,
	0, 872, 0, 0, 0, 0, 0, 1871, 0, 333,
	0, 0, 0, 0, 0, 0, 333, 0, 0, 0,
	0, 0, 2447, 0, 0, 0, 950, 0, 0, 0,
	0, 0, 0, 333, 0, 333, 0, 0, 0, 0,
	1736, 333, 0, 1736, 1736, 1736, 1736, 1736, 0, 0,
	0, 872, 0, 872, 872, 0, 0, 0, 0, 0,
	0, 2228, 0, 0, 872, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2201, 2202, 2208, 2231, 2207, 2203,
	0, 2200, 2198, 2199, 2191, 2192, 2193, 2194, 2196, 2197,
	333, 0, 0, 0, 0, 0, 0, 0, 0, 4587,
	0, 0, 0, 0, 0, 0, 0, 0, 941, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	872, 0, 0, 0, 0, 0, 0, 0, 0, 962,
	931, 0, 0, 942, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2447, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 965, 0, 0, 0, 0, 0, 0, 0,
	943, 0, 0, 0, 0, 959, 960, 0, 957, 872,
	0, 0, 0, 0, 0, 872, 0, 951, 872, 872,
	944, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	872, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 945, 0, 952, 0, 872, 0,
	872, 0, 963, 0, 0, 1533, 946, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1533, 0, 947, 0, 0, 2447, 0, 955, 0, 0,
	0, 0, 872, 0, 333, 872, 0, 0, 0, 0,
	0, 1736, 1736, 0, 0, 967, 0, 0, 0, 0,
	0, 0, 1871, 0, 0, 0, 0, 949, 0, 0,
	872, 0, 0, 0, 964, 0, 0, 0, 0, 333,
	0, 0, 0, 0, 0, 0, 1148, 1736, 1148, 0,
	0, 333, 333, 0, 0, 2447, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 335, 335, 0, 0, 0, 0, 0, 0,
	1736, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 335, 0, 335, 335, 0, 333, 335, 0, 1148,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 333,
	0, 0, 333, 0, 0, 0, 333, 0, 0, 0,
	0, 0, 0, 0, 333, 333, 1736, 0, 1736, 333,
	1736, 333, 0, 0, 0, 0, 0, 0, 333, 333,
	0, 0, 0, 0, 0, 0, 0, 0, 1736, 1736,
	0, 0, 872, 333, 0, 0, 0, 0, 0, 0,
	0, 0, 1736, 0, 0, 0, 0, 872, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1737, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1871,
	0, 0, 872, 0, 0, 0, 0, 0, 333, 0,
	0, 0, 0, 339, 0, 0, 335, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 333, 0, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 333, 872, 0,
	872, 0, 0, 335, 1737, 335, 335, 335, 335, 0,
	0, 335, 335, 1737, 0, 0, 0, 0, 0, 872,
	0, 0, 872, 0, 0, 0, 872, 0, 0, 0,
	0, 0, 0, 0, 335, 0, 0, 872, 0, 0,
	0, 0, 0, 1871, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 333, 1138, 0, 0, 0, 0,
	0, 1737, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 333, 333, 333, 333, 0, 2187, 2188, 0, 2221,
	2222, 2223, 2232, 2233, 2234, 0, 1138, 0, 333, 335,
	335, 0, 0, 0, 0, 0, 0, 0, 0, 2225,
	2218, 0, 0, 0, 0, 0, 0, 2219, 0, 1737,
	2190, 0, 333, 0, 0, 0, 0, 0, 1871, 1737,
	335, 335, 2238, 0, 0, 0, 333, 0, 0, 0,
	0, 0, 0, 872, 0, 1737, 0, 0, 0, 0,
	333, 0, 1871, 2244, 0, 2447, 0, 0, 0, 0,
	0, 0, 0, 0, 2189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2206, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 335, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 333, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2212, 2213, 2214, 2215, 0, 0, 0, 1148,
	0, 0, 2195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 333, 0, 0, 0,
	2229, 0, 0, 0, 2239, 0, 1871, 0, 0, 0,
	0, 0, 0, 2217, 2220, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1736, 1736,
	0, 0, 0, 0, 0, 0, 2235, 0, 2236, 0,
	0, 0, 0, 0, 0, 2204, 2205, 0, 0, 0,
	0, 0, 333, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 872, 0, 872, 2227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2210, 0, 0, 333, 0, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 0, 0, 0, 0, 0, 0,
	335, 0, 0, 0, 0, 0, 1737, 0, 0, 1737,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	335, 335, 335, 0, 0, 0, 0, 0, 0, 0,
	335, 1736, 2237, 0, 0, 0, 0, 0, 0, 335,
	0, 0, 0, 0, 0, 1737, 0, 0, 0, 0,
	0, 0, 0, 2226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 335, 0, 0,
	0, 0, 0, 0, 0, 0, 335, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2187, 2188, 0, 2221, 2222,
	2223, 2232, 2233, 2234, 0, 0, 0, 2216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2225, 2218,
	0, 0, 0, 0, 0, 0, 2219, 0, 0, 2190,
	0, 0, 0, 0, 0, 2211, 0, 0, 0, 1737,
	0, 2238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1871, 0, 0, 0, 0,
	0, 0, 2244, 0, 0, 0, 0, 1736, 0, 2230,
	0, 0, 1737, 2189, 0, 1737, 1737, 1737, 1737, 1737,
	0, 0, 0, 0, 2209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2206, 0, 0, 0, 335, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2243,
	0, 335, 0, 335, 0, 335, 0, 335, 0, 0,
	335, 0, 335, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1533, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 335, 335, 335, 335, 0, 0, 335,
	335, 2212, 2213, 2214, 2215, 0, 0, 0, 0, 0,
	1736, 2195, 0, 0, 0, 0, 0, 0, 2228, 0,
	0, 0, 1736, 0, 1736, 0, 0, 0, 0, 1736,
	0, 2201, 2202, 2208, 2231, 2207, 2203, 0, 2200, 2198,
	2199, 2191, 2192, 2193, 2194, 2196, 2197, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4586, 0, 0, 2229,
	0, 0, 0, 2239, 0, 0, 0, 0, 0, 0,
	0, 0, 2217, 2220, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2235, 0, 2236, 0, 0,
	0, 0, 0, 0, 2204, 2205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 335, 0, 1737, 1737, 335, 0, 0, 0, 0,
	0, 0, 0, 0, 1737, 0, 0, 0, 0, 0,
	0, 2237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1737,
	0, 0, 2226, 0, 0, 0, 335, 335, 0, 0,
	0, 0, 0, 2241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 335, 0, 0, 0,
	0, 0, 1737, 0, 0, 0, 0, 335, 0, 0,
	0, 0, 0, 0, 335, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 335, 0, 335, 0, 0, 0, 0, 0, 335,
	1735, 0, 0, 0, 0, 0, 2216, 0, 1737, 0,
	1737, 0, 1737, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1737, 1737, 0, 0, 2211, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1737, 0, 0, 0, 335, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2230, 0,
	0, 0, 0, 0, 0, 0, 1870, 0, 0, 0,
	0, 1737, 1871, 0, 0, 1735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1737, 0, 0, 0, 0,
	0, 1735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1735, 0, 0, 0, 0, 0, 2228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1735, 0, 0,
	2201, 2202, 2208, 2231, 2207, 2203, 0, 2200, 2198, 2199,
	2191, 2192, 2193, 2194, 2196, 2197, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3161, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1737, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 335, 0, 1737, 0, 0, 0, 0, 0,
	1533, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 335, 0, 0,
	0, 0, 871, 0, 335, 0, 335, 0, 0, 335,
	335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1148, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 335, 0, 0, 335, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 335, 0, 0,
	335, 0, 1737, 0, 335, 0, 0, 0, 0, 0,
	0, 0, 335, 335, 0, 0, 0, 335, 0, 335,
	0, 0, 0, 0, 333, 0, 335, 335, 333, 333,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1737, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 335, 0, 0, 0,
	1737, 1737, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1870, 0,
	0, 1870, 335, 0, 335, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 335, 0, 0, 0, 0,
	0, 0, 2419, 0, 0, 333, 0, 0, 0, 0,
	0, 2419, 333, 0, 333, 0, 0, 1735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 335, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1737, 0, 0, 0, 0, 0, 335,
	335, 335, 335, 0, 333, 333, 0, 0, 333, 0,
	0, 0, 0, 0, 0, 871, 335, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 333,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 335, 0, 0, 0, 0, 0,
	0, 1870, 0, 0, 0, 0, 0, 0, 335, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1735, 0, 0, 1735, 1735, 1735,
	1735, 1735, 0, 0, 0, 0, 0, 0, 0, 0,
	1871, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1871, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2419, 0, 0, 335, 1737, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1737,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1871,
	0, 0, 0, 0, 0, 2187, 2188, 0, 2221, 2222,
	2223, 2232, 2233, 2234, 0, 333, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2225, 2218,
	1148, 0, 0, 0, 0, 0, 2219, 335, 0, 2190,
	0, 0, 0, 0, 0, 333, 0, 0, 0, 0,
	0, 2238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 333,
	0, 0, 2244, 0, 335, 0, 0, 0, 0, 0,
	0, 0, 0, 2189, 335, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2206, 0, 0, 0, 0, 0,
	0, 0, 1737, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1737, 0, 1737, 0, 0, 0,
	0, 1737, 0, 0, 0, 0, 0, 0, 0, 0,
	335, 0, 0, 0, 0, 0, 0, 0, 333, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1871, 0, 0, 1871,
	0, 335, 0, 0, 0, 0, 0, 0, 0, 0,
	335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2212, 2213, 2214, 2215, 0, 0, 0, 0, 0,
	0, 2195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1735, 1735, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1870, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2229,
	0, 1735, 0, 2239, 0, 0, 0, 0, 0, 0,
	0, 0, 2217, 2220, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1735, 2235, 0, 2236, 0, 0,
	0, 0, 0, 0, 2204, 2205, 0, 0, 0, 0,
	0, 0, 1533, 1533, 0, 0, 0, 0, 1871, 0,
	0, 0, 0, 0, 2227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2210,
	1735, 0, 1735, 0, 1735, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1735, 1735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1735, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2237, 0, 0, 0, 0, 0, 0, 1148, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2226, 1870, 0, 1736, 0, 1736, 0, 0,
	0, 1871, 0, 2241, 0, 0, 0, 0, 1736, 1736,
	0, 0, 0, 0, 0, 0, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1737, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1736, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1870, 0, 1736,
	0, 1736, 0, 0, 2211, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1871, 0,
	0, 0, 1870, 0, 0, 0, 0, 0, 2243, 0,
	0, 0, 0, 0, 0, 1871, 0, 2187, 2188, 0,
	2221, 2222, 2223, 2232, 2233, 2234, 1870, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 333, 0,
	2225, 2218, 0, 0, 0, 0, 0, 0, 2219, 0,
	0, 2190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2244, 0, 0, 0, 0, 0,
	0, 0, 0, 333, 0, 2189, 0, 2228, 0, 0,
	0, 0, 0, 0, 0, 0, 2209, 0, 0, 0,
	2201, 2202, 2208, 2231, 2207, 2203, 2206, 2200, 2198, 2199,
	2191, 2192, 2193, 2194, 2196, 2197, 0, 0, 0, 0,
	0, 6491, 0, 0, 333, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 333, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1871, 333, 0, 0,
	0, 333, 0, 333, 0, 0, 0, 0, 0, 0,
	333, 0, 0, 0, 0, 0, 0, 0, 0, 1533,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1533, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2212, 2213, 2214, 2215, 0, 0, 0,
	1870, 0, 0, 2195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1735, 1735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1736, 0, 0, 0, 0, 1736, 1736,
	1736, 1736, 0, 0, 0, 0, 0, 0, 1871, 0,
	0, 2229, 0, 0, 0, 2239, 0, 0, 0, 0,
	0, 0, 0, 0, 2217, 2220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2235, 0, 2236,
	0, 0, 0, 0, 0, 0, 2204, 2205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2227, 0, 0, 0,
	0, 0, 0, 0, 0, 1735, 0, 0, 0, 0,
	0, 2210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1533, 0, 0, 0,
	0, 0, 0, 0, 1533, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 871, 2237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1736, 1736,
	0, 333, 0, 0, 0, 0, 1736, 0, 0, 1736,
	1736, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1736, 0, 0, 0, 0, 0, 1870,
	0, 0, 0, 0, 0, 0, 0, 0, 2216, 0,
	0, 1735, 0, 0, 0, 0, 0, 0, 0, 1736,
	871, 0, 871, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1737, 0, 0, 0, 2211, 0, 0, 0,
	0, 0, 1737, 0, 333, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 335, 0, 0, 0, 0, 0,
	333, 0, 0, 333, 0, 0, 335, 0, 0, 0,
	2230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1737, 1736, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 333, 0,
	0, 0, 0, 0, 0, 1737, 0, 0, 1736, 0,
	2243, 0, 0, 1736, 1736, 1736, 0, 0, 0, 0,
	0, 0, 335, 0, 0, 0, 335, 335, 0, 0,
	0, 0, 0, 0, 1735, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1735, 0, 1735, 0,
	0, 0, 1736, 1735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1871, 0, 0, 871, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 333, 0, 0, 2228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	333, 0, 2201, 2202, 2208, 2231, 2207, 2203, 0, 2200,
	2198, 2199, 2191, 2192, 2193, 2194, 2196, 2197, 0, 0,
	0, 0, 0, 6379, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 335, 0, 0, 0, 0, 1737, 0,
	335, 1737, 335, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1871, 1871, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1871, 0, 0, 0,
	0, 0, 335, 335, 1736, 1736, 335, 0, 0, 0,
	0, 0, 0, 335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 335, 1871, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1736, 1736, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1871, 0, 0, 0,
	1737, 333, 333, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 333,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1871, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1871, 0, 0, 0, 0, 0,
	0, 0, 0, 335, 0, 0, 1870, 1737, 0, 1737,
	0, 0, 0, 1737, 0, 0, 0, 0, 335, 0,
	1737, 1737, 0, 0, 0, 0, 0, 1737, 1737, 0,
	0, 0, 0, 335, 333, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1736, 1736, 0, 0, 335, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 871, 0, 871,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1737,
	0, 0, 333, 0, 0, 0, 0, 0, 0, 0,
	0, 1737, 0, 1737, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1871, 0, 0, 0, 0,
	1736, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 335, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1736, 1736, 1736,
	1736, 1736, 0, 1736, 1736, 1736, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1737, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1871, 1737, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2187, 2188, 0, 2221, 2222, 2223, 2232,
	2233, 2234, 0, 0, 0, 0, 1736, 0, 1736, 1736,
	0, 0, 0, 0, 0, 0, 2225, 2218, 0, 1736,
	0, 0, 0, 0, 2219, 0, 0, 2190, 0, 0,
	0, 871, 0, 0, 0, 0, 0, 0, 0, 2238,
	0, 0, 0, 0, 0, 0, 871, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2189, 0, 0, 333, 0, 0, 0, 0, 0,
	0, 0, 2209, 0, 0, 1871, 0, 0, 0, 0,
	0, 0, 2206, 0, 0, 0, 0, 0, 1737, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 871, 0, 871,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 335, 0, 871, 0,
	333, 871, 1737, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1871, 0, 0, 0, 0, 0,
	1736, 0, 0, 1736, 1736, 0, 0, 0, 0, 2212,
	2213, 2214, 2215, 0, 335, 1737, 0, 0, 0, 2195,
	1737, 1737, 1737, 1737, 0, 0, 0, 0, 0, 0,
	1737, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1736, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2229, 0, 0,
	0, 2239, 0, 0, 0, 0, 333, 0, 0, 0,
	2217, 2220, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1871, 0, 0,
	1736, 0, 0, 2235, 0, 2236, 0, 0, 0, 0,
	0, 0, 2204, 2205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1736, 0, 0, 0, 0,
	0, 0, 2227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 333, 2210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 335, 0, 0, 2237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1737, 1737, 0, 0, 0, 0, 0, 0, 1737, 0,
	2226, 1737, 1737, 0, 1870, 0, 333, 0, 0, 0,
	0, 2241, 0, 0, 1870, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1737, 0, 0, 0, 0,
	0, 335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1737, 0, 1870, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 335, 0, 2216, 0, 0, 1736, 0, 0,
	0, 0, 0, 335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 335, 0, 0, 0, 335,
	0, 335, 2211, 0, 0, 0, 0, 0, 335, 0,
	0, 0, 0, 0, 1737, 0, 0, 0, 0, 0,
	0, 871, 0, 871, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2230, 0, 0, 0,
	1737, 0, 0, 0, 0, 1737, 1737, 1737, 0, 0,
	0, 1736, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1736, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2243, 0, 0, 0,
	0, 0, 0, 0, 1737, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1737, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1870, 0, 0, 1870, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1736, 0,
	0, 0, 0, 0, 0, 2228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2201, 2202,
	2208, 2231, 2207, 2203, 0, 2200, 2198, 2199, 2191, 2192,
	2193, 2194, 2196, 2197, 0, 0, 0, 0, 0, 6317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1737, 1737, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1737, 0,
	0, 0, 0, 0, 0, 0, 1737, 1737, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1870, 0, 0, 0, 0, 0, 0, 0,
	1737, 0, 0, 0, 0, 0, 0, 0, 0, 335,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1737, 1737, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1737, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1735,
	0, 1735, 335, 0, 0, 1870, 0, 0, 0, 0,
	1138, 0, 1735, 1735, 0, 1737, 0, 0, 335, 0,
	0, 335, 0, 0, 2187, 2188, 0, 2221, 2222, 2223,
	2232, 2233, 2234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1737, 2225, 2218, 0,
	0, 0, 0, 0, 0, 2219, 335, 0, 2190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2244, 0, 1735, 0, 1735, 0, 0, 0, 0,
	0, 0, 2189, 0, 0, 1737, 1737, 0, 0, 0,
	0, 0, 0, 2209, 1737, 0, 0, 0, 0, 0,
	0, 0, 0, 2206, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 335, 0, 0, 0, 0, 0,
	0, 0, 1870, 0, 0, 0, 0, 1737, 335, 0,
	0, 0, 1737, 0, 0, 0, 0, 0, 0, 1870,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1737,
	1737, 1737, 1737, 1737, 0, 1737, 1737, 1737, 0, 0,
	2212, 2213, 2214, 2215, 0, 0, 0, 0, 0, 0,
	2195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1737, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2229, 0,
	0, 0, 2239, 0, 0, 0, 0, 0, 0, 0,
	0, 2217, 2220, 0, 0, 0, 0, 0, 1737, 0,
	1737, 1737, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1737, 0, 0, 2235, 0, 2236, 0, 0, 0,
	0, 0, 0, 2204, 2205, 0, 0, 0, 0, 0,
	1870, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2210, 335,
	335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1737, 2419, 0,
	0, 0, 0, 0, 0, 0, 0, 335, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2237, 0, 0, 0, 0, 0, 0, 1735, 0, 0,
	0, 0, 1735, 1735, 1735, 1735, 0, 0, 0, 0,
	0, 2226, 1870, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1737, 0, 0, 0,
	0, 0, 1737, 0, 0, 1737, 1737, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 335, 0, 0, 0, 0, 0, 0, 0,
	2187, 2188, 0, 2221, 2222, 2223, 2232, 2233, 2234, 0,
	0, 0, 0, 0, 0, 2216, 0, 1737, 0, 0,
	0, 0, 0, 2225, 2218, 0, 0, 0, 0, 0,
	0, 2219, 0, 0, 2190, 0, 0, 0, 0, 0,
	0, 0, 0, 2211, 0, 0, 2238, 0, 0, 0,
	335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2244, 0, 1737,
	0, 0, 1737, 0, 0, 0, 0, 2230, 2189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2209,
	0, 0, 0, 0, 0, 0, 0, 1737, 0, 2206,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2243, 0, 0,
	0, 0, 1735, 1735, 0, 0, 0, 0, 0, 0,
	1735, 0, 0, 1735, 1735, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2187, 2188, 0, 2221, 2222, 2223, 2232, 2233, 2234,
	0, 0, 0, 1735, 0, 0, 2212, 2213, 2214, 2215,
	0, 0, 0, 0, 2225, 2218, 2195, 0, 0, 0,
	0, 0, 2219, 0, 0, 2190, 2228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2238, 0, 2201,
	2202, 2208, 2231, 2207, 2203, 0, 2200, 2198, 2199, 2191,
	2192, 2193, 2194, 2196, 2197, 0, 0, 0, 2244, 0,
	6316, 0, 0, 0, 2229, 0, 1735, 0, 2239, 2189,
	0, 0, 0, 0, 0, 0, 0, 2217, 2220, 0,
	2209, 0, 335, 0, 0, 0, 0, 0, 0, 1737,
	2206, 0, 1735, 0, 0, 0, 0, 1735, 1735, 1735,
	2235, 0, 2236, 0, 0, 0, 0, 0, 0, 2204,
	2205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2227,
	0, 0, 0, 0, 0, 0, 1735, 0, 0, 0,
	0, 0, 0, 0, 2210, 0, 0, 0, 0, 1870,
	0, 0, 0, 0, 0, 0, 0, 0, 335, 0,
	0, 0, 0, 1737, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1737, 0, 0, 2212, 2213, 2214,
	2215, 0, 0, 0, 0, 0, 0, 2195, 0, 0,
	0, 0, 0, 0, 0, 0, 2237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2241, 0,
	0, 0, 0, 0, 0, 2229, 0, 0, 0, 2239,
	0, 0, 0, 0, 0, 0, 0, 0, 2217, 2220,
	0, 0, 0, 0, 335, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1870, 1870,
	1737, 2235, 0, 2236, 0, 0, 0, 0, 0, 0,
	2204, 2205, 0, 0, 0, 0, 0, 0, 0, 0,
	1870, 2216, 0, 0, 0, 0, 0, 0, 1735, 1735,
	2227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2210, 0, 0, 0, 2211,
	0, 0, 1870, 0, 335, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2230, 0, 0, 0, 0, 1735, 1735,
	0, 0, 0, 0, 0, 0, 0, 2237, 0, 0,
	1870, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2226, 0,
	0, 0, 0, 2243, 0, 0, 0, 0, 0, 2241,
	0, 0, 0, 0, 335, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1870, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2187, 2188, 0,
	2221, 2222, 2223, 2232, 2233, 2234, 0, 0, 1870, 0,
	0, 0, 2216, 0, 0, 0, 0, 0, 0, 0,
	2225, 2218, 0, 0, 0, 0, 0, 0, 2219, 0,
	0, 2190, 2228, 0, 0, 0, 0, 0, 0, 0,
	2211, 0, 0, 2238, 0, 2201, 2202, 2208, 2231, 2207,
	2203, 0, 2200, 2198, 2199, 2191, 2192, 2193, 2194, 2196,
	2197, 0, 0, 0, 2244, 0, 6063, 1735, 1735, 0,
	0, 0, 0, 0, 2230, 2189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2206, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1870,
	0, 0, 0, 0, 1735, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1735, 1735, 1735, 1735, 1735, 0, 1735, 1735, 1735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2212, 2213, 2214, 2215, 0, 0, 0,
	0, 0, 0, 2195, 0, 0, 0, 0, 0, 0,
	1870, 0, 0, 2228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2201, 2202, 2208, 2231,
	2207, 2203, 0, 2200, 2198, 2199, 2191, 2192, 2193, 2194,
	2196, 2197, 0, 0, 0, 0, 0, 5852, 0, 0,
	0, 2229, 0, 0, 0, 2239, 0, 0, 0, 0,
	1735, 0, 1735, 1735, 2217, 2220, 0, 0, 0, 0,
	0, 0, 0, 1735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2235, 0, 2236,
	0, 0, 0, 0, 0, 0, 2204, 2205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2210, 0, 0, 0, 0, 0, 0, 0, 1870,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2241, 0, 0, 1870, 0,
	0, 0, 0, 0, 1735, 0, 0, 1735, 1735, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1735,
	0, 0, 0, 0, 0, 0, 0, 0, 2216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2211, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1870, 0, 0, 1735, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2230, 0, 0, 0, 0, 0, 0, 0, 0, 1735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2201, 2202, 2208, 2231, 2207, 2203, 0, 2200,
	2198, 2199, 2191, 2192, 2193, 2194, 2196, 2197, 0, 0,
	0, 0, 0, 5719, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1735, 1868, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1735, 0, 0, 0,
	0, 0, 0, 345, 346, 348, 347, 349, 350, 351,
	352, 1873, 353, 354, 1874, 1875, 1876, 0, 1877, 805,
	1878, 1879, 1880, 356, 0, 355, 1881, 357, 358, 359,
	874, 360, 361, 362, 363, 364, 365, 366, 367, 806,
	807, 0, 368, 808, 369, 809, 1882, 810, 370, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 1883, 1884,
	0, 380, 811, 812, 813, 1885, 381, 382, 383, 384,
	814, 1886, 875, 1887, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 1888, 394, 395, 396, 393, 397, 398,
	1889, 399, 1735, 400, 401, 402, 403, 404, 405, 406,
	1890, 407, 408, 409, 876, 410, 411, 412, 1891, 1892,
	1894, 1893, 1895, 1896, 1897, 413, 414, 415, 416, 417,
	0, 418, 420, 421, 815, 422, 816, 1898, 425, 427,
	419, 423, 1899, 426, 424, 428, 429, 1900, 430, 431,
	432, 433, 1901, 1902, 434, 435, 436, 1903, 437, 438,
	440, 439, 1904, 441, 442, 443, 1905, 444, 445, 817,
	446, 447, 448, 450, 452, 449, 451, 453, 454, 455,
	456, 457, 818, 819, 458, 459, 1906, 340, 1907, 0,
	0, 0, 0, 460, 461, 462, 820, 0, 0, 0,
	463, 1908, 465, 469, 466, 467, 468, 470, 1909, 464,
	471, 472, 1910, 877, 473, 474, 475, 821, 822, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 1911, 485,
	486, 823, 1912, 824, 487, 1913, 488, 489, 490, 491,
	492, 493, 494, 825, 826, 827, 595, 879, 495, 496,
	497, 1914, 498, 499, 500, 501, 502, 503, 504, 0,
	0, 0, 505, 506, 507, 508, 1915, 342, 341, 343,
	878, 828, 509, 596, 510, 829, 830, 1916, 831, 1917,
	511, 512, 515, 880, 832, 881, 514, 516, 517, 882,
	518, 0, 0, 0, 519, 520, 521, 522, 523, 524,
	525, 1918, 526, 528, 527, 1919, 530, 833, 529, 883,
	531, 532, 884, 1920, 533, 534, 535, 536, 537, 538,
	541, 1921, 1922, 539, 540, 542, 543, 0, 544, 545,
	547, 550, 546, 548, 549, 551, 552, 565, 566, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 568, 0, 567, 885, 569, 570, 571, 572, 573,
	581, 583, 584, 579, 580, 582, 585, 586, 588, 589,
	576, 577, 578, 886, 587, 574, 1923, 575, 344, 887,
	590, 591, 592, 593, 1924, 834, 594, 835, 597, 598,
	1925, 0, 599, 0, 600, 1926, 1927, 602, 603, 604,
	1928, 1929, 605, 606, 836, 888, 607, 889, 837, 608,
	609, 601, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 1930, 620, 621, 838, 622, 623, 624, 839,
	625, 626, 627, 840, 628, 841, 629, 630, 1931, 631,
	632, 633, 0, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 842, 644, 645, 647, 646, 648, 649,
	1932, 650, 0, 651, 652, 653, 0, 0, 0, 0,
	0, 654, 655, 657, 0, 658, 659, 660, 661, 662,
	656, 663, 664, 665, 666, 667, 668, 669, 1933, 671,
	672, 670, 673, 674, 890, 675, 676, 677, 678, 679,
	843, 680, 0, 681, 682, 690, 691, 692, 683, 684,
	686, 693, 685, 694, 695, 696, 697, 699, 698, 1934,
	701, 702, 700, 703, 704, 705, 706, 1935, 707, 844,
	708, 687, 688, 709, 710, 711, 891, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 845, 0, 721, 1936,
	722, 723, 724, 725, 726, 727, 729, 689, 730, 731,
	732, 737, 738, 846, 733, 734, 735, 736, 847, 740,
	741, 742, 743, 1937, 744, 745, 0, 739, 728, 1938,
	746, 747, 748, 749, 750, 751, 752, 753, 754, 755,
	1939, 756, 848, 849, 850, 851, 1940, 768, 1941, 757,
	759, 760, 761, 762, 852, 763, 853, 1942, 764, 765,
	766, 767, 758, 769, 770, 1943, 1944, 771, 772, 773,
	774, 776, 778, 779, 780, 775, 777, 781, 1945, 782,
	1946, 0, 783, 784, 785, 854, 855, 856, 1947, 787,
	788, 786, 789, 790, 793, 791, 792, 857, 796, 513,
	797, 798, 799, 794, 795, 1948, 1949, 1950, 1951, 800,
	801, 858, 802, 803, 804, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1868,
	0, 0, 0, 0, 0, 0, 3913, 0, 0, 0,
	0, 0, 0, 0, 0, 3914, 345, 346, 348, 347,
	349, 350, 351, 352, 1873, 353, 354, 1874, 1875, 1876,
	0, 1877, 805, 1878, 1879, 1880, 356, 0, 355, 1881,
	357, 358, 359, 874, 360, 361, 362, 363, 364, 365,
	366, 367, 806, 807, 0, 368, 808, 369, 809, 1882,
	810, 370, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 1883, 1884, 0, 380, 811, 812, 813, 1885, 381,
	382, 383, 384, 814, 1886, 875, 1887, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 1888, 394, 395, 396,
	393, 397, 398, 1889, 399, 0, 400, 401, 402, 403,
	404, 405, 406, 1890, 407, 408, 409, 876, 410, 411,
	412, 1891, 1892, 1894, 1893, 1895, 1896, 1897, 413, 414,
	415, 416, 417, 0, 418, 420, 421, 815, 422, 816,
	1898, 425, 427, 419, 423, 1899, 426, 424, 428, 429,
	1900, 430, 431, 432, 433, 1901, 1902, 434, 435, 436,
	1903, 437, 438, 440, 439, 1904, 441, 442, 443, 1905,
	444, 445, 817, 446, 447, 448, 450, 452, 449, 451,
	453, 454, 455, 456, 457, 818, 819, 458, 459, 1906,
	340, 1907, 0, 0, 0, 0, 460, 461, 462, 820,
	0, 0, 0, 463, 1908, 465, 469, 466, 467, 468,
	470, 1909, 464, 471, 472, 1910, 877, 473, 474, 475,
	821, 822, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 1911, 485, 486, 823, 1912, 824, 487, 1913, 488,
	489, 490, 491, 492, 493, 494, 825, 826, 827, 595,
	879, 495, 496, 497, 1914, 498, 499, 500, 501, 502,
	503, 504, 0, 0, 0, 505, 506, 507, 508, 1915,
	342, 341, 343, 878, 828, 509, 596, 510, 829, 830,
	1916, 831, 1917, 511, 512, 515, 880, 832, 881, 514,
	516, 517, 882, 518, 0, 0, 0, 519, 520, 521,
	522, 523, 524, 525, 1918, 526, 528, 527, 1919, 530,
	833, 529, 883, 531, 532, 884, 1920, 533, 534, 535,
	536, 537, 538, 541, 1921, 1922, 539, 540, 542, 543,
	0, 544, 545, 547, 550, 546, 548, 549, 551, 552,
	565, 566, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 568, 0, 567, 885, 569, 570,
	571, 572, 573, 581, 583, 584, 579, 580, 582, 585,
	586, 588, 589, 576, 577, 578, 886, 587, 574, 1923,
	575, 344, 887, 590, 591, 592, 593, 1924, 834, 594,
	835, 597, 598, 1925, 0, 599, 0, 600, 1926, 1927,
	602, 603, 604, 1928, 1929, 605, 606, 836, 888, 607,
	889, 837, 608, 609, 601, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 1930, 620, 621, 838, 622,
	623, 624, 839, 625, 626, 627, 840, 628, 841, 629,
	630, 1931, 631, 632, 633, 0, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 842, 644, 645, 647,
	646, 648, 649, 1932, 650, 0, 651, 652, 653, 0,
	0, 0, 0, 0, 654, 655, 657, 0, 658, 659,
	660, 661, 662, 656, 663, 664, 665, 666, 667, 668,
	669, 1933, 671, 672, 670, 673, 674, 890, 675, 676,
	677, 678, 679, 843, 680, 0, 681, 682, 690, 691,
	692, 683, 684, 686, 693, 685, 694, 695, 696, 697,
	699, 698, 1934, 701, 702, 700, 703, 704, 705, 706,
	1935, 707, 844, 708, 687, 688, 709, 710, 711, 891,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 845,
	0, 721, 1936, 722, 723, 724, 725, 726, 727, 729,
	689, 730, 731, 732, 737, 738, 846, 733, 734, 735,
	736, 847, 740, 741, 742, 743, 1937, 744, 745, 0,
	739, 728, 1938, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 755, 1939, 756, 848, 849, 850, 851, 1940,
	768, 1941, 757, 759, 760, 761, 762, 852, 763, 853,
	1942, 764, 765, 766, 767, 758, 769, 770, 1943, 1944,
	771, 772, 773, 774, 776, 778, 779, 780, 775, 777,
	781, 1945, 782, 1946, 0, 783, 784, 785, 854, 855,
	856, 1947, 787, 788, 786, 789, 790, 793, 791, 792,
	857, 796, 513, 797, 798, 799, 794, 795, 1948, 1949,
	1950, 1951, 800, 801, 858, 802, 803, 804, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3325,
	0, 0, 0, 5227, 0, 0, 2187, 2188, 0, 2221,
	2222, 2223, 2232, 2233, 2234, 5229, 3327, 3328, 3329, 3330,
	3331, 3332, 3333, 3334, 3335, 3336, 3337, 3338, 3339, 3314,
	2218, 3341, 3340, 0, 3322, 3342, 3345, 2219, 3343, 3344,
	3313, 3346, 3347, 3348, 3349, 3350, 3351, 3352, 3353, 3354,
	3355, 3356, 3320, 3357, 0, 3358, 3359, 3363, 3360, 3361,
	3362, 3364, 3365, 3366, 3367, 3368, 3369, 3370, 3371, 3372,
	3373, 3374, 3375, 2244, 3376, 0, 0, 3377, 3378, 3379,
	3380, 3381, 3382, 3383, 2189, 3384, 3385, 3386, 3387, 3388,
	3389, 3390, 3391, 3392, 3393, 2209, 3394, 3395, 3396, 3397,
	3398, 3399, 3400, 3401, 3402, 2206, 3403, 3404, 3405, 3406,
	3407, 3408, 3409, 0, 3410, 3411, 3412, 3413, 3414, 3415,
	3416, 3417, 3418, 3420, 3419, 3421, 3422, 3423, 3424, 3425,
	3426, 3427, 3428, 0, 0, 3431, 3432, 3433, 3430, 3434,
	3436, 3437, 3440, 3429, 3435, 3438, 3439, 3441, 3442, 3443,
	3444, 3445, 3446, 3447, 3448, 3449, 3450, 3451, 3452, 3453,
	3454, 3455, 3456, 3457, 3458, 3459, 3460, 3461, 3462, 0,
	3463, 3464, 3467, 3465, 3466, 3468, 3470, 3472, 3469, 3471,
	3473, 3474, 3475, 3476, 3477, 3478, 3479, 3480, 3481, 3482,
	3483, 0, 2212, 2213, 2214, 2215, 3484, 0, 3485, 3486,
	0, 0, 2195, 3487, 0, 3488, 3492, 3489, 3490, 3491,
	3493, 3494, 3495, 3496, 3497, 0, 3498, 3499, 3500, 3501,
	3502, 3503, 3508, 3509, 3510, 3504, 3505, 3506, 3507, 3511,
	3512, 0, 3513, 3514, 3515, 0, 3516, 3517, 0, 3518,
	3519, 3520, 3521, 3522, 0, 3523, 3524, 3525, 3526, 3527,
	3317, 3528, 3529, 3530, 3321, 3531, 3534, 3532, 3533, 3535,
	3536, 3537, 0, 2217, 2220, 3538, 3539, 3543, 3545, 3544,
	3542, 3541, 3540, 3546, 3547, 3548, 3549, 3550, 3551, 3552,
	0, 3553, 0, 3554, 3555, 3557, 3319, 3558, 2236, 3559,
	3560, 3561, 3562, 3563, 0, 2204, 2205, 3564, 3565, 3566,
	3567, 3568, 3569, 3570, 3571, 3572, 3574, 3573, 3575, 3577,
	3578, 3576, 3579, 3580, 3581, 3316, 0, 3582, 3583, 3584,
	3585, 3586, 3587, 3588, 3589, 3590, 3591, 3592, 3593, 3594,
	2210, 3595, 3596, 3598, 3600, 3597, 3599, 0, 3601, 3602,
	0, 3603, 3604, 3605, 3606, 3607, 3608, 3609, 3610, 3611,
	3612, 3613, 3614, 3615, 3617, 0, 3616, 3618, 3619, 3620,
	3621, 3622, 3623, 3624, 3625, 3626, 3627, 3628, 3629, 3630,
	3631, 3635, 3636, 3645, 3646, 3644, 3632, 3633, 3634, 3637,
	3638, 3639, 2237, 3640, 3641, 3642, 3643, 3647, 3648, 3649,
	3650, 3651, 3652, 0, 0, 3653, 0, 3654, 0, 3655,
	3656, 3657, 3658, 3315, 0, 3659, 3660, 3661, 3662, 0,
	0, 3663, 3664, 3665, 3324, 3666, 3667, 3668, 3669, 3670,
	3671, 3672, 3673, 3674, 3675, 3676, 3677, 3678, 3679, 3680,
	3681, 3682, 3683, 3684, 3685, 3686, 3687, 3688, 0, 3689,
	3690, 3691, 3692, 3693, 3694, 0, 3695, 3696, 3697, 3698,
	3699, 3700, 3701, 3702, 3703, 3704, 3705, 3706, 3707, 3709,
	3708, 3710, 3711, 3712, 3713, 0, 3714, 3715, 3716, 0,
	0, 0, 0, 0, 3717, 3718, 3720, 2216, 3721, 3722,
	3723, 3724, 3725, 3719, 3726, 3727, 3728, 3729, 3730, 3731,
	3732, 0, 3734, 3735, 3733, 3736, 3737, 3738, 3739, 3740,
	3741, 3742, 3743, 3744, 3745, 2211, 3746, 3747, 3748, 3749,
	3750, 3751, 3752, 3756, 3753, 3755, 3754, 3757, 3758, 0,
	3759, 3760, 3761, 3762, 3763, 3764, 3765, 3766, 3767, 3768,
	3769, 3770, 3771, 3772, 3773, 3774, 3775, 3776, 3777, 3318,
	3778, 3779, 3780, 3781, 3782, 3783, 3784, 3786, 3785, 3787,
	0, 3788, 3789, 3790, 3791, 3792, 3793, 3794, 3795, 3797,
	3798, 3799, 3800, 3801, 3806, 3807, 3808, 3802, 3803, 3804,
	3805, 3810, 3811, 3812, 3814, 3813, 3815, 3816, 3817, 2243,
	3809, 3796, 3818, 3819, 3820, 3821, 3822, 3823, 3824, 3826,
	3825, 3827, 3828, 3829, 3831, 3832, 3835, 3833, 3834, 0,
	3830, 3838, 3836, 3839, 3840, 3841, 3842, 3843, 3844, 3845,
	3846, 3847, 3848, 3849, 3850, 3837, 3851, 3852, 0, 3853,
	3854, 3855, 3856, 3857, 3859, 3861, 3862, 3863, 3858, 3860,
	3864, 3865, 3866, 3867, 0, 3868, 3869, 3870, 3871, 3872,
	3873, 3874, 3875, 3876, 0, 3877, 3878, 3881, 3879, 3880,
	3882, 3885, 3556, 3886, 3887, 3888, 3883, 3884, 3889, 0,
	0, 0, 0, 0, 3890, 3891, 0, 3892, 2228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1868, 2201, 2202, 2208, 2231, 2207, 2203, 0, 2200, 2198,
	2199, 2191, 2192, 2193, 2194, 2196, 2197, 345, 346, 348,
	347, 349, 350, 351, 352, 1873, 353, 354, 1874, 1875,
	1876, 0, 1877, 805, 1878, 1879, 1880, 356, 0, 355,
	1881, 357, 358, 359, 874, 360, 361, 362, 363, 364,
	365, 366, 367, 806, 807, 0, 368, 808, 369, 809,
	1882, 810, 370, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 1883, 1884, 0, 380, 811, 812, 813, 1885,
	381, 382, 383, 384, 814, 1886, 875, 1887, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 1888, 394, 395,
	396, 393, 397, 398, 1889, 399, 0, 400, 401, 402,
	403, 404, 405, 406, 1890, 407, 408, 409, 876, 410,
	411, 412, 1891, 1892, 1894, 1893, 1895, 1896, 1897, 413,
	414, 415, 416, 417, 0, 418, 420, 421, 815, 422,
	816, 1898, 425, 427, 419, 423, 1899, 426, 424, 428,
	429, 1900, 430, 431, 432, 433, 1901, 1902, 434, 435,
	436, 1903, 437, 438, 440, 439, 1904, 441, 442, 443,
	1905, 444, 445, 817, 446, 447, 448, 450, 452, 449,
	451, 453, 454, 455, 456, 457, 818, 819, 458, 459,
	1906, 340, 1907, 0, 0, 0, 0, 460, 461, 462,
	820, 0, 0, 0, 463, 1908, 465, 469, 466, 467,
	468, 470, 1909, 464, 471, 472, 1910, 877, 473, 474,
	475, 821, 822, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 1911, 485, 486, 823, 1912, 824, 487, 1913,
	488, 489, 490, 491, 492, 493, 494, 825, 826, 827,
	595, 879, 495, 496, 497, 1914, 498, 499, 500, 501,
	502, 503, 504, 0, 0, 0, 505, 506, 507, 508,
	1915, 342, 341, 343, 878, 828, 509, 596, 510, 829,
	830, 1916, 831, 1917, 511, 512, 515, 880, 832, 881,
	514, 516, 517, 882, 518, 0, 0, 0, 519, 520,
	521, 522, 523, 524, 525, 1918, 526, 528, 527, 1919,
	530, 833, 529, 883, 531, 532, 884, 1920, 533, 534,
	535, 536, 537, 538, 541, 1921, 1922, 539, 540, 542,
	543, 0, 544, 545, 547, 550, 546, 548, 549, 551,
	552, 565, 566, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 568, 0, 567, 885, 569,
	570, 571, 572, 573, 581, 583, 584, 579, 580, 582,
	585, 586, 588, 589, 576, 577, 578, 886, 587, 574,
	1923, 575, 344, 887, 590, 591, 592, 593, 1924, 834,
	594, 835, 597, 598, 1925, 0, 599, 0, 600, 1926,
	1927, 602, 603, 604, 1928, 1929, 605, 606, 836, 888,
	607, 889, 837, 608, 609, 601, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 1930, 620, 621, 838,
	622, 623, 624, 839, 625, 626, 627, 840, 628, 841,
	629, 630, 1931, 631, 632, 633, 0, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 842, 644, 645,
	647, 646, 648, 649, 1932, 650, 0, 651, 652, 653,
	0, 0, 0, 0, 0, 654, 655, 657, 0, 658,
	659, 660, 661, 662, 656, 663, 664, 665, 666, 667,
	668, 669, 1933, 671, 672, 670, 673, 674, 890, 675,
	676, 677, 678, 679, 843, 680, 0, 681, 682, 690,
	691, 692, 683, 684, 686, 693, 685, 694, 695, 696,
	697, 699, 698, 1934, 701, 702, 700, 703, 704, 705,
	706, 1935, 707, 844, 708, 687, 688, 709, 710, 711,
	891, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	845, 0, 721, 1936, 722, 723, 724, 725, 726, 727,
	729, 689, 730, 731, 732, 737, 738, 846, 733, 734,
	735, 736, 847, 740, 741, 742, 743, 1937, 744, 745,
	0, 739, 728, 1938, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 1939, 756, 848, 849, 850, 851,
	1940, 768, 1941, 757, 759, 760, 761, 762, 852, 763,
	853, 1942, 764, 765, 766, 767, 758, 769, 770, 1943,
	1944, 771, 772, 773, 774, 776, 778, 779, 780, 775,
	777, 781, 1945, 782, 1946, 0, 783, 784, 785, 854,
	855, 856, 1947, 787, 788, 786, 789, 790, 793, 791,
	792, 857, 796, 513, 797, 798, 799, 794, 795, 1948,
	1949, 1950, 1951, 800, 801, 858, 802, 803, 804, 1868,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 346, 348, 347,
	349, 350, 351, 352, 1873, 353, 354, 1874, 1875, 1876,
	5743, 1877, 805, 1878, 1879, 1880, 356, 0, 355, 1881,
	357, 358, 359, 874, 360, 361, 362, 363, 364, 365,
	366, 367, 806, 807, 0, 368, 808, 369, 809, 1882,
	810, 370, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 1883, 1884, 0, 380, 811, 812, 813, 1885, 381,
	382, 383, 384, 814, 1886, 875, 1887, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 1888, 394, 395, 396,
	393, 397, 398, 1889, 399, 0, 400, 401, 402, 403,
	404, 405, 406, 1890, 407, 408, 409, 876, 410, 411,
	412, 1891, 1892, 1894, 1893, 1895, 1896, 1897, 413, 414,
	415, 416, 417, 0, 418, 420, 421, 815, 422, 816,
	1898, 425, 427, 419, 423, 1899, 426, 424, 428, 429,
	1900, 430, 431, 432, 433, 1901, 1902, 434, 435, 436,
	1903, 437, 438, 440, 439, 1904, 441, 442, 443, 1905,
	444, 445, 817, 446, 447, 448, 450, 452, 449, 451,
	453, 454, 455, 456, 457, 818, 819, 458, 459, 1906,
	340, 1907, 0, 0, 0, 0, 460, 461, 462, 820,
	0, 0, 0, 463, 1908, 465, 469, 466, 467, 468,
	470, 1909, 464, 471, 472, 1910, 877, 473, 474, 475,
	821, 822, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 1911, 485, 486, 823, 1912, 824, 487, 1913, 488,
	489, 490, 491, 492, 493, 494, 825, 826, 827, 595,
	879, 495, 496, 497, 1914, 498, 499, 500, 501, 502,
	503, 504, 0, 0, 0, 505, 506, 507, 508, 1915,
	342, 341, 343, 878, 828, 509, 596, 510, 829, 830,
	1916, 831, 1917, 511, 512, 515, 880, 832, 881, 514,
	516, 517, 882, 518, 0, 0, 0, 519, 520, 521,
	522, 523, 524, 525, 1918, 526, 528, 527, 1919, 530,
	833, 529, 883, 531, 532, 884, 1920, 533, 534, 535,
	536, 537, 538, 541, 1921, 1922, 539, 540, 542, 543,
	0, 544, 545, 547, 550, 546, 548, 549, 551, 552,
	565, 566, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 568, 0, 567, 885, 569, 570,
	571, 572, 573, 581, 583, 584, 579, 580, 582, 585,
	586, 588, 589, 576, 577, 578, 886, 587, 574, 1923,
	575, 344, 887, 590, 591, 592, 593, 1924, 834, 594,
	835, 597, 598, 1925, 0, 599, 0, 600, 1926, 1927,
	602, 603, 604, 1928, 1929, 605, 606, 836, 888, 607,
	889, 837, 608, 609, 601, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 1930, 620, 621, 838, 622,
	623, 624, 839, 625, 626, 627, 840, 628, 841, 629,
	630, 1931, 631, 632, 633, 0, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 842, 644, 645, 647,
	646, 648, 649, 1932, 650, 0, 651, 652, 653, 0,
	0, 0, 0, 0, 654, 655, 657, 0, 658, 659,
	660, 661, 662, 656, 663, 664, 665, 666, 667, 668,
	669, 1933, 671, 672, 670, 673, 674, 890, 675, 676,
	677, 678, 679, 843, 680, 0, 681, 682, 690, 691,
	692, 683, 684, 686, 693, 685, 694, 695, 696, 697,
	699, 698, 1934, 701, 702, 700, 703, 704, 705, 706,
	1935, 707, 844, 708, 687, 688, 709, 710, 711, 891,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 845,
	0, 721, 1936, 722, 723, 724, 725, 726, 727, 729,
	689, 730, 731, 732, 737, 738, 846, 733, 734, 735,
	736, 847, 740, 741, 742, 743, 1937, 744, 745, 0,
	739, 728, 1938, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 755, 1939, 756, 848, 849, 850, 851, 1940,
	768, 1941, 757, 759, 760, 761, 762, 852, 763, 853,
	1942, 764, 765, 766, 767, 758, 769, 770, 1943, 1944,
	771, 772, 773, 774, 776, 778, 779, 780, 775, 777,
	781, 1945, 782, 1946, 0, 783, 784, 785, 854, 855,
	856, 1947, 787, 788, 786, 789, 790, 793, 791, 792,
	857, 796, 513, 797, 798, 799, 794, 795, 1948, 1949,
	1950, 1951, 800, 801, 858, 802, 803, 804, 1868, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 346, 348, 347, 349,
	350, 351, 352, 1873, 353, 354, 1874, 1875, 1876, 5741,
	1877, 805, 1878, 1879, 1880, 356, 0, 355, 1881, 357,
	358, 359, 874, 360, 361, 362, 363, 364, 365, 366,
	367, 806, 807, 0, 368, 808, 369, 809, 1882, 810,
	370, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	1883, 1884, 0, 380, 811, 812, 813, 1885, 381, 382,
	383, 384, 814, 1886, 875, 1887, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 1888, 394, 395, 396, 393,
	397, 398, 1889, 399, 0, 400, 401, 402, 403, 404,
	405, 406, 1890, 407, 408, 409, 876, 410, 411, 412,
	1891, 1892, 1894, 1893, 1895, 1896, 1897, 413, 414, 415,
	416, 417, 0, 418, 420, 421, 815, 422, 816, 1898,
	425, 427, 419, 423, 1899, 426, 424, 428, 429, 1900,
	430, 431, 432, 433, 1901, 1902, 434, 435, 436, 1903,
	437, 438, 440, 439, 1904, 441, 442, 443, 1905, 444,
	445, 817, 446, 447, 448, 450, 452, 449, 451, 453,
	454, 455, 456, 457, 818, 819, 458, 459, 1906, 340,
	1907, 0, 0, 0, 0, 460, 461, 462, 820, 0,
	0, 0, 463, 1908, 465, 469, 466, 467, 468, 470,
	1909, 464, 471, 472, 1910, 877, 473, 474, 475, 821,
	822, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	1911, 485, 486, 823, 1912, 824, 487, 1913, 488, 489,
	490, 491, 492, 493, 494, 825, 826, 827, 595, 879,
	495, 496, 497, 1914, 498, 499, 500, 501, 502, 503,
	504, 0, 0, 0, 505, 506, 507, 508, 1915, 342,
	341, 343, 878, 828, 509, 596, 510, 829, 830, 1916,
	831, 1917, 511, 512, 515, 880, 832, 881, 514, 516,
	517, 882, 518, 0, 0, 0, 519, 520, 521, 522,
	523, 524, 525, 1918, 526, 528, 527, 1919, 530, 833,
	529, 883, 531, 532, 884, 1920, 533, 534, 535, 536,
	537, 538, 541, 1921, 1922, 539, 540, 542, 543, 0,
	544, 545, 547, 550, 546, 548, 549, 551, 552, 565,
	566, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 568, 0, 567, 885, 569, 570, 571,
	572, 573, 581, 583, 584, 579, 580, 582, 585, 586,
	588, 589, 576, 577, 578, 886, 587, 574, 1923, 575,
	344, 887, 590, 591, 592, 593, 1924, 834, 594, 835,
	597, 598, 1925, 0, 599, 0, 600, 1926, 1927, 602,
	603, 604, 1928, 1929, 605, 606, 836, 888, 607, 889,
	837, 608, 609, 601, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 1930, 620, 621, 838, 622, 623,
	624, 839, 625, 626, 627, 840, 628, 841, 629, 630,
	1931, 631, 632, 633, 0, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 842, 644, 645, 647, 646,
	648, 649, 1932, 650, 0, 651, 652, 653, 0, 0,
	0, 0, 0, 654, 655, 657, 0, 658, 659, 660,
	661, 662, 656, 663, 664, 665, 666, 667, 668, 669,
	1933, 671, 672, 670, 673, 674, 890, 675, 676, 677,
	678, 679, 843, 680, 0, 681, 682, 690, 691, 692,
	683, 684, 686, 693, 685, 694, 695, 696, 697, 699,
	698, 1934, 701, 702, 700, 703, 704, 705, 706, 1935,
	707, 844, 708, 687, 688, 709, 710, 711, 891, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 845, 0,
	721, 1936, 722, 723, 724, 725, 726, 727, 729, 689,
	730, 731, 732, 737, 738, 846, 733, 734, 735, 736,
	847, 740, 741, 742, 743, 1937, 744, 745, 0, 739,
	728, 1938, 746, 747, 748, 749, 750, 751, 752, 753,
	754, 755, 1939, 756, 848, 849, 850, 851, 1940, 768,
	1941, 757, 759, 760, 761, 762, 852, 763, 853, 1942,
	764, 765, 766, 767, 758, 769, 770, 1943, 1944, 771,
	772, 773, 774, 776, 778, 779, 780, 775, 777, 781,
	1945, 782, 1946, 0, 783, 784, 785, 854, 855, 856,
	1947, 787, 788, 786, 789, 790, 793, 791, 792, 857,
	796, 513, 797, 798, 799, 794, 795, 1948, 1949, 1950,
	1951, 800, 801, 858, 802, 803, 804, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1868, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 6060, 345, 346, 348, 347, 349, 350, 351,
	352, 1873, 353, 354, 1874, 1875, 1876, 0, 1877, 805,
	1878, 1879, 1880, 356, 0, 355, 1881, 357, 358, 359,
	874, 360, 361, 362, 363, 364, 365, 366, 367, 806,
	807, 0, 368, 808, 369, 809, 1882, 810, 370, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 1883, 1884,
	0, 380, 811, 812, 813, 1885, 381, 382, 383, 384,
	814, 1886, 875, 1887, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 1888, 394, 395, 396, 393, 397, 398,
	1889, 399, 0, 400, 401, 402, 403, 404, 405, 406,
	1890, 407, 408, 409, 876, 410, 411, 412, 1891, 1892,
	1894, 1893, 1895, 1896, 1897, 413, 414, 415, 416, 417,
	0, 418, 420, 421, 815, 422, 816, 1898, 425, 427,
	419, 423, 1899, 426, 424, 428, 429, 1900, 430, 431,
	432, 433, 1901, 1902, 434, 435, 436, 1903, 437, 438,
	440, 439, 1904, 441, 442, 443, 1905, 444, 445, 817,
	446, 447, 448, 450, 452, 449, 451, 453, 454, 455,
	456, 457, 818, 819, 458, 459, 1906, 340, 1907, 0,
	0, 0, 0, 460, 461, 462, 820, 0, 0, 0,
	463, 1908, 465, 469, 466, 467, 468, 470, 1909, 464,
	471, 472, 1910, 877, 473, 474, 475, 821, 822, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 1911, 485,
	486, 823, 1912, 824, 487, 1913, 488, 489, 490, 491,
	492, 493, 494, 825, 826, 827, 595, 879, 495, 496,
	497, 1914, 498, 499, 500, 501, 502, 503, 504, 0,
	0, 0, 505, 506, 507, 508, 1915, 342, 341, 343,
	878, 828, 509, 596, 510, 829, 830, 1916, 831, 1917,
	511, 512, 515, 880, 832, 881, 514, 516, 517, 882,
	518, 0, 0, 0, 519, 520, 521, 522, 523, 524,
	525, 1918, 526, 528, 527, 1919, 530, 833, 529, 883,
	531, 532, 884, 1920, 533, 534, 535, 536, 537, 538,
	541, 1921, 1922, 539, 540, 542, 543, 0, 544, 545,
	547, 550, 546, 548, 549, 551, 552, 565, 566, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 568, 0, 567, 885, 569, 570, 571, 572, 573,
	581, 583, 584, 579, 580, 582, 585, 586, 588, 589,
	576, 577, 578, 886, 587, 574, 1923, 575, 344, 887,
	590, 591, 592, 593, 1924, 834, 594, 835, 597, 598,
	1925, 0, 599, 0, 600, 1926, 1927, 602, 603, 604,
	1928, 1929, 605, 606, 836, 888, 607, 889, 837, 608,
	609, 601, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 1930, 620, 621, 838, 622, 623, 624, 839,
	625, 626, 627, 840, 628, 841, 629, 630, 1931, 631,
	632, 633, 0, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 842, 644, 645, 647, 646, 648, 649,
	1932, 650, 0, 651, 652, 653, 0, 0, 0, 0,
	0, 654, 655, 657, 0, 658, 659, 660, 661, 662,
	656, 663, 664, 665, 666, 667, 668, 669, 1933, 671,
	672, 670, 673, 674, 890, 675, 676, 677, 678, 679,
	843, 680, 0, 681, 682, 690, 691, 692, 683, 684,
	686, 693, 685, 694, 695, 696, 697, 699, 698, 1934,
	701, 702, 700, 703, 704, 705, 706, 1935, 707, 844,
	708, 687, 688, 709, 710, 711, 891, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 845, 0, 721, 1936,
	722, 723, 724, 725, 726, 727, 729, 689, 730, 731,
	732, 737, 738, 846, 733, 734, 735, 736, 847, 740,
	741, 742, 743, 1937, 744, 745, 0, 739, 728, 1938,
	746, 747, 748, 749, 750, 751, 752, 753, 754, 755,
	1939, 756, 848, 849, 850, 851, 1940, 768, 1941, 757,
	759, 760, 761, 762, 852, 763, 853, 1942, 764, 765,
	766, 767, 758, 769, 770, 1943, 1944, 771, 772, 773,
	774, 776, 778, 779, 780, 775, 777, 781, 1945, 782,
	1946, 0, 783, 784, 785, 854, 855, 856, 1947, 787,
	788, 786, 789, 790, 793, 791, 792, 857, 796, 513,
	797, 798, 799, 794, 795, 1948, 1949, 1950, 1951, 800,
	801, 858, 802, 803, 804, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1868, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	5886, 345, 346, 348, 347, 349, 350, 351, 352, 1873,
	353, 354, 1874, 1875, 1876, 0, 1877, 805, 1878, 1879,
	1880, 356, 0, 355, 1881, 357, 358, 359, 874, 360,
	361, 362, 363, 364, 365, 366, 367, 806, 807, 0,
	368, 808, 369, 809, 1882, 810, 370, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 1883, 1884, 0, 380,
	811, 812, 813, 1885, 381, 382, 383, 384, 814, 1886,
	875, 1887, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 1888, 394, 395, 396, 393, 397, 398, 1889, 399,
	0, 400, 401, 402, 403, 404, 405, 406, 1890, 407,
	408, 409, 876, 410, 411, 412, 1891, 1892, 1894, 1893,
	1895, 1896, 1897, 413, 414, 415, 416, 417, 0, 418,
	420, 421, 815, 422, 816, 1898, 425, 427, 419, 423,
	1899, 426, 424, 428, 429, 1900, 430, 431, 432, 433,
	1901, 1902, 434, 435, 436, 1903, 437, 438, 440, 439,
	1904, 441, 442, 443, 1905, 444, 445, 817, 446, 447,
	448, 450, 452, 449, 451, 453, 454, 455, 456, 457,
	818, 819, 458, 459, 1906, 340, 1907, 0, 0, 0,
	0, 460, 461, 462, 820, 0, 0, 0, 463, 1908,
	465, 469, 466, 467, 468, 470, 1909, 464, 471, 472,
	1910, 877, 473, 474, 475, 821, 822, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 1911, 485, 486, 823,
	1912, 824, 487, 1913, 488, 489, 490, 491, 492, 493,
	494, 825, 826, 827, 595, 879, 495, 496, 497, 1914,
	498, 499, 500, 501, 502, 503, 504, 0, 0, 0,
	505, 506, 507, 508, 1915, 342, 341, 343, 878, 828,
	509, 596, 510, 829, 830, 1916, 831, 1917, 511, 512,
	515, 880, 832, 881, 514, 516, 517, 882, 518, 0,
	0, 0, 519, 520, 521, 522, 523, 524, 525, 1918,
	526, 528, 527, 1919, 530, 833, 529, 883, 531, 532,
	884, 1920, 533, 534, 535, 536, 537, 538, 541, 1921,
	1922, 539, 540, 542, 543, 0, 544, 545, 547, 550,
	546, 548, 549, 551, 552, 565, 566, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 568,
	0, 567, 885, 569, 570, 571, 572, 573, 581, 583,
	584, 579, 580, 582, 585, 586, 588, 589, 576, 577,
	578, 886, 587, 574, 1923, 575, 344, 887, 590, 591,
	592, 593, 1924, 834, 594, 835, 597, 598, 1925, 0,
	599, 0, 600, 1926, 1927, 602, 603, 604, 1928, 1929,
	605, 606, 836, 888, 607, 889, 837, 608, 609, 601,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	1930, 620, 621, 838, 622, 623, 624, 839, 625, 626,
	627, 840, 628, 841, 629, 630, 1931, 631, 632, 633,
	0, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 842, 644, 645, 647, 646, 648, 649, 1932, 650,
	0, 651, 652, 653, 0, 0, 0, 0, 0, 654,
	655, 657, 0, 658, 659, 660, 661, 662, 656, 663,
	664, 665, 666, 667, 668, 669, 1933, 671, 672, 670,
	673, 674, 890, 675, 676, 677, 678, 679, 843, 680,
	0, 681, 682, 690, 691, 692, 683, 684, 686, 693,
	685, 694, 695, 696, 697, 699, 698, 1934, 701, 702,
	700, 703, 704, 705, 706, 1935, 707, 844, 708, 687,
	688, 709, 710, 711, 891, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 845, 0, 721, 1936, 722, 723,
	724, 725, 726, 727, 729, 689, 730, 731, 732, 737,
	738, 846, 733, 734, 735, 736, 847, 740, 741, 742,
	743, 1937, 744, 745, 0, 739, 728, 1938, 746, 747,
	748, 749, 750, 751, 752, 753, 754, 755, 1939, 756,
	848, 849, 850, 851, 1940, 768, 1941, 757, 759, 760,
	761, 762, 852, 763, 853, 1942, 764, 765, 766, 767,
	758, 769, 770, 1943, 1944, 771, 772, 773, 774, 776,
	778, 779, 780, 775, 777, 781, 1945, 782, 1946, 0,
	783, 784, 785, 854, 855, 856, 1947, 787, 788, 786,
	789, 790, 793, 791, 792, 857, 796, 513, 797, 798,
	799, 794, 795, 1948, 1949, 1950, 1951, 800, 801, 858,
	802, 803, 804, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1868, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 5417, 345,
	346, 348, 347, 349, 350, 351, 352, 1873, 353, 354,
	1874, 1875, 1876, 0, 1877, 805, 1878, 1879, 1880, 356,
	0, 355, 1881, 357, 358, 359, 874, 360, 361, 362,
	363, 364, 365, 366, 367, 806, 807, 0, 368, 808,
	369, 809, 1882, 810, 370, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 1883, 1884, 0, 380, 811, 812,
	813, 1885, 381, 382, 383, 384, 814, 1886, 875, 1887,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 1888,
	394, 395, 396, 393, 397, 398, 1889, 399, 0, 400,
	401, 402, 403, 404, 405, 406, 1890, 407, 408, 409,
	876, 410, 411, 412, 1891, 1892, 1894, 1893, 1895, 1896,
	1897, 413, 414, 415, 416, 417, 0, 418, 420, 421,
	815, 422, 816, 1898, 425, 427, 419, 423, 1899, 426,
	424, 428, 429, 1900, 430, 431, 432, 433, 1901, 1902,
	434, 435, 436, 1903, 437, 438, 440, 439, 1904, 441,
	442, 443, 1905, 444, 445, 817, 446, 447, 448, 450,
	452, 449, 451, 453, 454, 455, 456, 457, 818, 819,
	458, 459, 1906, 340, 1907, 0, 0, 0, 0, 460,
	461, 462, 820, 0, 0, 0, 463, 1908, 465, 469,
	466, 467, 468, 470, 1909, 464, 471, 472, 1910, 877,
	473, 474, 475, 821, 822, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 1911, 485, 486, 823, 1912, 824,
	487, 1913, 488, 489, 490, 491, 492, 493, 494, 825,
	826, 827, 595, 879, 495, 496, 497, 1914, 498, 499,
	500, 501, 502, 503, 504, 0, 0, 0, 505, 506,
	507, 508, 1915, 342, 341, 343, 878, 828, 509, 596,
	510, 829, 830, 1916, 831, 1917, 511, 512, 515, 880,
	832, 881, 514, 516, 517, 882, 518, 0, 0, 0,
	519, 520, 521, 522, 523, 524, 525, 1918, 526, 528,
	527, 1919, 530, 833, 529, 883, 531, 532, 884, 1920,
	533, 534, 535, 536, 537, 538, 541, 1921, 1922, 539,
	540, 542, 543, 0, 544, 545, 547, 550, 546, 548,
	549, 551, 552, 565, 566, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 568, 0, 567,
	885, 569, 570, 571, 572, 573, 581, 583, 584, 579,
	580, 582, 585, 586, 588, 589, 576, 577, 578, 886,
	587, 574, 1923, 575, 344, 887, 590, 591, 592, 593,
	1924, 834, 594, 835, 597, 598, 1925, 0, 599, 0,
	600, 1926, 1927, 602, 603, 604, 1928, 1929, 605, 606,
	836, 888, 607, 889, 837, 608, 609, 601, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 1930, 620,
	621, 838, 622, 623, 624, 839, 625, 626, 627, 840,
	628, 841, 629, 630, 1931, 631, 632, 633, 0, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 842,
	644, 645, 647, 646, 648, 649, 1932, 650, 0, 651,
	652, 653, 0, 0, 0, 0, 0, 654, 655, 657,
	0, 658, 659, 660, 661, 662, 656, 663, 664, 665,
	666, 667, 668, 669, 1933, 671, 672, 670, 673, 674,
	890, 675, 676, 677, 678, 679, 843, 680, 0, 681,
	682, 690, 691, 692, 683, 684, 686, 693, 685, 694,
	695, 696, 697, 699, 698, 1934, 701, 702, 700, 703,
	704, 705, 706, 1935, 707, 844, 708, 687, 688, 709,
	710, 711, 891, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 845, 0, 721, 1936, 722, 723, 724, 725,
	726, 727, 729, 689, 730, 731, 732, 737, 738, 846,
	733, 734, 735, 736, 847, 740, 741, 742, 743, 1937,
	744, 745, 0, 739, 728, 1938, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 1939, 756, 848, 849,
	850, 851, 1940, 768, 1941, 757, 759, 760, 761, 762,
	852, 763, 853, 1942, 764, 765, 766, 767, 758, 769,
	770, 1943, 1944, 771, 772, 773, 774, 776, 778, 779,
	780, 775, 777, 781, 1945, 782, 1946, 0, 783, 784,
	785, 854, 855, 856, 1947, 787, 788, 786, 789, 790,
	793, 791, 792, 857, 796, 513, 797, 798, 799, 794,
	795, 1948, 1949, 1950, 1951, 800, 801, 858, 802, 803,
	804, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1868, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 5245, 345, 346, 348,
	347, 349, 350, 351, 352, 1873, 353, 354, 1874, 1875,
	1876, 0, 1877, 805, 1878, 1879, 1880, 356, 0, 355,
	1881, 357, 358, 359, 874, 360, 361, 362, 363, 364,
	365, 366, 367, 806, 807, 0, 368, 808, 369, 809,
	1882, 810, 370, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 1883, 1884, 0, 380, 811, 812, 813, 1885,
	381, 382, 383, 384, 814, 1886, 875, 1887, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 1888, 394, 395,
	396, 393, 397, 398, 1889, 399, 0, 400, 401, 402,
	403, 404, 405, 406, 1890, 407, 408, 409, 876, 410,
	411, 412, 1891, 1892, 1894, 1893, 1895, 1896, 1897, 413,
	414, 415, 416, 417, 0, 418, 420, 421, 815, 422,
	816, 1898, 425, 427, 419, 423, 1899, 426, 424, 428,
	429, 1900, 430, 431, 432, 433, 1901, 1902, 434, 435,
	436, 1903, 437, 438, 440, 439, 1904, 441, 442, 443,
	1905, 444, 445, 817, 446, 447, 448, 450, 452, 449,
	451, 453, 454, 455, 456, 457, 818, 819, 458, 459,
	1906, 340, 1907, 0, 0, 0, 0, 460, 461, 462,
	820, 0, 0, 0, 463, 1908, 465, 469, 466, 467,
	468, 470, 1909, 464, 471, 472, 1910, 877, 473, 474,
	475, 821, 822, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 1911, 485, 486, 823, 1912, 824, 487, 1913,
	488, 489, 490, 491, 492, 493, 494, 825, 826, 827,
	595, 879, 495, 496, 497, 1914, 498, 499, 500, 501,
	502, 503, 504, 0, 0, 0, 505, 506, 507, 508,
	1915, 342, 341, 343, 878, 828, 509, 596, 510, 829,
	830, 1916, 831, 1917, 511, 512, 515, 880, 832, 881,
	514, 516, 517, 882, 518, 0, 0, 0, 519, 520,
	521, 522, 523, 524, 525, 1918, 526, 528, 527, 1919,
	530, 833, 529, 883, 531, 532, 884, 1920, 533, 534,
	535, 536, 537, 538, 541, 1921, 1922, 539, 540, 542,
	543, 0, 544, 545, 547, 550, 546, 548, 549, 551,
	552, 565, 566, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 568, 0, 567, 885, 569,
	570, 571, 572, 573, 581, 583, 584, 579, 580, 582,
	585, 586, 588, 589, 576, 577, 578, 886, 587, 574,
	1923, 575, 344, 887, 590, 591, 592, 593, 1924, 834,
	594, 835, 597, 598, 1925, 0, 599, 0, 600, 1926,
	1927, 602, 603, 604, 1928, 1929, 605, 606, 836, 888,
	607, 889, 837, 608, 609, 601, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 1930, 620, 621, 838,
	622, 623, 624, 839, 625, 626, 627, 840, 628, 841,
	629, 630, 1931, 631, 632, 633, 0, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 842, 644, 645,
	647, 646, 648, 649, 1932, 650, 0, 651, 652, 653,
	0, 0, 0, 0, 0, 654, 655, 657, 0, 658,
	659, 660, 661, 662, 656, 663, 664, 665, 666, 667,
	668, 669, 1933, 671, 672, 670, 673, 674, 890, 675,
	676, 677, 678, 679, 843, 680, 0, 681, 682, 690,
	691, 692, 683, 684, 686, 693, 685, 694, 695, 696,
	697, 699, 698, 1934, 701, 702, 700, 703, 704, 705,
	706, 1935, 707, 844, 708, 687, 688, 709, 710, 711,
	891, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	845, 0, 721, 1936, 722, 723, 724, 725, 726, 727,
	729, 689, 730, 731, 732, 737, 738, 846, 733, 734,
	735, 736, 847, 740, 741, 742, 743, 1937, 744, 745,
	0, 739, 728, 1938, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 1939, 756, 848, 849, 850, 851,
	1940, 768, 1941, 757, 759, 760, 761, 762, 852, 763,
	853, 1942, 764, 765, 766, 767, 758, 769, 770, 1943,
	1944, 771, 772, 773, 774, 776, 778, 779, 780, 775,
	777, 781, 1945, 782, 1946, 0, 783, 784, 785, 854,
	855, 856, 1947, 787, 788, 786, 789, 790, 793, 791,
	792, 857, 796, 513, 797, 798, 799, 794, 795, 1948,
	1949, 1950, 1951, 800, 801, 858, 802, 803, 804, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1868, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 5053, 345, 346, 348, 347, 349,
	350, 351, 352, 1873, 353, 354, 1874, 1875, 1876, 0,
	1877, 805, 1878, 1879, 1880, 356, 0, 355, 1881, 357,
	358, 359, 874, 360, 361, 362, 363, 364, 365, 366,
	367, 806, 807, 0, 368, 808, 369, 809, 1882, 810,
	370, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	1883, 1884, 0, 380, 811, 812, 813, 1885, 381, 382,
	383, 384, 814, 1886, 875, 1887, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 1888, 394, 395, 396, 393,
	397, 398, 1889, 399, 0, 400, 401, 402, 403, 404,
	405, 406, 1890, 407, 408, 409, 876, 410, 411, 412,
	1891, 1892, 1894, 1893, 1895, 1896, 1897, 413, 414, 415,
	416, 417, 0, 418, 420, 421, 815, 422, 816, 1898,
	425, 427, 419, 423, 1899, 426, 424, 428, 429, 1900,
	430, 431, 432, 433, 1901, 1902, 434, 435, 436, 1903,
	437, 438, 440, 439, 1904, 441, 442, 443, 1905, 444,
	445, 817, 446, 447, 448, 450, 452, 449, 451, 453,
	454, 455, 456, 457, 818, 819, 458, 459, 1906, 340,
	1907, 0, 0, 0, 0, 460, 461, 462, 820, 0,
	0, 0, 463, 1908, 465, 469, 466, 467, 468, 470,
	1909, 464, 471, 472, 1910, 877, 473, 474, 475, 821,
	822, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	1911, 485, 486, 823, 1912, 824, 487, 1913, 488, 489,
	490, 491, 492, 493, 494, 825, 826, 827, 595, 879,
	495, 496, 497, 1914, 498, 499, 500, 501, 502, 503,
	504, 0, 0, 0, 505, 506, 507, 508, 1915, 342,
	341, 343, 878, 828, 509, 596, 510, 829, 830, 1916,
	831, 1917, 511, 512, 515, 880, 832, 881, 514, 516,
	517, 882, 518, 0, 0, 0, 519, 520, 521, 522,
	523, 524, 525, 1918, 526, 528, 527, 1919, 530, 833,
	529, 883, 531, 532, 884, 1920, 533, 534, 535, 536,
	537, 538, 541, 1921, 1922, 539, 540, 542, 543, 0,
	544, 545, 547, 550, 546, 548, 549, 551, 552, 565,
	566, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 568, 0, 567, 885, 569, 570, 571,
	572, 573, 581, 583, 584, 579, 580, 582, 585, 586,
	588, 589, 576, 577, 578, 886, 587, 574, 1923, 575,
	344, 887, 590, 591, 592, 593, 1924, 834, 594, 835,
	597, 598, 1925, 0, 599, 0, 600, 1926, 1927, 602,
	603, 604, 1928, 1929, 605, 606, 836, 888, 607, 889,
	837, 608, 609, 601, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 1930, 620, 621, 838, 622, 623,
	624, 839, 625, 626, 627, 840, 628, 841, 629, 630,
	1931, 631, 632, 633, 0, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 842, 644, 645, 647, 646,
	648, 649, 1932, 650, 0, 651, 652, 653, 0, 0,
	0, 0, 0, 654, 655, 657, 0, 658, 659, 660,
	661, 662, 656, 663, 664, 665, 666, 667, 668, 669,
	1933, 671, 672, 670, 673, 674, 890, 675, 676, 677,
	678, 679, 843, 680, 0, 681, 682, 690, 691, 692,
	683, 684, 686, 693, 685, 694, 695, 696, 697, 699,
	698, 1934, 701, 702, 700, 703, 704, 705, 706, 1935,
	707, 844, 708, 687, 688, 709, 710, 711, 891, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 845, 0,
	721, 1936, 722, 723, 724, 725, 726, 727, 729, 689,
	730, 731, 732, 737, 738, 846, 733, 734, 735, 736,
	847, 740, 741, 742, 743, 1937, 744, 745, 0, 739,
	728, 1938, 746, 747, 748, 749, 750, 751, 752, 753,
	754, 755, 1939, 756, 848, 849, 850, 851, 1940, 768,
	1941, 757, 759, 760, 761, 762, 852, 763, 853, 1942,
	764, 765, 766, 767, 758, 769, 770, 1943, 1944, 771,
	772, 773, 774, 776, 778, 779, 780, 775, 777, 781,
	1945, 782, 1946, 0, 783, 784, 785, 854, 855, 856,
	1947, 787, 788, 786, 789, 790, 793, 791, 792, 857,
	796, 513, 797, 798, 799, 794, 795, 1948, 1949, 1950,
	1951, 800, 801, 858, 802, 803, 804, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1868, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3184, 345, 346, 348, 347, 349, 350, 351,
	352, 1873, 353, 354, 1874, 1875, 1876, 0, 1877, 805,
	1878, 1879, 1880, 356, 0, 355, 1881, 357, 358, 359,
	874, 360, 361, 362, 363, 364, 365, 366, 367, 806,
	807, 0, 368, 808, 369, 809, 1882, 810, 370, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 1883, 1884,
	0, 380, 811, 812, 813, 1885, 381, 382, 383, 384,
	814, 1886, 875, 1887, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 1888, 394, 395, 396, 393, 397, 398,
	1889, 399, 0, 400, 401, 402, 403, 404, 405, 406,
	1890, 407, 408, 409, 876, 410, 411, 412, 1891, 1892,
	1894, 1893, 1895, 1896, 1897, 413, 414, 415, 416, 417,
	0, 418, 420, 421, 815, 422, 816, 1898, 425, 427,
	419, 423, 1899, 426, 424, 428, 429, 1900, 430, 431,
	432, 433, 1901, 1902, 434, 435, 436, 1903, 437, 438,
	440, 439, 1904, 441, 442, 443, 1905, 444, 445, 817,
	446, 447, 448, 450, 452, 449, 451, 453, 454, 455,
	456, 457, 818, 819, 458, 459, 1906, 340, 1907, 0,
	0, 0, 0, 460, 461, 462, 820, 0, 0, 0,
	463, 1908, 465, 469, 466, 467, 468, 470, 1909, 464,
	471, 472, 1910, 877, 473, 474, 475, 821, 822, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 1911, 485,
	486, 823, 1912, 824, 487, 1913, 488, 489, 490, 491,
	492, 493, 494, 825, 826, 827, 595, 879, 495, 496,
	497, 1914, 498, 499, 500, 501, 502, 503, 504, 0,
	0, 0, 505, 506, 507, 508, 1915, 342, 341, 343,
	878, 828, 509, 596, 510, 829, 830, 1916, 831, 1917,
	511, 512, 515, 880, 832, 881, 514, 516, 517, 882,
	518, 0, 0, 0, 519, 520, 521, 522, 523, 524,
	525, 1918, 526, 528, 527, 1919, 530, 833, 529, 883,
	531, 532, 884, 1920, 533, 534, 535, 536, 537, 538,
	541, 1921, 1922, 539, 540, 542, 543, 0, 544, 545,
	547, 550, 546, 548, 549, 551, 552, 565, 566, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 568, 0, 567, 885, 569, 570, 571, 572, 573,
	581, 583, 584, 579, 580, 582, 585, 586, 588, 589,
	576, 577, 578, 886, 587, 574, 1923, 575, 344, 887,
	590, 591, 592, 593, 1924, 834, 594, 835, 597, 598,
	1925, 0, 599, 0, 600, 1926, 1927, 602, 603, 604,
	1928, 1929, 605, 606, 836, 888, 607, 889, 837, 608,
	609, 601, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 1930, 620, 621, 838, 622, 623, 624, 839,
	625, 626, 627, 840, 628, 841, 629, 630, 1931, 631,
	632, 633, 0, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 842, 644, 645, 647, 646, 648, 649,
	1932, 650, 0, 651, 652, 653, 0, 0, 0, 0,
	0, 654, 655, 657, 0, 658, 659, 660, 661, 662,
	656, 663, 664, 665, 666, 667, 668, 669, 1933, 671,
	672, 670, 673, 674, 890, 675, 676, 677, 678, 679,
	843, 680, 0, 681, 682, 690, 691, 692, 683, 684,
	686, 693, 685, 694, 695, 696, 697, 699, 698, 1934,
	701, 702, 700, 703, 704, 705, 706, 1935, 707, 844,
	708, 687, 688, 709, 710, 711, 891, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 845, 0, 721, 1936,
	722, 723, 724, 725, 726, 727, 729, 689, 730, 731,
	732, 737, 738, 846, 733, 734, 735, 736, 847, 740,
	741, 742, 743, 1937, 744, 745, 0, 739, 728, 1938,
	746, 747, 748, 749, 750, 751, 752, 753, 754, 755,
	1939, 756, 848, 849, 850, 851, 1940, 768, 1941, 757,
	759, 760, 761, 762, 852, 763, 853, 1942, 764, 765,
	766, 767, 758, 769, 770, 1943, 1944, 771, 772, 773,
	774, 776, 778, 779, 780, 775, 777, 781, 1945, 782,
	1946, 0, 783, 784, 785, 854, 855, 856, 1947, 787,
	788, 786, 789, 790, 793, 791, 792, 857, 796, 513,
	797, 798, 799, 794, 795, 1948, 1949, 1950, 1951, 800,
	801, 858, 802, 803, 804, 0, 0, 0, 0, 0,
	0, 0, 1372, 0, 1460, 1403, 1404, 1405, 1401, 1402,
	1414, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2898, 345, 346, 348, 347, 349, 350, 351, 352, 0,
	353, 354, 0, 0, 0, 0, 0, 1452, 1419, 0,
	0, 356, 0, 355, 0, 357, 358, 359, 874, 360,
	361, 362, 363, 364, 365, 366, 367, 806, 1466, 0,
	368, 1474, 369, 1473, 0, 1484, 370, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 1421, 1451, 1385, 380,
	1497, 1498, 813, 0, 381, 382, 383, 384, 1458, 0,
	1439, 0, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 0, 394, 395, 396, 393, 397, 398, 0, 399,
	0, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	408, 409, 876, 410, 411, 412, 1442, 1440, 1441, 1448,
	1444, 1443, 1447, 413, 414, 415, 416, 417, 1477, 418,
	420, 421, 1471, 422, 1470, 1390, 425, 427, 419, 423,
	0, 426, 424, 428, 429, 0, 430, 431, 432, 433,
	0, 0, 434, 1469, 436, 0, 437, 438, 440, 439,
	0, 441, 442, 443, 0, 444, 445, 1397, 446, 447,
	448, 450, 452, 449, 451, 453, 454, 455, 456, 457,
	1485, 1486, 458, 459, 1410, 340, 0, 0, 0, 0,
	0, 460, 461, 462, 1468, 0, 0, 0, 463, 0,
	465, 469, 466, 467, 468, 470, 0, 464, 471, 472,
	0, 877, 473, 474, 475, 1482, 1483, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 486, 1492,
	0, 1420, 487, 0, 488, 489, 490, 491, 492, 493,
	494, 1453, 1454, 1457, 595, 879, 495, 496, 497, 0,
	498, 499, 500, 501, 502, 503, 504, 0, 0, 0,
	505, 506, 507, 508, 0, 867, 341, 343, 878, 828,
	509, 596, 510, 1463, 1464, 0, 1424, 0, 511, 512,
	515, 880, 1455, 881, 514, 516, 517, 882, 518, 0,
	0, 0, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 528, 527, 0, 530, 1493, 529, 883, 531, 532,
	884, 0, 533, 534, 535, 536, 537, 538, 541, 1446,
	1445, 539, 540, 542, 543, 0, 544, 545, 547, 550,
	546, 548, 549, 551, 552, 565, 566, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 568,
	0, 567, 885, 569, 570, 571, 572, 573, 581, 583,
	584, 579, 580, 582, 585, 586, 588, 589, 576, 577,
	578, 886, 587, 574, 1387, 575, 344, 887, 590, 591,
	592, 593, 1411, 1456, 594, 1472, 597, 598, 0, 0,
	599, 0, 600, 0, 0, 602, 603, 604, 0, 0,
	605, 606, 836, 888, 607, 889, 1487, 608, 609, 1398,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	0, 620, 621, 838, 622, 623, 624, 839, 625, 626,
	627, 1488, 628, 841, 629, 630, 0, 631, 632, 633,
	0, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 1467, 644, 645, 647, 646, 648, 649, 0, 650,
	0, 651, 652, 653, 0, 0, 0, 0, 0, 654,
	655, 657, 0, 658, 659, 660, 661, 662, 656, 663,
	664, 665, 666, 667, 668, 669, 0, 671, 672, 670,
	673, 674, 890, 675, 676, 677, 678, 679, 1399, 680,
	0, 681, 682, 690, 691, 692, 683, 684, 686, 693,
	685, 694, 695, 696, 697, 699, 698, 295, 701, 702,
	700, 703, 704, 705, 706, 1449, 707, 844, 708, 687,
	688, 709, 710, 711, 891, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 1465, 0, 721, 0, 722, 723,
	724, 725, 726, 727, 729, 689, 730, 731, 732, 737,
	738, 1496, 733, 734, 735, 736, 1489, 740, 741, 742,
	743, 0, 744, 745, 1384, 739, 728, 297, 746, 747,
	748, 749, 750, 751, 752, 753, 754, 755, 0, 756,
	1478, 1479, 1480, 1481, 0, 768, 0, 757, 759, 760,
	761, 762, 1490, 763, 1491, 1409, 764, 765, 766, 767,
	758, 769, 770, 0, 1391, 771, 772, 773, 774, 776,
	778, 779, 780, 775, 777, 781, 1450, 782, 0, 0,
	783, 784, 785, 2114, 1475, 1495, 0, 787, 788, 786,
	789, 790, 793, 791, 792, 857, 796, 513, 797, 798,
	799, 794, 795, 0, 0, 0, 289, 800, 801, 858,
	802, 803, 804, 1388, 0, 290, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1383,
	0, 0, 0, 0, 0, 0, 1381, 1382, 0, 0,
	0, 0, 0, 0, 864, 0, 2269, 2267, 0, 2390,
	1413, 1460, 1403, 1404, 1405, 1401, 1402, 1414, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 346,
	348, 347, 349, 350, 351, 352, 2387, 353, 354, 0,
	0, 0, 0, 0, 1452, 1419, 0, 0, 356, 0,
	355, 0, 357, 358, 359, 874, 360, 361, 362, 363,
	364, 365, 366, 367, 806, 1466, 0, 368, 1474, 369,
	1473, 0, 1484, 370, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 1421, 1451, 1385, 380, 1497, 1498, 813,
	0, 381, 382, 383, 384, 1458, 0, 1439, 0, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 0, 394,
	395, 396, 393, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 408, 409, 876,
	410, 411, 412, 1442, 1440, 1441, 1448, 1444, 1443, 1447,
	413, 414, 415, 416, 417, 1477, 418, 420, 421, 1471,
	422, 1470, 1390, 425, 427, 419, 423, 0, 426, 424,
	428, 429, 0, 430, 431, 432, 433, 2388, 0, 434,
	1469, 436, 0, 437, 438, 440, 439, 0, 441, 442,
	443, 0, 444, 445, 1397, 446, 447, 448, 450, 452,
	449, 451, 453, 454, 455, 456, 457, 1485, 1486, 458,
	459, 1410, 340, 0, 0, 0, 0, 0, 460, 461,
	462, 1468, 0, 0, 0, 463, 0, 465, 469, 466,
	467, 468, 470, 0, 464, 471, 472, 0, 877, 473,
	474, 475, 1482, 1483, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 0, 485, 486, 1492, 0, 1420, 487,
	0, 488, 489, 490, 491, 492, 493, 494, 1453, 1454,
	1457, 595, 879, 495, 496, 497, 0, 498, 499, 500,
	501, 502, 503, 504, 0, 0, 0, 505, 506, 507,
	508, 0, 867, 341, 343, 878, 828, 509, 596, 510,
	1463, 1464, 0, 1424, 0, 511, 512, 515, 880, 1455,
	881, 514, 516, 517, 882, 518, 0, 0, 0, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 528, 527,
	0, 530, 1493, 529, 883, 531, 532, 884, 0, 533,
	534, 535, 536, 537, 538, 541, 1446, 1445, 539, 540,
	542, 543, 0, 544, 545, 547, 550, 546, 548, 549,
	551, 552, 565, 566, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 568, 0, 567, 885,
	569, 570, 571, 572, 573, 581, 583, 584, 579, 580,
	582, 585, 586, 588, 589, 576, 577, 578, 886, 587,
	574, 1387, 575, 344, 887, 590, 591, 592, 593, 1411,
	1456, 594, 1472, 597, 598, 0, 0, 599, 0, 600,
	0, 0, 602, 603, 604, 0, 0, 605, 606, 836,
	888, 607, 889, 1487, 608, 609, 1398, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 0, 620, 621,
	838, 622, 623, 624, 839, 625, 626, 627, 1488, 628,
	841, 629, 630, 0, 631, 632, 633, 0, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 1467, 644,
	645, 647, 646, 648, 649, 0, 650, 0, 651, 652,
	653, 0, 0, 0, 0, 0, 654, 655, 657, 0,
	658, 659, 660, 661, 662, 656, 663, 664, 665, 666,
	667, 668, 669, 0, 671, 672, 670, 673, 674, 890,
	675, 676, 677, 678, 679, 1399, 680, 0, 681, 682,
	690, 691, 692, 683, 684, 686, 693, 685, 694, 695,
	696, 697, 699, 698, 0, 701, 702, 700, 703, 704,
	705, 706, 1449, 707, 844, 708, 687, 688, 709, 710,
	711, 891, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 1465, 0, 721, 0, 722, 723, 724, 725, 726,
	727, 729, 689, 730, 731, 732, 737, 738, 1496, 733,
	734, 735, 736, 1489, 740, 741, 742, 743, 0, 744,
	745, 1384, 739, 728, 0, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 0, 756, 1478, 1479, 1480,
	1481, 0, 768, 0, 757, 759, 760, 761, 762, 1490,
	763, 1491, 1409, 764, 765, 766, 767, 758, 769, 770,
	0, 1391, 771, 772, 773, 774, 776, 778, 779, 780,
	775, 777, 781, 1450, 782, 0, 0, 783, 784, 785,
	854, 1475, 1495, 2386, 787, 788, 786, 789, 790, 793,
	791, 792, 857, 796, 513, 797, 798, 799, 794, 795,
	0, 0, 0, 0, 800, 801, 858, 802, 803, 804,
	1388, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1383, 0, 0, 1865,
	0, 1868, 0, 1381, 1382, 2389, 0, 0, 0, 0,
	0, 864, 0, 1415, 2384, 0, 0, 1413, 345, 346,
	348, 347, 349, 350, 351, 352, 1873, 353, 354, 1874,
	1875, 1876, 0, 1877, 805, 1878, 1879, 1880, 356, 0,
	355, 1881, 357, 358, 359, 874, 360, 361, 362, 363,
	364, 365, 366, 367, 806, 807, 0, 368, 808, 369,
	809, 1882, 810, 370, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 1883, 1884, 0, 380, 811, 812, 813,
	1885, 381, 382, 383, 384, 814, 1886, 875, 1887, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 1888, 394,
	395, 396, 393, 397, 398, 1889, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 1890, 407, 408, 409, 876,
	410, 411, 412, 1891, 1892, 1894, 1893, 1895, 1896, 1897,
	413, 414, 415, 416, 417, 0, 418, 420, 421, 815,
	422, 816, 1898, 425, 427, 419, 423, 1899, 426, 424,
	428, 429, 1900, 430, 431, 432, 433, 1901, 1902, 434,
	435, 436, 1903, 437, 438, 440, 439, 1904, 441, 442,
	443, 1905, 444, 445, 817, 446, 447, 448, 450, 452,
	449, 451, 453, 454, 455, 456, 457, 818, 819, 458,
	459, 1906, 340, 1907, 0, 0, 0, 0, 460, 461,
	462, 820, 0, 0, 0, 463, 1908, 465, 469, 466,
	467, 468, 470, 1909, 464, 471, 472, 1910, 877, 473,
	474, 475, 821, 822, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 1911, 485, 486, 823, 1912, 824, 487,
	1913, 488, 489, 490, 491, 492, 493, 494, 825, 826,
	827, 595, 879, 495, 496, 497, 1914, 498, 499, 500,
	501, 502, 503, 504, 0, 0, 0, 505, 506, 507,
	508, 1915, 342, 341, 343, 878, 828, 509, 596, 510,
	829, 830, 1916, 831, 1917, 511, 512, 515, 880, 832,
	881, 514, 516, 517, 882, 518, 0, 0, 0, 519,
	520, 521, 522, 523, 524, 525, 1918, 526, 528, 527,
	1919, 530, 833, 529, 883, 531, 532, 884, 1920, 533,
	534, 535, 536, 537, 538, 541, 1921, 1922, 539, 540,
	542, 543, 0, 544, 545, 547, 550, 546, 548, 549,
	551, 552, 565, 566, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 568, 0, 567, 885,
	569, 570, 571, 572, 573, 581, 583, 584, 579, 580,
	582, 585, 586, 588, 589, 576, 577, 578, 886, 587,
	574, 1923, 575, 344, 887, 590, 591, 592, 593, 1924,
	834, 594, 835, 597, 598, 1925, 0, 599, 0, 600,
	1926, 1927, 602, 603, 604, 1928, 1929, 605, 606, 836,
	888, 607, 889, 837, 608, 609, 601, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 1930, 620, 621,
	838, 622, 623, 624, 839, 625, 626, 627, 840, 628,
	841, 629, 630, 1931, 631, 632, 633, 0, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 842, 644,
	645, 647, 646, 648, 649, 1932, 650, 0, 651, 652,
	653, 0, 0, 0, 0, 0, 654, 655, 657, 0,
	658, 659, 660, 661, 662, 656, 663, 664, 665, 666,
	667, 668, 669, 1933, 671, 672, 670, 673, 674, 890,
	675, 676, 677, 678, 679, 843, 680, 0, 681, 682,
	690, 691, 692, 683, 684, 686, 693, 685, 694, 695,
	696, 697, 699, 698, 1934, 701, 702, 700, 703, 704,
	705, 706, 1935, 707, 844, 708, 687, 688, 709, 710,
	711, 891, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 845, 0, 721, 1936, 722, 723, 724, 725, 726,
	727, 729, 689, 730, 731, 732, 737, 738, 846, 733,
	734, 735, 736, 847, 740, 741, 742, 743, 1937, 744,
	745, 0, 739, 728, 1938, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 1939, 756, 848, 849, 850,
	851, 1940, 768, 1941, 757, 759, 760, 761, 762, 852,
	763, 853, 1942, 764, 765, 766, 767, 758, 769, 770,
	1943, 1944, 771, 772, 773, 774, 776, 778, 779, 780,
	775, 777, 781, 1945, 782, 1946, 0, 783, 784, 785,
	854, 855, 856, 1947, 787, 788, 786, 789, 790, 793,
	791, 792, 857, 796, 513, 797, 798, 799, 794, 795,
	1948, 1949, 1950, 1951, 800, 801, 858, 802, 803, 804,
	1868, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 346, 348,
	347, 349, 350, 351, 352, 1873, 353, 354, 1874, 1875,
	1876, 0, 1877, 805, 1878, 1879, 1880, 356, 0, 355,
	1881, 357, 358, 359, 874, 360, 361, 362, 363, 364,
	365, 366, 367, 806, 807, 0, 368, 808, 369, 809,
	1882, 810, 370, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 1883, 1884, 0, 380, 811, 812, 813, 1885,
	381, 382, 383, 384, 814, 1886, 875, 1887, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 1888, 394, 395,
	396, 393, 397, 398, 1889, 399, 0, 400, 401, 402,
	403, 404, 405, 406, 1890, 407, 408, 409, 876, 410,
	411, 412, 1891, 1892, 1894, 1893, 1895, 1896, 1897, 413,
	414, 415, 416, 417, 0, 418, 420, 421, 815, 422,
	816, 1898, 425, 427, 419, 423, 1899, 426, 424, 428,
	429, 1900, 430, 431, 432, 433, 1901, 1902, 434, 435,
	436, 1903, 437, 438, 440, 439, 1904, 441, 442, 443,
	1905, 444, 445, 817, 446, 447, 448, 450, 452, 449,
	451, 453, 454, 455, 456, 457, 818, 819, 458, 459,
	1906, 340, 1907, 0, 0, 0, 0, 460, 461, 462,
	820, 0, 0, 0, 463, 1908, 465, 469, 466, 467,
	468, 470, 1909, 464, 471, 472, 1910, 877, 473, 474,
	475, 821, 822, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 1911, 485, 486, 823, 1912, 824, 487, 1913,
	488, 489, 490, 491, 492, 493, 494, 825, 826, 827,
	595, 879, 495, 496, 497, 1914, 498, 499, 500, 501,
	502, 503, 504, 0, 0, 0, 505, 506, 507, 508,
	1915, 342, 341, 343, 878, 828, 509, 596, 510, 829,
	830, 1916, 831, 1917, 511, 512, 515, 880, 832, 881,
	514, 516, 517, 882, 518, 0, 0, 0, 519, 520,
	521, 522, 523, 524, 525, 1918, 526, 528, 527, 1919,
	530, 833, 529, 883, 531, 532, 884, 1920, 533, 534,
	535, 536, 537, 538, 541, 1921, 1922, 539, 540, 542,
	543, 0, 544, 545, 547, 550, 546, 548, 549, 551,
	552, 565, 566, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 568, 0, 567, 885, 569,
	570, 571, 572, 573, 581, 583, 584, 579, 580, 582,
	585, 586, 588, 589, 576, 577, 578, 886, 587, 574,
	1923, 575, 344, 887, 590, 591, 592, 593, 1924, 834,
	594, 835, 597, 598, 1925, 0, 599, 0, 600, 1926,
	1927, 602, 603, 604, 1928, 1929, 605, 606, 836, 888,
	607, 889, 837, 608, 609, 601, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 1930, 620, 621, 838,
	622, 623, 624, 839, 625, 626, 627, 840, 628, 841,
	629, 630, 1931, 631, 632, 633, 0, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 842, 644, 645,
	647, 646, 648, 649, 1932, 650, 0, 651, 652, 653,
	0, 0, 0, 0, 0, 654, 655, 657, 0, 658,
	659, 660, 661, 662, 656, 663, 664, 665, 666, 667,
	668, 669, 1933, 671, 672, 670, 673, 674, 890, 675,
	676, 677, 678, 679, 843, 680, 0, 681, 682, 690,
	691, 692, 683, 684, 686, 693, 685, 694, 695, 696,
	697, 699, 698, 1934, 701, 702, 700, 703, 704, 705,
	706, 1935, 707, 844, 708, 687, 688, 709, 710, 711,
	891, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	845, 0, 721, 1936, 722, 723, 724, 725, 726, 727,
	729, 689, 730, 731, 732, 737, 738, 846, 733, 734,
	735, 736, 847, 740, 741, 742, 743, 1937, 744, 745,
	0, 739, 728, 1938, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 1939, 756, 848, 849, 850, 851,
	1940, 768, 1941, 757, 759, 760, 761, 762, 852, 763,
	853, 1942, 764, 765, 766, 767, 758, 769, 770, 1943,
	1944, 771, 772, 773, 774, 776, 778, 779, 780, 775,
	777, 781, 1945, 782, 1946, 0, 783, 784, 785, 854,
	855, 856, 1947, 787, 788, 786, 789, 790, 793, 791,
	792, 857, 796, 513, 797, 798, 799, 794, 795, 1948,
	1949, 1950, 1951, 800, 801, 858, 802, 803, 804, 1460,
	1403, 1404, 1405, 1401, 1402, 1414, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 346, 348, 347,
	349, 350, 351, 352, 0, 353, 354, 0, 0, 0,
	0, 0, 1452, 1419, 0, 0, 356, 0, 355, 0,
	357, 358, 359, 874, 360, 361, 362, 363, 364, 365,
	366, 367, 806, 1466, 0, 368, 1474, 369, 1473, 0,
	1484, 370, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 1421, 1451, 1385, 380, 1497, 1498, 813, 0, 381,
	382, 383, 384, 1458, 0, 1439, 0, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 0, 394, 395, 396,
	393, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 408, 409, 876, 410, 411,
	412, 1442, 1440, 1441, 1448, 1444, 1443, 1447, 413, 414,
	415, 416, 417, 1477, 418, 420, 421, 1471, 422, 1470,
	1390, 425, 427, 419, 423, 0, 426, 424, 428, 429,
	0, 430, 431, 432, 433, 0, 0, 434, 1469, 436,
	0, 437, 438, 440, 439, 0, 441, 442, 443, 0,
	444, 445, 1397, 446, 447, 448, 450, 452, 449, 451,
	453, 454, 455, 456, 457, 1485, 1486, 458, 459, 1410,
	340, 0, 0, 0, 0, 0, 460, 461, 462, 1468,
	0, 0, 0, 463, 0, 465, 469, 466, 467, 468,
	470, 0, 464, 471, 472, 0, 877, 473, 474, 475,
	1482, 1483, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 0, 485, 486, 1492, 0, 1420, 487, 0, 488,
	489, 490, 491, 492, 493, 494, 1453, 1454, 1457, 595,
	879, 495, 496, 497, 0, 498, 499, 500, 501, 502,
	503, 504, 0, 0, 0, 505, 506, 507, 508, 0,
	867, 341, 343, 878, 828, 509, 596, 510, 1463, 1464,
	0, 1424, 0, 511, 512, 515, 880, 1455, 881, 514,
	516, 517, 882, 518, 0, 0, 0, 519, 520, 521,
	522, 523, 524, 525, 0, 526, 528, 527, 0, 530,
	1493, 529, 883, 531, 532, 884, 0, 533, 534, 535,
	536, 537, 538, 541, 1446, 1445, 539, 540, 542, 543,
	0, 544, 545, 547, 550, 546, 548, 549, 551, 552,
	565, 566, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 568, 0, 567, 885, 569, 570,
	571, 572, 573, 581, 583, 584, 579, 580, 582, 585,
	586, 588, 589, 576, 577, 578, 886, 587, 574, 1387,
	575, 344, 887, 590, 591, 592, 593, 1411, 1456, 594,
	1472, 597, 598, 0, 0, 599, 0, 600, 0, 0,
	602, 603, 604, 0, 0, 605, 606, 836, 888, 607,
	889, 1487, 608, 609, 1398, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 0, 620, 621, 838, 622,
	623, 624, 839, 625, 626, 627, 1488, 628, 841, 629,
	630, 0, 631, 632, 633, 0, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 1467, 644, 645, 647,
	646, 648, 649, 0, 650, 0, 651, 652, 653, 0,
	0, 0, 0, 0, 654, 655, 657, 0, 658, 659,
	660, 661, 662, 656, 663, 664, 665, 666, 667, 668,
	669, 0, 671, 672, 670, 673, 674, 890, 675, 676,
	677, 678, 679, 1399, 680, 0, 681, 682, 690, 691,
	692, 683, 684, 686, 693, 685, 694, 695, 696, 697,
	699, 698, 295, 701, 702, 700, 703, 704, 705, 706,
	1449, 707, 844, 708, 687, 688, 709, 710, 711, 891,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 1465,
	0, 721, 0, 722, 723, 724, 725, 726, 727, 729,
	689, 730, 731, 732, 737, 738, 1496, 733, 734, 735,
	736, 1489, 740, 741, 742, 743, 0, 744, 745, 1384,
	739, 728, 297, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 755, 0, 756, 1478, 1479, 1480, 1481, 0,
	768, 0, 757, 759, 760, 761, 762, 1490, 763, 1491,
	1409, 764, 765, 766, 767, 758, 769, 770, 0, 1391,
	771, 772, 773, 774, 776, 778, 779, 780, 775, 777,
	781, 1450, 782, 0, 0, 783, 784, 785, 2114, 1475,
	1495, 0, 787, 788, 786, 789, 790, 793, 791, 792,
	857, 796, 513, 797, 798, 799, 794, 795, 0, 0,
	0, 289, 800, 801, 858, 802, 803, 804, 1388, 0,
	290, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1383, 0, 0, 0, 0, 0,
	0, 1381, 1382, 0, 0, 0, 0, 0, 0, 864,
	0, 2269, 4548, 0, 0, 1413, 1460, 1403, 1404, 1405,
	1401, 1402, 1414, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 346, 348, 347, 349, 350, 351,
	352, 0, 353, 354, 0, 0, 0, 0, 0, 1452,
	1419, 0, 0, 356, 0, 355, 0, 357, 358, 359,
	874, 360, 361, 362, 363, 364, 365, 366, 367, 806,
	1466, 0, 368, 1474, 369, 1473, 0, 1484, 370, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 1421, 1451,
	1385, 380, 1497, 1498, 813, 0, 381, 382, 383, 384,
	1458, 0, 1439, 0, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 0, 394, 395, 396, 393, 397, 398,
	0, 399, 0, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 408, 409, 876, 410, 411, 412, 1442, 1440,
	1441, 1448, 1444, 1443, 1447, 413, 414, 415, 416, 417,
	1477, 418, 420, 421, 1471, 422, 1470, 1390, 425, 427,
	419, 423, 0, 426, 424, 428, 429, 0, 430, 431,
	432, 433, 0, 0, 434, 1469, 436, 0, 437, 438,
	440, 439, 0, 441, 442, 443, 0, 444, 445, 1397,
	446, 447, 448, 450, 452, 449, 451, 453, 454, 455,
	456, 457, 1485, 1486, 458, 459, 1410, 340, 0, 0,
	0, 0, 0, 460, 461, 462, 1468, 0, 0, 0,
	463, 0, 465, 469, 466, 467, 468, 470, 0, 464,
	471, 472, 0, 877, 473, 474, 475, 1482, 1483, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	486, 1492, 0, 1420, 487, 0, 488, 489, 490, 491,
	492, 493, 494, 1453, 1454, 1457, 595, 879, 495, 496,
	497, 0, 498, 499, 500, 501, 502, 503, 504, 0,
	0, 0, 505, 506, 507, 508, 0, 867, 341, 343,
	878, 828, 509, 596, 510, 1463, 1464, 0, 1424, 0,
	511, 512, 515, 880, 1455, 881, 514, 516, 517, 882,
	518, 0, 0, 0, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 528, 527, 0, 530, 1493, 529, 883,
	531, 532, 884, 0, 533, 534, 535, 536, 537, 538,
	541, 1446, 1445, 539, 540, 542, 543, 0, 544, 545,
	547, 550, 546, 548, 549, 551, 552, 565, 566, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 568, 0, 567, 885, 569, 570, 571, 572, 573,
	581, 583, 584, 579, 580, 582, 585, 586, 588, 589,
	576, 577, 578, 886, 587, 574, 1387, 575, 344, 887,
	590, 591, 592, 593, 1411, 1456, 594, 1472, 597, 598,
	0, 0, 599, 0, 600, 0, 0, 602, 603, 604,
	0, 0, 605, 606, 836, 888, 607, 889, 1487, 608,
	609, 1398, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 0, 620, 621, 838, 622, 623, 624, 839,
	625, 626, 627, 1488, 628, 841, 629, 630, 0, 631,
	632, 633, 0, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 1467, 644, 645, 647, 646, 648, 649,
	0, 650, 0, 651, 652, 653, 0, 0, 0, 0,
	0, 654, 655, 657, 0, 658, 659, 660, 661, 662,
	656, 663, 664, 665, 666, 667, 668, 669, 0, 671,
	672, 670, 673, 674, 890, 675, 676, 677, 678, 679,
	1399, 680, 0, 681, 682, 690, 691, 692, 683, 684,
	686, 693, 685, 694, 695, 696, 697, 699, 698, 295,
	701, 702, 700, 703, 704, 705, 706, 1449, 707, 844,
	708, 687, 688, 709, 710, 711, 891, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 1465, 0, 721, 0,
	722, 723, 724, 725, 726, 727, 729, 689, 730, 731,
	732, 737, 738, 1496, 733, 734, 735, 736, 1489, 740,
	741, 742, 743, 0, 744, 745, 1384, 739, 728, 297,
	746, 747, 748, 749, 750, 751, 752, 753, 754, 755,
	0, 756, 1478, 1479, 1480, 1481, 0, 768, 0, 757,
	759, 760, 761, 762, 1490, 763, 1491, 1409, 764, 765,
	766, 767, 758, 769, 770, 0, 1391, 771, 772, 773,
	774, 776, 778, 779, 780, 775, 777, 781, 1450, 782,
	0, 0, 783, 784, 785, 2114, 1475, 1495, 0, 787,
	788, 786, 789, 790, 793, 791, 792, 857, 796, 513,
	797, 798, 799, 794, 795, 0, 0, 0, 289, 800,
	801, 858, 802, 803, 804, 1388, 0, 290, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1383, 0, 0, 0, 0, 0, 0, 1381, 1382,
	0, 0, 0, 0, 0, 0, 864, 0, 2269, 2267,
	0, 0, 1413, 1460, 1403, 1404, 1405, 1401, 1402, 1414,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 346, 348, 347, 349, 350, 351, 352, 0, 353,
	354, 0, 0, 0, 0, 0, 1452, 1419, 0, 0,
	356, 0, 355, 0, 357, 358, 359, 874, 360, 361,
	362, 363, 364, 365, 366, 367, 806, 1466, 0, 368,
	1474, 369, 1473, 3292, 1484, 370, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 1421, 1451, 1385, 380, 1497,
	1498, 813, 0, 381, 382, 383, 384, 1458, 0, 1439,
	0, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	0, 394, 395, 396, 393, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 408,
	409, 876, 410, 411, 412, 1442, 1440, 1441, 1448, 1444,
	1443, 1447, 413, 414, 415, 416, 417, 1477, 418, 420,
	421, 1471, 422, 1470, 1390, 425, 427, 419, 423, 0,
	426, 424, 428, 429, 0, 430, 431, 432, 433, 0,
	0, 434, 1469, 436, 0, 437, 438, 440, 439, 0,
	441, 442, 443, 0, 444, 445, 1397, 446, 447, 448,
	450, 452, 449, 451, 453, 454, 455, 456, 457, 1485,
	1486, 458, 459, 1410, 340, 0, 0, 0, 0, 0,
	460, 461, 462, 1468, 0, 0, 0, 463, 0, 465,
	469, 466, 467, 468, 470, 0, 464, 471, 472, 3297,
	877, 473, 474, 475, 1482, 1483, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 0, 485, 486, 1492, 0,
	1420, 487, 0, 488, 489, 490, 491, 492, 493, 494,
	1453, 1454, 1457, 595, 879, 495, 496, 497, 0, 498,
	499, 500, 501, 502, 503, 504, 0, 0, 0, 505,
	506, 507, 508, 0, 867, 341, 343, 878, 828, 509,
	596, 510, 1463, 1464, 0, 1424, 0, 511, 512, 515,
	880, 1455, 881, 514, 516, 517, 882, 518, 0, 0,
	0, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	528, 527, 3293, 530, 1493, 529, 883, 531, 532, 884,
	0, 533, 534, 535, 536, 537, 538, 541, 1446, 1445,
	539, 540, 542, 543, 0, 544, 545, 547, 550, 546,
	548, 549, 551, 552, 565, 566, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 568, 0,
	567, 885, 569, 570, 571, 572, 573, 581, 583, 584,
	579, 580, 582, 585, 586, 588, 589, 576, 577, 578,
	886, 587, 574, 1387, 575, 344, 887, 590, 591, 592,
	593, 1411, 1456, 594, 1472, 597, 598, 0, 0, 599,
	0, 600, 0, 0, 602, 603, 604, 0, 0, 605,
	606, 836, 888, 607, 889, 1487, 608, 609, 1398, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 0,
	620, 621, 838, 622, 623, 624, 839, 625, 626, 627,
	1488, 628, 841, 629, 630, 0, 631, 632, 633, 0,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	1467, 644, 645, 647, 646, 648, 649, 0, 650, 0,
	651, 652, 653, 0, 0, 0, 0, 0, 654, 655,
	657, 0, 658, 659, 660, 661, 662, 656, 663, 664,
	665, 666, 667, 668, 669, 0, 671, 672, 670, 673,
	674, 890, 675, 676, 677, 678, 679, 1399, 680, 0,
	681, 682, 690, 691, 692, 683, 684, 686, 693, 685,
	694, 695, 696, 697, 699, 698, 0, 701, 702, 700,
	703, 704, 705, 706, 1449, 707, 844, 708, 687, 688,
	709, 710, 711, 891, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 1465, 0, 721, 0, 722, 723, 724,
	725, 726, 727, 729, 689, 730, 731, 732, 737, 738,
	1496, 733, 734, 735, 736, 1489, 740, 741, 742, 743,
	0, 744, 745, 1384, 739, 728, 0, 746, 747, 748,
	749, 750, 751, 752, 753, 754, 755, 0, 756, 1478,
	1479, 1480, 1481, 0, 768, 3294, 757, 759, 760, 761,
	762, 1490, 763, 1491, 1409, 764, 765, 766, 767, 758,
	769, 770, 0, 1391, 771, 772, 773, 774, 776, 778,
	779, 780, 775, 777, 781, 1450, 782, 0, 0, 783,
	784, 785, 854, 1475, 1495, 0, 787, 788, 786, 789,
	790, 793, 791, 792, 857, 796, 513, 797, 798, 799,
	794, 795, 0, 0, 0, 0, 800, 801, 858, 802,
	803, 804, 1388, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1383, 0,
	0, 0, 0, 0, 0, 1381, 1382, 0, 0, 0,
	0, 0, 0, 864, 0, 1415, 0, 0, 3204, 1413,
	1460, 1403, 1404, 1405, 1401, 1402, 1414, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 346, 348,
	347, 349, 350, 351, 352, 0, 353, 354, 0, 0,
	0, 0, 0, 1452, 1419, 0, 0, 356, 0, 355,
	0, 357, 358, 359, 874, 360, 361, 362, 363, 364,
	365, 366, 367, 806, 1466, 0, 368, 1474, 369, 1473,
	0, 1484, 370, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 1421, 1451, 1385, 380, 1497, 1498, 813, 0,
	381, 382, 383, 384, 1458, 0, 1439, 0, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 0, 394, 395,
	396, 393, 397, 398, 0, 399, 0, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 408, 409, 876, 410,
	411, 412, 1442, 1440, 1441, 1448, 1444, 1443, 1447, 413,
	414, 415, 416, 417, 1477, 418, 420, 421, 1471, 422,
	1470, 1390, 425, 427, 419, 423, 0, 426, 424, 428,
	429, 0, 430, 431, 432, 433, 0, 0, 434, 1469,
	436, 0, 437, 438, 440, 439, 0, 441, 442, 443,
	0, 444, 445, 1397, 446, 447, 448, 450, 452, 449,
	451, 453, 454, 455, 456, 457, 1485, 1486, 458, 459,
	1410, 340, 0, 0, 0, 0, 0, 460, 461, 462,
	1468, 0, 0, 0, 463, 0, 465, 469, 466, 467,
	468, 470, 0, 464, 471, 472, 0, 877, 473, 474,
	475, 1482, 1483, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 486, 1492, 0, 1420, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 1453, 1454, 1457,
	595, 879, 495, 496, 497, 0, 498, 499, 500, 501,
	502, 503, 504, 0, 0, 0, 505, 506, 507, 508,
	0, 867, 341, 343, 878, 828, 509, 596, 510, 1463,
	1464, 0, 1424, 0, 511, 512, 515, 880, 1455, 881,
	514, 516, 517, 882, 518, 0, 0, 0, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 528, 527, 0,
	530, 1493, 529, 883, 531, 532, 884, 0, 533, 534,
	535, 536, 537, 538, 541, 1446, 1445, 539, 540, 542,
	543, 0, 544, 545, 547, 550, 546, 548, 549, 551,
	552, 565, 566, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 568, 0, 567, 885, 569,
	570, 571, 572, 573, 581, 583, 584, 579, 580, 582,
	585, 586, 588, 589, 576, 577, 578, 886, 587, 574,
	1387, 575, 344, 887, 590, 591, 592, 593, 1411, 1456,
	594, 1472, 597, 598, 0, 0, 599, 0, 600, 0,
	0, 602, 603, 604, 0, 0, 605, 606, 836, 888,
	607, 889, 1487, 608, 609, 1398, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 0, 620, 621, 838,
	622, 623, 624, 839, 625, 626, 627, 1488, 628, 841,
	629, 630, 0, 631, 632, 633, 0, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 1467, 644, 645,
	647, 646, 648, 649, 0, 650, 0, 651, 652, 653,
	0, 0, 0, 0, 0, 654, 655, 657, 0, 658,
	659, 660, 661, 662, 656, 663, 664, 665, 666, 667,
	668, 669, 0, 671, 672, 670, 673, 674, 890, 675,
	676, 677, 678, 679, 1399, 680, 0, 681, 682, 690,
	691, 692, 683, 684, 686, 693, 685, 694, 695, 696,
	697, 699, 698, 0, 701, 702, 700, 703, 704, 705,
	706, 1449, 707, 844, 708, 687, 688, 709, 710, 711,
	891, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	1465, 0, 721, 0, 722, 723, 724, 725, 726, 727,
	729, 689, 730, 731, 732, 737, 738, 1496, 733, 734,
	735, 736, 1489, 740, 741, 742, 743, 0, 744, 745,
	1384, 739, 728, 0, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 0, 756, 1478, 1479, 1480, 1481,
	0, 768, 0, 757, 759, 760, 761, 762, 1490, 763,
	1491, 1409, 764, 765, 766, 767, 758, 769, 770, 0,
	1391, 771, 772, 773, 774, 776, 778, 779, 780, 775,
	777, 781, 1450, 782, 0, 0, 783, 784, 785, 854,
	1475, 1495, 0, 787, 788, 786, 789, 790, 793, 791,
	792, 857, 796, 513, 797, 798, 799, 794, 795, 0,
	0, 0, 0, 800, 801, 858, 802, 803, 804, 1388,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1383, 0, 0, 0, 0,
	0, 0, 1381, 1382, 0, 0, 0, 0, 0, 0,
	864, 0, 1415, 3202, 0, 3201, 1413, 1460, 1403, 1404,
	1405, 1401, 1402, 1414, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 346, 348, 347, 349, 350,
	351, 352, 0, 353, 354, 0, 0, 0, 0, 0,
	1452, 1419, 0, 0, 356, 0, 355, 0, 357, 358,
	359, 874, 360, 361, 362, 363, 364, 365, 366, 367,
	806, 1466, 0, 368, 1474, 369, 1473, 0, 1484, 370,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 1421,
	1451, 1385, 380, 1497, 1498, 813, 0, 381, 382, 383,
	384, 1458, 0, 1439, 0, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 0, 394, 395, 396, 393, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 408, 409, 876, 410, 411, 412, 1442,
	1440, 1441, 1448, 1444, 1443, 1447, 413, 414, 415, 416,
	417, 1477, 418, 420, 421, 1471, 422, 1470, 1390, 425,
	427, 419, 423, 0, 426, 424, 428, 429, 0, 430,
	431, 432, 433, 0, 0, 434, 1469, 436, 0, 437,
	438, 440, 439, 0, 441, 442, 443, 0, 444, 445,
	1397, 446, 447, 448, 450, 452, 449, 451, 453, 454,
	455, 456, 457, 1485, 1486, 458, 459, 1410, 340, 0,
	0, 0, 0, 0, 460, 461, 462, 1468, 0, 0,
	0, 463, 0, 465, 469, 466, 467, 468, 470, 0,
	464, 471, 472, 0, 877, 473, 474, 475, 1482, 1483,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 0,
	485, 486, 1492, 0, 1420, 487, 0, 488, 489, 490,
	491, 492, 493, 494, 1453, 1454, 1457, 595, 879, 495,
	496, 497, 0, 498, 499, 500, 501, 502, 503, 504,
	0, 0, 0, 505, 506, 507, 508, 0, 867, 341,
	343, 878, 828, 509, 596, 510, 1463, 1464, 0, 1424,
	0, 511, 512, 515, 880, 1455, 881, 514, 516, 517,
	882, 518, 0, 0, 0, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 528, 527, 0, 530, 1493, 529,
	883, 531, 532, 884, 0, 533, 534, 535, 536, 537,
	538, 541, 1446, 1445, 539, 540, 542, 543, 0, 544,
	545, 547, 550, 546, 548, 549, 551, 552, 565, 566,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 568, 0, 567, 885, 569, 570, 571, 572,
	573, 581, 583, 584, 579, 580, 582, 585, 586, 588,
	589, 576, 577, 578, 886, 587, 574, 1387, 575, 344,
	887, 590, 591, 592, 593, 1411, 1456, 594, 1472, 597,
	598, 0, 0, 599, 0, 600, 0, 0, 602, 603,
	604, 0, 0, 605, 606, 836, 888, 607, 889, 1487,
	608, 609, 1398, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 620, 621, 838, 622, 623, 624,
	839, 625, 626, 627, 1488, 628, 841, 629, 630, 0,
	631, 632, 633, 0, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 1467, 644, 645, 647, 646, 648,
	649, 0, 650, 0, 651, 652, 653, 0, 0, 0,
	0, 0, 654, 655, 657, 0, 658, 659, 660, 661,
	662, 656, 663, 664, 665, 666, 667, 668, 669, 0,
	671, 672, 670, 673, 674, 890, 675, 676, 677, 678,
	679, 1399, 680, 0, 681, 682, 690, 691, 692, 683,
	684, 686, 693, 685, 694, 695, 696, 697, 699, 698,
	0, 701, 702, 700, 703, 704, 705, 706, 1449, 707,
	844, 708, 687, 688, 709, 710, 711, 891, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 1465, 0, 721,
	0, 722, 723, 724, 725, 726, 727, 729, 689, 730,
	731, 732, 737, 738, 1496, 733, 734, 735, 736, 1489,
	740, 741, 742, 743, 0, 744, 745, 1384, 739, 728,
	0, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	755, 0, 756, 1478, 1479, 1480, 1481, 0, 768, 0,
	757, 759, 760, 761, 762, 1490, 763, 1491, 1409, 764,
	765, 766, 767, 758, 769, 770, 0, 1391, 771, 772,
	773, 774, 776, 778, 779, 780, 775, 777, 781, 1450,
	782, 0, 0, 783, 784, 785, 854, 1475, 1495, 0,
	787, 788, 786, 789, 790, 793, 791, 792, 857, 796,
	513, 797, 798, 799, 794, 795, 0, 0, 0, 0,
	800, 801, 858, 802, 803, 804, 1388, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1383, 0, 0, 0, 0, 0, 0, 1381,
	1382, 0, 0, 0, 0, 0, 0, 864, 0, 1415,
	3199, 0, 3198, 1413, 1460, 1403, 1404, 1405, 1401, 1402,
	1414, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 346, 348, 347, 349, 350, 351, 352, 0,
	353, 354, 0, 0, 0, 0, 0, 1452, 1419, 0,
	0, 356, 0, 355, 0, 357, 358, 359, 874, 360,
	361, 362, 363, 364, 365, 366, 367, 806, 1466, 0,
	368, 1474, 369, 1473, 0, 1484, 370, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 1421, 1451, 1385, 380,
	1497, 1498, 813, 0, 381, 382, 383, 384, 1458, 0,
	1439, 0, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 0, 394, 395, 396, 393, 397, 398, 0, 399,
	0, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	408, 409, 876, 410, 411, 412, 1442, 1440, 1441, 1448,
	1444, 1443, 1447, 413, 414, 415, 416, 417, 1477, 418,
	420, 421, 1471, 422, 1470, 1390, 425, 427, 419, 423,
	0, 426, 424, 428, 429, 0, 430, 431, 432, 433,
	0, 0, 434, 1469, 436, 0, 437, 438, 440, 439,
	0, 441, 442, 443, 0, 444, 445, 1397, 446, 447,
	448, 450, 452, 449, 451, 453, 454, 455, 456, 457,
	1485, 1486, 458, 459, 1410, 340, 0, 0, 0, 0,
	0, 460, 461, 462, 1468, 0, 0, 0, 463, 0,
	465, 469, 466, 467, 468, 470, 0, 464, 471, 472,
	0, 877, 473, 474, 475, 1482, 1483, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 486, 1492,
	0, 1420, 487, 0, 488, 489, 490, 491, 492, 493,
	494, 1453, 1454, 1457, 595, 879, 495, 496, 497, 0,
	498, 499, 500, 501, 502, 503, 504, 0, 0, 0,
	505, 506, 507, 508, 0, 867, 341, 343, 878, 828,
	509, 596, 510, 1463, 1464, 0, 1424, 0, 511, 512,
	515, 880, 1455, 881, 514, 516, 517, 882, 518, 0,
	0, 0, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 528, 527, 0, 530, 1493, 529, 883, 531, 532,
	884, 0, 533, 534, 535, 536, 537, 538, 541, 1446,
	1445, 539, 540, 542, 543, 0, 544, 545, 547, 550,
	546, 548, 549, 551, 552, 565, 566, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 568,
	0, 567, 885, 569, 570, 571, 572, 573, 581, 583,
	584, 579, 580, 582, 585, 586, 588, 589, 576, 577,
	578, 886, 587, 574, 1387, 575, 344, 887, 590, 591,
	592, 593, 1411, 1456, 594, 1472, 597, 598, 0, 0,
	599, 0, 600, 0, 0, 602, 603, 604, 0, 0,
	605, 606, 836, 888, 607, 889, 1487, 608, 609, 1398,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	0, 620, 621, 838, 622, 623, 624, 839, 625, 626,
	627, 1488, 628, 841, 629, 630, 0, 631, 632, 633,
	0, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 1467, 644, 645, 647, 646, 648, 649, 0, 650,
	0, 651, 652, 653, 0, 0, 0, 0, 0, 654,
	655, 657, 0, 658, 659, 660, 661, 662, 656, 663,
	664, 665, 666, 667, 668, 669, 0, 671, 672, 670,
	673, 674, 890, 675, 676, 677, 678, 679, 1399, 680,
	0, 681, 682, 690, 691, 692, 683, 684, 686, 693,
	685, 694, 695, 696, 697, 699, 698, 0, 701, 702,
	700, 703, 704, 705, 706, 1449, 707, 844, 708, 687,
	688, 709, 710, 711, 891, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 1465, 0, 721, 0, 722, 723,
	724, 725, 726, 727, 729, 689, 730, 731, 732, 737,
	738, 1496, 733, 734, 735, 736, 1489, 740, 741, 742,
	743, 0, 744, 745, 1384, 739, 728, 0, 746, 747,
	748, 749, 750, 751, 752, 753, 754, 755, 0, 756,
	1478, 1479, 1480, 1481, 0, 768, 0, 757, 759, 760,
	761, 762, 1490, 763, 1491, 1409, 764, 765, 766, 767,
	758, 769, 770, 0, 1391, 771, 772, 773, 774, 776,
	778, 779, 780, 775, 777, 781, 1450, 782, 0, 0,
	783, 784, 785, 854, 1475, 1495, 0, 787, 788, 786,
	789, 790, 793, 791, 792, 857, 796, 513, 797, 798,
	799, 794, 795, 0, 0, 0, 0, 800, 801, 858,
	802, 803, 804, 1388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1383,
	0, 0, 0, 0, 0, 0, 1381, 1382, 0, 0,
	0, 0, 0, 0, 864, 0, 1415, 3196, 0, 3195,
	1413, 1460, 1403, 1404, 1405, 1401, 1402, 1414, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 346,
	348, 347, 349, 350, 351, 352, 0, 353, 354, 0,
	0, 0, 0, 0, 1452, 1419, 0, 0, 356, 0,
	355, 0, 357, 358, 359, 874, 360, 361, 362, 363,
	364, 365, 366, 367, 806, 1466, 0, 368, 1474, 369,
	1473, 0, 1484, 370, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 1421, 1451, 1385, 380, 1497, 1498, 813,
	0, 381, 382, 383, 384, 1458, 0, 1439, 0, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 0, 394,
	395, 396, 393, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 408, 409, 876,
	410, 411, 412, 1442, 1440, 1441, 1448, 1444, 1443, 1447,
	413, 414, 415, 416, 417, 1477, 418, 420, 421, 1471,
	422, 1470, 1390, 425, 427, 419, 423, 0, 426, 424,
	428, 429, 0, 430, 431, 432, 433, 0, 0, 434,
	1469, 436, 0, 437, 438, 440, 439, 0, 441, 442,
	443, 0, 444, 445, 1397, 446, 447, 448, 450, 452,
	449, 451, 453, 454, 455, 456, 457, 1485, 1486, 458,
	459, 1410, 340, 0, 0, 0, 0, 0, 460, 461,
	462, 1468, 0, 0, 0, 463, 0, 465, 469, 466,
	467, 468, 470, 0, 464, 471, 472, 0, 877, 473,
	474, 475, 1482, 1483, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 0, 485, 486, 1492, 0, 1420, 487,
	0, 488, 489, 490, 491, 492, 493, 494, 1453, 1454,
	1457, 595, 879, 495, 496, 497, 0, 498, 499, 500,
	501, 502, 503, 504, 0, 0, 0, 505, 506, 507,
	508, 0, 867, 341, 343, 878, 828, 509, 596, 510,
	1463, 1464, 0, 1424, 0, 511, 512, 515, 880, 1455,
	881, 514, 516, 517, 882, 518, 0, 0, 0, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 528, 527,
	0, 530, 1493, 529, 883, 531, 532, 884, 0, 533,
	534, 535, 536, 537, 538, 541, 1446, 1445, 539, 540,
	542, 543, 0, 544, 545, 547, 550, 546, 548, 549,
	551, 552, 565, 566, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 568, 0, 567, 885,
	569, 570, 571, 572, 573, 581, 583, 584, 579, 580,
	582, 585, 586, 588, 589, 576, 577, 578, 886, 587,
	574, 1387, 575, 344, 887, 590, 591, 592, 593, 1411,
	1456, 594, 1472, 597, 598, 0, 0, 599, 0, 600,
	0, 0, 602, 603, 604, 0, 0, 605, 606, 836,
	888, 607, 889, 1487, 608, 609, 1398, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 0, 620, 621,
	838, 622, 623, 624, 839, 625, 626, 627, 1488, 628,
	841, 629, 630, 0, 631, 632, 633, 0, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 1467, 644,
	645, 647, 646, 648, 649, 0, 650, 0, 651, 652,
	653, 0, 0, 0, 0, 0, 654, 655, 657, 0,
	658, 659, 660, 661, 662, 656, 663, 664, 665, 666,
	667, 668, 669, 0, 671, 672, 670, 673, 674, 890,
	675, 676, 677, 678, 679, 1399, 680, 0, 681, 682,
	690, 691, 692, 683, 684, 686, 693, 685, 694, 695,
	696, 697, 699, 698, 0, 701, 702, 700, 703, 704,
	705, 706, 1449, 707, 844, 708, 687, 688, 709, 710,
	711, 891, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 1465, 0, 721, 0, 722, 723, 724, 725, 726,
	727, 729, 689, 730, 731, 732, 737, 738, 1496, 733,
	734, 735, 736, 1489, 740, 741, 742, 743, 0, 744,
	745, 1384, 739, 728, 0, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 0, 756, 1478, 1479, 1480,
	1481, 0, 768, 0, 757, 759, 760, 761, 762, 1490,
	763, 1491, 1409, 764, 765, 766, 767, 758, 769, 770,
	0, 1391, 771, 772, 773, 774, 776, 778, 779, 780,
	775, 777, 781, 1450, 782, 0, 0, 783, 784, 785,
	854, 1475, 1495, 0, 787, 788, 786, 789, 790, 793,
	791, 792, 857, 796, 513, 797, 798, 799, 794, 795,
	0, 0, 0, 0, 800, 801, 858, 802, 803, 804,
	1388, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1383, 0, 0, 0,
	0, 0, 0, 1381, 1382, 0, 0, 0, 0, 0,
	0, 864, 0, 1415, 3193, 0, 1788, 1413, 1460, 1403,
	1404, 1405, 1401, 1402, 1414, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 346, 348, 347, 349,
	350, 351, 352, 0, 353, 354, 0, 0, 0, 0,
	0, 1452, 1419, 0, 0, 356, 0, 355, 0, 357,
	358, 359, 874, 360, 361, 362, 363, 364, 365, 366,
	367, 806, 1466, 0, 368, 1474, 369, 1473, 0, 1484,
	370, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	1421, 1451, 1385, 380, 1497, 1498, 813, 0, 381, 382,
	383, 384, 1458, 0, 1439, 0, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 0, 394, 395, 396, 393,
	397, 398, 0, 399, 0, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 408, 409, 876, 410, 411, 412,
	1442, 1440, 1441, 1448, 1444, 1443, 1447, 413, 414, 415,
	416, 417, 1477, 418, 420, 421, 1471, 422, 1470, 1390,
	425, 427, 419, 423, 0, 426, 424, 428, 429, 0,
	430, 431, 432, 433, 0, 0, 434, 1469, 436, 0,
	437, 438, 440, 439, 0, 441, 442, 443, 0, 444,
	445, 1397, 446, 447, 448, 450, 452, 449, 451, 453,
	454, 455, 456, 457, 1485, 1486, 458, 459, 1410, 340,
	0, 0, 0, 0, 0, 460, 461, 462, 1468, 0,
	0, 0, 463, 0, 465, 469, 466, 467, 468, 470,
	0, 464, 471, 472, 0, 877, 473, 474, 475, 1482,
	1483, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 486, 1492, 0, 1420, 487, 0, 488, 489,
	490, 491, 492, 493, 494, 1453, 1454, 1457, 595, 879,
	495, 496, 497, 0, 498, 499, 500, 501, 502, 503,
	504, 0, 0, 0, 505, 506, 507, 508, 0, 867,
	341, 343, 878, 828, 509, 596, 510, 1463, 1464, 0,
	1424, 0, 511, 512, 515, 880, 1455, 881, 514, 516,
	517, 882, 518, 0, 0, 0, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 528, 527, 0, 530, 1493,
	529, 883, 531, 532, 884, 0, 533, 534, 535, 536,
	537, 538, 541, 1446, 1445, 539, 540, 542, 543, 0,
	544, 545, 547, 550, 546, 548, 549, 551, 552, 565,
	566, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 568, 0, 567, 885, 569, 570, 571,
	572, 573, 581, 583, 584, 579, 580, 582, 585, 586,
	588, 589, 576, 577, 578, 886, 587, 574, 1387, 575,
	344, 887, 590, 591, 592, 593, 1411, 1456, 594, 1472,
	597, 598, 0, 0, 599, 0, 600, 0, 0, 602,
	603, 604, 0, 0, 605, 606, 836, 888, 607, 889,
	1487, 608, 609, 1398, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 0, 620, 621, 838, 622, 623,
	624, 839, 625, 626, 627, 1488, 628, 841, 629, 630,
	0, 631, 632, 633, 0, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 1467, 644, 645, 647, 646,
	648, 649, 0, 650, 0, 651, 652, 653, 0, 0,
	0, 0, 0, 654, 655, 657, 0, 658, 659, 660,
	661, 662, 656, 663, 664, 665, 666, 667, 668, 669,
	0, 671, 672, 670, 673, 674, 890, 675, 676, 677,
	678, 679, 1399, 680, 0, 681, 682, 690, 691, 692,
	683, 684, 686, 693, 685, 694, 695, 696, 697, 699,
	698, 0, 701, 702, 700, 703, 704, 705, 706, 1449,
	707, 844, 708, 687, 688, 709, 710, 711, 891, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 1465, 0,
	721, 0, 722, 723, 724, 725, 726, 727, 729, 689,
	730, 731, 732, 737, 738, 1496, 733, 734, 735, 736,
	1489, 740, 741, 742, 743, 0, 744, 745, 1384, 739,
	728, 0, 746, 747, 748, 749, 750, 751, 752, 753,
	754, 755, 0, 756, 1478, 1479, 1480, 1481, 0, 768,
	0, 757, 759, 760, 761, 762, 1490, 763, 1491, 1409,
	764, 765, 766, 767, 758, 769, 770, 0, 1391, 771,
	772, 773, 774, 776, 778, 779, 780, 775, 777, 781,
	1450, 782, 0, 0, 783, 784, 785, 854, 1475, 1495,
	0, 787, 788, 786, 789, 790, 793, 791, 792, 857,
	796, 513, 797, 798, 799, 794, 795, 1787, 0, 0,
	0, 800, 801, 858, 802, 803, 804, 1388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1383, 0, 0, 0, 0, 0, 0,
	1381, 1382, 0, 0, 0, 0, 0, 0, 864, 0,
	1415, 0, 0, 1377, 1413, 1460, 1403, 1404, 1405, 1401,
	1402, 1414, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 346, 348, 347, 349, 350, 351, 352,
	0, 353, 354, 0, 0, 0, 0, 0, 1452, 1419,
	0, 0, 356, 0, 355, 0, 357, 358, 359, 874,
	360, 361, 362, 363, 364, 365, 366, 367, 806, 1466,
	0, 368, 1474, 369, 1473, 0, 1484, 370, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 1421, 1451, 1385,
	380, 1497, 1498, 813, 0, 381, 382, 383, 384, 1458,
	0, 1439, 0, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 0, 394, 395, 396, 393, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 408, 409, 876, 410, 411, 412, 1442, 1440, 1441,
	1448, 1444, 1443, 1447, 413, 414, 415, 416, 417, 1477,
	418, 420, 421, 1471, 422, 1470, 1390, 425, 427, 419,
	423, 0, 426, 424, 428, 429, 0, 430, 431, 432,
	433, 0, 0, 434, 1469, 436, 0, 437, 438, 440,
	439, 0, 441, 442, 443, 0, 444, 445, 1397, 446,
	447, 448, 450, 452, 449, 451, 453, 454, 455, 456,
	457, 1485, 1486, 458, 459, 1410, 340, 0, 0, 0,
	0, 0, 460, 461, 462, 1468, 0, 0, 0, 463,
	0, 465, 469, 466, 467, 468, 470, 0, 464, 471,
	472, 0, 877, 473, 474, 475, 1482, 1483, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 486,
	1492, 0, 1420, 487, 0, 488, 489, 490, 491, 492,
	493, 494, 1453, 1454, 1457, 595, 879, 495, 496, 497,
	0, 498, 499, 500, 501, 502, 503, 504, 0, 0,
	0, 505, 506, 507, 508, 0, 867, 341, 343, 878,
	828, 509, 596, 510, 1463, 1464, 0, 1424, 0, 511,
	512, 515, 880, 1455, 881, 514, 516, 517, 882, 518,
	0, 0, 0, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 528, 527, 0, 530, 1493, 529, 883, 531,
	532, 884, 0, 533, 534, 535, 536, 537, 538, 541,
	1446, 1445, 539, 540, 542, 543, 0, 544, 545, 547,
	550, 546, 548, 549, 551, 552, 565, 566, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	568, 0, 567, 885, 569, 570, 571, 572, 573, 581,
	583, 584, 579, 580, 582, 585, 586, 588, 589, 576,
	577, 578, 1393, 587, 574, 1387, 575, 344, 887, 590,
	591, 592, 593, 1411, 1456, 594, 1472, 597, 598, 0,
	0, 599, 0, 600, 1392, 0, 602, 603, 604, 0,
	0, 605, 606, 836, 888, 607, 889, 1487, 608, 609,
	1398, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 0, 620, 621, 838, 622, 623, 624, 839, 625,
	626, 627, 1488, 628, 841, 629, 630, 0, 631, 632,
	633, 0, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 1467, 644, 645, 647, 646, 648, 649, 0,
	650, 0, 651, 652, 653, 0, 0, 0, 0, 0,
	654, 655, 657, 0, 658, 659, 660, 661, 662, 656,
	663, 664, 665, 666, 667, 668, 669, 0, 671, 672,
	670, 673, 674, 890, 675, 676, 677, 678, 679, 1399,
	680, 0, 681, 682, 690, 691, 692, 683, 684, 686,
	693, 685, 694, 695, 696, 697, 699, 698, 0, 701,
	702, 700, 703, 704, 705, 706, 1449, 707, 844, 708,
	687, 688, 709, 710, 711, 891, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 1465, 0, 721, 0, 722,
	723, 724, 725, 726, 727, 729, 689, 730, 731, 732,
	737, 738, 1496, 733, 734, 735, 736, 1489, 740, 741,
	742, 743, 0, 744, 745, 1384, 739, 728, 0, 746,
	747, 748, 749, 750, 751, 752, 753, 754, 755, 0,
	756, 1478, 1479, 1480, 1481, 0, 768, 0, 757, 759,
	760, 761, 762, 1490, 763, 1491, 1409, 764, 765, 766,
	767, 758, 769, 770, 0, 1391, 771, 772, 773, 774,
	776, 778, 779, 780, 775, 777, 781, 1450, 782, 0,
	0, 783, 784, 785, 854, 1475, 1495, 0, 787, 788,
	786, 789, 790, 793, 791, 792, 857, 796, 513, 797,
	798, 799, 794, 795, 0, 0, 0, 0, 800, 801,
	858, 802, 803, 804, 1388, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1383, 0, 0, 0, 0, 0, 0, 1381, 1382, 0,
	0, 0, 0, 0, 0, 864, 0, 1415, 0, 0,
	0, 1413, 1460, 1403, 1404, 1405, 1401, 1402, 1414, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	346, 348, 347, 349, 350, 351, 352, 0, 353, 354,
	0, 0, 0, 0, 0, 1452, 1419, 0, 0, 356,
	0, 355, 0, 357, 358, 359, 874, 360, 361, 362,
	363, 364, 365, 366, 367, 806, 1466, 0, 368, 1474,
	369, 1473, 0, 1484, 370, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 1421, 1451, 1385, 380, 1497, 1498,
	813, 0, 381, 382, 383, 384, 1458, 0, 1439, 0,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 0,
	394, 395, 396, 393, 397, 398, 0, 399, 0, 400,
	401, 402, 403, 6520, 405, 406, 0, 407, 408, 409,
	876, 410, 411, 412, 1442, 1440, 1441, 1448, 1444, 1443,
	1447, 413, 414, 415, 416, 417, 1477, 418, 420, 421,
	1471, 422, 1470, 1390, 425, 427, 419, 423, 0, 426,
	424, 428, 429, 0, 430, 431, 432, 433, 0, 0,
	434, 1469, 436, 0, 437, 438, 440, 439, 0, 441,
	442, 443, 0, 444, 445, 1397, 446, 447, 448, 450,
	452, 449, 451, 453, 454, 455, 456, 457, 1485, 1486,
	458, 459, 1410, 340, 0, 0, 0, 0, 0, 460,
	461, 462, 1468, 0, 0, 0, 463, 0, 465, 469,
	466, 467, 468, 470, 0, 464, 471, 472, 0, 877,
	473, 474, 475, 1482, 1483, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 486, 1492, 0, 1420,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 1453,
	1454, 1457, 595, 879, 495, 496, 497, 0, 498, 499,
	500, 501, 502, 503, 504, 0, 0, 0, 505, 506,
	507, 508, 0, 867, 341, 343, 878, 828, 509, 596,
	510, 1463, 1464, 0, 1424, 0, 511, 512, 515, 880,
	1455, 881, 514, 516, 517, 882, 518, 0, 0, 0,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 528,
	527, 0, 530, 1493, 529, 883, 531, 532, 884, 0,
	533, 534, 535, 536, 537, 538, 541, 1446, 1445, 539,
	540, 542, 543, 0, 544, 545, 547, 550, 546, 548,
	549, 551, 552, 565, 566, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 568, 0, 567,
	885, 569, 570, 571, 572, 573, 581, 583, 584, 579,
	580, 582, 585, 586, 588, 589, 576, 577, 578, 1393,
	587, 574, 1387, 575, 344, 887, 590, 591, 592, 593,
	1411, 1456, 594, 1472, 597, 598, 0, 0, 599, 0,
	600, 1392, 0, 602, 603, 604, 0, 0, 605, 606,
	836, 888, 607, 889, 1487, 608, 609, 1398, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 0, 620,
	621, 838, 622, 623, 624, 839, 625, 626, 627, 1488,
	628, 841, 629, 630, 0, 631, 632, 633, 0, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 1467,
	644, 645, 647, 646, 648, 649, 0, 650, 0, 651,
	652, 653, 0, 0, 0, 0, 0, 654, 655, 657,
	0, 658, 659, 660, 661, 662, 656, 663, 664, 665,
	666, 667, 668, 669, 0, 671, 672, 670, 673, 674,
	890, 675, 676, 677, 678, 679, 1399, 680, 0, 681,
	682, 690, 691, 692, 683, 684, 686, 693, 685, 694,
	695, 696, 697, 699, 698, 0, 701, 702, 700, 703,
	704, 705, 706, 1449, 707, 844, 708, 687, 688, 709,
	710, 711, 891, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 1465, 0, 721, 0, 722, 723, 724, 725,
	726, 727, 729, 689, 730, 731, 732, 737, 738, 1496,
	733, 734, 735, 736, 1489, 740, 741, 742, 743, 0,
	744, 745, 1384, 739, 728, 0, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 0, 756, 1478, 1479,
	1480, 1481, 0, 768, 0, 757, 759, 760, 761, 762,
	1490, 763, 1491, 1409, 764, 765, 766, 767, 758, 769,
	770, 0, 1391, 771, 772, 773, 774, 776, 778, 779,
	780, 775, 777, 781, 1450, 782, 0, 0, 783, 784,
	785, 854, 1475, 1495, 0, 787, 788, 786, 789, 790,
	793, 791, 792, 857, 796, 513, 797, 798, 799, 794,
	795, 0, 0, 0, 0, 800, 801, 858, 802, 803,
	804, 1388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1383, 0, 0,
	0, 0, 0, 0, 1381, 1382, 0, 0, 0, 0,
	0, 0, 864, 0, 1415, 0, 0, 0, 1413, 1460,
	1403, 1404, 1405, 1401, 1402, 1414, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 346, 348, 347,
	349, 350, 351, 352, 0, 353, 354, 0, 0, 0,
	0, 0, 1452, 1419, 0, 0, 356, 0, 355, 0,
	357, 358, 359, 874, 360, 361, 362, 363, 364, 365,
	366, 367, 806, 1466, 0, 368, 1474, 369, 1473, 0,
	1484, 370, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 1421, 1451, 1385, 380, 1497, 1498, 813, 0, 381,
	382, 383, 384, 1458, 0, 1439, 0, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 0, 394, 395, 396,
	393, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 408, 409, 876, 410, 411,
	412, 1442, 1440, 1441, 1448, 1444, 1443, 1447, 413, 414,
	415, 416, 417, 1477, 418, 420, 421, 1471, 422, 1470,
	1390, 425, 427, 419, 423, 0, 426, 424, 428, 429,
	0, 430, 431, 432, 433, 0, 0, 434, 1469, 436,
	0, 437, 438, 440, 439, 0, 441, 442, 443, 0,
	444, 445, 1397, 446, 447, 448, 450, 452, 449, 451,
	453, 454, 455, 456, 457, 1485, 1486, 458, 459, 1410,
	340, 0, 0, 0, 0, 0, 460, 461, 462, 1468,
	0, 0, 0, 463, 0, 465, 469, 466, 467, 468,
	470, 0, 464, 471, 472, 0, 877, 473, 474, 475,
	1482, 1483, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 0, 485, 486, 1492, 0, 1420, 487, 0, 488,
	489, 490, 491, 492, 493, 494, 1453, 1454, 1457, 595,
	879, 495, 496, 497, 0, 498, 499, 500, 501, 502,
	503, 504, 0, 0, 0, 505, 506, 507, 508, 0,
	867, 341, 3038, 878, 828, 509, 596, 510, 1463, 1464,
	0, 1424, 0, 511, 512, 515, 880, 1455, 881, 514,
	516, 517, 882, 518, 0, 0, 0, 519, 520, 521,
	522, 523, 524, 525, 0, 526, 528, 527, 0, 530,
	1493, 529, 883, 531, 532, 884, 0, 533, 534, 535,
	536, 537, 538, 541, 1446, 1445, 539, 540, 542, 543,
	0, 544, 545, 547, 550, 546, 548, 549, 551, 552,
	565, 566, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 568, 0, 567, 885, 569, 570,
	571, 572, 573, 581, 583, 584, 579, 580, 582, 585,
	586, 588, 589, 576, 577, 578, 886, 587, 574, 1387,
	575, 344, 887, 590, 591, 592, 593, 1411, 1456, 594,
	1472, 597, 598, 0, 0, 599, 0, 600, 0, 0,
	602, 603, 604, 0, 0, 605, 606, 836, 888, 607,
	889, 1487, 608, 609, 1398, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 0, 620, 621, 838, 622,
	623, 624, 839, 625, 626, 627, 1488, 628, 841, 629,
	630, 3037, 631, 632, 633, 0, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 1467, 644, 645, 647,
	646, 648, 649, 0, 650, 0, 651, 652, 653, 0,
	0, 0, 0, 0, 654, 655, 657, 0, 658, 659,
	660, 661, 662, 656, 663, 664, 665, 666, 667, 668,
	669, 0, 671, 672, 670, 673, 674, 890, 675, 676,
	677, 678, 679, 1399, 680, 0, 681, 682, 690, 691,
	692, 683, 684, 686, 693, 685, 694, 695, 696, 697,
	699, 698, 0, 701, 702, 700, 703, 704, 705, 706,
	1449, 707, 844, 708, 687, 688, 709, 710, 711, 891,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 1465,
	0, 721, 0, 722, 723, 724, 725, 726, 727, 729,
	689, 730, 731, 732, 737, 738, 1496, 733, 734, 735,
	736, 1489, 740, 741, 742, 743, 0, 744, 745, 1384,
	739, 728, 0, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 755, 0, 756, 1478, 1479, 1480, 1481, 0,
	768, 0, 757, 759, 760, 761, 762, 1490, 763, 1491,
	1409, 764, 765, 766, 767, 758, 769, 770, 0, 1391,
	771, 772, 773, 774, 776, 778, 779, 780, 775, 777,
	781, 1450, 782, 0, 0, 783, 784, 785, 854, 1475,
	1495, 0, 787, 788, 786, 789, 790, 793, 791, 792,
	857, 796, 513, 797, 798, 799, 794, 795, 0, 0,
	0, 0, 800, 801, 858, 802, 803, 804, 1388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1383, 0, 0, 0, 0, 0,
	0, 1381, 1382, 0, 0, 0, 0, 0, 0, 864,
	0, 1415, 0, 0, 0, 1413, 1460, 1403, 1404, 1405,
	1401, 1402, 1414, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 346, 348, 347, 349, 350, 351,
	352, 0, 353, 354, 0, 0, 0, 0, 0, 1452,
	1419, 0, 0, 356, 0, 355, 0, 357, 358, 359,
	874, 360, 361, 362, 363, 364, 365, 366, 367, 806,
	1466, 0, 368, 1474, 369, 1473, 0, 1484, 370, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 1421, 1451,
	1385, 380, 1497, 1498, 813, 0, 381, 382, 383, 384,
	1458, 0, 1439, 0, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 0, 394, 395, 396, 393, 397, 398,
	0, 399, 0, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 408, 409, 876, 410, 411, 412, 1442, 1440,
	1441, 1448, 1444, 1443, 1447, 413, 414, 415, 416, 417,
	1477, 418, 420, 421, 1471, 422, 1470, 1390, 425, 427,
	419, 423, 0, 426, 424, 428, 429, 0, 430, 431,
	432, 433, 0, 0, 434, 1469, 436, 0, 437, 438,
	440, 439, 0, 441, 442, 443, 0, 444, 445, 1397,
	446, 447, 448, 450, 452, 449, 451, 453, 454, 455,
	456, 457, 1485, 1486, 458, 459, 1410, 340, 0, 0,
	0, 0, 0, 460, 461, 462, 1468, 0, 0, 0,
	463, 0, 465, 469, 466, 467, 468, 470, 0, 464,
	471, 472, 0, 877, 473, 474, 475, 1482, 1483, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	486, 1492, 0, 1420, 487, 0, 488, 489, 490, 491,
	492, 493, 494, 1453, 1454, 1457, 595, 879, 495, 496,
	497, 0, 498, 499, 500, 501, 502, 503, 504, 0,
	0, 0, 505, 506, 507, 508, 0, 867, 341, 343,
	878, 828, 509, 596, 510, 1463, 1464, 0, 1424, 0,
	511, 512, 515, 880, 1455, 881, 514, 516, 517, 882,
	518, 0, 0, 0, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 528, 527, 0, 530, 1493, 529, 883,
	531, 532, 884, 0, 533, 534, 535, 536, 537, 538,
	541, 1446, 1445, 539, 540, 542, 543, 0, 544, 545,
	547, 550, 546, 548, 549, 551, 552, 565, 566, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 568, 0, 567, 885, 569, 570, 571, 572, 573,
	581, 583, 584, 579, 580, 582, 585, 586, 588, 589,
	576, 577, 578, 886, 587, 574, 1387, 575, 344, 887,
	590, 591, 592, 593, 1411, 1456, 594, 1472, 597, 598,
	0, 0, 599, 0, 600, 0, 0, 602, 603, 604,
	0, 0, 605, 606, 836, 888, 607, 889, 1487, 608,
	609, 1398, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 0, 620, 621, 838, 622, 623, 624, 839,
	625, 626, 627, 1488, 628, 841, 629, 630, 0, 631,
	632, 633, 0, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 1467, 644, 645, 647, 646, 648, 649,
	0, 650, 0, 651, 652, 653, 0, 0, 0, 0,
	0, 654, 655, 657, 0, 658, 659, 660, 661, 662,
	656, 663, 664, 665, 666, 667, 668, 669, 0, 671,
	672, 670, 673, 674, 890, 675, 676, 677, 678, 679,
	1399, 680, 0, 681, 682, 690, 691, 692, 683, 684,
	686, 693, 685, 694, 695, 696, 697, 699, 698, 0,
	701, 702, 700, 703, 704, 705, 706, 1449, 707, 844,
	708, 687, 688, 709, 710, 711, 891, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 1465, 0, 721, 0,
	722, 723, 724, 725, 726, 727, 729, 689, 730, 731,
	732, 737, 738, 1496, 733, 734, 735, 736, 1489, 740,
	741, 742, 743, 0, 744, 745, 1384, 739, 728, 0,
	746, 747, 748, 749, 750, 751, 752, 753, 754, 755,
	0, 756, 1478, 1479, 1480, 1481, 0, 768, 0, 757,
	759, 760, 761, 762, 1490, 763, 1491, 1409, 764, 765,
	766, 767, 758, 769, 770, 0, 1391, 771, 772, 773,
	774, 776, 778, 779, 780, 775, 777, 781, 1450, 782,
	0, 0, 783, 784, 785, 854, 1475, 1495, 0, 787,
	788, 786, 789, 790, 793, 791, 792, 857, 796, 513,
	797, 798, 799, 794, 795, 0, 0, 0, 0, 800,
	801, 858, 802, 803, 804, 1388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1383, 0, 0, 0, 0, 0, 0, 1381, 1382,
	2343, 0, 0, 0, 0, 0, 864, 0, 1415, 0,
	0, 0, 1413, 1460, 1403, 1404, 1405, 1401, 1402, 1414,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 346, 348, 347, 349, 350, 351, 352, 0, 353,
	354, 0, 0, 0, 0, 0, 1452, 1419, 0, 0,
	356, 0, 355, 0, 357, 358, 359, 874, 360, 361,
	362, 363, 364, 365, 366, 367, 806, 1466, 0, 368,
	1474, 369, 1473, 0, 1484, 370, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 1421, 1451, 1385, 380, 1497,
	1498, 813, 0, 381, 382, 383, 384, 1458, 0, 1439,
	0, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	0, 394, 395, 396, 393, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 6190, 405, 406, 0, 407, 408,
	409, 876, 410, 411, 412, 1442, 1440, 1441, 1448, 1444,
	1443, 1447, 413, 414, 415, 416, 417, 1477, 418, 420,
	421, 1471, 422, 1470, 1390, 425, 427, 419, 423, 0,
	426, 424, 428, 429, 0, 430, 431, 432, 433, 0,
	0, 434, 1469, 436, 0, 437, 438, 440, 439, 0,
	441, 442, 443, 0, 444, 445, 1397, 446, 447, 448,
	450, 452, 449, 451, 453, 454, 455, 456, 457, 1485,
	1486, 458, 459, 1410, 340, 0, 0, 0, 0, 0,
	460, 461, 462, 1468, 0, 0, 0, 463, 0, 465,
	469, 466, 467, 468, 470, 0, 464, 471, 472, 0,
	877, 473, 474, 475, 1482, 1483, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 0, 485, 486, 1492, 0,
	1420, 487, 0, 488, 489, 490, 491, 492, 493, 494,
	1453, 1454, 1457, 595, 879, 495, 496, 497, 0, 498,
	499, 500, 501, 502, 503, 504, 0, 0, 0, 505,
	506, 507, 508, 0, 867, 341, 343, 878, 828, 509,
	596, 510, 1463, 1464, 0, 1424, 0, 511, 512, 515,
	880, 1455, 881, 514, 516, 517, 882, 518, 0, 0,
	0, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	528, 527, 0, 530, 1493, 529, 883, 531, 532, 884,
	0, 533, 534, 535, 536, 537, 538, 541, 1446, 1445,
	539, 540, 542, 543, 0, 544, 545, 547, 550, 546,
	548, 549, 551, 552, 565, 566, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 568, 0,
	567, 885, 569, 570, 571, 572, 573, 581, 583, 584,
	579, 580, 582, 585, 586, 588, 589, 576, 577, 578,
	1393, 587, 574, 1387, 575, 344, 887, 590, 591, 592,
	593, 1411, 1456, 594, 1472, 597, 598, 0, 0, 599,
	0, 600, 1392, 0, 602, 603, 604, 0, 0, 605,
	606, 836, 888, 607, 889, 1487, 608, 609, 1398, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 0,
	620, 621, 838, 622, 623, 624, 839, 625, 626, 627,
	1488, 628, 841, 629, 630, 0, 631, 632, 633, 0,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	1467, 644, 645, 647, 646, 648, 649, 0, 650, 0,
	651, 652, 653, 0, 0, 0, 0, 0, 654, 655,
	657, 0, 658, 659, 660, 661, 662, 656, 663, 664,
	665, 666, 667, 668, 669, 0, 671, 672, 670, 673,
	674, 890, 675, 676, 677, 678, 679, 1399, 680, 0,
	681, 682, 690, 691, 692, 683, 684, 686, 693, 685,
	694, 695, 696, 697, 699, 698, 0, 701, 702, 700,
	703, 704, 705, 706, 1449, 707, 844, 708, 687, 688,
	709, 710, 711, 891, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 1465, 0, 721, 0, 722, 723, 724,
	725, 726, 727, 729, 689, 730, 731, 732, 737, 738,
	1496, 733, 734, 735, 736, 1489, 740, 741, 742, 743,
	0, 744, 745, 1384, 739, 728, 0, 746, 747, 748,
	749, 750, 751, 752, 753, 754, 755, 0, 756, 1478,
	1479, 1480, 1481, 0, 768, 0, 757, 759, 760, 761,
	762, 1490, 763, 1491, 1409, 764, 765, 766, 767, 758,
	769, 770, 0, 1391, 771, 772, 773, 774, 776, 778,
	779, 780, 775, 777, 781, 1450, 782, 0, 0, 783,
	784, 785, 854, 1475, 1495, 0, 787, 788, 786, 789,
	790, 793, 791, 792, 857, 796, 513, 797, 798, 799,
	794, 795, 0, 0, 0, 0, 800, 801, 858, 802,
	803, 804, 1388, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1383, 0,
	0, 0, 0, 0, 0, 1381, 1382, 0, 0, 0,
	0, 0, 0, 864, 0, 1415, 0, 0, 0, 1413,
	1460, 1403, 1404, 1405, 1401, 1402, 1414, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 346, 348,
	347, 349, 350, 351, 352, 0, 353, 354, 0, 0,
	0, 0, 0, 1452, 1419, 0, 0, 356, 0, 355,
	0, 357, 358, 359, 874, 360, 361, 362, 363, 364,
	365, 366, 367, 806, 1466, 0, 368, 1474, 369, 1473,
	0, 1484, 370, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 1421, 1451, 1385, 380, 1497, 1498, 813, 0,
	381, 382, 383, 384, 1458, 0, 1439, 0, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 0, 394, 395,
	396, 393, 397, 398, 0, 399, 0, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 408, 409, 876, 410,
	411, 412, 1442, 1440, 1441, 1448, 1444, 1443, 1447, 413,
	414, 415, 416, 417, 1477, 418, 420, 421, 1471, 422,
	1470, 1390, 425, 427, 419, 423, 0, 426, 424, 428,
	429, 0, 430, 431, 432, 433, 0, 0, 434, 1469,
	436, 0, 437, 438, 440, 439, 0, 441, 442, 443,
	0, 444, 445, 1397, 446, 447, 448, 450, 452, 449,
	451, 453, 454, 455, 456, 457, 1485, 1486, 458, 459,
	1410, 340, 0, 0, 0, 0, 0, 460, 461, 462,
	1468, 0, 0, 0, 463, 0, 465, 469, 466, 467,
	468, 470, 0, 464, 471, 472, 0, 877, 473, 474,
	475, 1482, 1483, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 486, 1492, 0, 1420, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 1453, 1454, 1457,
	595, 879, 495, 496, 497, 0, 498, 499, 500, 501,
	502, 503, 504, 0, 0, 0, 505, 506, 507, 508,
	0, 867, 341, 343, 878, 828, 509, 596, 510, 1463,
	1464, 0, 1424, 0, 511, 512, 515, 880, 1455, 881,
	514, 516, 517, 882, 518, 0, 0, 0, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 528, 527, 0,
	530, 1493, 529, 883, 531, 532, 884, 0, 533, 534,
	535, 536, 537, 538, 541, 1446, 1445, 539, 540, 542,
	543, 0, 544, 545, 547, 550, 546, 548, 549, 551,
	552, 565, 566, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 568, 0, 567, 885, 569,
	570, 571, 572, 573, 581, 583, 584, 579, 580, 582,
	585, 586, 588, 589, 576, 577, 578, 1393, 587, 574,
	1387, 575, 344, 887, 590, 591, 592, 593, 1411, 1456,
	594, 1472, 597, 598, 0, 0, 599, 0, 600, 1392,
	0, 602, 603, 604, 0, 0, 605, 606, 836, 888,
	607, 889, 1487, 608, 609, 1398, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 0, 620, 621, 838,
	622, 623, 624, 839, 625, 626, 627, 1488, 628, 841,
	629, 630, 0, 631, 632, 633, 0, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 1467, 644, 645,
	647, 646, 648, 649, 0, 650, 0, 651, 652, 653,
	0, 0, 0, 0, 0, 654, 655, 657, 0, 658,
	659, 660, 661, 662, 656, 663, 664, 665, 666, 667,
	668, 669, 0, 671, 672, 670, 673, 674, 890, 675,
	676, 677, 678, 679, 1399, 680, 0, 681, 682, 690,
	691, 692, 683, 684, 686, 693, 685, 694, 695, 696,
	697, 699, 698, 0, 701, 702, 700, 703, 704, 705,
	706, 1449, 707, 844, 708, 687, 688, 709, 710, 711,
	891, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	1465, 0, 721, 0, 722, 723, 724, 725, 726, 727,
	729, 689, 730, 731, 732, 737, 738, 1496, 733, 734,
	735, 736, 1489, 740, 741, 742, 743, 0, 744, 745,
	1384, 739, 728, 0, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 0, 756, 1478, 1479, 1480, 1481,
	0, 768, 0, 757, 759, 760, 761, 762, 1490, 763,
	1491, 1409, 764, 765, 766, 767, 758, 769, 770, 0,
	1391, 771, 772, 773, 774, 776, 778, 779, 780, 775,
	777, 781, 1450, 782, 0, 0, 783, 784, 785, 854,
	1475, 1495, 0, 787, 788, 786, 789, 790, 793, 791,
	792, 857, 796, 513, 797, 798, 799, 794, 795, 0,
	0, 0, 0, 800, 801, 858, 802, 803, 804, 1388,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1383, 0, 0, 0, 0,
	0, 0, 1381, 1382, 0, 0, 0, 0, 0, 0,
	864, 0, 1415, 0, 0, 0, 1413, 1460, 1403, 1404,
	1405, 1401, 1402, 1414, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 346, 348, 347, 349, 350,
	351, 352, 0, 353, 354, 0, 0, 0, 0, 0,
	1452, 1419, 0, 0, 356, 0, 355, 0, 357, 358,
	359, 874, 360, 361, 362, 363, 364, 365, 366, 367,
	806, 1466, 0, 368, 1474, 369, 1473, 0, 1484, 370,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 1421,
	1451, 1385, 380, 1497, 1498, 813, 0, 381, 382, 383,
	384, 1458, 0, 1439, 0, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 0, 394, 395, 396, 393, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 408, 409, 876, 410, 411, 412, 1442,
	1440, 1441, 1448, 1444, 1443, 1447, 413, 414, 415, 416,
	417, 1477, 418, 420, 421, 1471, 422, 1470, 1390, 425,
	427, 419, 423, 0, 426, 424, 428, 429, 0, 430,
	431, 432, 433, 0, 0, 434, 1469, 436, 0, 437,
	438, 440, 439, 0, 441, 442, 443, 0, 444, 445,
	1397, 446, 447, 448, 450, 452, 449, 451, 453, 454,
	455, 456, 457, 1485, 1486, 458, 459, 1410, 340, 0,
	0, 0, 0, 0, 460, 461, 462, 1468, 0, 0,
	0, 463, 0, 465, 469, 466, 467, 468, 470, 0,
	464, 471, 472, 0, 877, 473, 474, 475, 1482, 1483,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 0,
	485, 486, 1492, 0, 1420, 487, 0, 488, 489, 490,
	491, 492, 493, 494, 1453, 1454, 1457, 595, 879, 495,
	496, 497, 0, 498, 499, 500, 501, 502, 503, 504,
	0, 0, 0, 505, 506, 507, 508, 0, 867, 341,
	343, 878, 828, 509, 596, 510, 1463, 1464, 0, 1424,
	0, 511, 512, 515, 880, 1455, 881, 514, 516, 517,
	882, 518, 0, 0, 0, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 528, 527, 0, 530, 1493, 529,
	883, 531, 532, 884, 0, 533, 534, 535, 536, 537,
	538, 541, 1446, 1445, 539, 540, 542, 543, 0, 544,
	545, 547, 550, 546, 548, 549, 551, 552, 565, 566,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 568, 0, 567, 885, 569, 570, 571, 572,
	573, 581, 583, 584, 579, 580, 582, 585, 586, 588,
	589, 576, 577, 578, 886, 587, 574, 1387, 575, 5648,
	887, 590, 591, 592, 593, 1411, 1456, 594, 1472, 597,
	598, 0, 0, 599, 0, 600, 0, 0, 602, 603,
	604, 0, 0, 605, 606, 836, 888, 607, 889, 1487,
	608, 609, 1398, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 620, 621, 838, 622, 623, 624,
	839, 625, 626, 627, 1488, 628, 841, 629, 630, 0,
	631, 632, 633, 0, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 1467, 644, 645, 647, 646, 648,
	649, 0, 650, 0, 651, 652, 653, 0, 0, 0,
	0, 0, 654, 655, 657, 0, 658, 659, 660, 661,
	662, 656, 663, 664, 665, 666, 667, 668, 669, 0,
	671, 672, 670, 673, 674, 890, 675, 676, 677, 678,
	679, 1399, 680, 0, 681, 682, 690, 691, 692, 683,
	684, 686, 693, 685, 694, 695, 696, 697, 699, 698,
	0, 701, 702, 700, 703, 704, 705, 706, 1449, 707,
	844, 708, 687, 688, 709, 710, 711, 891, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 1465, 0, 721,
	0, 722, 723, 724, 725, 726, 727, 729, 689, 730,
	731, 732, 737, 738, 1496, 733, 734, 735, 736, 1489,
	740, 741, 742, 743, 0, 744, 745, 1384, 739, 728,
	0, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	755, 0, 756, 1478, 1479, 1480, 1481, 0, 768, 0,
	757, 759, 760, 761, 762, 1490, 763, 1491, 1409, 764,
	765, 766, 767, 758, 769, 770, 0, 1391, 771, 772,
	773, 774, 776, 778, 779, 780, 775, 777, 781, 1450,
	782, 0, 0, 783, 784, 785, 854, 1475, 1495, 0,
	787, 788, 786, 789, 790, 793, 791, 792, 857, 796,
	513, 797, 798, 799, 794, 795, 0, 0, 0, 0,
	800, 801, 858, 802, 803, 804, 1388, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1383, 0, 0, 0, 0, 0, 0, 1381,
	1382, 2343, 0, 0, 0, 0, 0, 864, 0, 1415,
	0, 0, 0, 1413, 1460, 1403, 1404, 1405, 1401, 1402,
	1414, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 346, 348, 347, 349, 350, 351, 352, 0,
	353, 354, 0, 0, 0, 0, 0, 1452, 1419, 0,
	0, 356, 0, 355, 0, 357, 358, 359, 874, 360,
	361, 362, 363, 364, 365, 366, 367, 806, 1466, 0,
	368, 1474, 369, 1473, 0, 1484, 370, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 1421, 1451, 1385, 380,
	1497, 1498, 813, 0, 381, 382, 383, 384, 1458, 0,
	1439, 0, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 0, 394, 395, 396, 393, 397, 398, 0, 399,
	0, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	408, 409, 876, 410, 411, 412, 1442, 1440, 1441, 1448,
	1444, 1443, 1447, 413, 414, 415, 416, 417, 1477, 418,
	420, 421, 1471, 422, 1470, 1390, 425, 427, 419, 423,
	0, 426, 424, 428, 429, 0, 430, 431, 432, 433,
	0, 0, 434, 1469, 436, 0, 437, 438, 440, 439,
	0, 441, 442, 443, 0, 444, 445, 1397, 446, 447,
	448, 450, 452, 449, 451, 453, 454, 455, 456, 457,
	1485, 1486, 458, 459, 1410, 340, 0, 0, 0, 0,
	0, 460, 461, 462, 1468, 0, 0, 0, 463, 0,
	465, 469, 466, 467, 468, 470, 0, 464, 471, 472,
	0, 877, 473, 474, 475, 1482, 1483, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 486, 1492,
	0, 1420, 487, 0, 488, 489, 490, 491, 492, 493,
	494, 1453, 1454, 1457, 595, 879, 495, 496, 497, 0,
	498, 499, 500, 501, 502, 503, 504, 0, 0, 0,
	505, 506, 507, 508, 0, 867, 341, 343, 878, 828,
	509, 596, 510, 1463, 1464, 0, 1424, 0, 511, 512,
	515, 880, 1455, 881, 514, 516, 517, 882, 518, 0,
	0, 0, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 528, 527, 0, 530, 1493, 529, 883, 531, 532,
	884, 0, 533, 534, 535, 536, 537, 538, 541, 1446,
	1445, 539, 540, 542, 543, 0, 544, 545, 547, 550,
	546, 548, 549, 551, 552, 565, 566, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 568,
	0, 567, 885, 569, 570, 571, 572, 573, 581, 583,
	584, 579, 580, 582, 585, 586, 588, 589, 576, 577,
	578, 886, 587, 574, 1387, 575, 344, 887, 590, 591,
	592, 593, 1411, 1456, 594, 1472, 597, 598, 0, 0,
	599, 0, 600, 0, 0, 602, 603, 604, 0, 0,
	605, 606, 836, 888, 607, 889, 1487, 608, 609, 1398,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	0, 620, 621, 838, 622, 623, 624, 839, 625, 626,
	627, 1488, 628, 841, 629, 630, 0, 631, 632, 633,
	0, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 1467, 644, 645, 647, 646, 648, 649, 0, 650,
	0, 651, 652, 653, 0, 0, 0, 0, 0, 654,
	655, 657, 0, 658, 659, 660, 661, 662, 656, 663,
	664, 665, 666, 667, 668, 669, 0, 671, 672, 670,
	673, 674, 890, 675, 676, 677, 678, 679, 1399, 680,
	0, 681, 682, 690, 691, 692, 683, 684, 686, 693,
	685, 694, 695, 696, 697, 699, 698, 0, 701, 702,
	700, 703, 704, 705, 706, 1449, 707, 844, 708, 687,
	688, 709, 710, 711, 891, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 1465, 0, 721, 0, 722, 723,
	724, 725, 726, 727, 729, 689, 730, 731, 732, 737,
	738, 1496, 733, 734, 735, 736, 1489, 740, 741, 742,
	743, 0, 744, 745, 1384, 739, 728, 0, 746, 747,
	748, 749, 750, 751, 752, 753, 754, 755, 0, 756,
	1478, 1479, 1480, 1481, 0, 768, 0, 757, 759, 760,
	761, 762, 1490, 763, 1491, 1409, 764, 765, 766, 767,
	758, 769, 770, 0, 1391, 771, 772, 773, 774, 776,
	778, 779, 780, 775, 777, 781, 1450, 782, 0, 0,
	783, 784, 785, 854, 1475, 1495, 4719, 787, 788, 786,
	789, 790, 793, 791, 792, 857, 796, 513, 797, 798,
	799, 794, 795, 0, 0, 0, 0, 800, 801, 858,
	802, 803, 804, 1388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1383,
	0, 0, 0, 0, 0, 0, 1381, 1382, 0, 0,
	0, 0, 0, 0, 864, 0, 1415, 0, 0, 0,
	1413, 1460, 1403, 1404, 1405, 1401, 1402, 1414, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 346,
	348, 347, 349, 350, 351, 352, 0, 353, 354, 0,
	0, 0, 0, 0, 1452, 1419, 0, 0, 356, 0,
	355, 0, 357, 358, 359, 874, 360, 361, 362, 363,
	364, 365, 366, 367, 806, 1466, 0, 368, 1474, 369,
	1473, 0, 1484, 370, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 1421, 1451, 1385, 380, 1497, 1498, 813,
	0, 381, 382, 383, 384, 1458, 0, 1439, 0, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 0, 394,
	395, 396, 393, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 408, 409, 876,
	410, 411, 412, 1442, 1440, 1441, 1448, 1444, 1443, 1447,
	413, 414, 415, 416, 417, 1477, 418, 420, 421, 1471,
	422, 1470, 1390, 425, 427, 419, 423, 0, 426, 424,
	428, 429, 0, 430, 431, 432, 433, 0, 0, 434,
	1469, 436, 0, 437, 438, 440, 439, 0, 441, 442,
	443, 0, 444, 445, 1397, 446, 447, 448, 450, 452,
	449, 451, 453, 454, 455, 456, 457, 1485, 1486, 458,
	459, 1410, 340, 0, 0, 0, 0, 0, 460, 461,
	462, 1468, 0, 0, 0, 463, 0, 465, 469, 466,
	467, 468, 470, 0, 464, 471, 472, 3297, 877, 473,
	474, 475, 1482, 1483, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 0, 485, 486, 1492, 0, 1420, 487,
	0, 488, 489, 490, 491, 492, 493, 494, 1453, 1454,
	1457, 595, 879, 495, 496, 497, 0, 498, 499, 500,
	501, 502, 503, 504, 0, 0, 0, 505, 506, 507,
	508, 0, 867, 341, 343, 878, 828, 509, 596, 510,
	1463, 1464, 0, 1424, 0, 511, 512, 515, 880, 1455,
	881, 514, 516, 517, 882, 518, 0, 0, 0, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 528, 527,
	0, 530, 1493, 529, 883, 531, 532, 884, 0, 533,
	534, 535, 536, 537, 538, 541, 1446, 1445, 539, 540,
	542, 543, 0, 544, 545, 547, 550, 546, 548, 549,
	551, 552, 565, 566, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 568, 0, 567, 885,
	569, 570, 571, 572, 573, 581, 583, 584, 579, 580,
	582, 585, 586, 588, 589, 576, 577, 578, 886, 587,
	574, 1387, 575, 344, 887, 590, 591, 592, 593, 1411,
	1456, 594, 1472, 597, 598, 0, 0, 599, 0, 600,
	0, 0, 602, 603, 604, 0, 0, 605, 606, 836,
	888, 607, 889, 1487, 608, 609, 1398, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 0, 620, 621,
	838, 622, 623, 624, 839, 625, 626, 627, 1488, 628,
	841, 629, 630, 0, 631, 632, 633, 0, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 1467, 644,
	645, 647, 646, 648, 649, 0, 650, 0, 651, 652,
	653, 0, 0, 0, 0, 0, 654, 655, 657, 0,
	658, 659, 660, 661, 662, 656, 663, 664, 665, 666,
	667, 668, 669, 0, 671, 672, 670, 673, 674, 890,
	675, 676, 677, 678, 679, 1399, 680, 0, 681, 682,
	690, 691, 692, 683, 684, 686, 693, 685, 694, 695,
	696, 697, 699, 698, 0, 701, 702, 700, 703, 704,
	705, 706, 1449, 707, 844, 708, 687, 688, 709, 710,
	711, 891, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 1465, 0, 721, 0, 722, 723, 724, 725, 726,
	727, 729, 689, 730, 731, 732, 737, 738, 1496, 733,
	734, 735, 736, 1489, 740, 741, 742, 743, 0, 744,
	745, 1384, 739, 728, 0, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 0, 756, 1478, 1479, 1480,
	1481, 0, 768, 0, 757, 759, 760, 761, 762, 1490,
	763, 1491, 1409, 764, 765, 766, 767, 758, 769, 770,
	0, 1391, 771, 772, 773, 774, 776, 778, 779, 780,
	775, 777, 781, 1450, 782, 0, 0, 783, 784, 785,
	854, 1475, 1495, 0, 787, 788, 786, 789, 790, 793,
	791, 792, 857, 796, 513, 797, 798, 799, 794, 795,
	0, 0, 0, 0, 800, 801, 858, 802, 803, 804,
	1388, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1383, 0, 0, 0,
	0, 0, 0, 1381, 1382, 0, 0, 0, 0, 0,
	0, 864, 0, 1415, 0, 0, 0, 1413, 1460, 1403,
	1404, 1405, 1401, 1402, 1414, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 346, 348, 347, 349,
	350, 351, 352, 0, 353, 354, 0, 0, 0, 0,
	0, 1452, 1419, 0, 0, 356, 0, 355, 0, 357,
	358, 359, 874, 360, 361, 362, 363, 364, 365, 366,
	367, 806, 1466, 0, 368, 1474, 369, 1473, 0, 1484,
	370, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	1421, 1451, 1385, 380, 1497, 1498, 813, 0, 381, 382,
	383, 384, 1458, 0, 1439, 0, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 0, 394, 395, 396, 393,
	397, 398, 0, 399, 0, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 408, 409, 876, 410, 411, 412,
	1442, 1440, 1441, 1448, 1444, 1443, 1447, 413, 414, 415,
	416, 417, 1477, 418, 420, 421, 1471, 422, 1470, 1390,
	425, 427, 419, 423, 0, 426, 424, 428, 429, 0,
	430, 431, 432, 433, 0, 0, 434, 1469, 436, 0,
	437, 438, 440, 439, 0, 441, 442, 443, 0, 444,
	445, 1397, 446, 447, 448, 450, 452, 449, 451, 453,
	454, 455, 456, 457, 1485, 1486, 458, 459, 1410, 340,
	0, 0, 0, 0, 0, 460, 461, 462, 1468, 0,
	0, 0, 463, 0, 465, 469, 466, 467, 468, 470,
	0, 464, 471, 472, 0, 877, 473, 474, 475, 1482,
	1483, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 486, 1492, 0, 1420, 487, 0, 488, 489,
	490, 491, 492, 493, 494, 1453, 1454, 1457, 595, 879,
	495, 496, 497, 0, 498, 499, 500, 501, 502, 503,
	504, 0, 0, 0, 505, 506, 507, 508, 0, 867,
	341, 343, 878, 828, 509, 596, 510, 1463, 1464, 0,
	1424, 0, 511, 512, 515, 880, 1455, 881, 514, 516,
	517, 882, 518, 0, 0, 0, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 528, 527, 0, 530, 1493,
	529, 883, 531, 532, 884, 0, 533, 534, 535, 536,
	537, 538, 541, 1446, 1445, 539, 540, 542, 543, 0,
	544, 545, 547, 550, 546, 548, 549, 551, 552, 565,
	566, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 568, 0, 567, 885, 569, 570, 571,
	572, 573, 581, 583, 584, 579, 580, 582, 585, 586,
	588, 589, 576, 577, 578, 886, 587, 574, 1387, 575,
	344, 887, 590, 591, 592, 593, 1411, 1456, 594, 1472,
	597, 598, 0, 0, 599, 0, 600, 0, 0, 602,
	603, 604, 0, 0, 605, 606, 836, 888, 607, 889,
	1487, 608, 609, 1398, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 0, 620, 621, 838, 622, 623,
	624, 839, 625, 626, 627, 1488, 628, 841, 629, 630,
	0, 631, 632, 633, 0, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 1467, 644, 645, 647, 646,
	648, 649, 0, 650, 0, 651, 652, 653, 0, 0,
	0, 0, 0, 654, 655, 657, 0, 658, 659, 660,
	661, 662, 656, 663, 664, 665, 666, 667, 668, 669,
	0, 671, 672, 670, 673, 674, 890, 675, 676, 677,
	678, 679, 1399, 680, 0, 681, 682, 690, 691, 692,
	683, 684, 686, 693, 685, 694, 695, 696, 697, 699,
	698, 0, 701, 702, 700, 703, 704, 705, 706, 1449,
	707, 844, 708, 687, 688, 709, 710, 711, 891, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 1465, 0,
	721, 0, 722, 723, 724, 725, 726, 727, 729, 689,
	730, 731, 732, 737, 738, 1496, 733, 734, 735, 736,
	1489, 740, 741, 742, 743, 0, 744, 745, 1384, 739,
	728, 0, 746, 747, 748, 749, 750, 751, 752, 753,
	754, 755, 0, 756, 1478, 1479, 1480, 1481, 0, 768,
	0, 757, 759, 760, 761, 762, 1490, 763, 1491, 1409,
	764, 765, 766, 767, 758, 769, 770, 0, 1391, 771,
	772, 773, 774, 776, 778, 779, 780, 775, 777, 781,
	1450, 782, 0, 0, 783, 784, 785, 854, 1475, 1495,
	0, 787, 788, 786, 789, 790, 793, 791, 792, 857,
	796, 513, 797, 798, 799, 794, 795, 0, 0, 0,
	0, 800, 801, 858, 802, 803, 804, 1388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1383, 0, 0, 0, 0, 0, 0,
	1381, 1382, 0, 0, 0, 0, 0, 0, 864, 0,
	1415, 2267, 0, 3302, 1413, 1460, 1403, 1404, 1405, 1401,
	1402, 1414, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 346, 348, 347, 349, 350, 351, 352,
	0, 353, 354, 0, 0, 0, 0, 0, 1452, 1419,
	0, 0, 356, 0, 355, 0, 357, 358, 359, 874,
	360, 361, 362, 363, 364, 365, 366, 367, 806, 1466,
	0, 368, 1474, 369, 1473, 0, 1484, 370, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 1421, 1451, 1385,
	380, 1497, 1498, 813, 0, 381, 382, 383, 384, 1458,
	0, 1439, 0, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 0, 394, 395, 396, 393, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 408, 409, 876, 410, 411, 412, 1442, 1440, 1441,
	1448, 1444, 1443, 1447, 413, 414, 415, 416, 417, 1477,
	418, 420, 421, 1471, 422, 1470, 1390, 425, 427, 419,
	423, 0, 426, 424, 428, 429, 0, 430, 431, 432,
	433, 0, 0, 434, 1469, 436, 0, 437, 438, 440,
	439, 0, 441, 442, 443, 0, 444, 445, 1397, 446,
	447, 448, 450, 452, 449, 451, 453, 454, 455, 456,
	457, 1485, 1486, 458, 459, 1410, 340, 0, 0, 0,
	0, 0, 460, 461, 462, 1468, 0, 0, 0, 463,
	0, 465, 469, 466, 467, 468, 470, 0, 464, 471,
	472, 0, 877, 473, 474, 475, 1482, 1483, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 486,
	1492, 0, 1420, 487, 0, 488, 489, 490, 491, 492,
	493, 494, 1453, 1454, 1457, 595, 879, 495, 496, 497,
	0, 498, 499, 500, 501, 502, 503, 504, 0, 0,
	0, 505, 506, 507, 508, 0, 867, 341, 343, 878,
	828, 509, 596, 510, 1463, 1464, 0, 1424, 0, 511,
	512, 515, 880, 1455, 881, 514, 516, 517, 882, 518,
	0, 0, 0, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 528, 527, 0, 530, 1493, 529, 883, 531,
	532, 884, 0, 533, 534, 535, 536, 537, 538, 541,
	1446, 1445, 539, 540, 542, 543, 0, 544, 545, 547,
	550, 546, 548, 549, 551, 552, 565, 566, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	568, 0, 567, 885, 569, 570, 571, 572, 573, 581,
	583, 584, 579, 580, 582, 585, 586, 588, 589, 576,
	577, 578, 886, 587, 574, 1387, 575, 344, 887, 590,
	591, 592, 593, 1411, 1456, 594, 1472, 597, 598, 0,
	0, 599, 0, 600, 0, 0, 602, 603, 604, 0,
	0, 605, 606, 836, 888, 607, 889, 1487, 608, 609,
	1398, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 0, 620, 621, 838, 622, 623, 624, 839, 625,
	626, 627, 1488, 628, 841, 629, 630, 0, 631, 632,
	633, 0, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 1467, 644, 645, 647, 646, 648, 649, 0,
	650, 0, 651, 652, 653, 0, 0, 0, 0, 0,
	654, 655, 657, 0, 658, 659, 660, 661, 662, 656,
	663, 664, 665, 666, 667, 668, 669, 0, 671, 672,
	670, 673, 674, 890, 675, 676, 677, 678, 679, 1399,
	680, 0, 681, 682, 690, 691, 692, 683, 684, 686,
	693, 685, 694, 695, 696, 697, 699, 698, 0, 701,
	702, 700, 703, 704, 705, 706, 1449, 707, 844, 708,
	687, 688, 709, 710, 711, 891, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 1465, 0, 721, 0, 722,
	723, 724, 725, 726, 727, 729, 689, 730, 731, 732,
	737, 738, 1496, 733, 734, 735, 736, 1489, 740, 741,
	742, 743, 0, 744, 745, 1384, 739, 728, 0, 746,
	747, 748, 749, 750, 751, 752, 753, 754, 755, 0,
	756, 1478, 1479, 1480, 1481, 0, 768, 0, 757, 759,
	760, 761, 762, 1490, 763, 1491, 1409, 764, 765, 766,
	767, 758, 769, 770, 0, 1391, 771, 772, 773, 774,
	776, 778, 779, 780, 775, 777, 781, 1450, 782, 0,
	0, 783, 784, 785, 854, 1475, 1495, 0, 787, 788,
	786, 789, 790, 793, 791, 792, 857, 796, 513, 797,
	798, 799, 794, 795, 0, 0, 0, 0, 800, 801,
	858, 802, 803, 804, 1388, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1383, 0, 0, 0, 0, 0, 0, 1381, 1382, 0,
	0, 0, 0, 0, 0, 864, 0, 1415, 0, 0,
	3300, 1413, 1460, 1403, 1404, 1405, 1401, 1402, 1414, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	346, 348, 347, 349, 350, 351, 352, 0, 353, 354,
	0, 0, 0, 0, 0, 1452, 1419, 0, 0, 356,
	0, 355, 0, 357, 358, 359, 874, 360, 361, 362,
	363, 364, 365, 366, 367, 806, 1466, 0, 368, 1474,
	369, 1473, 0, 1484, 370, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 1421, 1451, 1385, 380, 1497, 1498,
	813, 0, 381, 382, 383, 384, 1458, 0, 1439, 0,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 0,
	394, 395, 396, 393, 397, 398, 0, 399, 0, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 408, 409,
	876, 410, 411, 412, 1442, 1440, 1441, 1448, 1444, 1443,
	1447, 413, 414, 415, 416, 417, 1477, 418, 420, 421,
	1471, 422, 1470, 1390, 425, 427, 419, 423, 0, 426,
	424, 428, 429, 0, 430, 431, 432, 433, 0, 0,
	434, 1469, 436, 0, 437, 438, 440, 439, 0, 441,
	442, 443, 0, 444, 445, 1397, 446, 447, 448, 450,
	452, 449, 451, 453, 454, 455, 456, 457, 1485, 1486,
	458, 459, 1410, 340, 0, 0, 0, 0, 0, 460,
	461, 462, 1468, 0, 0, 0, 463, 0, 465, 469,
	466, 467, 468, 470, 0, 464, 471, 472, 0, 877,
	473, 474, 475, 1482, 1483, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 486, 1492, 0, 1420,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 1453,
	1454, 1457, 595, 879, 495, 496, 497, 0, 498, 499,
	500, 501, 502, 503, 504, 0, 0, 0, 505, 506,
	507, 508, 0, 867, 341, 343, 878, 828, 509, 596,
	510, 1463, 1464, 0, 1424, 0, 511, 512, 515, 880,
	1455, 881, 514, 516, 517, 882, 518, 0, 0, 0,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 528,
	527, 0, 530, 1493, 529, 883, 531, 532, 884, 0,
	533, 534, 535, 536, 537, 538, 541, 1446, 1445, 539,
	540, 542, 543, 0, 544, 545, 547, 550, 546, 548,
	549, 551, 552, 565, 566, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 568, 0, 567,
	885, 569, 570, 571, 572, 573, 581, 583, 584, 579,
	580, 582, 585, 586, 588, 589, 576, 577, 578, 886,
	587, 574, 1387, 575, 344, 887, 590, 591, 592, 593,
	1411, 1456, 594, 1472, 597, 598, 0, 0, 599, 0,
	600, 0, 0, 602, 603, 604, 0, 0, 605, 606,
	836, 888, 607, 889, 1487, 608, 609, 1398, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 0, 620,
	621, 838, 622, 623, 624, 839, 625, 626, 627, 1488,
	628, 841, 629, 630, 0, 631, 632, 633, 0, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 1467,
	644, 645, 647, 646, 648, 649, 0, 650, 0, 651,
	652, 653, 0, 0, 0, 0, 0, 654, 655, 657,
	0, 658, 659, 660, 661, 662, 656, 663, 664, 665,
	666, 667, 668, 669, 0, 671, 672, 670, 673, 674,
	890, 675, 676, 677, 678, 679, 1399, 680, 0, 681,
	682, 690, 691, 692, 683, 684, 686, 693, 685, 694,
	695, 696, 697, 699, 698, 0, 701, 702, 700, 703,
	704, 705, 706, 1449, 707, 844, 708, 687, 688, 709,
	710, 711, 891, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 1465, 0, 721, 0, 722, 723, 724, 725,
	726, 727, 729, 689, 730, 731, 732, 737, 738, 1496,
	733, 734, 735, 736, 1489, 740, 741, 742, 743, 0,
	744, 745, 1384, 739, 728, 0, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 0, 756, 1478, 1479,
	1480, 1481, 0, 768, 0, 757, 759, 760, 761, 762,
	1490, 763, 1491, 1409, 764, 765, 766, 767, 758, 769,
	770, 0, 1391, 771, 772, 773, 774, 776, 778, 779,
	780, 775, 777, 781, 1450, 782, 0, 0, 783, 784,
	785, 854, 1475, 1495, 0, 787, 788, 786, 789, 790,
	793, 791, 792, 857, 796, 513, 797, 798, 799, 794,
	795, 0, 0, 0, 0, 800, 801, 858, 802, 803,
	804, 1388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1383, 0, 0,
	0, 0, 0, 0, 1381, 1382, 0, 0, 0, 0,
	0, 0, 864, 0, 1415, 0, 0, 3288, 1413, 1460,
	1403, 1404, 1405, 1401, 1402, 1414, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 346, 348, 347,
	349, 350, 351, 352, 0, 353, 354, 0, 0, 0,
	0, 0, 1452, 1419, 0, 0, 356, 0, 355, 0,
	357, 358, 359, 874, 360, 361, 362, 363, 364, 365,
	366, 367, 806, 1466, 0, 368, 1474, 369, 1473, 0,
	1484, 370, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 1421, 1451, 1385, 380, 1497, 1498, 813, 0, 381,
	382, 383, 384, 1458, 0, 1439, 0, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 0, 394, 395, 396,
	393, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 408, 409, 876, 410, 411,
	412, 1442, 1440, 1441, 1448, 1444, 1443, 1447, 413, 414,
	415, 416, 417, 1477, 418, 420, 421, 1471, 422, 1470,
	1390, 425, 427, 419, 423, 0, 426, 424, 428, 429,
	0, 430, 431, 432, 433, 0, 0, 434, 1469, 436,
	0, 437, 438, 440, 439, 0, 441, 442, 443, 0,
	444, 445, 1397, 446, 447, 448, 450, 452, 449, 451,
	453, 454, 455, 456, 457, 1485, 1486, 458, 459, 1410,
	340, 0, 0, 0, 0, 0, 460, 461, 462, 1468,
	0, 0, 0, 463, 0, 465, 469, 466, 467, 468,
	470, 0, 464, 471, 472, 0, 877, 473, 474, 475,
	1482, 1483, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 0, 485, 486, 1492, 0, 1420, 487, 0, 488,
	489, 490, 491, 492, 493, 494, 1453, 1454, 1457, 595,
	879, 495, 496, 497, 0, 498, 499, 500, 501, 502,
	503, 504, 0, 0, 0, 505, 506, 507, 508, 0,
	867, 341, 343, 878, 828, 509, 596, 510, 1463, 1464,
	0, 1424, 0, 511, 512, 515, 880, 1455, 881, 514,
	516, 517, 882, 518, 0, 0, 0, 519, 520, 521,
	522, 523, 524, 525, 0, 526, 528, 527, 0, 530,
	1493, 529, 883, 531, 532, 884, 0, 533, 534, 535,
	536, 537, 538, 541, 1446, 1445, 539, 540, 542, 543,
	0, 544, 545, 547, 550, 546, 548, 549, 551, 552,
	565, 566, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 568, 0, 567, 885, 569, 570,
	571, 572, 573, 581, 583, 584, 579, 580, 582, 585,
	586, 588, 589, 576, 577, 578, 886, 587, 574, 1387,
	575, 344, 887, 590, 591, 592, 593, 1411, 1456, 594,
	1472, 597, 598, 0, 0, 599, 0, 600, 0, 0,
	602, 603, 604, 0, 0, 605, 606, 836, 888, 607,
	889, 1487, 608, 609, 1398, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 0, 620, 621, 838, 622,
	623, 624, 839, 625, 626, 627, 1488, 628, 841, 629,
	630, 0, 631, 632, 633, 0, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 1467, 644, 645, 647,
	646, 648, 649, 0, 650, 0, 651, 652, 653, 0,
	0, 0, 0, 0, 654, 655, 657, 0, 658, 659,
	660, 661, 662, 656, 663, 664, 665, 666, 667, 668,
	669, 0, 671, 672, 670, 673, 674, 890, 675, 676,
	677, 678, 679, 1399, 680, 0, 681, 682, 690, 691,
	692, 683, 684, 686, 693, 685, 694, 695, 696, 697,
	699, 698, 0, 701, 702, 700, 703, 704, 705, 706,
	1449, 707, 844, 708, 687, 688, 709, 710, 711, 891,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 1465,
	0, 721, 0, 722, 723, 724, 725, 726, 727, 729,
	689, 730, 731, 732, 737, 738, 1496, 733, 734, 735,
	736, 1489, 740, 741, 742, 743, 0, 744, 745, 1384,
	739, 728, 0, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 755, 0, 756, 1478, 1479, 1480, 1481, 0,
	768, 0, 757, 759, 760, 761, 762, 1490, 763, 1491,
	1409, 764, 765, 766, 767, 758, 769, 770, 0, 1391,
	771, 772, 773, 774, 776, 778, 779, 780, 775, 777,
	781, 1450, 782, 0, 0, 783, 784, 785, 854, 1475,
	1495, 0, 787, 788, 786, 789, 790, 793, 791, 792,
	857, 796, 513, 797, 798, 799, 794, 795, 0, 0,
	0, 0, 800, 801, 858, 802, 803, 804, 1388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1383, 0, 0, 0, 0, 0,
	0, 1381, 1382, 0, 0, 0, 0, 0, 0, 864,
	0, 1415, 0, 0, 3277, 1413, 1460, 1403, 1404, 1405,
	1401, 1402, 1414, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 346, 348, 347, 349, 350, 351,
	352, 0, 353, 354, 0, 0, 0, 0, 0, 1452,
	1419, 0, 0, 356, 0, 355, 0, 357, 358, 359,
	874, 360, 361, 362, 363, 364, 365, 366, 367, 806,
	1466, 0, 368, 1474, 369, 1473, 0, 1484, 370, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 1421, 1451,
	1385, 380, 1497, 1498, 813, 0, 381, 382, 383, 384,
	1458, 0, 1439, 0, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 0, 394, 395, 396, 393, 397, 398,
	0, 399, 0, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 408, 409, 876, 410, 411, 412, 1442, 1440,
	1441, 1448, 1444, 1443, 1447, 413, 414, 415, 416, 417,
	1477, 418, 420, 421, 1471, 422, 1470, 1390, 425, 427,
	419, 423, 0, 426, 424, 428, 429, 0, 430, 431,
	432, 433, 0, 0, 434, 1469, 436, 0, 437, 438,
	440, 439, 0, 441, 442, 443, 0, 444, 445, 1397,
	446, 447, 448, 450, 452, 449, 451, 453, 454, 455,
	456, 457, 1485, 1486, 458, 459, 1410, 340, 0, 0,
	0, 0, 0, 460, 461, 462, 1468, 0, 0, 0,
	463, 0, 465, 469, 466, 467, 468, 470, 0, 464,
	471, 472, 0, 877, 473, 474, 475, 1482, 1483, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	486, 1492, 0, 1420, 487, 0, 488, 489, 490, 491,
	492, 493, 494, 1453, 1454, 1457, 595, 879, 495, 496,
	497, 0, 498, 499, 500, 501, 502, 503, 504, 0,
	0, 0, 505, 506, 507, 508, 0, 867, 341, 343,
	878, 828, 509, 596, 510, 1463, 1464, 0, 1424, 0,
	511, 512, 515, 880, 1455, 881, 514, 516, 517, 882,
	518, 0, 0, 0, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 528, 527, 0, 530, 1493, 529, 883,
	531, 532, 884, 0, 533, 534, 535, 536, 537, 538,
	541, 1446, 1445, 539, 540, 542, 543, 0, 544, 545,
	547, 550, 546, 548, 549, 551, 552, 565, 566, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 568, 0, 567, 885, 569, 570, 571, 572, 573,
	581, 583, 584, 579, 580, 582, 585, 586, 588, 589,
	576, 577, 578, 886, 587, 574, 1387, 575, 344, 887,
	590, 591, 592, 593, 1411, 1456, 594, 1472, 597, 598,
	0, 0, 599, 0, 600, 0, 0, 602, 603, 604,
	0, 0, 605, 606, 836, 888, 607, 889, 1487, 608,
	609, 1398, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 0, 620, 621, 838, 622, 623, 624, 839,
	625, 626, 627, 1488, 628, 841, 629, 630, 0, 631,
	632, 633, 0, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 1467, 644, 645, 647, 646, 648, 649,
	0, 650, 0, 651, 652, 653, 0, 0, 0, 0,
	0, 654, 655, 657, 0, 658, 659, 660, 661, 662,
	656, 663, 664, 665, 666, 667, 668, 669, 0, 671,
	672, 670, 673, 674, 890, 675, 676, 677, 678, 679,
	1399, 680, 0, 681, 682, 690, 691, 692, 683, 684,
	686, 693, 685, 694, 695, 696, 697, 699, 698, 0,
	701, 702, 700, 703, 704, 705, 706, 1449, 707, 844,
	708, 687, 688, 709, 710, 711, 891, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 1465, 0, 721, 0,
	722, 723, 724, 725, 726, 727, 729, 689, 730, 731,
	732, 737, 738, 1496, 733, 734, 735, 736, 1489, 740,
	741, 742, 743, 0, 744, 745, 1384, 739, 728, 0,
	746, 747, 748, 749, 750, 751, 752, 753, 754, 755,
	0, 756, 1478, 1479, 1480, 1481, 0, 768, 0, 757,
	759, 760, 761, 762, 1490, 763, 1491, 1409, 764, 765,
	766, 767, 758, 769, 770, 0, 1391, 771, 772, 773,
	774, 776, 778, 779, 780, 775, 777, 781, 1450, 782,
	0, 0, 783, 784, 785, 854, 1475, 1495, 0, 787,
	788, 786, 789, 790, 793, 791, 792, 857, 796, 513,
	797, 798, 799, 794, 795, 0, 0, 0, 0, 800,
	801, 858, 802, 803, 804, 1388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1383, 0, 0, 0, 0, 0, 0, 1381, 1382,
	0, 0, 0, 0, 0, 0, 864, 0, 1415, 0,
	0, 3275, 1413, 3266, 3273, 1404, 1405, 1401, 1402, 1414,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 346, 348, 347, 349, 350, 351, 352, 0, 353,
	354, 0, 0, 0, 0, 0, 1452, 1419, 0, 0,
	356, 0, 355, 0, 357, 358, 359, 874, 360, 361,
	362, 363, 364, 365, 366, 367, 806, 1466, 0, 368,
	1474, 369, 1473, 0, 1484, 370, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 1421, 1451, 1385, 380, 1497,
	1498, 813, 0, 381, 382, 383, 384, 1458, 0, 1439,
	0, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	0, 394, 395, 396, 393, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 408,
	409, 876, 410, 411, 412, 1442, 1440, 1441, 1448, 1444,
	1443, 1447, 413, 414, 415, 416, 417, 1477, 3269, 420,
	421, 1471, 422, 1470, 1390, 425, 427, 419, 423, 0,
	426, 424, 428, 429, 0, 430, 431, 432, 433, 0,
	0, 434, 1469, 436, 0, 437, 438, 440, 439, 0,
	441, 442, 443, 0, 444, 445, 1397, 446, 447, 448,
	450, 452, 449, 451, 453, 454, 455, 456, 457, 1485,
	1486, 458, 459, 1410, 340, 0, 0, 0, 0, 0,
	460, 461, 462, 1468, 0, 0, 0, 463, 0, 465,
	469, 466, 467, 468, 470, 0, 464, 471, 472, 0,
	877, 473, 474, 475, 1482, 1483, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 0, 485, 486, 1492, 0,
	1420, 487, 0, 488, 489, 490, 491, 492, 3270, 494,
	1453, 1454, 1457, 595, 879, 495, 496, 497, 0, 498,
	499, 500, 501, 502, 503, 504, 0, 0, 0, 505,
	506, 507, 508, 0, 867, 341, 343, 878, 828, 509,
	596, 510, 1463, 1464, 0, 1424, 0, 511, 512, 515,
	880, 1455, 881, 514, 516, 517, 882, 518, 0, 0,
	0, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	528, 527, 0, 530, 1493, 529, 883, 531, 532, 884,
	0, 533, 534, 535, 536, 537, 538, 541, 1446, 1445,
	539, 540, 542, 543, 0, 544, 545, 547, 550, 546,
	548, 3271, 551, 552, 3268, 566, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 568, 0,
	567, 885, 569, 570, 571, 572, 573, 581, 583, 584,
	579, 580, 582, 585, 586, 588, 589, 576, 577, 578,
	886, 587, 574, 1387, 575, 344, 887, 590, 591, 592,
	593, 1411, 1456, 594, 1472, 597, 598, 0, 0, 599,
	0, 600, 0, 0, 602, 603, 604, 0, 0, 605,
	606, 836, 888, 607, 889, 1487, 608, 609, 1398, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 0,
	620, 621, 838, 622, 623, 624, 839, 625, 626, 627,
	1488, 628, 841, 629, 630, 0, 631, 632, 633, 0,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	1467, 644, 645, 647, 646, 648, 649, 0, 650, 0,
	651, 652, 653, 0, 0, 0, 0, 0, 654, 655,
	657, 0, 658, 659, 660, 661, 662, 656, 663, 664,
	665, 666, 667, 668, 669, 0, 671, 672, 670, 673,
	674, 890, 675, 676, 677, 678, 679, 1399, 680, 0,
	681, 682, 690, 691, 692, 683, 684, 686, 693, 685,
	694, 695, 696, 3272, 699, 698, 0, 701, 702, 700,
	703, 704, 705, 706, 1449, 707, 844, 708, 687, 688,
	709, 710, 711, 891, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 1465, 0, 721, 0, 722, 723, 724,
	725, 726, 727, 729, 689, 730, 731, 732, 737, 738,
	1496, 733, 734, 735, 736, 1489, 740, 741, 742, 743,
	0, 744, 745, 1384, 739, 728, 0, 746, 747, 748,
	749, 750, 751, 752, 753, 754, 755, 0, 756, 1478,
	1479, 1480, 1481, 0, 768, 0, 757, 759, 760, 761,
	762, 1490, 763, 1491, 1409, 764, 765, 766, 767, 758,
	769, 770, 0, 1391, 771, 772, 773, 774, 776, 778,
	779, 780, 775, 777, 781, 1450, 782, 0, 0, 783,
	784, 785, 854, 1475, 1495, 0, 787, 788, 786, 789,
	790, 793, 791, 792, 857, 796, 513, 797, 798, 799,
	794, 795, 0, 0, 0, 0, 800, 801, 858, 802,
	3267, 804, 1388, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1383, 0,
	0, 0, 0, 0, 0, 1381, 1382, 0, 0, 0,
	0, 0, 0, 864, 0, 1415, 0, 0, 3263, 1413,
	3266, 3273, 1404, 1405, 1401, 1402, 1414, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 346, 348,
	347, 349, 350, 351, 352, 0, 353, 354, 0, 0,
	0, 0, 0, 1452, 1419, 0, 0, 356, 0, 355,
	0, 357, 358, 359, 874, 360, 361, 362, 363, 364,
	365, 366, 367, 806, 1466, 0, 368, 1474, 369, 1473,
	0, 1484, 370, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 1421, 1451, 1385, 380, 1497, 1498, 813, 0,
	381, 382, 383, 384, 1458, 0, 1439, 0, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 0, 394, 395,
	396, 393, 397, 398, 0, 399, 0, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 408, 409, 876, 410,
	411, 412, 1442, 1440, 1441, 1448, 1444, 1443, 1447, 413,
	414, 415, 416, 417, 1477, 3269, 420, 421, 1471, 422,
	1470, 1390, 425, 427, 419, 423, 0, 426, 424, 428,
	429, 0, 430, 431, 432, 433, 0, 0, 434, 1469,
	436, 0, 437, 438, 440, 439, 0, 441, 442, 443,
	0, 444, 445, 1397, 446, 447, 448, 450, 452, 449,
	451, 453, 454, 455, 456, 457, 1485, 1486, 458, 459,
	1410, 340, 0, 0, 0, 0, 0, 460, 461, 462,
	1468, 0, 0, 0, 463, 0, 465, 469, 466, 467,
	468, 470, 0, 464, 471, 472, 0, 877, 473, 474,
	475, 1482, 1483, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 486, 1492, 0, 1420, 487, 0,
	488, 489, 490, 491, 492, 3270, 494, 1453, 1454, 1457,
	595, 879, 495, 496, 497, 0, 498, 499, 500, 501,
	502, 503, 504, 0, 0, 0, 505, 506, 507, 508,
	0, 867, 341, 343, 878, 828, 509, 596, 510, 1463,
	1464, 0, 1424, 0, 511, 512, 515, 880, 1455, 881,
	514, 516, 517, 882, 518, 0, 0, 0, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 528, 527, 0,
	530, 1493, 529, 883, 531, 532, 884, 0, 533, 534,
	535, 536, 537, 538, 541, 1446, 1445, 539, 540, 542,
	543, 0, 544, 545, 547, 550, 546, 548, 3271, 551,
	552, 3268, 566, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 568, 0, 567, 885, 569,
	570, 571, 572, 573, 581, 583, 584, 579, 580, 582,
	585, 586, 588, 589, 576, 577, 578, 886, 587, 574,
	1387, 575, 344, 887, 590, 591, 592, 593, 1411, 1456,
	594, 1472, 597, 598, 0, 0, 599, 0, 600, 0,
	0, 602, 603, 604, 0, 0, 605, 606, 836, 888,
	607, 889, 1487, 608, 609, 1398, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 0, 620, 621, 838,
	622, 623, 624, 839, 625, 626, 627, 1488, 628, 841,
	629, 630, 0, 631, 632, 633, 0, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 1467, 644, 645,
	647, 646, 648, 649, 0, 650, 0, 651, 652, 653,
	0, 0, 0, 0, 0, 654, 655, 657, 0, 658,
	659, 660, 661, 662, 656, 663, 664, 665, 666, 667,
	668, 669, 0, 671, 672, 670, 673, 674, 890, 675,
	676, 677, 678, 679, 1399, 680, 0, 681, 682, 690,
	691, 692, 683, 684, 686, 693, 685, 694, 695, 696,
	3272, 699, 698, 0, 701, 702, 700, 703, 704, 705,
	706, 1449, 707, 844, 708, 687, 688, 709, 710, 711,
	891, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	1465, 0, 721, 0, 722, 723, 724, 725, 726, 727,
	729, 689, 730, 731, 732, 737, 738, 1496, 733, 734,
	735, 736, 1489, 740, 741, 742, 743, 0, 744, 745,
	1384, 739, 728, 0, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 0, 756, 1478, 1479, 1480, 1481,
	0, 768, 0, 757, 759, 760, 761, 762, 1490, 763,
	1491, 1409, 764, 765, 766, 767, 758, 769, 770, 0,
	1391, 771, 772, 773, 774, 776, 778, 779, 780, 775,
	777, 781, 1450, 782, 0, 0, 783, 784, 785, 854,
	1475, 1495, 0, 787, 788, 786, 789, 790, 793, 791,
	792, 857, 796, 513, 797, 798, 799, 794, 795, 0,
	0, 0, 0, 800, 801, 858, 802, 3267, 804, 1388,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1383, 0, 0, 0, 0,
	0, 0, 1381, 1382, 0, 0, 0, 0, 0, 0,
	864, 0, 1415, 0, 0, 0, 1413, 1460, 1403, 1404,
	1405, 1401, 1402, 1414, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 346, 348, 347, 349, 350,
	351, 352, 3016, 353, 354, 0, 0, 0, 0, 0,
	1452, 1419, 0, 0, 356, 0, 355, 0, 357, 358,
	359, 874, 360, 361, 362, 363, 364, 365, 366, 367,
	806, 1466, 0, 368, 1474, 369, 1473, 0, 1484, 370,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 1421,
	1451, 1385, 380, 1497, 1498, 813, 0, 381, 382, 383,
	384, 1458, 0, 1439, 0, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 0, 394, 395, 396, 393, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 408, 409, 876, 410, 411, 412, 1442,
	1440, 1441, 1448, 1444, 1443, 1447, 413, 414, 415, 416,
	417, 1477, 418, 420, 421, 1471, 422, 1470, 1390, 425,
	427, 419, 423, 0, 426, 424, 428, 429, 0, 430,
	431, 432, 433, 0, 0, 434, 1469, 436, 0, 437,
	438, 440, 439, 0, 441, 442, 443, 0, 444, 445,
	1397, 446, 447, 448, 450, 452, 449, 451, 453, 454,
	455, 456, 457, 1485, 1486, 458, 459, 1410, 340, 0,
	0, 0, 0, 0, 460, 461, 462, 1468, 0, 0,
	0, 463, 0, 465, 469, 466, 467, 468, 470, 0,
	464, 471, 472, 0, 877, 473, 474, 475, 1482, 1483,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 0,
	485, 486, 1492, 0, 1420, 487, 0, 488, 489, 490,
	491, 492, 493, 494, 1453, 1454, 1457, 595, 879, 495,
	496, 497, 0, 498, 499, 500, 501, 502, 503, 504,
	0, 0, 0, 505, 506, 507, 508, 0, 867, 341,
	343, 878, 828, 509, 596, 510, 1463, 1464, 0, 1424,
	0, 511, 512, 515, 880, 1455, 881, 514, 516, 517,
	882, 518, 0, 0, 0, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 528, 527, 0, 530, 1493, 529,
	883, 531, 532, 884, 0, 533, 534, 535, 536, 537,
	538, 541, 1446, 1445, 539, 540, 542, 543, 0, 544,
	545, 547, 550, 546, 548, 549, 551, 552, 565, 566,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 568, 0, 567, 885, 569, 570, 571, 572,
	573, 581, 583, 584, 579, 580, 582, 585, 586, 588,
	589, 576, 577, 578, 886, 587, 574, 1387, 575, 344,
	887, 590, 591, 592, 593, 1411, 1456, 594, 1472, 597,
	598, 0, 0, 599, 0, 600, 0, 0, 602, 603,
	604, 0, 0, 605, 606, 836, 888, 607, 889, 1487,
	608, 609, 1398, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 620, 621, 838, 622, 623, 624,
	839, 625, 626, 627, 1488, 628, 841, 629, 630, 0,
	631, 632, 633, 0, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 1467, 644, 645, 647, 646, 648,
	649, 0, 650, 0, 651, 652, 653, 0, 0, 0,
	0, 0, 654, 655, 657, 0, 658, 659, 660, 661,
	662, 656, 663, 664, 665, 666, 667, 668, 669, 0,
	671, 672, 670, 673, 674, 890, 675, 676, 677, 678,
	679, 1399, 680, 0, 681, 682, 690, 691, 692, 683,
	684, 686, 693, 685, 694, 695, 696, 697, 699, 698,
	0, 701, 702, 700, 703, 704, 705, 706, 1449, 707,
	844, 708, 687, 688, 709, 710, 711, 891, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 1465, 0, 721,
	0, 722, 723, 724, 725, 726, 727, 729, 689, 730,
	731, 732, 737, 738, 1496, 733, 734, 735, 736, 1489,
	740, 741, 742, 743, 0, 744, 745, 1384, 739, 728,
	0, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	755, 0, 756, 1478, 1479, 1480, 1481, 0, 768, 0,
	757, 759, 760, 761, 762, 1490, 763, 1491, 1409, 764,
	765, 766, 767, 758, 769, 770, 0, 1391, 771, 772,
	773, 774, 776, 778, 779, 780, 775, 777, 781, 1450,
	782, 0, 0, 783, 784, 785, 854, 1475, 1495, 0,
	787, 788, 786, 789, 790, 793, 791, 792, 857, 796,
	513, 797, 798, 799, 794, 795, 0, 0, 0, 0,
	800, 801, 858, 802, 803, 804, 1388, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1383, 0, 0, 0, 0, 0, 0, 1381,
	1382, 0, 0, 0, 0, 0, 0, 864, 0, 1415,
	0, 0, 2690, 1413, 1460, 1403, 1404, 1405, 1401, 1402,
	1414, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 346, 348, 347, 349, 350, 351, 352, 0,
	353, 354, 0, 0, 0, 0, 0, 1452, 1419, 0,
	0, 356, 0, 355, 0, 357, 358, 359, 874, 360,
	361, 362, 363, 364, 365, 366, 367, 806, 1466, 0,
	368, 1474, 369, 1473, 0, 1484, 370, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 1421, 1451, 1385, 380,
	1497, 1498, 813, 0, 381, 382, 383, 384, 1458, 0,
	1439, 0, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 0, 394, 395, 396, 393, 397, 398, 0, 399,
	0, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	408, 409, 876, 410, 411, 412, 1442, 1440, 1441, 1448,
	1444, 1443, 1447, 413, 414, 415, 416, 417, 1477, 418,
	420, 421, 1471, 422, 1470, 1390, 425, 427, 419, 423,
	0, 426, 424, 428, 429, 0, 430, 431, 432, 433,
	0, 0, 434, 1469, 436, 0, 437, 438, 440, 439,
	0, 441, 442, 443, 0, 444, 445, 1397, 446, 447,
	448, 450, 452, 449, 451, 453, 454, 455, 456, 457,
	1485, 1486, 458, 459, 1410, 340, 0, 0, 0, 0,
	0, 460, 461, 462, 1468, 0, 0, 0, 463, 0,
	465, 469, 466, 467, 468, 470, 0, 464, 471, 472,
	0, 877, 473, 474, 475, 1482, 1483, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 486, 1492,
	0, 1420, 487, 0, 488, 489, 490, 491, 492, 493,
	494, 1453, 1454, 1457, 595, 879, 495, 496, 497, 0,
	498, 499, 500, 501, 502, 503, 504, 0, 0, 0,
	505, 506, 507, 508, 0, 867, 341, 343, 878, 828,
	509, 596, 510, 1463, 1464, 0, 1424, 0, 511, 512,
	515, 880, 1455, 881, 514, 516, 517, 882, 518, 0,
	0, 0, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 528, 527, 0, 530, 1493, 529, 883, 531, 532,
	884, 0, 533, 534, 535, 536, 537, 538, 541, 1446,
	1445, 539, 540, 542, 543, 0, 544, 545, 547, 550,
	546, 548, 549, 551, 552, 565, 566, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 568,
	0, 567, 885, 569, 570, 571, 572, 573, 581, 583,
	584, 579, 580, 582, 585, 586, 588, 589, 576, 577,
	578, 886, 587, 574, 1387, 575, 344, 887, 590, 591,
	592, 593, 1411, 1456, 594, 1472, 597, 598, 0, 0,
	599, 0, 600, 0, 0, 602, 603, 604, 0, 0,
	605, 606, 836, 888, 607, 889, 1487, 608, 609, 1398,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	0, 620, 621, 838, 622, 623, 624, 839, 625, 626,
	627, 1488, 628, 841, 629, 630, 0, 631, 632, 633,
	0, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 1467, 644, 645, 647, 646, 648, 649, 0, 650,
	0, 651, 652, 653, 0, 0, 0, 0, 0, 654,
	655, 657, 0, 658, 659, 660, 661, 662, 656, 663,
	664, 665, 666, 667, 668, 669, 0, 671, 672, 670,
	673, 674, 890, 675, 676, 677, 678, 679, 1399, 680,
	0, 681, 682, 690, 691, 692, 683, 684, 686, 693,
	685, 694, 695, 696, 697, 699, 698, 0, 701, 702,
	700, 703, 704, 705, 706, 1449, 707, 844, 708, 687,
	688, 709, 710, 711, 891, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 1465, 0, 721, 0, 722, 723,
	724, 725, 726, 727, 729, 689, 730, 731, 732, 737,
	738, 1496, 733, 734, 735, 736, 1489, 740, 741, 742,
	743, 0, 744, 745, 1384, 739, 728, 0, 746, 747,
	748, 749, 750, 751, 752, 753, 754, 755, 0, 756,
	1478, 1479, 1480, 1481, 0, 768, 0, 757, 759, 760,
	761, 762, 1490, 763, 1491, 1409, 764, 765, 766, 767,
	758, 769, 770, 0, 1391, 771, 772, 773, 774, 776,
	778, 779, 780, 775, 777, 781, 1450, 782, 0, 0,
	783, 784, 785, 854, 1475, 1495, 0, 787, 788, 786,
	789, 790, 793, 791, 792, 857, 796, 513, 797, 798,
	799, 794, 795, 0, 0, 0, 0, 800, 801, 858,
	802, 803, 804, 1388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1383,
	0, 0, 0, 0, 0, 0, 1381, 1382, 0, 0,
	0, 0, 0, 0, 864, 0, 1415, 0, 0, 2649,
	1413, 1460, 1403, 1404, 1405, 1401, 1402, 1414, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 346,
	348, 347, 349, 350, 351, 352, 0, 353, 354, 0,
	0, 0, 0, 0, 1452, 1419, 0, 0, 356, 0,
	355, 0, 357, 358, 359, 874, 360, 361, 362, 363,
	364, 365, 366, 367, 806, 1466, 0, 368, 1474, 369,
	1473, 0, 1484, 370, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 1421, 1451, 1385, 380, 1497, 1498, 813,
	0, 381, 382, 383, 384, 1458, 0, 1439, 0, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 0, 394,
	395, 396, 393, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 408, 409, 876,
	410, 411, 412, 1442, 1440, 1441, 1448, 1444, 1443, 1447,
	413, 414, 415, 416, 417, 1477, 418, 420, 421, 1471,
	422, 1470, 1390, 425, 427, 419, 423, 0, 426, 424,
	428, 429, 0, 430, 431, 432, 433, 0, 0, 434,
	1469, 436, 0, 437, 438, 440, 439, 0, 441, 442,
	443, 0, 444, 445, 1397, 446, 447, 448, 450, 452,
	449, 451, 453, 454, 455, 456, 457, 1485, 1486, 458,
	459, 1410, 340, 0, 0, 0, 0, 0, 460, 461,
	462, 1468, 0, 0, 0, 463, 0, 465, 469, 466,
	467, 468, 470, 0, 464, 471, 472, 0, 877, 473,
	474, 475, 1482, 1483, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 0, 485, 486, 1492, 0, 1420, 487,
	0, 488, 489, 490, 491, 492, 493, 494, 1453, 1454,
	1457, 595, 879, 495, 496, 497, 0, 498, 499, 500,
	501, 502, 503, 504, 0, 0, 0, 505, 506, 507,
	508, 0, 867, 341, 343, 878, 828, 509, 596, 510,
	1463, 1464, 0, 1424, 0, 511, 512, 515, 880, 1455,
	881, 514, 516, 517, 882, 518, 0, 0, 0, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 528, 527,
	0, 530, 1493, 529, 883, 531, 532, 884, 0, 533,
	534, 535, 536, 537, 538, 541, 1446, 1445, 539, 540,
	542, 543, 0, 544, 545, 547, 550, 546, 548, 549,
	551, 552, 565, 566, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 568, 0, 567, 885,
	569, 570, 571, 572, 573, 581, 583, 584, 579, 580,
	582, 585, 586, 588, 589, 576, 577, 578, 886, 587,
	574, 1387, 575, 344, 887, 590, 591, 592, 593, 1411,
	1456, 594, 1472, 597, 598, 0, 0, 599, 0, 600,
	0, 0, 602, 603, 604, 0, 0, 605, 606, 836,
	888, 607, 889, 1487, 608, 609, 1398, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 0, 620, 621,
	838, 622, 623, 624, 839, 625, 626, 627, 1488, 628,
	841, 629, 630, 0, 631, 632, 633, 0, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 1467, 644,
	645, 647, 646, 648, 649, 0, 650, 0, 651, 652,
	653, 0, 0, 0, 0, 0, 654, 655, 657, 0,
	658, 659, 660, 661, 662, 656, 663, 664, 665, 666,
	667, 668, 669, 0, 671, 672, 670, 673, 674, 890,
	675, 676, 677, 678, 679, 1399, 680, 0, 681, 682,
	690, 691, 692, 683, 684, 686, 693, 685, 694, 695,
	696, 697, 699, 698, 0, 701, 702, 700, 703, 704,
	705, 706, 1449, 707, 844, 708, 687, 688, 709, 710,
	711, 891, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 1465, 0, 721, 0, 722, 723, 724, 725, 726,
	727, 729, 689, 730, 731, 732, 737, 738, 1496, 733,
	734, 735, 736, 1489, 740, 741, 742, 743, 0, 744,
	745, 1384, 739, 728, 0, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 0, 756, 1478, 1479, 1480,
	1481, 0, 768, 0, 757, 759, 760, 761, 762, 1490,
	763, 1491, 1409, 764, 765, 766, 767, 758, 769, 770,
	0, 1391, 771, 772, 773, 774, 776, 778, 779, 780,
	775, 777, 781, 1450, 782, 0, 0, 783, 784, 785,
	854, 1475, 1495, 0, 787, 788, 786, 789, 790, 793,
	791, 792, 857, 796, 513, 797, 798, 799, 794, 795,
	0, 0, 0, 0, 800, 801, 858, 802, 803, 804,
	1388, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1383, 0, 0, 0,
	0, 0, 0, 1381, 1382, 0, 0, 0, 0, 0,
	0, 864, 0, 1415, 0, 0, 2149, 1413, 1460, 1403,
	1404, 1405, 1401, 1402, 1414, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 346, 348, 347, 349,
	350, 351, 352, 0, 353, 354, 0, 0, 0, 0,
	0, 1452, 1419, 0, 0, 356, 0, 355, 0, 357,
	358, 359, 874, 360, 361, 362, 363, 364, 365, 366,
	367, 806, 1466, 0, 368, 1474, 369, 1473, 0, 1484,
	370, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	1421, 1451, 1385, 380, 1497, 1498, 813, 0, 381, 382,
	383, 384, 1458, 0, 1439, 0, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 0, 394, 395, 396, 393,
	397, 398, 0, 399, 0, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 408, 409, 876, 410, 411, 412,
	1442, 1440, 1441, 1448, 1444, 1443, 1447, 413, 414, 415,
	416, 417, 1477, 418, 420, 421, 1471, 422, 1470, 1390,
	425, 427, 419, 423, 0, 426, 424, 428, 429, 0,
	430, 431, 432, 433, 0, 0, 434, 1469, 436, 0,
	437, 438, 440, 439, 0, 441, 442, 443, 0, 444,
	445, 1397, 446, 447, 448, 450, 452, 449, 451, 453,
	454, 455, 456, 457, 1485, 1486, 458, 459, 1410, 340,
	0, 0, 0, 0, 0, 460, 461, 462, 1468, 0,
	0, 0, 463, 0, 465, 469, 466, 467, 468, 470,
	0, 464, 471, 472, 0, 877, 473, 474, 475, 1482,
	1483, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 486, 1492, 0, 1420, 487, 0, 488, 489,
	490, 491, 492, 493, 494, 1453, 1454, 1457, 595, 879,
	495, 496, 497, 0, 498, 499, 500, 501, 502, 503,
	504, 0, 0, 0, 505, 506, 507, 508, 0, 867,
	341, 343, 878, 828, 509, 596, 510, 1463, 1464, 0,
	1424, 0, 511, 512, 515, 880, 1455, 881, 514, 516,
	517, 882, 518, 0, 0, 0, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 528, 527, 0, 530, 1493,
	529, 883, 531, 532, 884, 0, 533, 534, 535, 536,
	537, 538, 541, 1446, 1445, 539, 540, 542, 543, 0,
	544, 545, 547, 550, 546, 548, 549, 551, 552, 565,
	566, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 568, 0, 567, 885, 569, 570, 571,
	572, 573, 581, 583, 584, 579, 580, 582, 585, 586,
	588, 589, 576, 577, 578, 886, 587, 574, 1387, 575,
	344, 887, 590, 591, 592, 593, 1411, 1456, 594, 1472,
	597, 598, 0, 0, 599, 0, 600, 0, 0, 602,
	603, 604, 0, 0, 605, 606, 836, 888, 607, 889,
	1487, 608, 609, 1398, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 0, 620, 621, 838, 622, 623,
	624, 839, 625, 626, 627, 1488, 628, 841, 629, 630,
	0, 631, 632, 633, 0, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 1467, 644, 645, 647, 646,
	648, 649, 0, 650, 0, 651, 652, 653, 0, 0,
	0, 0, 0, 654, 655, 657, 0, 658, 659, 660,
	661, 662, 656, 663, 664, 665, 666, 667, 668, 669,
	0, 671, 672, 670, 673, 674, 890, 675, 676, 677,
	678, 679, 1399, 680, 0, 681, 682, 690, 691, 692,
	683, 684, 686, 693, 685, 694, 695, 696, 697, 699,
	698, 0, 701, 702, 700, 703, 704, 705, 706, 1449,
	707, 844, 708, 687, 688, 709, 710, 711, 891, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 1465, 0,
	721, 0, 722, 723, 724, 725, 726, 727, 729, 689,
	730, 731, 732, 737, 738, 1496, 733, 734, 735, 736,
	1489, 740, 741, 742, 743, 0, 744, 745, 1384, 739,
	728, 0, 746, 747, 748, 749, 750, 751, 752, 753,
	754, 755, 0, 756, 1478, 1479, 1480, 1481, 0, 768,
	0, 757, 759, 760, 761, 762, 1490, 763, 1491, 1409,
	764, 765, 766, 767, 758, 769, 770, 0, 1391, 771,
	772, 773, 774, 776, 778, 779, 780, 775, 777, 781,
	1450, 782, 0, 0, 783, 784, 785, 854, 1475, 1495,
	0, 787, 788, 786, 789, 790, 793, 791, 792, 857,
	796, 513, 797, 798, 799, 794, 795, 0, 0, 0,
	0, 800, 801, 858, 802, 803, 804, 1388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1383, 0, 0, 0, 0, 0, 0,
	1381, 1382, 0, 0, 0, 0, 0, 0, 864, 0,
	1415, 0, 0, 2144, 1413, 1460, 1403, 1404, 1405, 1401,
	1402, 1414, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 346, 348, 347, 349, 350, 351, 352,
	0, 353, 354, 0, 0, 0, 0, 0, 1452, 1419,
	0, 0, 356, 0, 355, 0, 357, 358, 359, 874,
	360, 361, 362, 363, 364, 365, 366, 367, 806, 1466,
	0, 368, 1474, 369, 1473, 0, 1484, 370, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 1421, 1451, 1385,
	380, 1497, 1498, 813, 0, 381, 382, 383, 384, 1458,
	0, 1439, 0, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 0, 394, 395, 396, 393, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 408, 409, 876, 410, 411, 412, 1442, 1440, 1441,
	1448, 1444, 1443, 1447, 413, 414, 415, 416, 417, 1477,
	418, 420, 421, 1471, 422, 1470, 1390, 425, 427, 419,
	423, 0, 426, 424, 428, 429, 0, 430, 431, 432,
	433, 0, 0, 434, 1469, 436, 0, 437, 438, 440,
	439, 0, 441, 442, 443, 0, 444, 445, 1397, 446,
	447, 448, 450, 452, 449, 451, 453, 454, 455, 456,
	457, 1485, 1486, 458, 459, 1410, 340, 0, 0, 0,
	0, 0, 460, 461, 462, 1468, 0, 0, 0, 463,
	0, 465, 469, 466, 467, 468, 470, 0, 464, 471,
	472, 0, 877, 473, 474, 475, 1482, 1483, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 486,
	1492, 0, 1420, 487, 0, 488, 489, 490, 491, 492,
	493, 494, 1453, 1454, 1457, 595, 879, 495, 496, 497,
	0, 498, 499, 500, 501, 502, 503, 504, 0, 0,
	0, 505, 506, 507, 508, 0, 867, 341, 343, 878,
	828, 509, 596, 510, 1463, 1464, 0, 1424, 0, 511,
	512, 515, 880, 1455, 881, 514, 516, 517, 882, 518,
	0, 0, 0, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 528, 527, 0, 530, 1493, 529, 883, 531,
	532, 884, 0, 533, 534, 535, 536, 537, 538, 541,
	1446, 1445, 539, 540, 542, 543, 0, 544, 545, 547,
	550, 546, 548, 549, 551, 552, 565, 566, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	568, 0, 567, 885, 569, 570, 571, 572, 573, 581,
	583, 584, 579, 580, 582, 585, 586, 588, 589, 576,
	577, 578, 886, 587, 574, 1387, 575, 344, 887, 590,
	591, 592, 593, 1411, 1456, 594, 1472, 597, 598, 0,
	0, 599, 0, 600, 0, 0, 602, 603, 604, 0,
	0, 605, 606, 836, 888, 607, 889, 1487, 608, 609,
	1398, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 0, 620, 621, 838, 622, 623, 624, 839, 625,
	626, 627, 1488, 628, 841, 629, 630, 0, 631, 632,
	633, 0, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 1467, 644, 645, 647, 646, 648, 649, 0,
	650, 0, 651, 652, 653, 0, 0, 0, 0, 0,
	654, 655, 657, 0, 658, 659, 660, 661, 662, 656,
	663, 664, 665, 666, 667, 668, 669, 0, 671, 672,
	670, 673, 674, 890, 675, 676, 677, 678, 679, 1399,
	680, 0, 681, 682, 690, 691, 692, 683, 684, 686,
	693, 685, 694, 695, 696, 697, 699, 698, 0, 701,
	702, 700, 703, 704, 705, 706, 1449, 707, 844, 708,
	687, 688, 709, 710, 711, 891, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 1465, 0, 721, 0, 722,
	723, 724, 725, 726, 727, 729, 689, 730, 731, 732,
	737, 738, 1496, 733, 734, 735, 736, 1489, 740, 741,
	742, 743, 0, 744, 745, 1384, 739, 728, 0, 746,
	747, 748, 749, 750, 751, 752, 753, 754, 755, 0,
	756, 1478, 1479, 1480, 1481, 0, 768, 0, 757, 759,
	760, 761, 762, 1490, 763, 1491, 1409, 764, 765, 766,
	767, 758, 769, 770, 0, 1391, 771, 772, 773, 774,
	776, 778, 779, 780, 775, 777, 781, 1450, 782, 0,
	0, 783, 784, 785, 854, 1475, 1495, 0, 787, 788,
	786, 789, 790, 793, 791, 792, 857, 796, 513, 797,
	798, 799, 794, 795, 0, 0, 0, 0, 800, 801,
	858, 802, 803, 804, 1388, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1383, 0, 0, 0, 0, 0, 0, 1381, 1382, 0,
	0, 0, 0, 0, 0, 864, 0, 1415, 0, 0,
	2130, 1413, 1460, 1403, 1404, 1405, 1401, 1402, 1414, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	346, 348, 347, 349, 350, 351, 352, 0, 353, 354,
	0, 0, 0, 0, 0, 1452, 1419, 0, 0, 356,
	0, 355, 0, 357, 358, 359, 874, 360, 361, 362,
	363, 364, 365, 366, 367, 806, 1466, 0, 368, 1474,
	369, 1473, 0, 1484, 370, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 1421, 1451, 1385, 380, 1497, 1498,
	813, 0, 381, 382, 383, 384, 1458, 0, 1439, 0,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 0,
	394, 395, 396, 393, 397, 398, 0, 399, 0, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 408, 409,
	876, 410, 411, 412, 1442, 1440, 1441, 1448, 1444, 1443,
	1447, 413, 414, 415, 416, 417, 1477, 418, 420, 421,
	1471, 422, 1470, 1390, 425, 427, 419, 423, 0, 426,
	424, 428, 429, 0, 430, 431, 432, 433, 0, 0,
	434, 1469, 436, 0, 437, 438, 440, 439, 0, 441,
	442, 443, 0, 444, 445, 1397, 446, 447, 448, 450,
	452, 449, 451, 453, 454, 455, 456, 457, 1485, 1486,
	458, 459, 1410, 340, 0, 0, 0, 0, 0, 460,
	461, 462, 1468, 0, 0, 0, 463, 0, 465, 469,
	466, 467, 468, 470, 0, 464, 471, 472, 0, 877,
	473, 474, 475, 1482, 1483, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 486, 1492, 0, 1420,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 1453,
	1454, 1457, 595, 879, 495, 496, 497, 0, 498, 499,
	500, 501, 502, 503, 504, 0, 0, 0, 505, 506,
	507, 508, 0, 867, 341, 343, 878, 828, 509, 596,
	510, 1463, 1464, 0, 1424, 0, 511, 512, 515, 880,
	1455, 881, 514, 516, 517, 882, 518, 0, 0, 0,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 528,
	527, 0, 530, 1493, 529, 883, 531, 532, 884, 0,
	533, 534, 535, 536, 537, 538, 541, 1446, 1445, 539,
	540, 542, 543, 0, 544, 545, 547, 550, 546, 548,
	549, 551, 552, 565, 566, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 568, 0, 567,
	885, 569, 570, 571, 572, 573, 581, 583, 584, 579,
	580, 582, 585, 586, 588, 589, 576, 577, 578, 886,
	587, 574, 1387, 575, 344, 887, 590, 591, 592, 593,
	1411, 1456, 594, 1472, 597, 598, 0, 0, 599, 0,
	600, 0, 0, 602, 603, 604, 0, 0, 605, 606,
	836, 888, 607, 889, 1487, 608, 609, 1398, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 0, 620,
	621, 838, 622, 623, 624, 839, 625, 626, 627, 1488,
	628, 841, 629, 630, 0, 631, 632, 633, 0, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 1467,
	644, 645, 647, 646, 648, 649, 0, 650, 0, 651,
	652, 653, 0, 0, 0, 0, 0, 654, 655, 657,
	0, 658, 659, 660, 661, 662, 656, 663, 664, 665,
	666, 667, 668, 669, 0, 671, 672, 670, 673, 674,
	890, 675, 676, 677, 678, 679, 1399, 680, 0, 681,
	682, 690, 691, 692, 683, 684, 686, 693, 685, 694,
	695, 696, 697, 699, 698, 0, 701, 702, 700, 703,
	704, 705, 706, 1449, 707, 844, 708, 687, 688, 709,
	710, 711, 891, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 1465, 0, 721, 0, 722, 723, 724, 725,
	726, 727, 729, 689, 730, 731, 732, 737, 738, 1496,
	733, 734, 735, 736, 1489, 740, 741, 742, 743, 0,
	744, 745, 1384, 739, 728, 0, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 0, 756, 1478, 1479,
	1480, 1481, 0, 768, 0, 757, 759, 760, 761, 762,
	1490, 763, 1491, 1409, 764, 765, 766, 767, 758, 769,
	770, 0, 1391, 771, 772, 773, 774, 776, 778, 779,
	780, 775, 777, 781, 1450, 782, 0, 0, 783, 784,
	785, 854, 1475, 1495, 0, 787, 788, 786, 789, 790,
	793, 791, 792, 857, 796, 513, 797, 798, 799, 794,
	795, 0, 0, 0, 0, 800, 801, 858, 802, 803,
	804, 1388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1383, 0, 0,
	0, 0, 0, 0, 1381, 1382, 0, 0, 0, 0,
	0, 0, 864, 0, 1415, 0, 0, 2125, 1413, 1460,
	1403, 1404, 1405, 1401, 1402, 1414, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 346, 348, 347,
	349, 350, 351, 352, 0, 353, 354, 0, 0, 0,
	0, 0, 1452, 1419, 0, 0, 356, 0, 355, 0,
	357, 358, 359, 874, 360, 361, 362, 363, 364, 365,
	366, 367, 806, 1466, 0, 368, 1474, 369, 1473, 0,
	1484, 370, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 1421, 1451, 1385, 380, 1497, 1498, 813, 0, 381,
	382, 383, 384, 1458, 0, 1439, 0, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 0, 394, 395, 396,
	393, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 408, 409, 876, 410, 411,
	412, 1442, 1440, 1441, 1448, 1444, 1443, 1447, 413, 414,
	415, 416, 417, 1477, 418, 420, 421, 1471, 422, 1470,
	1390, 425, 427, 419, 423, 0, 426, 424, 428, 429,
	0, 430, 431, 432, 433, 0, 0, 434, 1469, 436,
	0, 437, 438, 440, 439, 0, 441, 442, 443, 0,
	444, 445, 1397, 446, 447, 448, 450, 452, 449, 451,
	453, 454, 455, 456, 457, 1485, 1486, 458, 459, 1410,
	340, 0, 0, 0, 0, 0, 460, 461, 462, 1468,
	0, 0, 0, 463, 0, 465, 469, 466, 467, 468,
	470, 0, 464, 471, 472, 0, 877, 473, 474, 475,
	1482, 1483, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 0, 485, 486, 1492, 0, 1420, 487, 0, 488,
	489, 490, 491, 492, 493, 494, 1453, 1454, 1457, 595,
	879, 495, 496, 497, 0, 498, 499, 500, 501, 502,
	503, 504, 0, 0, 0, 505, 506, 507, 508, 0,
	867, 341, 343, 878, 828, 509, 596, 510, 1463, 1464,
	0, 1424, 0, 511, 512, 515, 880, 1455, 881, 514,
	516, 517, 882, 518, 0, 0, 0, 519, 520, 521,
	522, 523, 524, 525, 0, 526, 528, 527, 0, 530,
	1493, 529, 883, 531, 532, 884, 0, 533, 534, 535,
	536, 537, 538, 541, 1446, 1445, 539, 540, 542, 543,
	0, 544, 545, 547, 550, 546, 548, 549, 551, 552,
	565, 566, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 568, 0, 567, 885, 569, 570,
	571, 572, 573, 581, 583, 584, 579, 580, 582, 585,
	586, 588, 589, 576, 577, 578, 886, 587, 574, 1387,
	575, 344, 887, 590, 591, 592, 593, 1411, 1456, 594,
	1472, 597, 598, 0, 0, 599, 0, 600, 0, 0,
	602, 603, 604, 0, 0, 605, 606, 836, 888, 607,
	889, 1487, 608, 609, 1398, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 0, 620, 621, 838, 622,
	623, 624, 839, 625, 626, 627, 1488, 628, 841, 629,
	630, 0, 631, 632, 633, 0, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 1467, 644, 645, 647,
	646, 648, 649, 0, 650, 0, 651, 652, 653, 0,
	0, 0, 0, 0, 654, 655, 657, 0, 658, 659,
	660, 661, 662, 656, 663, 664, 665, 666, 667, 668,
	669, 0, 671, 672, 670, 673, 674, 890, 675, 676,
	677, 678, 679, 1399, 680, 0, 681, 682, 690, 691,
	692, 683, 684, 686, 693, 685, 694, 695, 696, 697,
	699, 698, 0, 701, 702, 700, 703, 704, 705, 706,
	1449, 707, 844, 708, 687, 688, 709, 710, 711, 891,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 1465,
	0, 721, 0, 722, 723, 724, 725, 726, 727, 729,
	689, 730, 731, 732, 737, 738, 1496, 733, 734, 735,
	736, 1489, 740, 741, 742, 743, 0, 744, 745, 1384,
	739, 728, 0, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 755, 0, 756, 1478, 1479, 1480, 1481, 0,
	768, 0, 757, 759, 760, 761, 762, 1490, 763, 1491,
	1409, 764, 765, 766, 767, 758, 769, 770, 0, 1391,
	771, 772, 773, 774, 776, 778, 779, 780, 775, 777,
	781, 1450, 782, 0, 0, 783, 784, 785, 854, 1475,
	1495, 0, 787, 788, 786, 789, 790, 793, 791, 792,
	857, 796, 513, 797, 798, 799, 794, 795, 0, 0,
	0, 0, 800, 801, 858, 802, 803, 804, 1388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1383, 0, 0, 0, 0, 0,
	0, 1381, 1382, 0, 0, 0, 0, 0, 0, 864,
	0, 1415, 0, 0, 2026, 1413, 1460, 1403, 1404, 1405,
	1401, 1402, 1414, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 346, 348, 347, 349, 350, 351,
	352, 0, 353, 354, 0, 0, 0, 0, 0, 1452,
	1419, 0, 0, 356, 0, 355, 0, 357, 358, 359,
	874, 360, 361, 362, 363, 364, 365, 366, 367, 806,
	1466, 0, 368, 1474, 369, 1473, 0, 1484, 370, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 1421, 1451,
	1385, 380, 1497, 1498, 813, 0, 381, 382, 383, 384,
	1458, 0, 1439, 0, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 0, 394, 395, 396, 393, 397, 398,
	0, 399, 0, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 408, 409, 876, 410, 411, 412, 1442, 1440,
	1441, 1448, 1444, 1443, 1447, 413, 414, 415, 416, 417,
	1477, 418, 420, 421, 1471, 422, 1470, 1390, 425, 427,
	419, 423, 0, 426, 424, 428, 429, 0, 430, 431,
	432, 433, 0, 0, 434, 1469, 436, 0, 437, 438,
	440, 439, 0, 441, 442, 443, 0, 444, 445, 1397,
	446, 447, 448, 450, 452, 449, 451, 453, 454, 455,
	456, 457, 1485, 1486, 458, 459, 1410, 340, 0, 0,
	0, 0, 0, 460, 461, 462, 1468, 0, 0, 0,
	463, 0, 465, 469, 466, 467, 468, 470, 0, 464,
	471, 472, 0, 877, 473, 474, 475, 1482, 1483, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	486, 1492, 0, 1420, 487, 0, 488, 489, 490, 491,
	492, 493, 494, 2025, 1454, 1457, 595, 879, 495, 496,
	497, 0, 498, 499, 500, 501, 502, 503, 504, 0,
	0, 0, 505, 506, 507, 508, 0, 867, 341, 343,
	878, 828, 509, 596, 510, 1463, 1464, 0, 1424, 0,
	511, 512, 515, 880, 1455, 881, 514, 516, 517, 882,
	518, 0, 0, 0, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 528, 527, 0, 530, 1493, 529, 883,
	531, 532, 884, 0, 533, 534, 535, 536, 537, 538,
	541, 1446, 1445, 539, 540, 542, 543, 0, 544, 545,
	547, 550, 546, 548, 549, 551, 552, 565, 566, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 568, 0, 567, 885, 569, 570, 571, 572, 573,
	581, 583, 584, 579, 580, 582, 585, 586, 588, 589,
	576, 577, 578, 886, 587, 574, 1387, 575, 344, 887,
	590, 591, 592, 593, 1411, 1456, 594, 1472, 597, 598,
	0, 0, 599, 0, 600, 0, 0, 602, 603, 604,
	0, 0, 605, 606, 836, 888, 607, 889, 1487, 608,
	609, 1398, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 0, 620, 621, 838, 622, 623, 624, 839,
	625, 626, 627, 1488, 628, 841, 629, 630, 0, 631,
	632, 633, 0, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 1467, 644, 645, 647, 646, 648, 649,
	0, 650, 0, 651, 652, 653, 0, 0, 0, 0,
	0, 654, 655, 657, 0, 658, 659, 660, 661, 662,
	656, 663, 664, 665, 666, 667, 668, 669, 0, 671,
	672, 670, 673, 674, 890, 675, 676, 677, 678, 679,
	1399, 680, 0, 681, 682, 690, 691, 692, 683, 684,
	686, 693, 685, 694, 695, 696, 697, 699, 698, 0,
	701, 702, 700, 703, 704, 705, 706, 1449, 707, 844,
	708, 687, 688, 709, 710, 711, 891, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 1465, 0, 721, 0,
	722, 723, 724, 725, 726, 727, 729, 689, 730, 731,
	732, 737, 738, 1496, 733, 734, 735, 736, 1489, 740,
	741, 742, 743, 0, 744, 745, 1384, 739, 728, 0,
	746, 747, 748, 749, 750, 751, 752, 753, 754, 755,
	0, 756, 1478, 1479, 1480, 1481, 0, 768, 0, 757,
	759, 760, 761, 762, 1490, 763, 1491, 1409, 764, 765,
	766, 767, 758, 769, 770, 0, 1391, 771, 772, 773,
	774, 776, 778, 779, 780, 775, 777, 781, 1450, 782,
	0, 0, 783, 784, 785, 854, 1475, 1495, 0, 787,
	788, 786, 789, 790, 793, 791, 792, 857, 796, 513,
	797, 798, 799, 794, 795, 0, 0, 0, 0, 800,
	801, 858, 802, 803, 804, 1388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1383, 0, 0, 0, 0, 0, 0, 1381, 1382,
	0, 0, 0, 0, 0, 0, 864, 0, 1415, 0,
	0, 2020, 1413, 1460, 1403, 1404, 1405, 1401, 1402, 1414,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 346, 348, 347, 349, 350, 351, 352, 0, 353,
	354, 0, 0, 0, 0, 0, 1452, 1419, 0, 0,
	356, 0, 355, 0, 357, 358, 359, 874, 360, 361,
	362, 363, 364, 365, 366, 367, 806, 1466, 0, 368,
	1474, 369, 1473, 0, 1484, 370, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 1421, 1451, 1385, 380, 1497,
	1498, 813, 0, 381, 382, 383, 384, 1458, 0, 1439,
	0, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	0, 394, 395, 396, 393, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 408,
	409, 876, 410, 411, 412, 1442, 1440, 1441, 1448, 1444,
	1443, 1447, 413, 414, 415, 416, 417, 1477, 418, 420,
	421, 1471, 422, 1470, 1390, 425, 427, 419, 423, 0,
	426, 424, 428, 429, 0, 430, 431, 432, 433, 0,
	0, 434, 1469, 436, 0, 437, 438, 440, 439, 0,
	441, 442, 443, 0, 444, 445, 1397, 446, 447, 448,
	450, 452, 449, 451, 453, 454, 455, 456, 457, 1485,
	1486, 458, 459, 1410, 340, 0, 0, 0, 0, 0,
	460, 461, 462, 1468, 0, 0, 0, 463, 0, 465,
	469, 466, 467, 468, 470, 0, 464, 471, 472, 0,
	877, 473, 474, 475, 1482, 1483, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 0, 485, 486, 1492, 0,
	1420, 487, 0, 488, 489, 490, 491, 492, 493, 494,
	2019, 1454, 1457, 595, 879, 495, 496, 497, 0, 498,
	499, 500, 501, 502, 503, 504, 0, 0, 0, 505,
	506, 507, 508, 0, 867, 341, 343, 878, 828, 509,
	596, 510, 1463, 1464, 0, 1424, 0, 511, 512, 515,
	880, 1455, 881, 514, 516, 517, 882, 518, 0, 0,
	0, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	528, 527, 0, 530, 1493, 529, 883, 531, 532, 884,
	0, 533, 534, 535, 536, 537, 538, 541, 1446, 1445,
	539, 540, 542, 543, 0, 544, 545, 547, 550, 546,
	548, 549, 551, 552, 565, 566, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 568, 0,
	567, 885, 569, 570, 571, 572, 573, 581, 583, 584,
	579, 580, 582, 585, 586, 588, 589, 576, 577, 578,
	886, 587, 574, 1387, 575, 344, 887, 590, 591, 592,
	593, 1411, 1456, 594, 1472, 597, 598, 0, 0, 599,
	0, 600, 0, 0, 602, 603, 604, 0, 0, 605,
	606, 836, 888, 607, 889, 1487, 608, 609, 1398, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 0,
	620, 621, 838, 622, 623, 624, 839, 625, 626, 627,
	1488, 628, 841, 629, 630, 0, 631, 632, 633, 0,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	1467, 644, 645, 647, 646, 648, 649, 0, 650, 0,
	651, 652, 653, 0, 0, 0, 0, 0, 654, 655,
	657, 0, 658, 659, 660, 661, 662, 656, 663, 664,
	665, 666, 667, 668, 669, 0, 671, 672, 670, 673,
	674, 890, 675, 676, 677, 678, 679, 1399, 680, 0,
	681, 682, 690, 691, 692, 683, 684, 686, 693, 685,
	694, 695, 696, 697, 699, 698, 0, 701, 702, 700,
	703, 704, 705, 706, 1449, 707, 844, 708, 687, 688,
	709, 710, 711, 891, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 1465, 0, 721, 0, 722, 723, 724,
	725, 726, 727, 729, 689, 730, 731, 732, 737, 738,
	1496, 733, 734, 735, 736, 1489, 740, 741, 742, 743,
	0, 744, 745, 1384, 739, 728, 0, 746, 747, 748,
	749, 750, 751, 752, 753, 754, 755, 0, 756, 1478,
	1479, 1480, 1481, 0, 768, 0, 757, 759, 760, 761,
	762, 1490, 763, 1491, 1409, 764, 765, 766, 767, 758,
	769, 770, 0, 1391, 771, 772, 773, 774, 776, 778,
	779, 780, 775, 777, 781, 1450, 782, 0, 0, 783,
	784, 785, 854, 1475, 1495, 0, 787, 788, 786, 789,
	790, 793, 791, 792, 857, 796, 513, 797, 798, 799,
	794, 795, 0, 0, 0, 0, 800, 801, 858, 802,
	803, 804, 1388, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1383, 0,
	0, 0, 0, 0, 0, 1381, 1382, 0, 0, 0,
	0, 0, 0, 864, 0, 1415, 0, 0, 2014, 1413,
	1460, 1403, 1404, 1405, 1401, 1402, 1414, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 346, 348,
	347, 349, 350, 351, 352, 0, 353, 354, 0, 0,
	0, 0, 0, 1452, 1419, 0, 0, 356, 0, 355,
	0, 357, 358, 359, 874, 360, 361, 362, 363, 364,
	365, 366, 367, 806, 1466, 0, 368, 1474, 369, 1473,
	0, 1484, 370, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 1421, 1451, 1385, 380, 1497, 1498, 813, 0,
	381, 382, 383, 384, 1458, 0, 1439, 0, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 0, 394, 395,
	396, 393, 397, 398, 0, 399, 0, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 408, 409, 876, 410,
	411, 412, 1442, 1440, 1441, 1448, 1444, 1443, 1447, 413,
	414, 415, 416, 417, 1477, 418, 420, 421, 1471, 422,
	1470, 1390, 425, 427, 419, 423, 0, 426, 424, 428,
	429, 0, 430, 431, 432, 433, 0, 0, 434, 1469,
	436, 0, 437, 438, 440, 439, 0, 441, 442, 443,
	0, 444, 445, 1397, 446, 447, 448, 450, 452, 449,
	451, 453, 454, 455, 456, 457, 1485, 1486, 458, 459,
	1410, 340, 0, 0, 0, 0, 0, 460, 461, 462,
	1468, 0, 0, 0, 463, 0, 465, 469, 466, 467,
	468, 470, 0, 464, 471, 472, 0, 877, 473, 474,
	475, 1482, 1483, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 486, 1492, 0, 1420, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 1453, 1454, 1457,
	595, 879, 495, 496, 497, 0, 498, 499, 500, 501,
	502, 503, 504, 0, 0, 0, 505, 506, 507, 508,
	0, 867, 341, 343, 878, 828, 509, 596, 510, 1463,
	1464, 0, 1424, 0, 511, 512, 515, 880, 1455, 881,
	514, 516, 517, 882, 518, 0, 0, 0, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 528, 527, 0,
	530, 1493, 529, 883, 531, 532, 884, 0, 533, 534,
	535, 536, 537, 538, 541, 1446, 1445, 539, 540, 542,
	543, 0, 544, 545, 547, 550, 546, 548, 549, 551,
	552, 565, 566, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 568, 0, 567, 885, 569,
	570, 571, 572, 573, 581, 583, 584, 579, 580, 582,
	585, 586, 588, 589, 576, 577, 578, 886, 587, 574,
	1387, 575, 344, 887, 590, 591, 592, 593, 1411, 1456,
	594, 1472, 597, 598, 0, 0, 599, 0, 600, 0,
	0, 602, 603, 604, 0, 0, 605, 606, 836, 888,
	607, 889, 1487, 608, 609, 1398, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 0, 620, 621, 838,
	622, 623, 624, 839, 625, 626, 627, 1488, 628, 841,
	629, 630, 0, 631, 632, 633, 0, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 1467, 644, 645,
	647, 646, 648, 649, 0, 650, 0, 651, 652, 653,
	0, 0, 0, 0, 0, 654, 655, 657, 0, 658,
	659, 660, 661, 662, 656, 663, 664, 665, 666, 667,
	668, 669, 0, 671, 672, 670, 673, 674, 890, 675,
	676, 677, 678, 679, 1399, 680, 0, 681, 682, 690,
	691, 692, 683, 684, 686, 693, 685, 694, 695, 696,
	697, 699, 698, 0, 701, 702, 700, 703, 704, 705,
	706, 1449, 707, 844, 708, 687, 688, 709, 710, 711,
	891, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	1465, 0, 721, 0, 722, 723, 724, 725, 726, 727,
	729, 689, 730, 731, 732, 737, 738, 1496, 733, 734,
	735, 736, 1489, 740, 741, 742, 743, 0, 744, 745,
	1384, 739, 728, 0, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 0, 756, 1478, 1479, 1480, 1481,
	0, 768, 0, 757, 759, 760, 761, 762, 1490, 763,
	1491, 1409, 764, 765, 766, 767, 758, 769, 770, 0,
	1391, 771, 772, 773, 774, 776, 778, 779, 780, 775,
	777, 781, 1450, 782, 0, 0, 783, 784, 785, 854,
	1475, 1495, 0, 787, 788, 786, 789, 790, 793, 791,
	792, 857, 796, 513, 797, 798, 799, 794, 795, 0,
	0, 0, 0, 800, 801, 858, 802, 803, 804, 1388,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1383, 0, 0, 0, 0,
	0, 0, 1381, 1382, 0, 0, 0, 0, 0, 0,
	864, 0, 1415, 0, 0, 1987, 1413, 1460, 1403, 1404,
	1405, 1401, 1402, 1414, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 346, 348, 347, 349, 350,
	351, 352, 0, 353, 354, 0, 0, 0, 0, 0,
	1452, 1419, 0, 0, 356, 0, 355, 0, 357, 358,
	359, 874, 360, 361, 362, 363, 364, 365, 366, 367,
	806, 1466, 0, 368, 1474, 369, 1473, 0, 1484, 370,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 1421,
	1451, 1385, 380, 1497, 1498, 813, 0, 381, 382, 383,
	384, 1458, 0, 1439, 0, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 0, 394, 395, 396, 393, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 408, 409, 876, 410, 411, 412, 1442,
	1440, 1441, 1448, 1444, 1443, 1447, 413, 414, 415, 416,
	417, 1477, 418, 420, 421, 1471, 422, 1470, 1390, 425,
	427, 419, 423, 0, 426, 424, 428, 429, 0, 430,
	431, 432, 433, 0, 0, 434, 1469, 436, 0, 437,
	438, 440, 439, 0, 441, 442, 443, 0, 444, 445,
	1397, 446, 447, 448, 450, 452, 449, 451, 453, 454,
	455, 456, 457, 1485, 1486, 458, 459, 1410, 340, 0,
	0, 0, 0, 0, 460, 461, 462, 1468, 0, 0,
	0, 463, 0, 465, 469, 466, 467, 468, 470, 0,
	464, 471, 472, 0, 877, 473, 474, 475, 1482, 1483,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 0,
	485, 486, 1492, 0, 1420, 487, 0, 488, 489, 490,
	491, 492, 493, 494, 1453, 1454, 1457, 595, 879, 495,
	496, 497, 0, 498, 499, 500, 501, 502, 503, 504,
	0, 0, 0, 505, 506, 507, 508, 0, 867, 341,
	343, 878, 828, 509, 596, 510, 1463, 1464, 0, 1424,
	0, 511, 512, 515, 880, 1455, 881, 514, 516, 517,
	882, 518, 0, 0, 0, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 528, 527, 0, 530, 1493, 529,
	883, 531, 532, 884, 0, 533, 534, 535, 536, 537,
	538, 541, 1446, 1445, 539, 540, 542, 543, 0, 544,
	545, 547, 550, 546, 548, 549, 551, 552, 565, 566,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 568, 0, 567, 885, 569, 570, 571, 572,
	573, 581, 583, 584, 579, 580, 582, 585, 586, 588,
	589, 576, 577, 578, 886, 587, 574, 1387, 575, 344,
	887, 590, 591, 592, 593, 1411, 1456, 594, 1472, 597,
	598, 0, 0, 599, 0, 600, 0, 0, 602, 603,
	604, 0, 0, 605, 606, 836, 888, 607, 889, 1487,
	608, 609, 1398, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 620, 621, 838, 622, 623, 624,
	839, 625, 626, 627, 1488, 628, 841, 629, 630, 0,
	631, 632, 633, 0, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 1467, 644, 645, 647, 646, 648,
	649, 0, 650, 0, 651, 652, 653, 0, 0, 0,
	0, 0, 654, 655, 657, 0, 658, 659, 660, 661,
	662, 656, 663, 664, 665, 666, 667, 668, 669, 0,
	671, 672, 670, 673, 674, 890, 675, 676, 677, 678,
	679, 1399, 680, 0, 681, 682, 690, 691, 692, 683,
	684, 686, 693, 685, 694, 695, 696, 697, 699, 698,
	0, 701, 702, 700, 703, 704, 705, 706, 1449, 707,
	844, 708, 687, 688, 709, 710, 711, 891, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 1465, 0, 721,
	0, 722, 723, 724, 725, 726, 727, 729, 689, 730,
	731, 732, 737, 738, 1496, 733, 734, 735, 736, 1489,
	740, 741, 742, 743, 0, 744, 745, 1384, 739, 728,
	0, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	755, 0, 756, 1478, 1479, 1480, 1481, 0, 768, 0,
	757, 759, 760, 761, 762, 1490, 763, 1491, 1409, 764,
	765, 766, 767, 758, 769, 770, 0, 1391, 771, 772,
	773, 774, 776, 778, 779, 780, 775, 777, 781, 1450,
	782, 0, 0, 783, 784, 785, 854, 1475, 1495, 0,
	787, 788, 786, 789, 790, 793, 791, 792, 857, 796,
	513, 797, 798, 799, 794, 795, 0, 0, 0, 0,
	800, 801, 858, 802, 803, 804, 1388, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1383, 0, 0, 0, 0, 0, 0, 1381,
	1382, 0, 0, 0, 0, 0, 0, 864, 0, 1415,
	0, 0, 1967, 1413, 1460, 1403, 1404, 1405, 1401, 1402,
	1414, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 346, 348, 347, 349, 350, 351, 352, 0,
	353, 354, 0, 0, 0, 0, 0, 1452, 1419, 0,
	0, 356, 0, 355, 0, 357, 358, 359, 874, 360,
	361, 362, 363, 364, 365, 366, 367, 806, 1466, 0,
	368, 1474, 369, 1473, 0, 1484, 370, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 1421, 1451, 1385, 380,
	1497, 1498, 813, 0, 381, 382, 383, 384, 1458, 0,
	1439, 0, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 0, 394, 395, 396, 393, 397, 398, 0, 399,
	0, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	408, 409, 876, 410, 411, 412, 1442, 1440, 1441, 1448,
	1444, 1443, 1447, 413, 414, 415, 416, 417, 1477, 418,
	420, 421, 1471, 422, 1470, 1390, 425, 427, 419, 423,
	0, 426, 424, 428, 429, 0, 430, 431, 432, 433,
	0, 0, 434, 1469, 436, 0, 437, 438, 440, 439,
	0, 441, 442, 443, 0, 444, 445, 1397, 446, 447,
	448, 450, 452, 449, 1971, 453, 454, 455, 456, 457,
	1485, 1486, 458, 459, 1410, 340, 0, 0, 0, 0,
	0, 460, 461, 462, 1468, 0, 0, 0, 463, 0,
	465, 469, 466, 467, 468, 470, 0, 464, 471, 472,
	0, 877, 473, 474, 475, 1482, 1483, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 486, 1492,
	0, 1420, 487, 0, 488, 489, 490, 491, 492, 493,
	494, 1453, 1454, 1457, 595, 879, 495, 496, 497, 0,
	498, 499, 500, 501, 502, 503, 504, 0, 0, 0,
	505, 506, 507, 508, 0, 867, 341, 343, 878, 828,
	509, 596, 510, 1463, 1464, 0, 1424, 0, 511, 512,
	515, 880, 1455, 881, 514, 516, 517, 882, 518, 0,
	0, 0, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 528, 527, 0, 530, 1493, 529, 883, 531, 532,
	884, 0, 533, 534, 535, 536, 537, 538, 541, 1446,
	1445, 539, 540, 542, 543, 0, 544, 545, 547, 550,
	546, 548, 549, 551, 552, 565, 566, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 568,
	0, 567, 885, 569, 570, 571, 572, 573, 581, 583,
	584, 579, 580, 582, 585, 586, 588, 589, 576, 577,
	578, 886, 587, 574, 1387, 575, 344, 887, 590, 591,
	592, 593, 1411, 1456, 594, 1472, 597, 598, 0, 0,
	599, 0, 600, 0, 0, 602, 603, 604, 0, 0,
	605, 606, 836, 888, 607, 889, 1487, 608, 609, 1398,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	0, 620, 621, 838, 622, 623, 624, 839, 625, 626,
	627, 1488, 628, 841, 629, 630, 0, 631, 632, 633,
	0, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 1467, 644, 645, 647, 646, 648, 649, 0, 650,
	0, 651, 652, 653, 0, 0, 0, 0, 0, 654,
	655, 1972, 0, 658, 659, 660, 661, 662, 656, 663,
	664, 665, 666, 667, 668, 669, 0, 671, 672, 670,
	673, 674, 890, 675, 676, 677, 678, 679, 1399, 680,
	0, 681, 682, 690, 691, 692, 683, 684, 686, 693,
	685, 694, 695, 696, 697, 699, 698, 0, 701, 702,
	700, 703, 704, 705, 706, 1449, 707, 844, 708, 687,
	688, 709, 710, 711, 891, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 1465, 0, 721, 0, 722, 723,
	724, 725, 726, 727, 729, 689, 730, 731, 732, 737,
	738, 1496, 733, 734, 735, 736, 1489, 740, 741, 742,
	743, 0, 744, 745, 1384, 739, 728, 0, 746, 747,
	748, 749, 750, 751, 752, 753, 1970, 755, 0, 756,
	1478, 1479, 1480, 1481, 0, 768, 0, 757, 759, 760,
	761, 762, 1490, 763, 1491, 1409, 764, 765, 766, 767,
	758, 769, 770, 0, 1391, 771, 772, 773, 774, 776,
	778, 779, 780, 775, 777, 781, 1450, 782, 0, 0,
	783, 784, 785, 854, 1475, 1495, 0, 787, 788, 786,
	789, 790, 793, 791, 792, 857, 796, 513, 797, 798,
	799, 794, 795, 0, 0, 0, 0, 800, 801, 858,
	802, 803, 804, 1388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1383,
	0, 0, 0, 0, 0, 0, 1381, 1382, 0, 0,
	0, 0, 0, 0, 864, 0, 1415, 0, 0, 1793,
	1413, 1460, 1403, 1404, 1405, 1401, 1402, 1414, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 346,
	348, 347, 349, 350, 351, 352, 0, 353, 354, 0,
	0, 0, 0, 0, 1452, 1419, 0, 0, 356, 0,
	355, 0, 357, 358, 359, 874, 360, 361, 362, 363,
	364, 365, 366, 367, 806, 1466, 0, 368, 1474, 369,
	1473, 0, 1484, 370, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 1421, 1451, 1385, 380, 1497, 1498, 813,
	0, 381, 382, 383, 384, 1458, 0, 1439, 0, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 0, 394,
	395, 396, 393, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 408, 409, 876,
	410, 411, 412, 1442, 1440, 1441, 1448, 1444, 1443, 1447,
	413, 414, 415, 416, 417, 1477, 418, 420, 421, 1471,
	422, 1470, 1390, 425, 427, 419, 423, 0, 426, 424,
	428, 429, 0, 430, 431, 432, 433, 0, 0, 434,
	1469, 436, 0, 437, 438, 440, 439, 0, 441, 442,
	443, 0, 444, 445, 1397, 446, 447, 448, 450, 452,
	449, 451, 453, 454, 455, 456, 457, 1485, 1486, 458,
	459, 1410, 340, 0, 0, 0, 0, 0, 460, 461,
	462, 1468, 0, 0, 0, 463, 0, 465, 469, 466,
	467, 468, 470, 0, 464, 471, 472, 0, 877, 473,
	474, 475, 1482, 1483, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 0, 485, 486, 1492, 0, 1420, 487,
	0, 488, 489, 490, 491, 492, 493, 494, 1453, 1454,
	1457, 595, 879, 495, 496, 497, 0, 498, 499, 500,
	501, 502, 503, 504, 0, 0, 0, 505, 506, 507,
	508, 0, 867, 341, 343, 878, 828, 509, 596, 510,
	1463, 1464, 0, 1424, 0, 511, 512, 515, 880, 1455,
	881, 514, 516, 517, 882, 518, 0, 0, 0, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 528, 527,
	0, 530, 1493, 529, 883, 531, 532, 884, 0, 533,
	534, 535, 536, 537, 538, 541, 1446, 1445, 539, 540,
	542, 543, 0, 544, 545, 547, 550, 546, 548, 549,
	551, 552, 565, 566, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 568, 0, 567, 885,
	569, 570, 571, 572, 573, 581, 583, 584, 579, 580,
	582, 585, 586, 588, 589, 576, 577, 578, 886, 587,
	574, 1387, 575, 344, 887, 590, 591, 592, 593, 1411,
	1456, 594, 1472, 597, 598, 0, 0, 599, 0, 600,
	0, 0, 602, 603, 604, 0, 0, 605, 606, 836,
	888, 607, 889, 1487, 608, 609, 1398, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 0, 620, 621,
	838, 622, 623, 624, 839, 625, 626, 627, 1488, 628,
	841, 629, 630, 0, 631, 632, 633, 0, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 1467, 644,
	645, 647, 646, 648, 649, 0, 650, 0, 651, 652,
	653, 0, 0, 0, 0, 0, 654, 655, 657, 0,
	658, 659, 660, 661, 662, 656, 663, 664, 665, 666,
	667, 668, 669, 0, 671, 672, 670, 673, 674, 890,
	675, 676, 677, 678, 679, 1399, 680, 0, 681, 682,
	690, 691, 692, 683, 684, 686, 693, 685, 694, 695,
	696, 697, 699, 698, 0, 701, 702, 700, 703, 704,
	705, 706, 1449, 707, 844, 708, 687, 688, 709, 710,
	711, 891, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 1465, 0, 721, 0, 722, 723, 724, 725, 726,
	727, 729, 689, 730, 731, 732, 737, 738, 1496, 733,
	734, 735, 736, 1489, 740, 741, 742, 743, 0, 744,
	745, 1384, 739, 728, 0, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 0, 756, 1478, 1479, 1480,
	1481, 0, 768, 0, 757, 759, 760, 761, 762, 1490,
	763, 1491, 1409, 764, 765, 766, 767, 758, 769, 770,
	0, 1391, 771, 772, 773, 774, 776, 778, 779, 780,
	775, 777, 781, 1450, 782, 0, 0, 783, 784, 785,
	854, 1475, 1495, 0, 787, 788, 786, 789, 790, 793,
	791, 792, 857, 796, 513, 797, 798, 799, 794, 795,
	0, 0, 0, 0, 800, 801, 858, 802, 803, 804,
	1388, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1383, 0, 0, 0,
	0, 0, 0, 1381, 1382, 0, 0, 0, 0, 0,
	0, 864, 0, 1415, 0, 0, 1645, 1413, 1460, 1403,
	1404, 1405, 1401, 1402, 1414, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 346, 348, 347, 349,
	350, 351, 352, 0, 353, 354, 0, 0, 0, 0,
	0, 1452, 1419, 0, 0, 356, 0, 355, 0, 357,
	358, 359, 874, 360, 361, 362, 363, 364, 365, 366,
	367, 806, 1466, 0, 368, 1474, 369, 1473, 0, 1484,
	370, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	1421, 1451, 1385, 380, 1497, 1498, 813, 0, 381, 382,
	383, 384, 1458, 0, 1439, 0, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 0, 394, 395, 396, 393,
	397, 398, 0, 399, 0, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 408, 409, 876, 410, 411, 412,
	1442, 1440, 1441, 1448, 1444, 1443, 1447, 413, 414, 415,
	416, 417, 1477, 418, 420, 421, 1471, 422, 1470, 1390,
	425, 427, 419, 423, 0, 426, 424, 428, 429, 0,
	430, 431, 432, 433, 0, 0, 434, 1469, 436, 0,
	437, 438, 440, 439, 0, 441, 442, 443, 0, 444,
	445, 1397, 446, 447, 448, 450, 452, 449, 451, 453,
	454, 455, 456, 457, 1485, 1486, 458, 459, 1410, 340,
	0, 0, 0, 0, 0, 460, 461, 462, 1468, 0,
	0, 0, 463, 0, 465, 469, 466, 467, 468, 470,
	0, 464, 471, 472, 0, 877, 473, 474, 475, 1482,
	1483, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 486, 1492, 0, 1420, 487, 0, 488, 489,
	490, 491, 492, 493, 494, 1453, 1454, 1457, 595, 879,
	495, 496, 497, 0, 498, 499, 500, 501, 502, 503,
	504, 0, 0, 0, 505, 506, 507, 508, 0, 867,
	341, 343, 878, 828, 509, 596, 510, 1463, 1464, 0,
	1424, 0, 511, 512, 515, 880, 1455, 881, 514, 516,
	517, 882, 518, 0, 0, 0, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 528, 527, 0, 530, 1493,
	529, 883, 531, 532, 884, 0, 533, 534, 535, 536,
	537, 538, 541, 1446, 1445, 539, 540, 542, 543, 0,
	544, 545, 547, 550, 546, 548, 549, 551, 552, 565,
	566, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 568, 0, 567, 885, 569, 570, 571,
	572, 573, 581, 583, 584, 579, 580, 582, 585, 586,
	588, 589, 576, 577, 578, 886, 587, 574, 1387, 575,
	344, 887, 590, 591, 592, 593, 1411, 1456, 594, 1472,
	597, 598, 0, 0, 599, 0, 600, 0, 0, 602,
	603, 604, 0, 0, 605, 606, 836, 888, 607, 889,
	1487, 608, 609, 1398, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 0, 620, 621, 838, 622, 623,
	624, 839, 625, 626, 627, 1488, 628, 841, 629, 630,
	0, 631, 632, 633, 0, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 1467, 644, 645, 647, 646,
	648, 649, 0, 650, 0, 651, 652, 653, 0, 0,
	0, 0, 0, 654, 655, 657, 0, 658, 659, 660,
	661, 662, 656, 663, 664, 665, 666, 667, 668, 669,
	0, 671, 672, 670, 673, 674, 890, 675, 676, 677,
	678, 679, 1399, 680, 0, 681, 682, 690, 691, 692,
	683, 684, 686, 693, 685, 694, 695, 696, 697, 699,
	698, 0, 701, 702, 700, 703, 704, 705, 706, 1449,
	707, 844, 708, 687, 688, 709, 710, 711, 891, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 1465, 0,
	721, 0, 722, 723, 724, 725, 726, 727, 729, 689,
	730, 731, 732, 737, 738, 1496, 733, 734, 735, 736,
	1489, 740, 741, 742, 743, 0, 744, 745, 1384, 739,
	728, 0, 746, 747, 748, 749, 750, 751, 752, 753,
	754, 755, 0, 756, 1478, 1479, 1480, 1481, 0, 768,
	0, 757, 759, 760, 761, 762, 1490, 763, 1491, 1409,
	764, 765, 766, 767, 758, 769, 770, 0, 1391, 771,
	772, 773, 774, 776, 778, 779, 780, 775, 777, 781,
	1450, 782, 0, 0, 783, 784, 785, 854, 1475, 1495,
	0, 787, 788, 786, 789, 790, 793, 791, 792, 857,
	796, 513, 797, 798, 799, 794, 795, 0, 0, 0,
	0, 800, 801, 858, 802, 803, 804, 1388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1383, 0, 0, 0, 0, 0, 0,
	1381, 1382, 0, 0, 0, 0, 0, 0, 864, 0,
	1415, 0, 0, 0, 1413, 1460, 1403, 1404, 1405, 1401,
	1402, 1414, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 346, 348, 347, 349, 350, 351, 352,
	0, 353, 354, 0, 0, 0, 0, 0, 1452, 1419,
	0, 0, 356, 0, 355, 0, 357, 358, 359, 874,
	360, 361, 362, 363, 364, 365, 366, 367, 806, 1466,
	0, 368, 1474, 369, 1473, 0, 1484, 370, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 1421, 1451, 1385,
	380, 1497, 1498, 813, 0, 381, 382, 383, 384, 1458,
	0, 1439, 0, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 0, 394, 395, 396, 393, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 408, 409, 876, 410, 411, 412, 1442, 1440, 1441,
	1448, 1444, 1443, 1447, 413, 414, 415, 416, 417, 1477,
	418, 420, 421, 1471, 422, 1470, 1390, 425, 427, 419,
	423, 0, 426, 424, 428, 429, 0, 430, 431, 432,
	433, 0, 0, 434, 1469, 436, 0, 437, 438, 440,
	439, 0, 441, 442, 443, 0, 444, 445, 1397, 446,
	447, 448, 450, 452, 449, 451, 453, 454, 455, 456,
	457, 1485, 1486, 458, 459, 1410, 340, 0, 0, 0,
	0, 0, 460, 461, 462, 1468, 0, 0, 0, 463,
	0, 465, 469, 466, 467, 468, 470, 0, 464, 471,
	472, 0, 877, 473, 474, 475, 1482, 1483, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 486,
	1492, 0, 1420, 487, 0, 488, 489, 490, 491, 492,
	493, 494, 1453, 1454, 1457, 595, 879, 495, 496, 497,
	0, 498, 499, 500, 501, 502, 503, 504, 0, 0,
	0, 505, 506, 507, 508, 0, 867, 341, 343, 878,
	828, 509, 596, 510, 1463, 1464, 0, 1424, 0, 511,
	512, 515, 880, 1455, 881, 514, 516, 517, 882, 518,
	0, 0, 0, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 528, 527, 0, 530, 1493, 529, 883, 531,
	532, 884, 0, 533, 534, 535, 536, 537, 538, 541,
	1446, 1445, 539, 540, 542, 543, 0, 544, 545, 547,
	550, 546, 548, 549, 551, 552, 565, 566, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	568, 0, 567, 885, 569, 570, 571, 572, 573, 581,
	583, 584, 579, 580, 582, 585, 586, 588, 589, 576,
	577, 578, 886, 587, 574, 1387, 575, 344, 887, 590,
	591, 592, 593, 1411, 1456, 594, 1472, 597, 598, 0,
	0, 599, 0, 600, 0, 0, 602, 603, 604, 0,
	0, 605, 606, 836, 888, 607, 889, 1487, 608, 609,
	1398, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 0, 620, 621, 838, 622, 623, 624, 839, 625,
	626, 627, 1488, 628, 841, 629, 630, 0, 631, 632,
	633, 0, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 1467, 644, 645, 647, 646, 648, 649, 0,
	650, 0, 651, 652, 653, 0, 0, 0, 0, 0,
	654, 655, 657, 0, 658, 659, 660, 661, 662, 656,
	663, 664, 665, 666, 667, 668, 669, 0, 671, 672,
	670, 673, 674, 890, 675, 676, 677, 678, 679, 1399,
	680, 0, 681, 682, 690, 691, 692, 683, 684, 686,
	693, 685, 694, 695, 696, 697, 699, 698, 0, 701,
	702, 700, 703, 704, 705, 706, 1449, 707, 844, 708,
	687, 688, 709, 710, 711, 891, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 1465, 0, 721, 0, 722,
	723, 724, 725, 726, 727, 729, 689, 730, 731, 732,
	737, 738, 1496, 733, 734, 735, 736, 1489, 740, 741,
	742, 743, 0, 744, 745, 1384, 739, 728, 0, 746,
	747, 748, 749, 750, 751, 752, 753, 754, 755, 0,
	756, 1478, 1479, 1480, 1481, 0, 768, 0, 757, 759,
	760, 761, 762, 1490, 763, 1491, 1409, 764, 765, 766,
	767, 758, 769, 770, 0, 1391, 771, 772, 773, 774,
	776, 778, 779, 780, 775, 777, 781, 1450, 782, 0,
	0, 783, 784, 785, 854, 1475, 1495, 0, 787, 788,
	786, 789, 790, 793, 791, 792, 857, 796, 513, 797,
	798, 799, 794, 795, 0, 0, 0, 0, 800, 801,
	858, 802, 803, 804, 1388, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1383, 0, 0, 0, 0, 0, 0, 1381, 1382, 0,
	0, 0, 0, 0, 0, 864, 0, 1415, 0, 0,
	0, 1413, 1460, 1403, 1404, 1405, 1401, 1402, 1414, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	346, 348, 347, 349, 350, 351, 352, 0, 353, 354,
	0, 0, 0, 0, 0, 1452, 1419, 0, 0, 356,
	0, 355, 0, 357, 358, 359, 874, 360, 361, 362,
	363, 364, 365, 366, 367, 806, 1466, 0, 368, 1474,
	369, 1473, 0, 1484, 370, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 1421, 1451, 1385, 380, 1497, 1498,
	813, 0, 381, 382, 383, 384, 1458, 0, 1439, 0,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 0,
	394, 395, 396, 393, 397, 398, 0, 399, 0, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 408, 409,
	876, 410, 411, 6577, 1442, 1440, 1441, 1448, 1444, 1443,
	1447, 413, 414, 415, 416, 417, 1477, 418, 420, 421,
	1471, 422, 1470, 1390, 425, 427, 419, 423, 0, 426,
	424, 428, 429, 0, 430, 431, 432, 433, 0, 0,
	434, 1469, 436, 0, 437, 438, 440, 439, 0, 441,
	442, 443, 0, 444, 445, 1397, 446, 447, 448, 450,
	452, 449, 451, 453, 454, 455, 456, 457, 1485, 1486,
	458, 459, 1410, 340, 0, 0, 0, 0, 0, 460,
	461, 462, 1468, 0, 0, 0, 463, 0, 465, 469,
	466, 467, 468, 470, 0, 464, 471, 472, 0, 877,
	473, 474, 475, 1482, 1483, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 486, 1492, 0, 1420,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 1453,
	1454, 1457, 595, 879, 495, 496, 497, 0, 498, 499,
	500, 501, 502, 503, 504, 0, 0, 0, 505, 506,
	507, 508, 0, 867, 341, 343, 878, 828, 509, 596,
	510, 1463, 1464, 0, 1424, 0, 511, 512, 515, 880,
	1455, 881, 514, 516, 517, 882, 518, 0, 0, 0,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 528,
	527, 0, 530, 1493, 529, 883, 531, 532, 884, 0,
	533, 534, 535, 536, 537, 538, 541, 1446, 1445, 539,
	540, 542, 543, 0, 544, 545, 547, 550, 546, 548,
	549, 551, 552, 565, 566, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 568, 0, 567,
	885, 569, 570, 571, 572, 573, 581, 583, 584, 579,
	580, 582, 585, 586, 588, 589, 576, 577, 578, 886,
	587, 574, 1387, 575, 344, 887, 590, 591, 592, 593,
	1411, 1456, 594, 1472, 597, 598, 0, 0, 599, 0,
	600, 0, 0, 602, 603, 604, 0, 0, 605, 606,
	836, 888, 607, 889, 1487, 608, 609, 1398, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 0, 620,
	621, 838, 622, 623, 624, 839, 625, 626, 627, 1488,
	628, 841, 629, 630, 0, 631, 632, 633, 0, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 1467,
	644, 645, 647, 646, 648, 649, 0, 650, 0, 651,
	652, 653, 0, 0, 0, 0, 0, 654, 655, 657,
	0, 658, 659, 660, 661, 662, 656, 663, 664, 665,
	666, 667, 668, 669, 0, 671, 672, 670, 673, 674,
	890, 675, 676, 677, 678, 679, 1399, 680, 0, 681,
	682, 690, 691, 692, 683, 684, 686, 693, 685, 694,
	695, 696, 697, 699, 698, 0, 701, 702, 700, 703,
	704, 705, 706, 1449, 707, 844, 708, 687, 688, 709,
	710, 711, 891, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 1465, 0, 721, 0, 722, 723, 724, 725,
	726, 727, 729, 689, 730, 731, 732, 737, 738, 1496,
	733, 734, 735, 736, 1489, 740, 741, 742, 743, 0,
	744, 745, 1384, 739, 728, 0, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 0, 756, 1478, 1479,
	1480, 1481, 0, 768, 0, 757, 759, 760, 761, 762,
	1490, 763, 1491, 1409, 764, 765, 766, 767, 758, 6576,
	770, 0, 1391, 771, 772, 773, 774, 776, 778, 779,
	780, 775, 777, 781, 1450, 782, 0, 0, 783, 784,
	785, 854, 1475, 1495, 0, 787, 788, 786, 789, 790,
	793, 791, 792, 857, 796, 513, 797, 798, 799, 794,
	795, 0, 0, 0, 0, 800, 801, 858, 802, 803,
	804, 1388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1383, 0, 0,
	0, 0, 0, 0, 1381, 1382, 0, 0, 0, 0,
	0, 0, 864, 0, 1415, 0, 0, 0, 1413, 1460,
	1403, 1404, 1405, 1401, 1402, 1414, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 346, 348, 347,
	349, 350, 351, 352, 0, 353, 354, 0, 0, 0,
	0, 0, 1452, 1419, 0, 0, 356, 0, 355, 0,
	357, 358, 359, 874, 360, 361, 362, 363, 364, 365,
	366, 367, 6575, 1466, 0, 368, 1474, 369, 1473, 0,
	1484, 370, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 1421, 1451, 1385, 380, 1497, 1498, 813, 0, 381,
	382, 383, 384, 1458, 0, 1439, 0, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 0, 394, 395, 396,
	393, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 408, 409, 876, 410, 411,
	6577, 1442, 1440, 1441, 1448, 1444, 1443, 1447, 413, 414,
	415, 416, 417, 1477, 418, 420, 421, 1471, 422, 1470,
	1390, 425, 427, 419, 423, 0, 426, 424, 428, 429,
	0, 430, 431, 432, 433, 0, 0, 434, 1469, 436,
	0, 437, 438, 440, 439, 0, 441, 442, 443, 0,
	444, 445, 1397, 446, 447, 448, 450, 452, 449, 451,
	453, 454, 455, 456, 457, 1485, 1486, 458, 459, 1410,
	340, 0, 0, 0, 0, 0, 460, 461, 462, 1468,
	0, 0, 0, 463, 0, 465, 469, 466, 467, 468,
	470, 0, 464, 471, 472, 0, 877, 473, 474, 475,
	1482, 1483, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 0, 485, 486, 1492, 0, 1420, 487, 0, 488,
	489, 490, 491, 492, 493, 494, 1453, 1454, 1457, 595,
	879, 495, 496, 497, 0, 498, 499, 500, 501, 502,
	503, 504, 0, 0, 0, 505, 506, 507, 508, 0,
	867, 341, 343, 878, 828, 509, 596, 510, 1463, 1464,
	0, 1424, 0, 511, 512, 515, 880, 1455, 881, 514,
	516, 517, 882, 518, 0, 0, 0, 519, 520, 521,
	522, 523, 524, 525, 0, 526, 528, 527, 0, 530,
	1493, 529, 883, 531, 532, 884, 0, 533, 534, 535,
	536, 537, 538, 541, 1446, 1445, 539, 540, 542, 543,
	0, 544, 545, 547, 550, 546, 548, 549, 551, 552,
	565, 566, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 568, 0, 567, 885, 569, 570,
	571, 572, 573, 581, 583, 584, 579, 580, 582, 585,
	586, 588, 589, 576, 577, 578, 886, 587, 574, 1387,
	575, 344, 887, 590, 591, 592, 593, 1411, 1456, 594,
	1472, 597, 598, 0, 0, 599, 0, 600, 0, 0,
	602, 603, 604, 0, 0, 605, 606, 836, 888, 607,
	889, 1487, 608, 609, 1398, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 0, 620, 621, 838, 622,
	623, 624, 839, 625, 626, 627, 1488, 628, 841, 629,
	630, 0, 631, 632, 633, 0, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 1467, 644, 645, 647,
	646, 648, 649, 0, 650, 0, 651, 652, 653, 0,
	0, 0, 0, 0, 654, 655, 657, 0, 658, 659,
	660, 661, 662, 656, 663, 664, 665, 666, 667, 668,
	669, 0, 671, 672, 670, 673, 674, 890, 675, 676,
	677, 678, 679, 1399, 680, 0, 681, 682, 690, 691,
	692, 683, 684, 686, 693, 685, 694, 695, 696, 697,
	699, 698, 0, 701, 702, 700, 703, 704, 705, 706,
	1449, 707, 844, 708, 687, 688, 709, 710, 711, 891,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 1465,
	0, 721, 0, 722, 723, 724, 725, 726, 727, 729,
	689, 730, 731, 732, 737, 738, 1496, 733, 734, 735,
	736, 1489, 740, 741, 742, 743, 0, 744, 745, 1384,
	739, 728, 0, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 755, 0, 756, 1478, 1479, 1480, 1481, 0,
	768, 0, 757, 759, 760, 761, 762, 1490, 763, 1491,
	1409, 764, 765, 766, 767, 758, 6576, 770, 0, 1391,
	771, 772, 773, 774, 776, 778, 779, 780, 775, 777,
	781, 1450, 782, 0, 0, 783, 784, 785, 854, 1475,
	1495, 0, 787, 788, 786, 789, 790, 793, 791, 792,
	857, 796, 513, 797, 798, 799, 794, 795, 0, 0,
	0, 0, 800, 801, 858, 802, 803, 804, 1388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1383, 0, 0, 0, 0, 0,
	0, 1381, 1382, 0, 0, 0, 0, 0, 0, 864,
	0, 1415, 0, 0, 0, 1413, 1460, 1403, 1404, 1405,
	1401, 1402, 1414, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 346, 348, 347, 349, 350, 351,
	352, 0, 353, 354, 0, 0, 0, 0, 0, 1452,
	1419, 0, 0, 356, 0, 355, 0, 357, 358, 359,
	874, 360, 361, 362, 363, 364, 365, 366, 367, 806,
	1466, 0, 368, 1474, 369, 1473, 0, 1484, 370, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 1421, 1451,
	1385, 380, 1497, 1498, 813, 0, 381, 382, 383, 384,
	1458, 0, 1439, 0, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 0, 394, 395, 396, 393, 397, 398,
	0, 399, 0, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 408, 409, 876, 410, 6080, 412, 1442, 1440,
	1441, 1448, 1444, 1443, 1447, 413, 414, 415, 416, 417,
	1477, 418, 420, 421, 1471, 422, 1470, 1390, 425, 427,
	419, 423, 0, 426, 424, 428, 429, 0, 430, 431,
	432, 433, 0, 0, 434, 1469, 436, 0, 437, 438,
	440, 439, 0, 441, 442, 443, 0, 444, 445, 1397,
	446, 447, 448, 450, 452, 449, 451, 453, 454, 455,
	456, 457, 1485, 1486, 458, 459, 1410, 340, 0, 0,
	0, 0, 0, 460, 461, 462, 1468, 0, 0, 0,
	463, 0, 465, 469, 466, 467, 468, 470, 0, 464,
	471, 472, 0, 877, 473, 474, 475, 1482, 1483, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	486, 1492, 0, 6081, 487, 0, 488, 489, 490, 491,
	492, 493, 494, 1453, 1454, 1457, 595, 879, 495, 496,
	497, 0, 498, 499, 500, 501, 502, 503, 504, 0,
	0, 0, 505, 506, 507, 508, 0, 867, 341, 343,
	878, 828, 509, 596, 510, 1463, 1464, 0, 1424, 0,
	511, 512, 515, 880, 1455, 881, 514, 516, 517, 882,
	518, 0, 0, 0, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 528, 527, 0, 530, 1493, 529, 883,
	531, 532, 884, 0, 533, 534, 535, 536, 537, 538,
	541, 1446, 1445, 539, 540, 542, 543, 0, 544, 545,
	547, 550, 546, 548, 549, 551, 552, 565, 566, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 568, 0, 567, 885, 569, 570, 571, 572, 573,
	581, 583, 584, 579, 580, 582, 585, 586, 588, 589,
	576, 577, 578, 886, 587, 574, 1387, 575, 344, 887,
	590, 591, 592, 593, 1411, 1456, 594, 1472, 597, 598,
	0, 0, 599, 0, 600, 0, 0, 602, 603, 604,
	0, 0, 605, 606, 836, 888, 607, 889, 1487, 608,
	609, 1398, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 0, 620, 621, 838, 622, 623, 624, 839,
	625, 626, 627, 1488, 628, 841, 629, 630, 0, 631,
	632, 633, 0, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 1467, 644, 645, 647, 646, 648, 649,
	0, 650, 0, 651, 652, 653, 0, 0, 0, 0,
	0, 654, 655, 657, 0, 658, 659, 660, 661, 662,
	656, 663, 664, 665, 666, 667, 668, 669, 0, 671,
	672, 670, 673, 674, 890, 675, 676, 677, 6079, 679,
	1399, 680, 0, 681, 682, 690, 691, 692, 683, 684,
	686, 693, 685, 694, 695, 696, 697, 699, 698, 0,
	701, 702, 700, 703, 704, 705, 706, 1449, 707, 844,
	708, 687, 688, 709, 710, 711, 891, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 1465, 0, 721, 0,
	722, 723, 724, 725, 726, 727, 729, 689, 730, 731,
	732, 737, 738, 1496, 733, 734, 735, 736, 1489, 740,
	741, 742, 743, 0, 744, 745, 1384, 739, 728, 0,
	746, 747, 748, 749, 750, 751, 752, 753, 754, 755,
	0, 756, 1478, 1479, 1480, 1481, 0, 768, 0, 757,
	759, 760, 761, 762, 1490, 763, 1491, 1409, 764, 765,
	766, 767, 758, 769, 770, 0, 1391, 771, 772, 773,
	774, 776, 778, 779, 780, 775, 777, 781, 1450, 782,
	0, 0, 783, 784, 785, 854, 1475, 1495, 0, 787,
	788, 786, 789, 790, 793, 791, 792, 857, 796, 513,
	797, 798, 799, 794, 795, 0, 0, 0, 0, 800,
	801, 858, 802, 803, 804, 1388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1383, 0, 0, 0, 0, 0, 0, 1381, 1382,
	0, 0, 0, 0, 0, 0, 864, 0, 1415, 0,
	0, 0, 1413, 1460, 1403, 1404, 1405, 1401, 1402, 1414,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 346, 348, 347, 349, 350, 351, 352, 0, 353,
	354, 0, 0, 0, 0, 0, 1452, 1419, 0, 0,
	356, 0, 355, 0, 357, 358, 359, 874, 360, 361,
	362, 363, 364, 365, 366, 367, 806, 1466, 0, 368,
	1474, 369, 1473, 0, 1484, 370, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 1421, 1451, 1385, 380, 1497,
	1498, 813, 0, 381, 382, 383, 384, 1458, 0, 1439,
	0, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	0, 394, 395, 396, 393, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 408,
	409, 876, 410, 411, 412, 1442, 1440, 1441, 1448, 1444,
	1443, 1447, 413, 414, 415, 416, 417, 1477, 418, 420,
	421, 1471, 422, 1470, 1390, 425, 427, 419, 423, 0,
	426, 424, 428, 429, 0, 430, 431, 432, 433, 0,
	0, 434, 1469, 436, 0, 437, 438, 440, 439, 0,
	441, 442, 443, 0, 444, 445, 1397, 446, 447, 448,
	450, 452, 449, 451, 453, 454, 455, 456, 457, 1485,
	1486, 458, 459, 1410, 340, 0, 0, 0, 0, 0,
	460, 461, 462, 1468, 0, 0, 0, 463, 0, 465,
	469, 466, 467, 468, 470, 0, 464, 471, 472, 0,
	877, 2520, 474, 475, 1482, 1483, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 0, 485, 486, 1492, 0,
	1420, 487, 0, 488, 489, 490, 491, 492, 493, 494,
	1453, 1454, 1457, 595, 879, 495, 496, 497, 0, 498,
	499, 500, 501, 502, 503, 504, 0, 0, 0, 505,
	506, 507, 508, 0, 867, 341, 343, 878, 828, 509,
	596, 510, 1463, 1464, 0, 1424, 0, 511, 512, 515,
	880, 1455, 881, 514, 516, 517, 882, 518, 0, 0,
	0, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	528, 527, 0, 530, 1493, 529, 883, 531, 532, 884,
	0, 533, 534, 535, 536, 537, 538, 541, 1446, 1445,
	539, 540, 542, 543, 0, 544, 545, 547, 550, 546,
	548, 549, 551, 552, 565, 566, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 568, 0,
	567, 885, 569, 570, 571, 572, 573, 581, 583, 584,
	579, 580, 582, 585, 586, 588, 589, 576, 577, 578,
	886, 587, 574, 1387, 575, 344, 887, 590, 591, 592,
	593, 1411, 1456, 594, 1472, 597, 598, 0, 0, 599,
	0, 600, 0, 0, 602, 603, 604, 0, 0, 605,
	606, 836, 888, 607, 889, 1487, 608, 609, 1398, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 0,
	620, 621, 838, 622, 623, 624, 839, 625, 626, 627,
	1488, 628, 841, 629, 630, 0, 631, 632, 633, 0,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	1467, 644, 645, 647, 646, 648, 649, 0, 650, 0,
	651, 652, 653, 0, 0, 0, 0, 0, 654, 655,
	657, 0, 658, 659, 660, 661, 662, 656, 663, 664,
	665, 666, 667, 668, 669, 0, 671, 672, 670, 673,
	674, 890, 675, 676, 677, 678, 679, 1399, 680, 0,
	681, 682, 690, 691, 692, 683, 684, 686, 693, 685,
	694, 695, 696, 697, 699, 698, 0, 701, 702, 700,
	703, 704, 705, 706, 1449, 707, 844, 708, 687, 688,
	709, 710, 711, 891, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 1465, 0, 721, 0, 722, 723, 724,
	725, 726, 727, 729, 689, 730, 731, 732, 737, 738,
	1496, 733, 734, 735, 736, 1489, 740, 741, 742, 743,
	0, 744, 745, 1384, 739, 728, 0, 746, 747, 748,
	749, 750, 751, 752, 753, 754, 755, 0, 756, 1478,
	1479, 1480, 1481, 0, 768, 0, 757, 759, 760, 761,
	762, 1490, 763, 1491, 1409, 764, 765, 766, 767, 758,
	769, 770, 0, 1391, 771, 772, 773, 774, 776, 778,
	779, 780, 775, 777, 781, 1450, 782, 0, 0, 783,
	784, 785, 854, 1475, 1495, 0, 787, 788, 786, 789,
	790, 793, 791, 792, 857, 796, 513, 797, 798, 799,
	794, 795, 0, 0, 0, 0, 800, 801, 858, 802,
	803, 804, 1388, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1383, 0,
	0, 0, 0, 0, 0, 1381, 1382, 0, 0, 0,
	0, 0, 0, 3168, 0, 1415, 0, 0, 0, 1413,
	1460, 1403, 1404, 1405, 4514, 4515, 1414, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 346, 348,
	347, 349, 350, 351, 352, 0, 353, 354, 0, 0,
	0, 0, 0, 1452, 1419, 0, 0, 356, 0, 355,
	0, 357, 358, 359, 874, 360, 361, 362, 363, 364,
	365, 366, 367, 806, 1466, 0, 368, 1474, 369, 1473,
	0, 1484, 370, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 1421, 1451, 1385, 380, 1497, 1498, 813, 0,
	381, 382, 383, 384, 1458, 0, 1439, 0, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 0, 394, 395,
	396, 393, 397, 398, 0, 399, 0, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 408, 409, 876, 410,
	411, 412, 1442, 1440, 1441, 1448, 1444, 1443, 1447, 413,
	414, 415, 416, 417, 1477, 418, 420, 421, 1471, 422,
	1470, 1390, 425, 427, 419, 423, 0, 426, 424, 428,
	429, 0, 430, 431, 432, 433, 0, 0, 434, 1469,
	436, 0, 437, 438, 440, 439, 0, 441, 442, 443,
	0, 444, 445, 1397, 446, 447, 448, 450, 452, 449,
	451, 453, 454, 455, 456, 457, 1485, 1486, 458, 459,
	1410, 340, 0, 0, 0, 0, 0, 460, 461, 462,
	1468, 0, 0, 0, 463, 0, 465, 469, 466, 467,
	468, 470, 0, 464, 471, 472, 0, 877, 473, 474,
	475, 1482, 1483, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 486, 1492, 0, 1420, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 1453, 1454, 1457,
	595, 879, 495, 496, 497, 0, 498, 499, 500, 501,
	502, 503, 504, 0, 0, 0, 505, 506, 507, 508,
	0, 867, 341, 343, 878, 828, 509, 596, 510, 1463,
	1464, 0, 1424, 0, 511, 512, 515, 880, 1455, 881,
	514, 516, 517, 882, 518, 0, 0, 0, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 528, 527, 0,
	530, 1493, 529, 883, 531, 532, 884, 0, 533, 534,
	535, 536, 537, 538, 541, 1446, 1445, 539, 540, 542,
	543, 0, 544, 545, 547, 550, 546, 548, 549, 551,
	552, 565, 566, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 568, 0, 567, 885, 569,
	570, 571, 572, 573, 581, 583, 584, 579, 580, 582,
	585, 586, 588, 589, 576, 577, 578, 886, 587, 574,
	1387, 575, 344, 887, 590, 591, 592, 593, 1411, 1456,
	594, 1472, 597, 598, 0, 0, 599, 0, 600, 0,
	0, 602, 603, 604, 0, 0, 605, 606, 836, 888,
	607, 889, 1487, 608, 609, 1398, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 0, 620, 621, 838,
	622, 623, 624, 839, 625, 626, 627, 1488, 628, 841,
	629, 630, 0, 631, 632, 633, 0, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 1467, 644, 645,
	647, 646, 648, 649, 0, 650, 0, 651, 652, 653,
	0, 0, 0, 0, 0, 654, 655, 657, 0, 658,
	659, 660, 661, 662, 656, 663, 664, 665, 666, 667,
	668, 669, 0, 671, 672, 670, 673, 674, 890, 675,
	676, 677, 678, 679, 1399, 680, 0, 681, 682, 690,
	691, 692, 683, 684, 686, 693, 685, 694, 695, 696,
	697, 699, 698, 0, 701, 702, 700, 703, 704, 705,
	706, 1449, 707, 844, 708, 687, 688, 709, 710, 711,
	891, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	1465, 0, 721, 0, 722, 723, 724, 725, 726, 727,
	729, 689, 730, 731, 732, 737, 738, 1496, 733, 734,
	735, 736, 1489, 740, 741, 742, 743, 0, 744, 745,
	1384, 739, 728, 0, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 0, 756, 1478, 1479, 1480, 1481,
	0, 768, 0, 757, 759, 760, 761, 762, 1490, 763,
	1491, 1409, 764, 765, 766, 767, 758, 769, 770, 0,
	1391, 771, 772, 773, 774, 776, 778, 779, 780, 775,
	777, 781, 1450, 782, 0, 0, 783, 784, 785, 854,
	1475, 1495, 0, 787, 788, 786, 789, 790, 793, 791,
	792, 857, 796, 513, 797, 798, 799, 794, 795, 0,
	0, 0, 0, 800, 801, 858, 802, 803, 804, 1388,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1383, 0, 0, 0, 0,
	0, 0, 1381, 1382, 0, 0, 0, 0, 0, 0,
	864, 0, 1415, 0, 0, 0, 1413, 1460, 1403, 1404,
	1405, 4512, 4513, 1414, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 346, 348, 347, 349, 350,
	351, 352, 0, 353, 354, 0, 0, 0, 0, 0,
	1452, 1419, 0, 0, 356, 0, 355, 0, 357, 358,
	359, 874, 360, 361, 362, 363, 364, 365, 366, 367,
	806, 1466, 0, 368, 1474, 369, 1473, 0, 1484, 370,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 1421,
	1451, 1385, 380, 1497, 1498, 813, 0, 381, 382, 383,
	384, 1458, 0, 1439, 0, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 0, 394, 395, 396, 393, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 408, 409, 876, 410, 411, 412, 1442,
	1440, 1441, 1448, 1444, 1443, 1447, 413, 414, 415, 416,
	417, 1477, 418, 420, 421, 1471, 422, 1470, 1390, 425,
	427, 419, 423, 0, 426, 424, 428, 429, 0, 430,
	431, 432, 433, 0, 0, 434, 1469, 436, 0, 437,
	438, 440, 439, 0, 441, 442, 443, 0, 444, 445,
	1397, 446, 447, 448, 450, 452, 449, 451, 453, 454,
	455, 456, 457, 1485, 1486, 458, 459, 1410, 340, 0,
	0, 0, 0, 0, 460, 461, 462, 1468, 0, 0,
	0, 463, 0, 465, 469, 466, 467, 468, 470, 0,
	464, 471, 472, 0, 877, 473, 474, 475, 1482, 1483,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 0,
	485, 486, 1492, 0, 1420, 487, 0, 488, 489, 490,
	491, 492, 493, 494, 1453, 1454, 1457, 595, 879, 495,
	496, 497, 0, 498, 499, 500, 501, 502, 503, 504,
	0, 0, 0, 505, 506, 507, 508, 0, 867, 341,
	343, 878, 828, 509, 596, 510, 1463, 1464, 0, 1424,
	0, 511, 512, 515, 880, 1455, 881, 514, 516, 517,
	882, 518, 0, 0, 0, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 528, 527, 0, 530, 1493, 529,
	883, 531, 532, 884, 0, 533, 534, 535, 536, 537,
	538, 541, 1446, 1445, 539, 540, 542, 543, 0, 544,
	545, 547, 550, 546, 548, 549, 551, 552, 565, 566,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 568, 0, 567, 885, 569, 570, 571, 572,
	573, 581, 583, 584, 579, 580, 582, 585, 586, 588,
	589, 576, 577, 578, 886, 587, 574, 1387, 575, 344,
	887, 590, 591, 592, 593, 1411, 1456, 594, 1472, 597,
	598, 0, 0, 599, 0, 600, 0, 0, 602, 603,
	604, 0, 0, 605, 606, 836, 888, 607, 889, 1487,
	608, 609, 1398, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 620, 621, 838, 622, 623, 624,
	839, 625, 626, 627, 1488, 628, 841, 629, 630, 0,
	631, 632, 633, 0, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 1467, 644, 645, 647, 646, 648,
	649, 0, 650, 0, 651, 652, 653, 0, 0, 0,
	0, 0, 654, 655, 657, 0, 658, 659, 660, 661,
	662, 656, 663, 664, 665, 666, 667, 668, 669, 0,
	671, 672, 670, 673, 674, 890, 675, 676, 677, 678,
	679, 1399, 680, 0, 681, 682, 690, 691, 692, 683,
	684, 686, 693, 685, 694, 695, 696, 697, 699, 698,
	0, 701, 702, 700, 703, 704, 705, 706, 1449, 707,
	844, 708, 687, 688, 709, 710, 711, 891, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 1465, 0, 721,
	0, 722, 723, 724, 725, 726, 727, 729, 689, 730,
	731, 732, 737, 738, 1496, 733, 734, 735, 736, 1489,
	740, 741, 742, 743, 0, 744, 745, 1384, 739, 728,
	0, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	755, 0, 756, 1478, 1479, 1480, 1481, 0, 768, 0,
	757, 759, 760, 761, 762, 1490, 763, 1491, 1409, 764,
	765, 766, 767, 758, 769, 770, 0, 1391, 771, 772,
	773, 774, 776, 778, 779, 780, 775, 777, 781, 1450,
	782, 0, 0, 783, 784, 785, 854, 1475, 1495, 0,
	787, 788, 786, 789, 790, 793, 791, 792, 857, 796,
	513, 797, 798, 799, 794, 795, 0, 0, 0, 0,
	800, 801, 858, 802, 803, 804, 1388, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1383, 0, 0, 0, 0, 0, 0, 1381,
	1382, 0, 0, 0, 0, 0, 0, 864, 0, 1415,
	0, 0, 0, 1413, 1460, 1403, 1404, 1405, 1401, 1402,
	1414, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 346, 348, 347, 349, 350, 351, 352, 0,
	353, 354, 0, 0, 0, 0, 0, 1452, 1419, 0,
	0, 356, 0, 355, 0, 357, 358, 359, 874, 360,
	361, 362, 363, 364, 365, 366, 367, 806, 1466, 0,
	368, 1474, 369, 1473, 0, 1484, 370, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 1421, 1451, 1385, 380,
	1497, 1498, 813, 0, 381, 382, 383, 384, 1458, 0,
	1439, 0, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 0, 394, 395, 396, 393, 397, 398, 0, 399,
	0, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	408, 409, 876, 410, 411, 412, 1442, 1440, 1441, 1448,
	1444, 1443, 1447, 413, 414, 415, 416, 417, 1477, 418,
	420, 421, 1471, 422, 1470, 1390, 425, 427, 419, 423,
	0, 426, 424, 428, 429, 0, 430, 431, 432, 433,
	0, 0, 434, 1469, 436, 0, 437, 438, 440, 439,
	0, 441, 442, 443, 0, 444, 445, 1397, 446, 447,
	448, 450, 452, 449, 451, 453, 454, 455, 456, 457,
	1485, 1486, 458, 459, 1410, 340, 0, 0, 0, 0,
	0, 460, 461, 462, 1468, 0, 0, 0, 463, 0,
	465, 469, 466, 467, 468, 470, 0, 464, 471, 472,
	0, 877, 473, 474, 475, 1482, 1483, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 486, 1492,
	0, 1420, 487, 0, 488, 489, 490, 491, 492, 493,
	494, 1453, 1454, 1457, 595, 879, 495, 496, 497, 0,
	498, 499, 500, 501, 502, 503, 504, 0, 0, 0,
	505, 506, 507, 508, 0, 867, 341, 343, 878, 828,
	509, 596, 510, 1463, 1464, 0, 1424, 0, 511, 512,
	515, 880, 1455, 881, 514, 516, 517, 882, 518, 0,
	0, 0, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 528, 527, 0, 530, 1493, 529, 883, 531, 532,
	884, 0, 533, 534, 535, 536, 537, 538, 541, 1446,
	1445, 539, 540, 542, 543, 0, 544, 545, 547, 550,
	546, 548, 549, 551, 552, 565, 566, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 568,
	0, 567, 885, 569, 570, 571, 572, 573, 581, 583,
	584, 579, 580, 582, 585, 586, 588, 589, 576, 577,
	578, 886, 587, 574, 1387, 575, 344, 887, 590, 591,
	592, 593, 1411, 1456, 594, 1472, 597, 598, 0, 0,
	599, 0, 600, 0, 0, 602, 603, 604, 0, 0,
	605, 606, 836, 888, 607, 889, 1487, 608, 609, 1398,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	0, 620, 621, 838, 622, 623, 624, 839, 625, 626,
	627, 1488, 628, 841, 629, 630, 0, 631, 632, 633,
	0, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 1467, 644, 645, 647, 646, 648, 649, 0, 650,
	0, 651, 652, 653, 0, 0, 0, 0, 0, 654,
	655, 657, 0, 658, 659, 660, 661, 662, 656, 663,
	664, 665, 666, 667, 668, 669, 0, 671, 672, 670,
	673, 674, 890, 675, 676, 677, 678, 679, 1399, 680,
	0, 681, 682, 690, 691, 692, 683, 684, 686, 693,
	685, 694, 695, 696, 697, 699, 698, 0, 701, 702,
	700, 703, 704, 705, 706, 1449, 707, 844, 708, 687,
	688, 709, 710, 711, 891, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 1465, 0, 721, 0, 722, 723,
	724, 725, 726, 727, 729, 689, 730, 731, 732, 737,
	738, 1496, 733, 734, 735, 736, 1489, 740, 741, 742,
	743, 0, 744, 745, 1384, 739, 728, 0, 746, 747,
	748, 749, 750, 751, 752, 753, 754, 755, 0, 756,
	1478, 1479, 1480, 1481, 0, 768, 0, 757, 759, 760,
	761, 762, 1490, 763, 1491, 1409, 764, 765, 766, 767,
	758, 769, 770, 0, 1391, 771, 772, 773, 774, 776,
	778, 779, 780, 775, 777, 781, 1450, 782, 0, 0,
	783, 784, 785, 854, 1475, 1495, 0, 787, 788, 786,
	789, 790, 793, 791, 792, 857, 796, 513, 797, 798,
	799, 794, 795, 0, 0, 0, 0, 800, 801, 858,
	802, 803, 804, 1388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1383,
	0, 0, 0, 0, 0, 0, 1381, 1382, 0, 0,
	0, 0, 0, 0, 3168, 0, 1415, 0, 0, 0,
	1413, 1460, 1403, 1404, 1405, 1401, 1402, 1414, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 346,
	348, 347, 349, 350, 351, 352, 0, 353, 354, 0,
	0, 0, 0, 0, 1452, 1419, 0, 0, 356, 0,
	355, 0, 357, 358, 359, 874, 360, 361, 362, 363,
	364, 365, 366, 367, 806, 1466, 0, 368, 1474, 369,
	1473, 0, 1484, 370, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 1421, 1451, 1385, 380, 1497, 1498, 813,
	0, 381, 382, 383, 384, 1458, 0, 1439, 0, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 0, 394,
	395, 396, 393, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 408, 409, 876,
	410, 411, 412, 1442, 1440, 1441, 1448, 1444, 1443, 1447,
	413, 414, 415, 416, 417, 1477, 418, 420, 421, 1471,
	422, 1470, 1390, 425, 427, 419, 423, 0, 426, 424,
	428, 429, 0, 430, 431, 432, 433, 0, 0, 434,
	1469, 436, 0, 437, 438, 440, 439, 0, 441, 442,
	443, 0, 444, 445, 1397, 446, 447, 448, 450, 452,
	449, 451, 453, 454, 455, 456, 457, 1485, 1486, 458,
	459, 1410, 340, 0, 0, 0, 0, 0, 460, 461,
	462, 1468, 0, 0, 0, 463, 0, 465, 469, 466,
	467, 468, 470, 0, 464, 471, 472, 0, 877, 473,
	474, 475, 1482, 1483, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 0, 485, 486, 1492, 0, 1420, 487,
	0, 488, 489, 490, 491, 492, 493, 494, 1453, 1454,
	1457, 595, 879, 495, 496, 497, 0, 498, 499, 500,
	501, 502, 503, 504, 0, 0, 0, 505, 506, 507,
	508, 0, 867, 341, 343, 878, 828, 509, 596, 510,
	1463, 1464, 0, 1424, 0, 511, 512, 515, 880, 1455,
	881, 514, 516, 517, 882, 518, 0, 0, 0, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 528, 527,
	0, 530, 1493, 529, 883, 531, 532, 884, 0, 533,
	534, 535, 536, 537, 538, 541, 1446, 1445, 539, 540,
	542, 543, 0, 544, 545, 547, 550, 546, 548, 549,
	551, 552, 565, 566, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 568, 0, 567, 885,
	569, 570, 571, 572, 573, 581, 583, 584, 579, 580,
	582, 585, 586, 588, 589, 576, 577, 578, 886, 587,
	574, 1387, 575, 344, 887, 590, 591, 592, 593, 1411,
	1456, 594, 1472, 597, 598, 0, 0, 599, 0, 600,
	0, 0, 602, 603, 604, 0, 0, 605, 606, 836,
	888, 607, 889, 1487, 608, 609, 1398, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 0, 620, 621,
	838, 622, 623, 624, 839, 625, 626, 627, 1488, 628,
	841, 629, 630, 0, 631, 632, 633, 0, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 1467, 644,
	645, 647, 646, 648, 649, 0, 650, 0, 651, 652,
	653, 0, 0, 0, 0, 0, 654, 655, 657, 0,
	658, 659, 660, 661, 662, 656, 663, 664, 665, 666,
	667, 668, 669, 0, 671, 672, 670, 673, 674, 890,
	675, 676, 677, 678, 679, 1399, 680, 0, 681, 682,
	690, 691, 692, 683, 684, 686, 693, 685, 694, 695,
	696, 697, 699, 698, 0, 701, 702, 700, 703, 704,
	705, 706, 1449, 707, 844, 708, 687, 688, 709, 710,
	711, 891, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 1465, 0, 721, 0, 722, 723, 724, 725, 726,
	727, 729, 689, 730, 731, 732, 737, 738, 1496, 733,
	734, 735, 736, 1489, 740, 741, 742, 743, 0, 744,
	745, 1384, 739, 728, 0, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 0, 756, 1478, 1479, 1480,
	1481, 0, 768, 0, 757, 759, 760, 761, 762, 1490,
	763, 1491, 1409, 764, 765, 766, 767, 758, 769, 770,
	0, 1391, 771, 772, 773, 774, 776, 778, 779, 780,
	775, 777, 781, 1450, 782, 0, 0, 783, 784, 785,
	854, 1475, 1495, 0, 787, 788, 786, 789, 790, 793,
	791, 792, 857, 796, 513, 797, 798, 799, 794, 795,
	0, 0, 0, 0, 800, 801, 858, 802, 803, 804,
	1388, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1383, 0, 0, 0,
	0, 0, 0, 3024, 3025, 0, 0, 0, 0, 0,
	0, 864, 0, 1415, 0, 0, 0, 1413, 1460, 1403,
	1404, 1405, 1401, 1402, 1414, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 346, 348, 347, 349,
	350, 351, 352, 0, 353, 354, 0, 0, 0, 0,
	0, 1452, 1419, 0, 0, 356, 0, 355, 0, 357,
	358, 359, 874, 360, 361, 362, 363, 364, 365, 366,
	367, 806, 1466, 0, 368, 1474, 369, 1473, 0, 1484,
	370, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	1421, 1451, 1385, 380, 1497, 1498, 813, 0, 381, 382,
	383, 384, 1458, 0, 1439, 0, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 0, 394, 395, 396, 393,
	397, 398, 0, 399, 0, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 408, 409, 876, 410, 411, 412,
	1442, 1440, 1441, 1448, 1444, 1443, 1447, 413, 414, 415,
	416, 417, 1477, 418, 420, 421, 1471, 422, 1470, 1390,
	425, 427, 419, 423, 0, 426, 424, 428, 429, 0,
	430, 431, 432, 433, 0, 0, 434, 1469, 436, 0,
	437, 438, 440, 439, 0, 441, 442, 443, 0, 444,
	445, 1397, 446, 447, 448, 450, 452, 449, 451, 453,
	454, 455, 456, 457, 1485, 1486, 458, 459, 1410, 340,
	0, 0, 0, 0, 0, 460, 461, 462, 1468, 0,
	0, 0, 463, 0, 465, 469, 466, 467, 468, 470,
	0, 464, 471, 472, 0, 877, 2520, 474, 475, 1482,
	1483, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 486, 1492, 0, 1420, 487, 0, 488, 489,
	490, 491, 492, 493, 494, 1453, 1454, 1457, 595, 879,
	495, 496, 497, 0, 498, 499, 500, 501, 502, 503,
	504, 0, 0, 0, 505, 506, 507, 508, 0, 867,
	341, 343, 878, 828, 509, 596, 510, 1463, 1464, 0,
	1424, 0, 511, 512, 515, 880, 1455, 881, 514, 516,
	517, 882, 518, 0, 0, 0, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 528, 527, 0, 530, 1493,
	529, 883, 531, 532, 884, 0, 533, 534, 535, 536,
	537, 538, 541, 1446, 1445, 539, 540, 542, 543, 0,
	544, 545, 547, 550, 546, 548, 549, 551, 552, 565,
	566, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 568, 0, 567, 885, 569, 570, 571,
	572, 573, 581, 583, 584, 579, 580, 582, 585, 586,
	588, 589, 576, 577, 578, 886, 587, 574, 1387, 575,
	344, 887, 590, 591, 592, 593, 1411, 1456, 594, 1472,
	597, 598, 0, 0, 599, 0, 600, 0, 0, 602,
	603, 604, 0, 0, 605, 606, 836, 888, 607, 889,
	1487, 608, 609, 1398, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 0, 620, 621, 838, 622, 623,
	624, 839, 625, 626, 627, 1488, 628, 841, 629, 630,
	0, 631, 632, 633, 0, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 1467, 644, 645, 647, 646,
	648, 649, 0, 650, 0, 651, 652, 653, 0, 0,
	0, 0, 0, 654, 655, 657, 0, 658, 659, 660,
	661, 662, 656, 663, 664, 665, 666, 667, 668, 669,
	0, 671, 672, 670, 673, 674, 890, 675, 676, 677,
	678, 679, 1399, 680, 0, 681, 682, 690, 691, 692,
	683, 684, 686, 693, 685, 694, 695, 696, 697, 699,
	698, 0, 701, 702, 700, 703, 704, 705, 706, 1449,
	707, 844, 708, 687, 688, 709, 710, 711, 891, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 1465, 0,
	721, 0, 722, 723, 724, 725, 726, 727, 729, 689,
	730, 731, 732, 737, 738, 1496, 733, 734, 735, 736,
	1489, 740, 741, 742, 743, 0, 744, 745, 1384, 739,
	728, 0, 746, 747, 748, 749, 750, 751, 752, 753,
	754, 755, 0, 756, 1478, 1479, 1480, 1481, 0, 768,
	0, 757, 759, 760, 761, 762, 1490, 763, 1491, 1409,
	764, 765, 766, 767, 758, 769, 770, 0, 1391, 771,
	772, 773, 774, 776, 778, 779, 780, 775, 777, 781,
	1450, 782, 0, 0, 783, 784, 785, 854, 1475, 1495,
	0, 787, 788, 786, 789, 790, 793, 791, 792, 857,
	796, 513, 797, 798, 799, 794, 795, 0, 0, 0,
	0, 800, 801, 858, 802, 803, 804, 1388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1383, 0, 0, 0, 0, 0, 0,
	1381, 1382, 0, 0, 0, 0, 0, 0, 864, 0,
	1415, 0, 0, 0, 1413, 1460, 1403, 1404, 1405, 1401,
	1402, 1414, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 346, 348, 347, 349, 350, 351, 352,
	0, 353, 354, 0, 0, 0, 0, 0, 1452, 1419,
	0, 0, 356, 0, 355, 0, 357, 358, 359, 874,
	360, 361, 362, 363, 364, 365, 366, 367, 806, 1466,
	0, 368, 1474, 369, 1473, 0, 1484, 370, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 1421, 1451, 0,
	380, 1497, 1498, 813, 0, 381, 382, 383, 384, 1458,
	0, 1439, 0, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 0, 394, 395, 396, 393, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 408, 409, 876, 410, 411, 412, 1442, 1440, 1441,
	1448, 1444, 1443, 1447, 413, 414, 415, 416, 417, 1477,
	418, 420, 421, 1471, 422, 1470, 0, 425, 427, 419,
	423, 0, 426, 424, 428, 429, 0, 430, 431, 432,
	433, 0, 0, 434, 1469, 436, 0, 437, 438, 440,
	439, 0, 441, 442, 443, 0, 444, 445, 1397, 446,
	447, 448, 450, 452, 449, 451, 453, 454, 455, 456,
	457, 1485, 1486, 458, 459, 1410, 340, 0, 0, 0,
	0, 0, 460, 461, 462, 1468, 0, 0, 0, 463,
	0, 465, 469, 466, 467, 468, 470, 0, 464, 471,
	472, 0, 877, 473, 474, 475, 1482, 1483, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 486,
	1492, 0, 1420, 487, 0, 488, 489, 490, 491, 492,
	493, 494, 1453, 1454, 1457, 595, 879, 495, 496, 497,
	0, 498, 499, 500, 501, 502, 503, 504, 0, 0,
	0, 505, 506, 507, 508, 0, 867, 341, 343, 878,
	828, 509, 596, 510, 1463, 1464, 0, 1424, 0, 511,
	512, 515, 880, 1455, 881, 514, 516, 517, 882, 518,
	0, 0, 0, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 528, 527, 0, 530, 1493, 529, 883, 531,
	532, 884, 0, 533, 534, 535, 536, 537, 538, 541,
	1446, 1445, 539, 540, 542, 543, 0, 544, 545, 547,
	550, 546, 548, 549, 551, 552, 565, 566, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	568, 0, 567, 885, 569, 570, 571, 572, 573, 581,
	583, 584, 579, 580, 582, 585, 586, 588, 589, 576,
	577, 578, 886, 587, 574, 0, 575, 344, 887, 590,
	591, 592, 593, 1411, 1456, 594, 1472, 597, 598, 0,
	0, 599, 0, 600, 0, 0, 602, 603, 604, 0,
	0, 605, 606, 836, 888, 607, 889, 1487, 608, 609,
	1398, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 0, 620, 621, 838, 622, 623, 624, 839, 625,
	626, 627, 1488, 628, 841, 629, 630, 0, 631, 632,
	633, 0, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 1467, 644, 645, 647, 646, 648, 649, 0,
	650, 0, 651, 652, 653, 0, 0, 0, 0, 0,
	654, 655, 657, 0, 658, 659, 660, 661, 662, 656,
	663, 664, 665, 666, 667, 668, 669, 0, 671, 672,
	670, 673, 674, 890, 675, 676, 677, 678, 679, 1399,
	680, 0, 681, 682, 690, 691, 692, 683, 684, 686,
	693, 685, 694, 695, 696, 697, 699, 698, 0, 701,
	702, 700, 703, 704, 705, 706, 1449, 707, 844, 708,
	687, 688, 709, 710, 711, 891, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 1465, 0, 721, 0, 722,
	723, 724, 725, 726, 727, 729, 689, 730, 731, 732,
	737, 738, 1496, 733, 734, 735, 736, 1489, 740, 741,
	742, 743, 0, 744, 745, 0, 739, 728, 0, 746,
	747, 748, 749, 750, 751, 752, 753, 754, 755, 0,
	756, 1478, 1479, 1480, 1481, 0, 768, 0, 757, 759,
	760, 761, 762, 1490, 763, 1491, 1409, 764, 765, 766,
	767, 758, 769, 770, 0, 0, 771, 772, 773, 774,
	776, 778, 779, 780, 775, 777, 781, 1450, 782, 0,
	0, 783, 784, 785, 854, 1475, 1495, 0, 787, 788,
	786, 789, 790, 793, 791, 792, 857, 796, 513, 797,
	798, 799, 794, 795, 0, 0, 0, 0, 800, 801,
	858, 802, 803, 804, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3285, 0, 0, 0, 0, 0, 0, 3283, 3284, 0,
	0, 0, 0, 0, 0, 864, 0, 1415, 0, 0,
	0, 1413, 1460, 1403, 1404, 1405, 1401, 1402, 1414, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	346, 348, 347, 349, 350, 351, 352, 0, 353, 354,
	0, 0, 0, 0, 0, 1452, 1419, 0, 0, 356,
	0, 355, 0, 357, 358, 359, 874, 360, 361, 362,
	363, 364, 365, 366, 367, 806, 1466, 0, 368, 1474,
	369, 1473, 0, 1484, 370, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 1421, 1451, 0, 380, 1497, 1498,
	813, 0, 381, 382, 383, 384, 1458, 0, 1439, 0,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 0,
	394, 395, 396, 393, 397, 398, 0, 399, 0, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 408, 409,
	876, 410, 411, 412, 1442, 1440, 1441, 1448, 1444, 1443,
	1447, 413, 414, 415, 416, 417, 1477, 418, 420, 421,
	1471, 422, 1470, 0, 425, 427, 419, 423, 0, 426,
	424, 428, 429, 0, 430, 431, 432, 433, 0, 0,
	434, 1469, 436, 0, 437, 438, 440, 439, 0, 441,
	442, 443, 0, 444, 445, 1397, 446, 447, 448, 450,
	452, 449, 451, 453, 454, 455, 456, 457, 1485, 1486,
	458, 459, 1410, 340, 0, 0, 0, 0, 0, 460,
	461, 462, 1468, 0, 0, 0, 463, 0, 465, 469,
	466, 467, 468, 470, 0, 464, 471, 472, 0, 877,
	473, 474, 475, 1482, 1483, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 486, 1492, 0, 1420,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 1453,
	1454, 1457, 595, 879, 495, 496, 497, 0, 498, 499,
	500, 501, 502, 503, 504, 0, 0, 0, 505, 506,
	507, 508, 0, 867, 341, 343, 878, 828, 509, 596,
	510, 1463, 1464, 0, 1424, 0, 511, 512, 515, 880,
	1455, 881, 514, 516, 517, 882, 518, 0, 0, 0,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 528,
	527, 0, 530, 1493, 529, 883, 531, 532, 884, 0,
	533, 534, 535, 536, 537, 538, 541, 1446, 1445, 539,
	540, 542, 543, 0, 544, 545, 547, 550, 546, 548,
	549, 551, 552, 565, 566, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 568, 0, 567,
	885, 569, 570, 571, 572, 573, 581, 583, 584, 579,
	580, 582, 585, 586, 588, 589, 576, 577, 578, 886,
	587, 574, 0, 575, 344, 887, 590, 591, 592, 593,
	1411, 1456, 594, 1472, 597, 598, 0, 0, 599, 0,
	600, 0, 0, 602, 603, 604, 0, 0, 605, 606,
	836, 888, 607, 889, 1487, 608, 609, 601, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 0, 620,
	621, 838, 622, 623, 624, 839, 625, 626, 627, 1488,
	628, 841, 629, 630, 0, 631, 632, 633, 0, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 1467,
	644, 645, 647, 646, 648, 649, 0, 650, 0, 651,
	652, 653, 0, 0, 0, 0, 0, 654, 655, 657,
	0, 658, 659, 660, 661, 662, 656, 663, 664, 665,
	666, 667, 668, 669, 0, 671, 672, 670, 673, 674,
	890, 675, 676, 677, 678, 679, 4507, 4508, 0, 681,
	682, 690, 691, 692, 683, 684, 686, 693, 685, 694,
	695, 696, 697, 699, 698, 0, 701, 702, 700, 703,
	704, 705, 706, 1449, 707, 844, 708, 687, 688, 709,
	710, 711, 891, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 1465, 0, 721, 0, 722, 723, 724, 725,
	726, 727, 729, 689, 730, 731, 732, 737, 738, 1496,
	733, 734, 735, 736, 1489, 740, 741, 742, 743, 0,
	744, 745, 0, 739, 728, 0, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 0, 756, 1478, 1479,
	1480, 1481, 0, 768, 0, 757, 759, 760, 761, 762,
	1490, 763, 1491, 1409, 764, 765, 766, 767, 758, 769,
	770, 0, 0, 771, 772, 773, 774, 776, 778, 779,
	780, 775, 777, 781, 1450, 782, 0, 0, 783, 784,
	785, 854, 1475, 1495, 0, 787, 788, 786, 789, 790,
	793, 791, 792, 857, 796, 513, 797, 798, 799, 794,
	795, 0, 0, 0, 0, 800, 801, 858, 802, 803,
	804, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2561, 2562, 0, 0, 0, 0,
	0, 0, 864, 0, 1415, 0, 0, 0, 1413, 1460,
	1403, 1404, 1405, 1401, 1402, 1414, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 346, 348, 347,
	349, 350, 351, 352, 0, 353, 354, 0, 0, 0,
	0, 0, 1452, 1419, 0, 0, 356, 0, 355, 0,
	357, 358, 359, 874, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 1466, 0, 368, 1474, 369, 1473, 0,
	1484, 370, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 1421, 1451, 1385, 380, 1497, 1498, 813, 0, 381,
	382, 383, 384, 1458, 0, 1439, 0, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 0, 394, 395, 396,
	393, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 408, 409, 876, 410, 411,
	6577, 1442, 1440, 1441, 1448, 1444, 1443, 1447, 413, 414,
	415, 416, 417, 1477, 418, 420, 421, 1471, 422, 1470,
	1390, 425, 427, 419, 423, 0, 426, 424, 428, 429,
	0, 430, 431, 432, 433, 0, 0, 434, 1469, 436,
	0, 437, 438, 440, 439, 0, 441, 442, 443, 0,
	444, 445, 1397, 446, 447, 448, 450, 452, 449, 451,
	453, 454, 455, 456, 457, 1485, 1486, 458, 459, 1410,
	340, 0, 0, 0, 0, 0, 460, 461, 462, 1468,
	0, 0, 0, 463, 0, 465, 469, 466, 467, 468,
	470, 0, 464, 471, 472, 0, 877, 473, 474, 475,
	1482, 1483, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 0, 485, 486, 1492, 0, 1420, 487, 0, 488,
	489, 490, 491, 492, 493, 494, 1453, 1454, 1457, 595,
	0, 495, 496, 497, 0, 498, 499, 500, 501, 502,
	503, 504, 0, 0, 0, 505, 506, 507, 508, 0,
	867, 341, 343, 878, 828, 509, 596, 510, 1463, 1464,
	0, 1424, 0, 511, 512, 515, 0, 1455, 0, 514,
	516, 517, 882, 518, 0, 0, 0, 519, 520, 521,
	522, 523, 524, 525, 0, 526, 528, 527, 0, 530,
	1493, 529, 883, 531, 532, 0, 0, 533, 534, 535,
	536, 537, 538, 541, 1446, 1445, 539, 540, 542, 543,
	0, 544, 545, 547, 550, 546, 548, 549, 551, 552,
	565, 566, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 568, 0, 567, 885, 569, 570,
	571, 572, 573, 581, 583, 584, 579, 580, 582, 585,
	586, 588, 589, 576, 577, 578, 886, 587, 574, 1387,
	575, 344, 0, 590, 591, 592, 593, 1411, 1456, 594,
	1472, 597, 598, 0, 0, 599, 0, 600, 0, 0,
	602, 603, 604, 0, 0, 605, 606, 836, 888, 607,
	889, 1487, 608, 609, 1398, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 0, 620, 621, 838, 622,
	623, 624, 839, 625, 626, 627, 1488, 628, 841, 629,
	630, 0, 631, 632, 633, 0, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 1467, 644, 645, 647,
	646, 648, 649, 0, 650, 0, 651, 652, 653, 0,
	0, 0, 0, 0, 654, 655, 657, 0, 658, 659,
	660, 661, 662, 656, 663, 664, 665, 666, 667, 668,
	669, 0, 671, 672, 670, 673, 674, 890, 675, 676,
	677, 678, 679, 1399, 680, 0, 681, 682, 690, 691,
	692, 683, 684, 686, 693, 685, 694, 695, 696, 697,
	699, 698, 0, 701, 702, 700, 703, 704, 705, 706,
	1449, 707, 844, 708, 687, 688, 709, 710, 711, 0,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 1465,
	0, 721, 0, 722, 723, 724, 725, 726, 727, 729,
	689, 730, 731, 732, 737, 738, 1496, 733, 734, 735,
	736, 1489, 740, 741, 742, 743, 0, 744, 745, 1384,
	739, 728, 0, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 755, 0, 756, 1478, 1479, 1480, 1481, 0,
	768, 0, 757, 759, 760, 761, 762, 1490, 763, 1491,
	1409, 764, 765, 766, 767, 758, 6576, 770, 0, 1391,
	771, 772, 773, 774, 776, 778, 779, 780, 775, 777,
	781, 1450, 782, 0, 0, 783, 784, 785, 854, 1475,
	1495, 0, 787, 788, 786, 789, 790, 793, 791, 792,
	857, 796, 513, 797, 798, 799, 794, 795, 0, 0,
	0, 0, 800, 801, 858, 802, 803, 804, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1381, 1382, 0, 0, 0, 0, 0, 0, 864,
	0, 1415, 0, 0, 3304, 1413, 1460, 1403, 1404, 1405,
	1401, 1402, 1414, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 346, 348, 347, 349, 350, 351,
	352, 0, 353, 354, 0, 0, 0, 0, 0, 1452,
	1419, 0, 0, 356, 0, 355, 0, 357, 358, 359,
	874, 360, 361, 362, 363, 364, 365, 366, 367, 806,
	1466, 0, 368, 1474, 369, 1473, 0, 1484, 370, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 0, 1451,
	0, 380, 1497, 1498, 813, 0, 381, 382, 383, 384,
	1458, 0, 1439, 0, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 0, 394, 395, 396, 393, 397, 398,
	0, 399, 0, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 408, 409, 876, 410, 411, 412, 1442, 1440,
	1441, 1448, 1444, 1443, 1447, 413, 414, 415, 416, 417,
	1477, 418, 420, 421, 1471, 422, 1470, 0, 425, 427,
	419, 423, 0, 426, 424, 428, 429, 0, 430, 431,
	432, 433, 0, 0, 434, 1469, 436, 0, 437, 438,
	440, 439, 0, 441, 442, 443, 0, 444, 445, 817,
	446, 447, 448, 450, 452, 449, 451, 453, 454, 455,
	456, 457, 1485, 1486, 458, 459, 1410, 340, 0, 0,
	0, 0, 0, 460, 461, 462, 1468, 0, 0, 0,
	463, 0, 465, 469, 466, 467, 468, 470, 0, 464,
	471, 472, 0, 877, 473, 474, 475, 1482, 1483, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	486, 1492, 0, 1420, 487, 0, 488, 489, 490, 491,
	492, 493, 494, 1453, 1454, 1457, 595, 879, 495, 496,
	497, 0, 498, 499, 500, 501, 502, 503, 504, 0,
	0, 0, 505, 506, 507, 508, 0, 867, 341, 343,
	878, 828, 509, 596, 510, 1463, 1464, 0, 1424, 0,
	511, 512, 515, 880, 1455, 881, 514, 516, 517, 882,
	518, 0, 0, 0, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 528, 527, 0, 530, 1493, 529, 883,
	531, 532, 884, 0, 533, 534, 535, 536, 537, 538,
	541, 1446, 1445, 539, 540, 542, 543, 0, 544, 545,
	547, 550, 546, 548, 549, 551, 552, 565, 566, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 568, 0, 567, 885, 569, 570, 571, 572, 573,
	581, 583, 584, 579, 580, 582, 585, 586, 588, 589,
	576, 577, 578, 886, 587, 574, 0, 575, 344, 887,
	590, 591, 592, 593, 1411, 1456, 594, 1472, 597, 598,
	0, 0, 599, 0, 600, 0, 0, 602, 603, 604,
	0, 0, 605, 606, 836, 888, 607, 889, 1487, 608,
	609, 601, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 0, 620, 621, 838, 622, 623, 624, 839,
	625, 626, 627, 1488, 628, 841, 629, 630, 0, 631,
	632, 633, 0, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 1467, 644, 645, 647, 646, 648, 649,
	0, 650, 0, 651, 652, 653, 0, 0, 0, 0,
	0, 654, 655, 657, 0, 658, 659, 660, 661, 662,
	656, 663, 664, 665, 666, 667, 668, 669, 0, 671,
	672, 670, 673, 674, 890, 675, 676, 677, 678, 679,
	1399, 680, 0, 681, 682, 690, 691, 692, 683, 684,
	686, 693, 685, 694, 695, 696, 697, 699, 698, 0,
	701, 702, 700, 703, 704, 705, 706, 1449, 707, 844,
	708, 687, 688, 709, 710, 711, 891, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 1465, 0, 721, 0,
	722, 723, 724, 725, 726, 727, 729, 689, 730, 731,
	732, 737, 738, 1496, 733, 734, 735, 736, 1489, 740,
	741, 742, 743, 0, 744, 745, 0, 739, 728, 0,
	746, 747, 748, 749, 750, 751, 752, 753, 754, 755,
	0, 756, 1478, 1479, 1480, 1481, 0, 768, 0, 757,
	759, 760, 761, 762, 1490, 763, 1491, 1409, 764, 765,
	766, 767, 758, 769, 770, 0, 0, 771, 772, 773,
	774, 776, 778, 779, 780, 775, 777, 781, 1450, 782,
	0, 0, 783, 784, 785, 854, 1475, 1495, 0, 787,
	788, 786, 789, 790, 793, 791, 792, 857, 796, 513,
	797, 798, 799, 794, 795, 0, 0, 0, 0, 800,
	801, 858, 802, 803, 804, 2040, 0, 1460, 1403, 1404,
	1405, 1401, 1402, 1414, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 346, 348, 347, 349, 350,
	351, 352, 0, 353, 354, 0, 1629, 0, 1415, 0,
	1452, 1419, 1413, 0, 356, 0, 355, 0, 357, 358,
	359, 874, 360, 361, 362, 363, 364, 365, 366, 367,
	806, 1466, 0, 368, 1474, 369, 1473, 0, 1484, 370,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 0,
	1451, 0, 380, 1497, 1498, 813, 0, 381, 382, 383,
	384, 1458, 0, 1439, 0, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 0, 394, 395, 396, 393, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 408, 409, 876, 410, 411, 412, 1442,
	1440, 1441, 1448, 1444, 1443, 1447, 413, 414, 415, 416,
	417, 1477, 418, 420, 421, 1471, 422, 1470, 0, 425,
	427, 419, 423, 0, 426, 424, 428, 429, 0, 430,
	431, 432, 433, 0, 0, 434, 1469, 436, 0, 437,
	438, 440, 439, 0, 441, 442, 443, 0, 444, 445,
	817, 446, 447, 448, 450, 452, 449, 451, 453, 454,
	455, 456, 457, 1485, 1486, 458, 459, 1410, 340, 0,
	0, 0, 0, 0, 460, 461, 462, 1468, 0, 0,
	0, 463, 0, 465, 469, 466, 467, 468, 470, 0,
	464, 471, 472, 0, 877, 473, 474, 475, 1482, 1483,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 0,
	485, 486, 1492, 0, 1420, 487, 0, 488, 489, 490,
	491, 492, 493, 494, 2039, 1454, 1457, 595, 879, 495,
	496, 497, 0, 498, 499, 500, 501, 502, 503, 504,
	0, 0, 0, 505, 506, 507, 508, 0, 867, 341,
	343, 878, 828, 509, 596, 510, 1463, 1464, 0, 1424,
	0, 511, 512, 515, 880, 1455, 881, 514, 516, 517,
	882, 518, 0, 0, 0, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 528, 527, 0, 530, 1493, 529,
	883, 531, 532, 884, 0, 533, 534, 535, 536, 537,
	538, 541, 1446, 1445, 539, 540, 542, 543, 0, 544,
	545, 547, 550, 546, 548, 549, 551, 552, 565, 566,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 568, 0, 567, 885, 569, 570, 571, 572,
	573, 581, 583, 584, 579, 580, 582, 585, 586, 588,
	589, 576, 577, 578, 886, 587, 574, 0, 575, 344,
	887, 590, 591, 592, 593, 1411, 1456, 594, 1472, 597,
	598, 0, 0, 599, 0, 600, 0, 0, 602, 603,
	604, 0, 0, 605, 606, 836, 888, 607, 889, 1487,
	608, 609, 601, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 620, 621, 838, 622, 623, 624,
	839, 625, 626, 627, 1488, 628, 841, 629, 630, 0,
	631, 632, 633, 0, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 1467, 644, 645, 647, 646, 648,
	649, 0, 650, 0, 651, 652, 653, 0, 0, 0,
	0, 0, 654, 655, 657, 0, 658, 659, 660, 661,
	662, 656, 663, 664, 665, 666, 667, 668, 669, 0,
	671, 672, 670, 673, 674, 890, 675, 676, 677, 678,
	679, 1399, 680, 0, 681, 682, 690, 691, 692, 683,
	684, 686, 693, 685, 694, 695, 696, 697, 699, 698,
	0, 701, 702, 700, 703, 704, 705, 706, 1449, 707,
	844, 708, 687, 688, 709, 710, 711, 891, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 1465, 0, 721,
	0, 722, 723, 724, 725, 726, 727, 729, 689, 730,
	731, 732, 737, 738, 1496, 733, 734, 735, 736, 1489,
	740, 741, 742, 743, 0, 744, 745, 0, 739, 728,
	0, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	755, 0, 756, 1478, 1479, 1480, 1481, 0, 768, 0,
	757, 759, 760, 761, 762, 1490, 763, 1491, 1409, 764,
	765, 766, 767, 758, 769, 770, 0, 0, 771, 772,
	773, 774, 776, 778, 779, 780, 775, 777, 781, 1450,
	782, 0, 0, 783, 784, 785, 854, 1475, 1495, 0,
	787, 788, 786, 789, 790, 793, 791, 792, 857, 796,
	513, 797, 798, 799, 794, 795, 0, 0, 0, 0,
	800, 801, 858, 802, 803, 804, 1988, 0, 1460, 1403,
	1404, 1405, 1401, 1402, 1414, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 346, 348, 347, 349,
	350, 351, 352, 0, 353, 354, 0, 864, 0, 1415,
	0, 1452, 1419, 1413, 0, 356, 0, 355, 0, 357,
	358, 359, 874, 360, 361, 362, 363, 364, 365, 366,
	367, 806, 1466, 0, 368, 1474, 369, 1473, 0, 1484,
	370, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	0, 1451, 0, 380, 1497, 1498, 813, 0, 381, 382,
	383, 384, 1458, 0, 1439, 0, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 0, 394, 395, 396, 393,
	397, 398, 0, 399, 0, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 408, 409, 876, 410, 411, 412,
	1442, 1440, 1441, 1448, 1444, 1443, 1447, 413, 414, 415,
	416, 417, 1477, 418, 420, 421, 1471, 422, 1470, 0,
	425, 427, 419, 423, 0, 426, 424, 428, 429, 0,
	430, 431, 432, 433, 0, 0, 434, 1469, 436, 0,
	437, 438, 440, 439, 0, 441, 442, 443, 0, 444,
	445, 817, 446, 447, 448, 450, 452, 449, 451, 453,
	454, 455, 456, 457, 1485, 1486, 458, 459, 1410, 340,
	0, 0, 0, 0, 0, 460, 461, 462, 1468, 0,
	0, 0, 463, 0, 465, 469, 466, 467, 468, 470,
	0, 464, 471, 472, 0, 877, 473, 474, 475, 1482,
	1483, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 486, 1492, 0, 1420, 487, 0, 488, 489,
	490, 491, 492, 493, 494, 1453, 1454, 1457, 595, 879,
	495, 496, 497, 0, 498, 499, 500, 501, 502, 503,
	504, 0, 0, 0, 505, 506, 507, 508, 0, 867,
	341, 343, 878, 828, 509, 596, 510, 1463, 1464, 0,
	1424, 0, 511, 512, 515, 880, 1455, 881, 514, 516,
	517, 882, 518, 0, 0, 0, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 528, 527, 0, 530, 1493,
	529, 883, 531, 532, 884, 0, 533, 534, 535, 536,
	537, 538, 541, 1446, 1445, 539, 540, 542, 543, 0,
	544, 545, 547, 550, 546, 548, 549, 551, 552, 565,
	566, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 568, 0, 567, 885, 569, 570, 571,
	572, 573, 581, 583, 584, 579, 580, 582, 585, 586,
	588, 589, 576, 577, 578, 886, 587, 574, 0, 575,
	344, 887, 590, 591, 592, 593, 1411, 1456, 594, 1472,
	597, 598, 0, 0, 599, 0, 600, 0, 0, 602,
	603, 604, 0, 0, 605, 606, 836, 888, 607, 889,
	1487, 608, 609, 601, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 0, 620, 621, 838, 622, 623,
	624, 839, 625, 626, 627, 1488, 628, 841, 629, 630,
	0, 631, 632, 633, 0, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 1467, 644, 645, 647, 646,
	648, 649, 0, 650, 0, 651, 652, 653, 0, 0,
	0, 0, 0, 654, 655, 657, 0, 658, 659, 660,
	661, 662, 656, 663, 664, 665, 666, 667, 668, 669,
	0, 671, 672, 670, 673, 674, 890, 675, 676, 677,
	678, 679, 1399, 680, 0, 681, 682, 690, 691, 692,
	683, 684, 686, 693, 685, 694, 695, 696, 697, 699,
	698, 0, 701, 702, 700, 703, 704, 705, 706, 1449,
	707, 844, 708, 687, 688, 709, 710, 711, 891, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 1465, 0,
	721, 0, 722, 723, 724, 725, 726, 727, 729, 689,
	730, 731, 732, 737, 738, 1496, 733, 734, 735, 736,
	1489, 740, 741, 742, 743, 0, 744, 745, 0, 739,
	728, 0, 746, 747, 748, 749, 750, 751, 752, 753,
	754, 755, 0, 756, 1478, 1479, 1480, 1481, 0, 768,
	0, 757, 759, 760, 761, 762, 1490, 763, 1491, 1409,
	764, 765, 766, 767, 758, 769, 770, 0, 0, 771,
	772, 773, 774, 776, 778, 779, 780, 775, 777, 781,
	1450, 782, 0, 0, 783, 784, 785, 854, 1475, 1495,
	0, 787, 788, 786, 789, 790, 793, 791, 792, 857,
	796, 513, 797, 798, 799, 794, 795, 0, 0, 0,
	0, 800, 801, 858, 802, 803, 804, 1627, 0, 1460,
	1403, 1404, 1405, 1401, 1402, 1414, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 346, 348, 347,
	349, 350, 351, 352, 0, 353, 354, 0, 1629, 0,
	1415, 0, 1452, 1419, 1413, 0, 356, 0, 355, 0,
	357, 358, 359, 874, 360, 361, 362, 363, 364, 365,
	366, 367, 806, 1466, 0, 368, 1474, 369, 1473, 0,
	1484, 370, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 0, 1451, 0, 380, 1497, 1498, 813, 0, 381,
	382, 383, 384, 1458, 0, 1439, 0, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 0, 394, 395, 396,
	393, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 408, 409, 876, 410, 411,
	412, 1442, 1440, 1441, 1448, 1444, 1443, 1447, 413, 414,
	415, 416, 417, 1477, 418, 420, 421, 1471, 422, 1470,
	0, 425, 427, 419, 423, 0, 426, 424, 428, 429,
	0, 430, 431, 432, 433, 0, 0, 434, 1469, 436,
	0, 437, 438, 440, 439, 0, 441, 442, 443, 0,
	444, 445, 817, 446, 447, 448, 450, 452, 449, 451,
	453, 454, 455, 456, 457, 1485, 1486, 458, 459, 1410,
	340, 0, 0, 0, 0, 0, 460, 461, 462, 1468,
	0, 0, 0, 463, 0, 465, 469, 466, 467, 468,
	470, 0, 464, 471, 472, 0, 877, 473, 474, 475,
	1482, 1483, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 0, 485, 486, 1492, 0, 1420, 487, 0, 488,
	489, 490, 491, 492, 493, 494, 1626, 1454, 1457, 595,
	879, 495, 496, 497, 0, 498, 499, 500, 501, 502,
	503, 504, 0, 0, 0, 505, 506, 507, 508, 0,
	867, 341, 343, 878, 828, 509, 596, 510, 1463, 1464,
	0, 1424, 0, 511, 512, 515, 880, 1455, 881, 514,
	516, 517, 882, 518, 0, 0, 0, 519, 520, 521,
	522, 523, 524, 525, 0, 526, 528, 527, 0, 530,
	1493, 529, 883, 531, 532, 884, 0, 533, 534, 535,
	536, 537, 538, 541, 1446, 1445, 539, 540, 542, 543,
	0, 544, 545, 547, 550, 546, 548, 549, 551, 552,
	565, 566, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 568, 0, 567, 885, 569, 570,
	571, 572, 573, 581, 583, 584, 579, 580, 582, 585,
	586, 588, 589, 576, 577, 578, 886, 587, 574, 0,
	575, 344, 887, 590, 591, 592, 593, 1411, 1456, 594,
	1472, 597, 598, 0, 0, 599, 0, 600, 0, 0,
	602, 603, 604, 0, 0, 605, 606, 836, 888, 607,
	889, 1487, 608, 609, 601, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 0, 620, 621, 838, 622,
	623, 624, 839, 625, 626, 627, 1488, 628, 841, 629,
	630, 0, 631, 632, 633, 0, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 1467, 644, 645, 647,
	646, 648, 649, 0, 650, 0, 651, 652, 653, 0,
	0, 0, 0, 0, 654, 655, 657, 0, 658, 659,
	660, 661, 662, 656, 663, 664, 665, 666, 667, 668,
	669, 0, 671, 672, 670, 673, 674, 890, 675, 676,
	677, 678, 679, 1399, 680, 0, 681, 682, 690, 691,
	692, 683, 684, 686, 693, 685, 694, 695, 696, 697,
	699, 698, 0, 701, 702, 700, 703, 704, 705, 706,
	1449, 707, 844, 708, 687, 688, 709, 710, 711, 891,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 1465,
	0, 721, 0, 722, 723, 724, 725, 726, 727, 729,
	689, 730, 731, 732, 737, 738, 1496, 733, 734, 735,
	736, 1489, 740, 741, 742, 743, 0, 744, 745, 0,
	739, 728, 0, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 755, 0, 756, 1478, 1479, 1480, 1481, 0,
	768, 0, 757, 759, 760, 761, 762, 1490, 763, 1491,
	1409, 764, 765, 766, 767, 758, 769, 770, 0, 0,
	771, 772, 773, 774, 776, 778, 779, 780, 775, 777,
	781, 1450, 782, 0, 0, 783, 784, 785, 854, 1475,
	1495, 0, 787, 788, 786, 789, 790, 793, 791, 792,
	857, 796, 513, 797, 798, 799, 794, 795, 0, 0,
	0, 0, 800, 801, 858, 802, 803, 804, 0, 1460,
	1403, 1404, 1405, 1401, 1402, 1414, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 346, 348, 347,
	349, 350, 351, 352, 0, 353, 354, 0, 0, 1629,
	0, 1415, 1452, 1419, 0, 1413, 356, 0, 355, 0,
	357, 358, 359, 874, 360, 361, 362, 363, 364, 365,
	366, 367, 806, 1466, 0, 368, 1474, 369, 1473, 0,
	1484, 370, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 0, 1451, 0, 380, 1497, 1498, 813, 0, 381,
	382, 383, 384, 1458, 0, 1439, 0, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 0, 394, 395, 396,
	393, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 408, 409, 876, 410, 411,
	412, 1442, 1440, 1441, 1448, 1444, 1443, 1447, 413, 414,
	415, 416, 417, 1477, 418, 420, 421, 1471, 422, 1470,
	0, 425, 427, 419, 423, 0, 426, 424, 428, 429,
	0, 430, 431, 432, 433, 0, 0, 434, 1469, 436,
	0, 437, 438, 440, 439, 0, 441, 442, 443, 0,
	444, 445, 817, 446, 447, 448, 450, 452, 449, 451,
	453, 454, 455, 456, 457, 1485, 1486, 458, 459, 1410,
	340, 0, 0, 0, 0, 0, 460, 461, 462, 1468,
	0, 0, 0, 463, 0, 465, 469, 466, 467, 468,
	470, 0, 464, 471, 472, 0, 877, 473, 474, 475,
	1482, 1483, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 0, 485, 486, 1492, 0, 1420, 487, 0, 488,
	489, 490, 491, 492, 493, 494, 1453, 1454, 1457, 595,
	879, 495, 496, 497, 0, 498, 499, 500, 501, 502,
	503, 504, 0, 0, 0, 505, 506, 507, 508, 0,
	867, 341, 343, 878, 828, 509, 596, 510, 1463, 1464,
	0, 1424, 0, 511, 512, 515, 880, 1455, 881, 514,
	516, 517, 882, 518, 0, 0, 0, 519, 520, 521,
	522, 523, 524, 525, 0, 526, 528, 527, 0, 530,
	1493, 529, 883, 531, 532, 884, 0, 533, 534, 535,
	536, 537, 538, 541, 1446, 1445, 539, 540, 542, 543,
	0, 544, 545, 547, 550, 546, 548, 549, 551, 552,
	565, 566, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 568, 0, 567, 885, 569, 570,
	571, 572, 573, 581, 583, 584, 579, 580, 582, 585,
	586, 588, 589, 576, 577, 578, 886, 587, 574, 0,
	575, 344, 887, 590, 591, 592, 593, 1411, 1456, 594,
	1472, 597, 598, 0, 0, 599, 0, 600, 0, 0,
	602, 603, 604, 0, 0, 605, 606, 836, 888, 607,
	889, 1487, 608, 609, 601, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 0, 620, 621, 838, 622,
	623, 624, 839, 625, 626, 627, 1488, 628, 841, 629,
	630, 0, 631, 632, 633, 0, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 1467, 644, 645, 647,
	646, 648, 649, 0, 650, 0, 651, 652, 653, 0,
	0, 0, 0, 0, 654, 655, 657, 0, 658, 659,
	660, 661, 662, 656, 663, 664, 665, 666, 667, 668,
	669, 0, 671, 672, 670, 673, 674, 890, 675, 676,
	677, 678, 679, 1399, 680, 0, 681, 682, 690, 691,
	692, 683, 684, 686, 693, 685, 694, 695, 696, 697,
	699, 698, 0, 701, 702, 700, 703, 704, 705, 706,
	1449, 707, 844, 708, 687, 688, 709, 710, 711, 891,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 1465,
	0, 721, 0, 722, 723, 724, 725, 726, 727, 729,
	689, 730, 731, 732, 737, 738, 1496, 733, 734, 735,
	736, 1489, 740, 741, 742, 743, 0, 744, 745, 0,
	739, 728, 0, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 755, 0, 756, 1478, 1479, 1480, 1481, 0,
	768, 0, 757, 759, 760, 761, 762, 1490, 763, 1491,
	1409, 764, 765, 766, 767, 758, 769, 770, 0, 0,
	771, 772, 773, 774, 776, 778, 779, 780, 775, 777,
	781, 1450, 782, 0, 0, 783, 784, 785, 854, 1475,
	1495, 0, 787, 788, 786, 789, 790, 793, 791, 792,
	857, 796, 513, 797, 798, 799, 794, 795, 0, 0,
	0, 0, 800, 801, 858, 802, 803, 804, 0, 1460,
	1403, 1404, 1405, 1401, 1402, 1414, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 346, 348, 347,
	349, 350, 351, 352, 0, 353, 354, 0, 0, 864,
	0, 1415, 1452, 1419, 0, 1413, 356, 0, 355, 0,
	357, 358, 359, 874, 360, 361, 362, 363, 364, 365,
	366, 367, 806, 1466, 0, 368, 1474, 369, 1473, 0,
	1484, 370, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 0, 1451, 0, 380, 1497, 1498, 813, 0, 381,
	382, 383, 384, 1458, 0, 1439, 0, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 0, 394, 395, 396,
	393, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 408, 409, 876, 410, 411,
	412, 1442, 1440, 1441, 1448, 1444, 1443, 1447, 413, 414,
	415, 416, 417, 1477, 418, 420, 421, 1471, 422, 1470,
	0, 425, 427, 419, 423, 0, 426, 424, 428, 429,
	0, 430, 431, 432, 433, 0, 0, 434, 1469, 436,
	0, 437, 438, 440, 439, 0, 441, 442, 443, 0,
	444, 445, 817, 446, 447, 448, 450, 452, 449, 451,
	453, 454, 455, 456, 457, 1485, 1486, 458, 459, 1410,
	340, 0, 0, 0, 0, 0, 460, 461, 462, 1468,
	0, 0, 0, 463, 0, 465, 469, 466, 467, 468,
	470, 0, 464, 471, 472, 0, 877, 473, 474, 475,
	1482, 1483, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 0, 485, 486, 1492, 0, 1420, 487, 0, 488,
	489, 490, 491, 492, 493, 494, 1453, 1454, 1457, 595,
	879, 495, 496, 497, 0, 498, 499, 500, 501, 502,
	503, 504, 0, 0, 0, 505, 506, 507, 508, 0,
	867, 341, 343, 878, 828, 509, 596, 510, 1463, 1464,
	0, 1424, 0, 511, 512, 515, 880, 1455, 881, 514,
	516, 517, 882, 518, 0, 0, 0, 519, 520, 521,
	522, 523, 524, 525, 0, 526, 528, 527, 0, 530,
	1493, 529, 883, 531, 532, 884, 0, 533, 534, 535,
	536, 537, 538, 541, 1446, 1445, 539, 540, 542, 543,
	0, 544, 545, 547, 550, 546, 548, 549, 551, 552,
	565, 566, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 568, 0, 567, 885, 569, 570,
	571, 572, 573, 581, 583, 584, 579, 580, 582, 585,
	586, 588, 589, 576, 577, 578, 886, 587, 574, 0,
	575, 344, 887, 590, 591, 592, 593, 1411, 1456, 594,
	1472, 597, 598, 0, 0, 599, 0, 600, 0, 0,
	602, 603, 604, 0, 0, 605, 606, 836, 888, 607,
	889, 1487, 608, 609, 601, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 0, 620, 621, 838, 622,
	623, 624, 839, 625, 626, 627, 1488, 628, 841, 629,
	630, 0, 631, 632, 633, 0, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 1467, 644, 645, 647,
	646, 648, 649, 0, 650, 0, 651, 652, 653, 0,
	0, 0, 0, 0, 654, 655, 657, 0, 658, 659,
	660, 661, 662, 656, 663, 664, 665, 666, 667, 668,
	669, 0, 671, 672, 670, 673, 674, 890, 675, 676,
	677, 678, 679, 1399, 680, 0, 681, 682, 690, 691,
	692, 683, 684, 686, 693, 685, 694, 695, 696, 697,
	699, 698, 0, 701, 702, 700, 703, 704, 705, 706,
	1449, 707, 844, 708, 687, 688, 709, 710, 711, 891,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 1465,
	0, 721, 0, 722, 723, 724, 725, 726, 727, 729,
	689, 730, 731, 732, 737, 738, 1496, 733, 734, 735,
	736, 1489, 740, 741, 742, 743, 0, 744, 745, 0,
	739, 728, 0, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 755, 0, 756, 1478, 1479, 1480, 1481, 0,
	768, 0, 757, 759, 760, 761, 762, 1490, 763, 1491,
	1409, 764, 765, 766, 767, 758, 769, 770, 0, 0,
	771, 772, 773, 774, 776, 778, 779, 780, 775, 777,
	781, 1450, 782, 0, 0, 783, 784, 785, 854, 1475,
	1495, 0, 787, 788, 786, 789, 790, 793, 791, 792,
	857, 796, 513, 797, 798, 799, 794, 795, 0, 0,
	0, 0, 800, 801, 858, 802, 803, 804, 1372, 0,
	868, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 346, 348,
	347, 349, 350, 351, 352, 0, 353, 354, 0, 1629,
	0, 1415, 0, 1452, 0, 1413, 0, 356, 0, 355,
	0, 357, 358, 359, 874, 360, 361, 362, 363, 364,
	365, 366, 367, 806, 807, 0, 368, 808, 369, 809,
	0, 810, 370, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 1451, 0, 380, 811, 812, 813, 0,
	381, 382, 383, 384, 1458, 0, 1439, 0, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 0, 394, 395,
	396, 393, 397, 398, 0, 399, 0, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 408, 409, 876, 410,
	411, 412, 1442, 1440, 1441, 1448, 1444, 1443, 1447, 413,
	414, 415, 416, 417, 0, 418, 420, 421, 815, 422,
	816, 0, 425, 427, 419, 423, 0, 426, 424, 428,
	429, 0, 430, 431, 432, 433, 0, 0, 434, 435,
	436, 0, 437, 438, 440, 439, 0, 441, 442, 443,
	0, 444, 445, 817, 446, 447, 448, 450, 452, 449,
	451, 453, 454, 455, 456, 457, 1485, 1486, 458, 459,
	0, 340, 0, 0, 0, 0, 0, 460, 461, 462,
	820, 0, 0, 0, 463, 0, 465, 469, 466, 467,
	468, 470, 0, 464, 471, 472, 0, 877, 473, 474,
	475, 821, 822, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 486, 1492, 0, 824, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 1453, 1454, 1457,
	595, 879, 495, 496, 497, 0, 498, 499, 500, 501,
	502, 503, 504, 0, 0, 0, 505, 506, 507, 508,
	0, 867, 341, 343, 878, 828, 509, 596, 510, 829,
	830, 0, 831, 0, 511, 512, 515, 880, 1455, 881,
	514, 516, 517, 882, 518, 0, 0, 0, 519, 520,
	521, 522, 523, 524, 525, 1522, 526, 528, 527, 0,
	530, 1493, 529, 883, 531, 532, 884, 0, 533, 534,
	535, 536, 537, 538, 541, 1446, 1445, 539, 540, 542,
	543, 0, 544, 545, 547, 550, 546, 548, 549, 551,
	552, 565, 566, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 568, 0, 567, 885, 569,
	570, 571, 572, 573, 581, 583, 584, 579, 580, 582,
	585, 586, 588, 589, 576, 577, 578, 886, 587, 574,
	0, 575, 344, 887, 590, 591, 592, 593, 0, 1456,
	594, 835, 597, 598, 0, 0, 599, 0, 600, 0,
	1528, 602, 603, 604, 0, 0, 605, 606, 836, 888,
	607, 889, 1487, 608, 609, 601, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 0, 620, 621, 838,
	622, 623, 624, 839, 625, 626, 627, 1488, 628, 841,
	629, 630, 0, 631, 632, 633, 0, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 842, 644, 645,
	647, 646, 648, 649, 0, 650, 0, 651, 652, 653,
	0, 0, 0, 0, 0, 654, 655, 657, 0, 658,
	659, 660, 661, 662, 656, 663, 664, 665, 666, 667,
	668, 669, 0, 671, 672, 670, 673, 674, 890, 675,
	676, 677, 678, 679, 843, 1530, 0, 681, 682, 690,
	691, 692, 683, 684, 686, 693, 685, 694, 695, 696,
	697, 699, 698, 295, 701, 702, 700, 703, 704, 705,
	706, 1449, 707, 844, 708, 687, 688, 709, 710, 711,
	891, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	845, 0, 721, 0, 722, 723, 724, 725, 726, 727,
	729, 689, 730, 731, 732, 737, 738, 846, 733, 734,
	735, 736, 1489, 740, 741, 742, 743, 0, 744, 745,
	0, 739, 728, 297, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 0, 756, 848, 849, 850, 851,
	0, 768, 0, 757, 759, 760, 761, 762, 1490, 763,
	1491, 0, 764, 765, 766, 767, 758, 769, 770, 0,
	0, 771, 772, 773, 774, 776, 778, 779, 780, 775,
	777, 781, 1450, 782, 0, 0, 783, 784, 785, 2114,
	855, 856, 0, 787, 788, 786, 789, 790, 793, 791,
	792, 857, 796, 513, 797, 798, 799, 794, 795, 0,
	0, 0, 289, 800, 801, 858, 802, 803, 804, 0,
	868, 290, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 346, 348,
	347, 349, 350, 351, 352, 0, 353, 354, 0, 0,
	1526, 0, 2366, 1452, 0, 0, 0, 356, 0, 355,
	0, 357, 358, 359, 874, 360, 361, 362, 363, 364,
	365, 366, 367, 806, 807, 0, 368, 808, 369, 809,
	0, 810, 370, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 1451, 0, 380, 811, 812, 813, 0,
	381, 382, 383, 384, 1458, 0, 1439, 0, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 0, 394, 395,
	396, 393, 397, 398, 0, 399, 0, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 408, 409, 876, 410,
	411, 412, 1442, 1440, 1441, 1448, 1444, 1443, 1447, 413,
	414, 415, 416, 417, 0, 418, 420, 421, 815, 422,
	816, 0, 425, 427, 419, 423, 0, 426, 424, 428,
	429, 0, 430, 431, 432, 433, 0, 0, 434, 435,
	436, 0, 437, 438, 440, 439, 0, 441, 442, 443,
	0, 444, 445, 817, 446, 447, 448, 450, 452, 449,
	451, 453, 454, 455, 456, 457, 1485, 1486, 458, 459,
	0, 340, 0, 0, 0, 0, 0, 460, 461, 462,
	820, 0, 0, 0, 463, 0, 465, 469, 466, 467,
	468, 470, 0, 464, 471, 472, 0, 877, 473, 474,
	475, 821, 822, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 486, 1492, 0, 824, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 1453, 1454, 1457,
	595, 879, 495, 496, 497, 0, 498, 499, 500, 501,
	502, 503, 504, 0, 0, 0, 505, 506, 507, 508,
	0, 867, 341, 343, 878, 828, 509, 596, 510, 829,
	830, 0, 831, 0, 511, 512, 515, 880, 1455, 881,
	514, 516, 517, 882, 518, 0, 0, 0, 519, 520,
	521, 522, 523, 524, 525, 1522, 526, 528, 527, 0,
	530, 1493, 529, 883, 531, 532, 884, 0, 533, 534,
	535, 536, 537, 538, 541, 1446, 1445, 539, 540, 542,
	543, 0, 544, 545, 547, 550, 546, 548, 549, 551,
	552, 565, 566, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 568, 0, 567, 885, 569,
	570, 571, 572, 573, 581, 583, 584, 579, 580, 582,
	585, 586, 588, 589, 576, 577, 578, 886, 587, 574,
	0, 575, 344, 887, 590, 591, 592, 593, 0, 1456,
	594, 835, 597, 598, 0, 0, 599, 0, 600, 0,
	1528, 602, 603, 604, 0, 0, 605, 606, 836, 888,
	607, 889, 1487, 608, 609, 601, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 0, 620, 621, 838,
	622, 623, 624, 839, 625, 626, 627, 1488, 628, 841,
	629, 630, 0, 631, 632, 633, 0, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 842, 644, 645,
	647, 646, 648, 649, 0, 650, 0, 651, 652, 653,
	0, 0, 0, 0, 0, 654, 655, 657, 0, 658,
	659, 660, 661, 662, 656, 663, 664, 665, 666, 667,
	668, 669, 0, 671, 672, 670, 673, 674, 890, 675,
	676, 677, 678, 679, 843, 1530, 0, 681, 682, 690,
	691, 692, 683, 684, 686, 693, 685, 694, 695, 696,
	697, 699, 698, 295, 701, 702, 700, 703, 704, 705,
	706, 1449, 707, 844, 708, 687, 688, 709, 710, 711,
	891, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	845, 0, 721, 0, 722, 723, 724, 725, 726, 727,
	729, 689, 730, 731, 732, 737, 738, 846, 733, 734,
	735, 736, 1489, 740, 741, 742, 743, 0, 744, 745,
	0, 739, 728, 297, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 0, 756, 848, 849, 850, 851,
	0, 768, 0, 757, 759, 760, 761, 762, 1490, 763,
	1491, 0, 764, 765, 766, 767, 758, 769, 770, 0,
	0, 771, 772, 773, 774, 776, 778, 779, 780, 775,
	777, 781, 1450, 782, 0, 0, 783, 784, 785, 2114,
	855, 856, 0, 787, 788, 786, 789, 790, 793, 791,
	792, 857, 796, 513, 797, 798, 799, 794, 795, 0,
	0, 0, 289, 800, 801, 858, 802, 803, 804, 0,
	4670, 290, 868, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	346, 348, 347, 349, 350, 351, 352, 0, 353, 354,
	1526, 0, 2366, 0, 0, 1452, 0, 0, 0, 356,
	0, 355, 0, 357, 358, 359, 874, 360, 361, 362,
	363, 364, 365, 366, 367, 806, 807, 0, 368, 808,
	369, 809, 0, 810, 370, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 0, 1451, 0, 380, 811, 812,
	813, 0, 381, 382, 383, 384, 1458, 0, 1439, 0,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 0,
	394, 395, 396, 393, 397, 398, 0, 399, 0, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 408, 409,
	876, 410, 411, 412, 1442, 1440, 1441, 1448, 1444, 1443,
	1447, 413, 414, 415, 416, 417, 0, 418, 420, 421,
	815, 422, 816, 0, 425, 427, 419, 423, 0, 426,
	424, 428, 429, 0, 430, 431, 432, 433, 0, 0,
	434, 435, 436, 0, 437, 438, 440, 439, 0, 441,
	442, 443, 0, 444, 445, 817, 446, 447, 448, 450,
	452, 449, 451, 453, 454, 455, 456, 457, 1485, 1486,
	458, 459, 0, 340, 0, 0, 0, 0, 0, 460,
	461, 462, 820, 0, 0, 0, 463, 0, 465, 469,
	466, 467, 468, 470, 0, 464, 471, 472, 0, 877,
	473, 474, 475, 821, 822, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 486, 1492, 0, 824,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 1453,
	1454, 1457, 595, 879, 495, 496, 497, 0, 498, 499,
	500, 501, 502, 503, 504, 0, 0, 0, 505, 506,
	507, 508, 0, 867, 341, 343, 878, 828, 509, 596,
	510, 829, 830, 0, 831, 0, 511, 512, 515, 880,
	1455, 881, 514, 516, 517, 882, 518, 0, 0, 0,
	519, 520, 521, 522, 523, 524, 525, 1522, 526, 528,
	527, 0, 530, 1493, 529, 883, 531, 532, 884, 0,
	533, 534, 535, 536, 537, 538, 541, 1446, 1445, 539,
	540, 542, 543, 0, 544, 545, 547, 550, 546, 548,
	549, 551, 552, 565, 566, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 568, 0, 567,
	885, 569, 570, 571, 572, 573, 581, 583, 584, 579,
	580, 582, 585, 586, 588, 589, 576, 577, 578, 886,
	587, 574, 0, 575, 344, 887, 590, 591, 592, 593,
	0, 1456, 594, 835, 597, 598, 0, 0, 599, 0,
	600, 0, 1528, 602, 603, 604, 0, 0, 605, 606,
	836, 888, 607, 889, 1487, 608, 609, 601, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 0, 620,
	621, 838, 622, 623, 624, 839, 625, 626, 627, 1488,
	628, 841, 629, 630, 0, 631, 632, 633, 0, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 842,
	644, 645, 647, 646, 648, 649, 0, 650, 0, 651,
	652, 653, 0, 0, 0, 0, 0, 654, 655, 657,
	0, 658, 659, 660, 661, 662, 656, 663, 664, 665,
	666, 667, 668, 669, 0, 671, 672, 670, 673, 674,
	890, 675, 676, 677, 678, 679, 843, 1530, 0, 681,
	682, 690, 691, 692, 683, 684, 686, 693, 685, 694,
	695, 696, 697, 699, 698, 0, 701, 702, 700, 703,
	704, 705, 706, 1449, 707, 844, 708, 687, 688, 709,
	710, 711, 891, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 845, 0, 721, 0, 722, 723, 724, 725,
	726, 727, 729, 689, 730, 731, 732, 737, 738, 846,
	733, 734, 735, 736, 1489, 740, 741, 742, 743, 0,
	744, 745, 0, 739, 728, 0, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 0, 756, 848, 849,
	850, 851, 0, 768, 0, 757, 759, 760, 761, 762,
	1490, 763, 1491, 0, 764, 765, 766, 767, 758, 769,
	770, 0, 0, 771, 772, 773, 774, 776, 778, 779,
	780, 775, 777, 781, 1450, 782, 0, 0, 783, 784,
	785, 854, 855, 856, 0, 787, 788, 786, 789, 790,
	793, 791, 792, 857, 796, 513, 797, 798, 799, 794,
	795, 0, 1518, 0, 868, 800, 801, 858, 802, 803,
	804, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 346, 348, 347, 349, 350, 351, 352, 0,
	353, 354, 0, 0, 0, 0, 0, 1452, 0, 0,
	0, 356, 1526, 355, 1524, 357, 358, 359, 874, 360,
	361, 362, 363, 364, 365, 366, 367, 806, 807, 0,
	368, 808, 369, 809, 0, 810, 370, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 0, 1451, 0, 380,
	811, 812, 813, 0, 381, 382, 383, 384, 1458, 0,
	1439, 0, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 0, 394, 395, 396, 393, 397, 398, 0, 399,
	0, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	408, 409, 876, 410, 411, 412, 1442, 1440, 1441, 1448,
	1444, 1443, 1447, 413, 414, 415, 416, 417, 0, 418,
	420, 421, 815, 422, 816, 0, 425, 427, 419, 423,
	0, 426, 424, 428, 429, 0, 430, 431, 432, 433,
	0, 0, 434, 435, 436, 0, 437, 438, 440, 439,
	0, 441, 442, 443, 0, 444, 445, 817, 446, 447,
	448, 450, 452, 449, 451, 453, 454, 455, 456, 457,
	1485, 1486, 458, 459, 0, 340, 0, 0, 0, 0,
	0, 460, 461, 462, 820, 0, 0, 0, 463, 0,
	465, 469, 466, 467, 468, 470, 0, 464, 471, 472,
	0, 877, 473, 474, 475, 821, 822, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 486, 1492,
	0, 824, 487, 0, 488, 489, 490, 491, 492, 493,
	494, 1453, 1454, 1457, 595, 879, 495, 496, 497, 0,
	498, 499, 500, 501, 502, 503, 504, 0, 0, 0,
	505, 506, 507, 508, 0, 867, 341, 343, 878, 828,
	509, 596, 510, 829, 830, 0, 831, 0, 511, 512,
	515, 880, 1455, 881, 514, 516, 517, 882, 518, 0,
	0, 0, 519, 520, 521, 522, 523, 524, 525, 1522,
	526, 528, 527, 0, 530, 1493, 529, 883, 531, 532,
	884, 0, 533, 534, 535, 536, 537, 538, 541, 1446,
	1445, 539, 540, 542, 543, 0, 544, 545, 547, 550,
	546, 548, 549, 551, 552, 565, 566, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 568,
	0, 567, 885, 569, 570, 571, 572, 573, 581, 583,
	584, 579, 580, 582, 585, 586, 588, 589, 576, 577,
	578, 886, 587, 574, 0, 575, 344, 887, 590, 591,
	592, 593, 0, 1456, 594, 835, 597, 598, 0, 0,
	599, 0, 600, 0, 1528, 602, 603, 604, 0, 0,
	605, 606, 836, 888, 607, 889, 1487, 608, 609, 601,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	0, 620, 621, 838, 622, 623, 624, 839, 625, 626,
	627, 1488, 628, 841, 629, 630, 0, 631, 632, 633,
	0, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 842, 644, 645, 647, 646, 648, 649, 0, 650,
	0, 651, 652, 653, 0, 0, 0, 0, 0, 654,
	655, 657, 0, 658, 659, 660, 661, 662, 656, 663,
	664, 665, 666, 667, 668, 669, 0, 671, 672, 670,
	673, 674, 890, 675, 676, 677, 678, 679, 843, 1530,
	0, 681, 682, 690, 691, 692, 683, 684, 686, 693,
	685, 694, 695, 696, 697, 699, 698, 0, 701, 702,
	700, 703, 704, 705, 706, 1449, 707, 844, 708, 687,
	688, 709, 710, 711, 891, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 845, 0, 721, 0, 722, 723,
	724, 725, 726, 727, 729, 689, 730, 731, 732, 737,
	738, 846, 733, 734, 735, 736, 1489, 740, 741, 742,
	743, 0, 744, 745, 0, 739, 728, 0, 746, 747,
	748, 749, 750, 751, 752, 753, 754, 755, 0, 756,
	848, 849, 850, 851, 0, 768, 0, 757, 759, 760,
	761, 762, 1490, 763, 1491, 0, 764, 765, 766, 767,
	758, 769, 770, 0, 0, 771, 772, 773, 774, 776,
	778, 779, 780, 775, 777, 781, 1450, 782, 0, 0,
	783, 784, 785, 854, 855, 856, 0, 787, 788, 786,
	789, 790, 793, 791, 792, 857, 796, 513, 797, 798,
	799, 794, 795, 0, 0, 0, 868, 800, 801, 858,
	802, 803, 804, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 346, 348, 347, 349, 350, 351,
	352, 0, 353, 354, 0, 0, 0, 0, 0, 1452,
	0, 0, 0, 356, 1526, 355, 1524, 357, 358, 359,
	874, 360, 361, 362, 363, 364, 365, 366, 367, 806,
	807, 0, 368, 808, 369, 809, 0, 810, 370, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 0, 1451,
	0, 380, 811, 812, 813, 0, 381, 382, 383, 384,
	1458, 0, 1439, 0, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 0, 394, 395, 396, 393, 397, 398,
	0, 399, 0, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 408, 409, 876, 410, 411, 412, 1442, 1440,
	1441, 1448, 1444, 1443, 1447, 413, 414, 415, 416, 417,
	0, 418, 420, 421, 815, 422, 816, 0, 425, 427,
	419, 423, 0, 426, 424, 428, 429, 0, 430, 431,
	432, 433, 0, 0, 434, 435, 436, 0, 437, 438,
	440, 439, 0, 441, 442, 443, 0, 444, 445, 817,
	446, 447, 448, 450, 452, 449, 451, 453, 454, 455,
	456, 457, 1485, 1486, 458, 459, 0, 340, 0, 0,
	0, 0, 0, 460, 461, 462, 820, 0, 0, 0,
	463, 0, 465, 469, 466, 467, 468, 470, 0, 464,
	471, 472, 0, 877, 473, 474, 475, 821, 822, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	486, 1492, 0, 824, 487, 0, 488, 489, 490, 491,
	492, 493, 494, 1453, 1454, 1457, 595, 879, 495, 496,
	497, 0, 498, 499, 500, 501, 502, 503, 504, 0,
	0, 0, 505, 506, 507, 508, 0, 867, 341, 343,
	878, 828, 509, 596, 510, 829, 830, 0, 831, 0,
	511, 512, 515, 880, 1455, 881, 514, 516, 517, 882,
	518, 0, 0, 0, 519, 520, 521, 522, 523, 524,
	525, 1522, 526, 528, 527, 0, 530, 1493, 529, 883,
	531, 532, 884, 0, 533, 534, 535, 536, 537, 538,
	541, 1446, 1445, 539, 540, 542, 543, 0, 544, 545,
	547, 550, 546, 548, 549, 551, 552, 565, 566, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 568, 0, 567, 885, 569, 570, 571, 572, 573,
	581, 583, 584, 579, 580, 582, 585, 586, 588, 589,
	576, 577, 578, 886, 587, 574, 0, 575, 344, 887,
	590, 591, 592, 593, 0, 1456, 594, 835, 597, 598,
	0, 0, 599, 0, 600, 0, 1528, 602, 603, 604,
	0, 0, 605, 606, 836, 888, 607, 889, 1487, 608,
	609, 601, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 0, 620, 621, 838, 622, 623, 624, 839,
	625, 626, 627, 1488, 628, 841, 629, 630, 0, 631,
	632, 633, 0, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 842, 644, 645, 647, 646, 648, 649,
	0, 650, 0, 651, 652, 653, 0, 0, 0, 0,
	0, 654, 655, 657, 0, 658, 659, 660, 661, 662,
	656, 663, 664, 665, 666, 667, 668, 669, 0, 671,
	672, 670, 673, 674, 890, 675, 676, 677, 678, 679,
	843, 1530, 0, 681, 682, 690, 691, 692, 683, 684,
	686, 693, 685, 694, 695, 696, 697, 699, 698, 0,
	701, 702, 700, 703, 704, 705, 706, 1449, 707, 844,
	708, 687, 688, 709, 710, 711, 891, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 845, 0, 721, 0,
	722, 723, 724, 725, 726, 727, 729, 689, 730, 731,
	732, 737, 738, 846, 733, 734, 735, 736, 1489, 740,
	741, 742, 743, 0, 744, 745, 0, 739, 728, 0,
	746, 747, 748, 749, 750, 751, 752, 753, 754, 755,
	0, 756, 848, 849, 850, 851, 0, 768, 0, 757,
	759, 760, 761, 762, 1490, 763, 1491, 0, 764, 765,
	766, 767, 758, 769, 770, 0, 0, 771, 772, 773,
	774, 776, 778, 779, 780, 775, 777, 781, 1450, 782,
	0, 0, 783, 784, 785, 854, 855, 856, 0, 787,
	788, 786, 789, 790, 793, 791, 792, 857, 796, 513,
	797, 798, 799, 794, 795, 0, 0, 0, 868, 800,
	801, 858, 802, 803, 804, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 346, 348, 347, 349,
	350, 351, 352, 0, 353, 354, 0, 0, 0, 0,
	0, 1452, 0, 0, 0, 356, 1526, 355, 1524, 357,
	358, 359, 874, 360, 361, 362, 363, 364, 365, 366,
	367, 806, 807, 0, 368, 808, 369, 809, 0, 810,
	370, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	0, 1451, 0, 380, 811, 812, 813, 0, 381, 382,
	383, 384, 1458, 0, 1439, 0, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 0, 394, 395, 396, 393,
	397, 398, 0, 399, 0, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 408, 409, 876, 410, 411, 412,
	1442, 1440, 1441, 1448, 1444, 1443, 1447, 413, 414, 415,
	416, 417, 0, 418, 420, 421, 815, 422, 816, 0,
	425, 427, 419, 423, 0, 426, 424, 428, 429, 0,
	430, 431, 432, 433, 0, 0, 434, 435, 436, 0,
	437, 438, 440, 439, 0, 441, 442, 443, 0, 444,
	445, 817, 446, 447, 448, 450, 452, 449, 451, 453,
	454, 455, 456, 457, 1485, 1486, 458, 459, 0, 340,
	0, 0, 0, 0, 0, 460, 461, 462, 820, 0,
	0, 0, 463, 0, 465, 469, 466, 467, 468, 470,
	0, 464, 471, 472, 0, 877, 473, 474, 475, 821,
	822, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 486, 1492, 0, 824, 487, 0, 488, 489,
	490, 491, 492, 493, 494, 1453, 1454, 1457, 595, 879,
	495, 496, 497, 0, 498, 499, 500, 501, 502, 503,
	504, 0, 0, 0, 505, 506, 507, 508, 0, 867,
	341, 343, 878, 828, 509, 596, 510, 829, 830, 0,
	831, 0, 511, 512, 515, 880, 1455, 881, 514, 516,
	517, 882, 518, 0, 0, 0, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 528, 527, 0, 530, 1493,
	529, 883, 531, 532, 884, 0, 533, 534, 535, 536,
	537, 538, 541, 1446, 1445, 539, 540, 542, 543, 0,
	544, 545, 547, 550, 546, 548, 549, 551, 552, 565,
	566, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 568, 0, 567, 885, 569, 570, 571,
	572, 573, 581, 583, 584, 579, 580, 582, 585, 586,
	588, 589, 576, 577, 578, 886, 587, 574, 0, 575,
	344, 887, 590, 591, 592, 593, 0, 1456, 594, 835,
	597, 598, 0, 0, 599, 0, 600, 0, 0, 602,
	603, 604, 0, 0, 605, 606, 836, 888, 607, 889,
	1487, 608, 609, 601, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 0, 620, 621, 838, 622, 623,
	624, 839, 625, 626, 627, 1488, 628, 841, 629, 630,
	0, 631, 632, 633, 0, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 842, 644, 645, 647, 646,
	648, 649, 0, 650, 0, 651, 652, 653, 0, 0,
	0, 0, 0, 654, 655, 657, 0, 658, 659, 660,
	661, 662, 656, 663, 664, 665, 666, 667, 668, 669,
	0, 671, 672, 670, 673, 674, 890, 675, 676, 677,
	678, 679, 843, 680, 0, 681, 682, 690, 691, 692,
	683, 684, 686, 693, 685, 694, 695, 696, 697, 699,
	698, 0, 701, 702, 700, 703, 704, 705, 706, 1449,
	707, 844, 708, 687, 688, 709, 710, 711, 891, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 845, 0,
	721, 0, 722, 723, 724, 725, 726, 727, 729, 689,
	730, 731, 732, 737, 738, 846, 733, 734, 735, 736,
	1489, 740, 741, 742, 743, 0, 744, 745, 0, 739,
	728, 0, 746, 747, 748, 749, 750, 751, 752, 753,
	754, 755, 0, 756, 848, 849, 850, 851, 0, 768,
	0, 757, 759, 760, 761, 762, 1490, 763, 1491, 0,
	764, 765, 766, 767, 758, 769, 770, 0, 0, 771,
	772, 773, 774, 776, 778, 779, 780, 775, 777, 781,
	1450, 782, 0, 0, 783, 784, 785, 854, 855, 856,
	0, 787, 788, 786, 789, 790, 793, 791, 792, 857,
	796, 513, 797, 798, 799, 794, 795, 0, 0, 0,
	868, 800, 801, 858, 802, 803, 804, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 346, 348,
	347, 349, 350, 351, 352, 0, 353, 354, 0, 0,
	0, 0, 0, 1452, 0, 0, 0, 356, 864, 355,
	5856, 357, 358, 359, 874, 360, 361, 362, 363, 364,
	365, 366, 367, 806, 807, 0, 368, 808, 369, 809,
	0, 810, 370, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 1451, 0, 380, 811, 812, 813, 0,
	381, 382, 383, 384, 1458, 0, 1439, 0, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 0, 394, 395,
	396, 393, 397, 398, 0, 399, 0, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 408, 409, 876, 410,
	411, 412, 1442, 1440, 1441, 1448, 1444, 1443, 1447, 413,
	414, 415, 416, 417, 0, 418, 420, 421, 815, 422,
	816, 0, 425, 427, 419, 423, 0, 426, 424, 428,
	429, 0, 430, 431, 432, 433, 0, 0, 434, 435,
	436, 0, 437, 438, 440, 439, 0, 441, 442, 443,
	0, 444, 445, 817, 446, 447, 448, 450, 452, 449,
	451, 453, 454, 455, 456, 457, 1485, 1486, 458, 459,
	0, 340, 0, 0, 0, 0, 0, 460, 461, 462,
	820, 0, 0, 0, 463, 0, 465, 469, 466, 467,
	468, 470, 0, 464, 471, 472, 0, 877, 473, 474,
	475, 821, 822, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 486, 1492, 0, 824, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 1453, 1454, 1457,
	595, 879, 495, 496, 497, 0, 498, 499, 500, 501,
	502, 503, 504, 0, 0, 0, 505, 506, 507, 508,
	0, 867, 341, 343, 878, 828, 509, 596, 510, 829,
	830, 0, 831, 0, 511, 512, 515, 880, 1455, 881,
	514, 516, 517, 882, 518, 0, 0, 0, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 528, 527, 0,
	530, 1493, 529, 883, 531, 532, 884, 0, 533, 534,
	535, 536, 537, 538, 541, 1446, 1445, 539, 540, 542,
	543, 0, 544, 545, 547, 550, 546, 548, 549, 551,
	552, 565, 566, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 568, 0, 567, 885, 569,
	570, 571, 572, 573, 581, 583, 584, 579, 580, 582,
	585, 586, 588, 589, 576, 577, 578, 886, 587, 574,
	0, 575, 344, 887, 590, 591, 592, 593, 0, 1456,
	594, 835, 597, 598, 0, 0, 599, 0, 600, 0,
	0, 602, 603, 604, 0, 0, 605, 606, 836, 888,
	607, 889, 1487, 608, 609, 601, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 0, 620, 621, 838,
	622, 623, 624, 839, 625, 626, 627, 1488, 628, 841,
	629, 630, 0, 631, 632, 633, 0, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 842, 644, 645,
	647, 646, 648, 649, 0, 650, 0, 651, 652, 653,
	0, 0, 0, 0, 0, 654, 655, 657, 0, 658,
	659, 660, 661, 662, 656, 663, 664, 665, 666, 667,
	668, 669, 0, 671, 672, 670, 673, 674, 890, 675,
	676, 677, 678, 679, 843, 1530, 0, 681, 682, 690,
	691, 692, 683, 684, 686, 693, 685, 694, 695, 696,
	697, 699, 698, 0, 701, 702, 700, 703, 704, 705,
	706, 1449, 707, 844, 708, 687, 688, 709, 710, 711,
	891, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	845, 0, 721, 0, 722, 723, 724, 725, 726, 727,
	729, 689, 730, 731, 732, 737, 738, 846, 733, 734,
	735, 736, 1489, 740, 741, 742, 743, 0, 744, 745,
	0, 739, 728, 0, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 0, 756, 848, 849, 850, 851,
	0, 768, 0, 757, 759, 760, 761, 762, 1490, 763,
	1491, 0, 764, 765, 766, 767, 758, 769, 770, 0,
	0, 771, 772, 773, 774, 776, 778, 779, 780, 775,
	777, 781, 1450, 782, 0, 0, 783, 784, 785, 854,
	855, 856, 0, 787, 788, 786, 789, 790, 793, 791,
	792, 857, 796, 513, 797, 798, 799, 794, 795, 0,
	0, 0, 868, 800, 801, 858, 802, 803, 804, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	346, 348, 347, 349, 350, 351, 352, 0, 353, 354,
	0, 0, 0, 0, 0, 1452, 0, 0, 0, 356,
	864, 355, 2259, 357, 358, 359, 874, 360, 361, 362,
	363, 364, 365, 366, 367, 806, 807, 0, 368, 808,
	369, 809, 0, 810, 370, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 0, 1451, 0, 380, 811, 812,
	813, 0, 381, 382, 383, 384, 1458, 0, 1439, 0,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 0,
	394, 395, 396, 393, 397, 398, 0, 399, 0, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 408, 409,
	876, 410, 411, 412, 1442, 1440, 1441, 1448, 1444, 1443,
	1447, 413, 414, 415, 416, 417, 0, 418, 420, 421,
	815, 422, 816, 0, 425, 427, 419, 423, 0, 426,
	424, 428, 429, 0, 430, 431, 432, 433, 0, 0,
	434, 435, 436, 0, 437, 438, 440, 439, 0, 441,
	442, 443, 0, 444, 445, 817, 446, 447, 448, 450,
	452, 449, 451, 453, 454, 455, 456, 457, 1485, 1486,
	458, 459, 0, 340, 0, 0, 0, 0, 0, 460,
	461, 462, 820, 0, 0, 0, 463, 0, 465, 469,
	466, 467, 468, 470, 0, 464, 471, 472, 0, 877,
	473, 474, 475, 821, 822, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 486, 1492, 0, 824,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 1453,
	1454, 1457, 595, 879, 495, 496, 497, 0, 498, 499,
	500, 501, 502, 503, 504, 0, 0, 0, 505, 506,
	507, 508, 0, 867, 341, 343, 878, 828, 509, 596,
	510, 829, 830, 0, 831, 0, 511, 512, 515, 880,
	1455, 881, 514, 516, 517, 882, 518, 0, 0, 0,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 528,
	527, 0, 530, 1493, 529, 883, 531, 532, 884, 0,
	533, 534, 535, 536, 537, 538, 541, 1446, 1445, 539,
	540, 542, 543, 0, 544, 545, 547, 550, 546, 548,
	549, 551, 552, 565, 566, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 568, 0, 567,
	885, 569, 570, 571, 572, 573, 581, 583, 584, 579,
	580, 582, 585, 586, 588, 589, 576, 577, 578, 886,
	587, 574, 0, 575, 344, 887, 590, 591, 592, 593,
	0, 1456, 594, 835, 597, 598, 0, 0, 599, 0,
	600, 0, 0, 602, 603, 604, 0, 0, 605, 606,
	836, 888, 607, 889, 1487, 608, 609, 601, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 0, 620,
	621, 838, 622, 623, 624, 839, 625, 626, 627, 1488,
	628, 841, 629, 630, 0, 631, 632, 633, 0, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 842,
	644, 645, 647, 646, 648, 649, 0, 650, 0, 651,
	652, 653, 0, 0, 0, 0, 0, 654, 655, 657,
	0, 658, 659, 660, 661, 662, 656, 663, 664, 665,
	666, 667, 668, 669, 0, 671, 672, 670, 673, 674,
	890, 675, 676, 677, 678, 679, 843, 680, 0, 681,
	682, 690, 691, 692, 683, 684, 686, 693, 685, 694,
	695, 696, 697, 699, 698, 0, 701, 702, 700, 703,
	704, 705, 706, 1449, 707, 844, 708, 687, 688, 709,
	710, 711, 891, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 845, 0, 721, 0, 722, 723, 724, 725,
	726, 727, 729, 689, 730, 731, 732, 737, 738, 846,
	733, 734, 735, 736, 1489, 740, 741, 742, 743, 0,
	744, 745, 0, 739, 728, 0, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 0, 756, 848, 849,
	850, 851, 0, 768, 0, 757, 759, 760, 761, 762,
	1490, 763, 1491, 0, 764, 765, 766, 767, 758, 769,
	770, 0, 0, 771, 772, 773, 774, 776, 778, 779,
	780, 775, 777, 781, 1450, 782, 0, 0, 783, 784,
	785, 854, 855, 856, 0, 787, 788, 786, 789, 790,
	793, 791, 792, 857, 796, 513, 797, 798, 799, 794,
	795, 0, 337, 0, 0, 800, 801, 858, 802, 803,
	804, 0, 3132, 3133, 3134, 3151, 3152, 3153, 0, 345,
	346, 348, 347, 349, 350, 351, 352, 0, 353, 354,
	0, 0, 0, 3154, 0, 805, 0, 0, 0, 356,
	3155, 355, 864, 357, 358, 359, 0, 360, 361, 362,
	363, 364, 365, 366, 367, 806, 807, 0, 368, 808,
	369, 809, 0, 810, 370, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 0, 0, 2244, 380, 811, 812,
	813, 0, 381, 382, 383, 384, 814, 0, 0, 0,
	385, 386, 387, 388, 389, 390, 391, 392, 3144, 0,
	394, 395, 396, 393, 397, 398, 0, 399, 3140, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 412, 0, 0, 0, 0, 0, 0,
	0, 413, 414, 415, 416, 417, 0, 418, 420, 421,
	815, 422, 816, 0, 425, 427, 419, 423, 0, 426,
	424, 428, 429, 0, 430, 431, 432, 433, 0, 0,
	434, 435, 436, 0, 437, 438, 440, 439, 0, 441,
	442, 443, 0, 444, 445, 817, 446, 447, 448, 450,
	452, 449, 451, 453, 454, 455, 456, 457, 818, 819,
	458, 459, 0, 0, 0, 3145, 3146, 3147, 3148, 460,
	461, 462, 820, 0, 0, 3139, 463, 0, 465, 469,
	466, 467, 468, 470, 0, 464, 471, 472, 0, 0,
	473, 474, 475, 821, 822, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 486, 823, 0, 824,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 825,
	826, 827, 595, 0, 495, 496, 497, 0, 498, 499,
	500, 501, 502, 503, 504, 0, 0, 0, 505, 506,
	507, 508, 0, 0, 0, 0, 0, 828, 509, 596,
	510, 829, 830, 0, 831, 0, 511, 512, 515, 0,
	832, 0, 514, 516, 517, 0, 518, 0, 3149, 3150,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 528,
	527, 0, 530, 833, 529, 0, 531, 532, 0, 0,
	533, 534, 535, 536, 537, 538, 541, 0, 0, 539,
	540, 542, 543, 3142, 544, 545, 547, 550, 546, 548,
	549, 551, 552, 565, 566, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 568, 0, 567,
	0, 569, 570, 571, 572, 573, 581, 583, 584, 579,
	580, 582, 585, 586, 588, 589, 576, 577, 578, 0,
	587, 574, 0, 575, 0, 0, 590, 591, 592, 593,
	0, 834, 594, 835, 597, 598, 0, 0, 599, 0,
	600, 0, 0, 602, 603, 604, 0, 0, 605, 606,
	836, 0, 607, 0, 837, 608, 609, 601, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 0, 620,
	621, 838, 622, 623, 624, 839, 625, 626, 627, 840,
	628, 841, 629, 630, 0, 631, 632, 633, 0, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 842,
	644, 645, 647, 646, 648, 649, 0, 650, 0, 651,
	652, 653, 0, 0, 0, 0, 0, 654, 655, 657,
	0, 658, 659, 660, 661, 662, 656, 663, 664, 665,
	666, 667, 668, 669, 0, 671, 672, 670, 673, 674,
	0, 675, 676, 677, 678, 679, 843, 680, 3143, 681,
	682, 690, 691, 692, 683, 684, 686, 693, 685, 694,
	695, 696, 697, 699, 698, 0, 701, 702, 700, 703,
	704, 705, 706, 0, 707, 844, 708, 687, 688, 709,
	710, 711, 0, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 845, 0, 721, 0, 722, 723, 724, 725,
	726, 727, 729, 689, 730, 731, 732, 737, 738, 846,
	733, 734, 735, 736, 847, 740, 741, 742, 743, 0,
	744, 745, 2243, 739, 728, 0, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 0, 756, 848, 849,
	850, 851, 0, 768, 0, 757, 759, 760, 761, 762,
	852, 763, 853, 0, 764, 765, 766, 767, 758, 769,
	770, 0, 0, 771, 772, 773, 774, 776, 778, 779,
	780, 775, 777, 781, 0, 782, 0, 0, 783, 784,
	785, 854, 855, 856, 0, 787, 788, 786, 789, 790,
	793, 791, 792, 857, 796, 513, 797, 798, 799, 794,
	795, 0, 0, 0, 0, 800, 801, 858, 802, 803,
	804, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1372, 0, 1733, 3129, 3130, 3131, 3156, 3141, 3135,
	0, 3137, 3138, 3136, 3123, 3124, 3125, 3126, 3127, 3128,
	345, 346, 348, 347, 349, 350, 351, 352, 0, 353,
	354, 0, 0, 0, 0, 0, 805, 0, 0, 0,
	356, 0, 355, 0, 357, 358, 359, 874, 360, 361,
	362, 363, 364, 365, 366, 367, 806, 807, 0, 368,
	808, 369, 809, 0, 810, 370, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 0, 0, 0, 380, 811,
	812, 813, 0, 381, 382, 383, 384, 814, 0, 875,
	0, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	0, 394, 395, 396, 393, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 408,
	409, 876, 410, 411, 412, 0, 0, 0, 0, 0,
	0, 0, 413, 414, 415, 416, 417, 0, 418, 420,
	421, 815, 422, 816, 0, 425, 427, 419, 423, 0,
	426, 424, 428, 429, 0, 430, 431, 432, 433, 0,
	0, 434, 435, 436, 0, 437, 438, 440, 439, 0,
	441, 442, 443, 0, 444, 445, 817, 446, 447, 448,
	450, 452, 449, 451, 453, 454, 455, 456, 457, 818,
	819, 458, 459, 0, 340, 0, 0, 0, 0, 0,
	460, 461, 462, 820, 0, 0, 0, 463, 0, 465,
	469, 466, 467, 468, 470, 0, 464, 471, 472, 0,
	877, 473, 474, 475, 821, 822, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 0, 485, 486, 823, 0,
	824, 487, 0, 488, 489, 490, 491, 492, 493, 494,
	825, 826, 827, 595, 879, 495, 496, 497, 0, 498,
	499, 500, 501, 502, 503, 504, 0, 0, 0, 505,
	506, 507, 508, 0, 0, 0, 0, 878, 828, 509,
	596, 510, 829, 830, 0, 831, 0, 511, 512, 515,
	880, 832, 881, 514, 516, 517, 882, 518, 0, 0,
	0, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	528, 527, 0, 530, 833, 529, 883, 531, 532, 884,
	0, 533, 534, 535, 536, 537, 538, 541, 0, 0,
	539, 540, 542, 543, 0, 544, 545, 547, 550, 546,
	548, 549, 551, 552, 565, 566, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 568, 0,
	567, 885, 569, 570, 571, 572, 573, 581, 583, 584,
	579, 580, 582, 585, 586, 588, 589, 576, 577, 578,
	886, 587, 574, 0, 575, 0, 887, 590, 591, 592,
	593, 0, 834, 594, 835, 597, 598, 0, 0, 599,
	0, 600, 0, 0, 602, 603, 604, 0, 0, 605,
	606, 836, 888, 607, 889, 837, 608, 609, 601, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 0,
	620, 621, 838, 622, 623, 624, 839, 625, 626, 627,
	840, 628, 841, 629, 630, 0, 631, 632, 633, 0,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	842, 644, 645, 647, 646, 648, 649, 0, 650, 0,
	651, 652, 653, 0, 0, 0, 0, 0, 654, 655,
	657, 0, 658, 659, 660, 661, 662, 656, 663, 664,
	665, 666, 667, 668, 669, 0, 671, 672, 670, 673,
	674, 890, 675, 676, 677, 678, 679, 843, 680, 0,
	681, 682, 690, 691, 692, 683, 684, 686, 693, 685,
	694, 695, 696, 697, 699, 698, 295, 701, 702, 700,
	703, 704, 705, 706, 0, 707, 844, 708, 687, 688,
	709, 710, 711, 891, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 845, 0, 721, 0, 722, 723, 724,
	725, 726, 727, 729, 689, 730, 731, 732, 737, 738,
	846, 733, 734, 735, 736, 847, 740, 741, 742, 743,
	0, 744, 745, 0, 739, 728, 297, 746, 747, 748,
	749, 750, 751, 752, 753, 754, 755, 0, 756, 848,
	849, 850, 851, 0, 768, 0, 757, 759, 760, 761,
	762, 852, 763, 853, 0, 764, 765, 766, 767, 758,
	769, 770, 0, 0, 771, 772, 773, 774, 776, 778,
	779, 780, 775, 777, 781, 0, 782, 0, 0, 783,
	784, 785, 2114, 855, 856, 0, 787, 788, 786, 789,
	790, 793, 791, 792, 857, 796, 513, 797, 798, 799,
	794, 795, 0, 0, 0, 289, 800, 801, 858, 802,
	803, 804, 0, 2111, 290, 1733, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 346, 348, 347, 349, 350, 351, 352,
	0, 353, 354, 0, 0, 233, 0, 0, 805, 0,
	0, 0, 356, 0, 355, 0, 357, 358, 359, 874,
	360, 361, 362, 363, 364, 365, 366, 367, 806, 807,
	0, 368, 808, 369, 809, 0, 810, 370, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 0, 0, 0,
	380, 811, 812, 813, 0, 381, 382, 383, 384, 814,
	0, 875, 0, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 0, 394, 395, 396, 393, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 408, 409, 876, 410, 411, 412, 0, 0, 0,
	0, 0, 0, 0, 413, 414, 415, 416, 417, 0,
	418, 420, 421, 815, 422, 816, 0, 425, 427, 419,
	423, 0, 426, 424, 428, 429, 0, 430, 431, 432,
	433, 0, 0, 434, 435, 436, 0, 437, 438, 440,
	439, 0, 441, 442, 443, 0, 444, 445, 817, 446,
	447, 448, 450, 452, 449, 451, 453, 454, 455, 456,
	457, 818, 819, 458, 459, 0, 340, 0, 0, 0,
	0, 0, 460, 461, 462, 820, 0, 0, 0, 463,
	0, 465, 469, 466, 467, 468, 470, 0, 464, 471,
	472, 0, 877, 473, 474, 475, 821, 822, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 486,
	823, 0, 824, 487, 0, 488, 489, 490, 491, 492,
	493, 494, 825, 826, 827, 595, 879, 495, 496, 497,
	0, 498, 499, 500, 501, 502, 503, 504, 0, 0,
	0, 505, 506, 507, 508, 0, 0, 0, 0, 878,
	828, 509, 596, 510, 829, 830, 0, 831, 0, 511,
	512, 515, 880, 832, 881, 514, 516, 517, 882, 518,
	0, 0, 0, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 528, 527, 0, 530, 833, 529, 883, 531,
	532, 884, 0, 533, 534, 535, 536, 537, 538, 541,
	0, 0, 539, 540, 542, 543, 0, 544, 545, 547,
	550, 546, 548, 549, 551, 552, 565, 566, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	568, 0, 567, 885, 569, 570, 571, 572, 573, 581,
	583, 584, 579, 580, 582, 585, 586, 588, 589, 576,
	577, 578, 886, 587, 574, 0, 575, 0, 887, 590,
	591, 592, 593, 0, 834, 594, 835, 597, 598, 0,
	0, 599, 0, 600, 0, 0, 602, 603, 604, 0,
	0, 605, 606, 836, 888, 607, 889, 837, 608, 609,
	601, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 0, 620, 621, 838, 622, 623, 624, 839, 625,
	626, 627, 840, 628, 841, 629, 630, 0, 631, 632,
	633, 0, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 842, 644, 645, 647, 646, 648, 649, 0,
	650, 0, 651, 652, 653, 0, 0, 0, 0, 0,
	654, 655, 657, 0, 658, 659, 660, 661, 662, 656,
	663, 664, 665, 666, 667, 668, 669, 0, 671, 672,
	670, 673, 674, 890, 675, 676, 677, 678, 679, 843,
	680, 0, 681, 682, 690, 691, 692, 683, 684, 686,
	693, 685, 694, 695, 696, 697, 699, 698, 295, 701,
	702, 700, 703, 704, 705, 706, 0, 707, 844, 708,
	687, 688, 709, 710, 711, 891, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 845, 0, 721, 0, 722,
	723, 724, 725, 726, 727, 729, 689, 730, 731, 732,
	737, 738, 846, 733, 734, 735, 736, 847, 740, 741,
	742, 743, 0, 744, 745, 0, 739, 728, 297, 746,
	747, 748, 749, 750, 751, 752, 753, 754, 755, 0,
	756, 848, 849, 850, 851, 0, 768, 0, 757, 759,
	760, 761, 762, 852, 763, 853, 0, 764, 765, 766,
	767, 758, 769, 770, 0, 0, 771, 772, 773, 774,
	776, 778, 779, 780, 775, 777, 781, 0, 782, 0,
	0, 783, 784, 785, 2114, 855, 856, 0, 787, 788,
	786, 789, 790, 793, 791, 792, 857, 796, 513, 797,
	798, 799, 794, 795, 0, 0, 0, 289, 800, 801,
	858, 802, 803, 804, 0, 0, 290, 1733, 1732, 0,
	0, 0, 0, 1730, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 346, 348, 347, 349, 350,
	351, 352, 0, 353, 354, 0, 0, 233, 0, 0,
	805, 0, 0, 0, 356, 0, 355, 0, 357, 358,
	359, 874, 360, 361, 362, 363, 364, 365, 366, 367,
	806, 807, 0, 368, 808, 369, 809, 0, 810, 370,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 0,
	0, 0, 380, 811, 812, 813, 0, 381, 382, 383,
	384, 814, 0, 875, 0, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 0, 394, 395, 396, 393, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 408, 409, 876, 410, 411, 412, 0,
	0, 0, 0, 0, 0, 0, 413, 414, 415, 416,
	417, 0, 418, 420, 421, 815, 422, 816, 0, 425,
	427, 419, 423, 0, 426, 424, 428, 429, 0, 430,
	431, 432, 433, 0, 0, 434, 435, 436, 0, 437,
	438, 440, 439, 0, 441, 442, 443, 0, 444, 445,
	817, 446, 447, 448, 450, 452, 449, 451, 453, 454,
	455, 456, 457, 818, 819, 458, 459, 0, 340, 0,
	0, 0, 0, 0, 460, 461, 462, 820, 0, 0,
	0, 463, 0, 465, 469, 466, 467, 468, 470, 0,
	464, 471, 472, 0, 877, 473, 474, 475, 821, 822,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 0,
	485, 486, 823, 0, 824, 487, 0, 488, 489, 490,
	491, 492, 493, 494, 825, 826, 827, 595, 879, 495,
	496, 497, 0, 498, 499, 500, 501, 502, 503, 504,
	0, 0, 0, 505, 506, 507, 508, 0, 0, 0,
	0, 878, 828, 509, 596, 510, 829, 830, 0, 831,
	0, 511, 512, 515, 880, 832, 881, 514, 516, 517,
	882, 518, 0, 0, 0, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 528, 527, 0, 530, 833, 529,
	883, 531, 532, 884, 0, 533, 534, 535, 536, 537,
	538, 541, 0, 0, 539, 540, 542, 543, 0, 544,
	545, 547, 550, 546, 548, 549, 551, 552, 565, 566,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 568, 0, 567, 885, 569, 570, 571, 572,
	573, 581, 583, 584, 579, 580, 582, 585, 586, 588,
	589, 576, 577, 578, 886, 587, 574, 0, 575, 0,
	887, 590, 591, 592, 593, 0, 834, 594, 835, 597,
	598, 0, 0, 599, 0, 600, 0, 0, 602, 603,
	604, 0, 0, 605, 606, 836, 888, 607, 889, 837,
	608, 609, 601, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 620, 621, 838, 622, 623, 624,
	839, 625, 626, 627, 840, 628, 841, 629, 630, 0,
	631, 632, 633, 0, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 842, 644, 645, 647, 646, 648,
	649, 0, 650, 0, 651, 652, 653, 0, 0, 0,
	0, 0, 654, 655, 657, 0, 658, 659, 660, 661,
	662, 656, 663, 664, 665, 666, 667, 668, 669, 0,
	671, 672, 670, 673, 674, 890, 675, 676, 677, 678,
	679, 843, 680, 0, 681, 682, 690, 691, 692, 683,
	684, 686, 693, 685, 694, 695, 696, 697, 699, 698,
	0, 701, 702, 700, 703, 704, 705, 706, 0, 707,
	844, 708, 687, 688, 709, 710, 711, 891, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 845, 0, 721,
	0, 722, 723, 724, 725, 726, 727, 729, 689, 730,
	731, 732, 737, 738, 846, 733, 734, 735, 736, 847,
	740, 741, 742, 743, 0, 744, 745, 0, 739, 728,
	0, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	755, 0, 756, 848, 849, 850, 851, 0, 768, 0,
	757, 759, 760, 761, 762, 852, 763, 853, 0, 764,
	765, 766, 767, 758, 769, 770, 0, 0, 771, 772,
	773, 774, 776, 778, 779, 780, 775, 777, 781, 0,
	782, 0, 0, 783, 784, 785, 854, 855, 856, 0,
	787, 788, 786, 789, 790, 793, 791, 792, 857, 796,
	513, 797, 798, 799, 794, 795, 0, 0, 0, 0,
	800, 801, 858, 802, 803, 804, 0, 1733, 1732, 0,
	0, 0, 0, 1730, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 346, 348, 347, 349, 350,
	351, 352, 0, 353, 354, 0, 0, 0, 0, 2138,
	805, 0, 0, 0, 356, 0, 355, 0, 357, 358,
	359, 874, 360, 361, 362, 363, 364, 365, 366, 367,
	806, 807, 0, 368, 808, 369, 809, 0, 810, 370,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 0,
	0, 0, 380, 811, 812, 813, 0, 381, 382, 383,
	384, 814, 0, 875, 0, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 0, 394, 395, 396, 393, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 408, 409, 876, 410, 411, 412, 0,
	0, 0, 0, 0, 0, 0, 413, 414, 415, 416,
	417, 0, 418, 420, 421, 815, 422, 816, 0, 425,
	427, 419, 423, 0, 426, 424, 428, 429, 0, 430,
	431, 432, 433, 0, 0, 434, 435, 436, 0, 437,
	438, 440, 439, 0, 441, 442, 443, 0, 444, 445,
	817, 446, 447, 448, 450, 452, 449, 451, 453, 454,
	455, 456, 457, 818, 819, 458, 459, 0, 340, 0,
	0, 0, 0, 0, 460, 461, 462, 820, 0, 0,
	0, 463, 0, 465, 469, 466, 467, 468, 470, 0,
	464, 471, 472, 0, 877, 473, 474, 475, 821, 822,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 0,
	485, 486, 823, 0, 824, 487, 0, 488, 489, 490,
	491, 492, 493, 494, 825, 826, 827, 595, 879, 495,
	496, 497, 0, 498, 499, 500, 501, 502, 503, 504,
	0, 0, 0, 505, 506, 507, 508, 0, 0, 0,
	0, 878, 828, 509, 596, 510, 829, 830, 0, 831,
	0, 511, 512, 515, 880, 832, 881, 514, 516, 517,
	882, 518, 0, 0, 0, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 528, 527, 0, 530, 833, 529,
	883, 531, 532, 884, 0, 533, 534, 535, 536, 537,
	538, 541, 0, 0, 539, 540, 542, 543, 0, 544,
	545, 547, 550, 546, 548, 549, 551, 552, 565, 566,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 568, 0, 567, 885, 569, 570, 571, 572,
	573, 581, 583, 584, 579, 580, 582, 585, 586, 588,
	589, 576, 577, 578, 886, 587, 574, 0, 575, 0,
	887, 590, 591, 592, 593, 0, 834, 594, 835, 597,
	598, 0, 0, 599, 0, 600, 0, 0, 602, 603,
	604, 0, 0, 605, 606, 836, 888, 607, 889, 837,
	608, 609, 601, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 620, 621, 838, 622, 623, 624,
	839, 625, 626, 627, 840, 628, 841, 629, 630, 0,
	631, 632, 633, 0, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 842, 644, 645, 647, 646, 648,
	649, 0, 650, 0, 651, 652, 653, 0, 0, 0,
	0, 0, 654, 655, 657, 0, 658, 659, 660, 661,
	662, 656, 663, 664, 665, 666, 667, 668, 669, 0,
	671, 672, 670, 673, 674, 890, 675, 676, 677, 678,
	679, 843, 680, 0, 681, 682, 690, 691, 692, 683,
	684, 686, 693, 685, 694, 695, 696, 697, 699, 698,
	0, 701, 702, 700, 703, 704, 705, 706, 0, 707,
	844, 708, 687, 688, 709, 710, 711, 891, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 845, 0, 721,
	0, 722, 723, 724, 725, 726, 727, 729, 689, 730,
	731, 732, 737, 738, 846, 733, 734, 735, 736, 847,
	740, 741, 742, 743, 0, 744, 745, 0, 739, 728,
	0, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	755, 0, 756, 848, 849, 850, 851, 0, 768, 0,
	757, 759, 760, 761, 762, 852, 763, 853, 0, 764,
	765, 766, 767, 758, 769, 770, 0, 0, 771, 772,
	773, 774, 776, 778, 779, 780, 775, 777, 781, 0,
	782, 0, 0, 783, 784, 785, 854, 855, 856, 0,
	787, 788, 786, 789, 790, 793, 791, 792, 857, 796,
	513, 797, 798, 799, 794, 795, 0, 0, 0, 0,
	800, 801, 858, 802, 803, 804, 0, 1733, 2891, 0,
	0, 0, 0, 2892, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 346, 348, 347, 349, 350,
	351, 352, 0, 353, 354, 0, 0, 0, 0, 5148,
	805, 0, 0, 0, 356, 0, 355, 0, 357, 358,
	359, 874, 360, 361, 362, 363, 364, 365, 366, 367,
	806, 807, 0, 368, 808, 369, 809, 0, 810, 370,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 0,
	0, 0, 380, 811, 812, 813, 0, 381, 382, 383,
	384, 814, 0, 875, 0, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 0, 394, 395, 396, 393, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 408, 409, 876, 410, 411, 412, 0,
	0, 0, 0, 0, 0, 0, 413, 414, 415, 416,
	417, 0, 418, 420, 421, 815, 422, 816, 0, 425,
	427, 419, 423, 0, 426, 424, 428, 429, 0, 430,
	431, 432, 433, 0, 0, 434, 435, 436, 0, 437,
	438, 440, 439, 0, 441, 442, 443, 0, 444, 445,
	817, 446, 447, 448, 450, 452, 449, 451, 453, 454,
	455, 456, 457, 818, 819, 458, 459, 0, 340, 0,
	0, 0, 0, 0, 460, 461, 462, 820, 0, 0,
	0, 463, 0, 465, 469, 466, 467, 468, 470, 0,
	464, 471, 472, 0, 877, 473, 474, 475, 821, 822,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 0,
	485, 486, 823, 0, 824, 487, 0, 488, 489, 490,
	491, 492, 493, 494, 825, 826, 827, 595, 879, 495,
	496, 497, 0, 498, 499, 500, 501, 502, 503, 504,
	0, 0, 0, 505, 506, 507, 508, 0, 0, 0,
	0, 878, 828, 509, 596, 510, 829, 830, 0, 831,
	0, 511, 512, 515, 880, 832, 881, 514, 516, 517,
	882, 518, 0, 0, 0, 519, 520, 521, 522, 523,
	524, 525, 0, 2890, 528, 527, 0, 530, 833, 529,
	883, 531, 532, 884, 0, 533, 534, 535, 536, 537,
	538, 541, 0, 0, 539, 540, 542, 543, 0, 544,
	545, 547, 550, 546, 548, 549, 551, 552, 565, 566,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 568, 0, 567, 885, 569, 570, 571, 572,
	573, 581, 583, 584, 579, 580, 582, 585, 586, 588,
	589, 576, 577, 578, 886, 587, 574, 0, 575, 0,
	887, 590, 591, 592, 593, 0, 834, 594, 835, 597,
	598, 0, 0, 599, 0, 600, 0, 0, 602, 603,
	604, 0, 0, 605, 606, 836, 888, 607, 889, 837,
	608, 609, 601, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 620, 621, 838, 622, 623, 624,
	839, 625, 626, 627, 840, 628, 841, 629, 630, 0,
	631, 632, 633, 0, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 842, 644, 645, 647, 646, 648,
	649, 0, 650, 0, 651, 652, 653, 0, 0, 0,
	0, 0, 654, 655, 657, 0, 658, 659, 660, 661,
	662, 656, 663, 664, 665, 666, 667, 668, 669, 0,
	671, 672, 670, 673, 674, 890, 675, 676, 677, 678,
	679, 843, 680, 0, 681, 682, 690, 691, 692, 683,
	684, 686, 693, 685, 694, 695, 696, 697, 699, 698,
	0, 701, 702, 700, 703, 704, 705, 706, 0, 707,
	844, 708, 687, 688, 709, 710, 711, 891, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 845, 0, 721,
	0, 722, 723, 724, 725, 726, 727, 729, 689, 730,
	731, 732, 737, 738, 846, 733, 734, 735, 736, 847,
	740, 741, 742, 743, 0, 744, 745, 0, 739, 728,
	0, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	755, 0, 756, 848, 849, 850, 851, 0, 768, 0,
	757, 759, 760, 761, 762, 852, 763, 853, 0, 764,
	765, 766, 767, 758, 769, 770, 0, 0, 771, 772,
	773, 774, 776, 778, 779, 780, 775, 777, 781, 0,
	782, 0, 0, 783, 784, 785, 854, 855, 856, 0,
	787, 788, 786, 789, 790, 793, 791, 792, 857, 796,
	513, 797, 798, 799, 794, 795, 0, 0, 0, 0,
	800, 801, 858, 802, 803, 804, 0, 1733, 1732, 0,
	0, 0, 0, 1730, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 346, 348, 347, 349, 350,
	351, 352, 0, 353, 354, 0, 0, 0, 0, 2138,
	805, 0, 0, 0, 356, 0, 355, 0, 357, 358,
	359, 874, 360, 361, 362, 363, 364, 365, 366, 367,
	806, 807, 0, 368, 808, 369, 809, 0, 810, 370,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 0,
	0, 0, 380, 811, 812, 813, 0, 381, 382, 383,
	384, 814, 0, 875, 0, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 0, 394, 395, 396, 393, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 408, 409, 876, 410, 411, 412, 0,
	0, 0, 0, 0, 0, 0, 413, 414, 415, 416,
	417, 0, 418, 420, 421, 815, 422, 816, 0, 425,
	427, 419, 423, 0, 426, 424, 428, 429, 0, 430,
	431, 432, 433, 0, 0, 434, 435, 436, 0, 437,
	438, 440, 439, 0, 441, 442, 443, 0, 444, 445,
	817, 446, 447, 448, 450, 452, 449, 451, 453, 454,
	455, 456, 457, 818, 819, 458, 459, 0, 340, 0,
	0, 0, 0, 0, 460, 461, 462, 820, 0, 0,
	0, 463, 0, 465, 469, 466, 467, 468, 470, 0,
	464, 471, 472, 0, 877, 473, 474, 475, 821, 822,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 0,
	485, 486, 823, 0, 824, 487, 0, 488, 489, 490,
	491, 492, 493, 494, 825, 826, 827, 595, 879, 495,
	496, 497, 0, 498, 499, 500, 501, 502, 503, 504,
	0, 0, 0, 505, 506, 507, 508, 0, 0, 0,
	0, 878, 828, 509, 596, 510, 829, 830, 0, 831,
	0, 511, 512, 515, 880, 832, 881, 514, 516, 517,
	882, 518, 0, 0, 0, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 528, 527, 0, 530, 833, 529,
	883, 531, 532, 884, 0, 533, 534, 535, 536, 537,
	538, 541, 0, 0, 539, 540, 542, 543, 0, 544,
	545, 547, 550, 546, 548, 549, 551, 552, 565, 566,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 568, 0, 567, 885, 569, 570, 571, 572,
	573, 581, 583, 584, 579, 580, 582, 585, 586, 588,
	589, 576, 577, 578, 886, 587, 574, 0, 575, 0,
	887, 590, 591, 592, 593, 0, 834, 594, 835, 597,
	598, 0, 0, 599, 0, 600, 0, 0, 602, 603,
	604, 0, 0, 605, 606, 836, 888, 607, 889, 837,
	608, 609, 601, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 620, 621, 838, 622, 623, 624,
	839, 625, 626, 627, 840, 628, 841, 629, 630, 0,
	631, 632, 633, 0, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 842, 644, 645, 647, 646, 648,
	649, 0, 650, 0, 651, 652, 653, 0, 0, 0,
	0, 0, 654, 655, 657, 0, 658, 659, 660, 661,
	662, 656, 663, 664, 665, 666, 667, 668, 669, 0,
	671, 672, 670, 673, 674, 890, 675, 676, 677, 678,
	679, 843, 680, 0, 681, 682, 690, 691, 692, 683,
	684, 686, 693, 685, 694, 695, 696, 697, 699, 698,
	0, 701, 702, 700, 703, 704, 705, 706, 0, 707,
	844, 708, 687, 688, 709, 710, 711, 891, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 845, 0, 721,
	0, 722, 723, 724, 725, 726, 727, 729, 689, 730,
	731, 732, 737, 738, 846, 733, 734, 735, 736, 847,
	740, 741, 742, 743, 0, 744, 745, 0, 739, 728,
	0, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	755, 0, 756, 848, 849, 850, 851, 0, 768, 0,
	757, 759, 760, 761, 762, 852, 763, 853, 0, 764,
	765, 766, 767, 758, 769, 770, 0, 0, 771, 772,
	773, 774, 776, 778, 779, 780, 775, 777, 781, 0,
	782, 0, 0, 783, 784, 785, 854, 855, 856, 0,
	787, 788, 786, 789, 790, 793, 791, 792, 857, 796,
	513, 797, 798, 799, 794, 795, 0, 0, 0, 868,
	800, 801, 858, 802, 803, 804, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 346, 348, 347,
	349, 350, 351, 352, 0, 353, 354, 0, 0, 0,
	0, 0, 805, 0, 0, 0, 356, 0, 355, 2120,
	357, 358, 359, 874, 360, 361, 362, 363, 364, 365,
	366, 367, 806, 807, 0, 368, 808, 369, 809, 0,
	810, 370, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 0, 0, 0, 380, 811, 812, 813, 0, 381,
	382, 383, 384, 814, 0, 875, 0, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 0, 394, 395, 396,
	393, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 408, 409, 876, 410, 411,
	412, 0, 0, 0, 0, 0, 0, 0, 413, 414,
	415, 416, 417, 0, 418, 420, 421, 815, 422, 816,
	0, 425, 427, 419, 423, 0, 426, 424, 428, 429,
	0, 430, 431, 432, 433, 0, 0, 434, 435, 436,
	0, 437, 438, 440, 439, 0, 441, 442, 443, 0,
	444, 445, 817, 446, 447, 448, 450, 452, 449, 451,
	453, 454, 455, 456, 457, 818, 819, 458, 459, 0,
	340, 0, 0, 0, 0, 0, 460, 461, 462, 820,
	0, 0, 0, 463, 0, 465, 469, 466, 467, 468,
	470, 0, 464, 471, 472, 0, 877, 473, 474, 475,
	821, 822, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 0, 485, 486, 823, 0, 824, 487, 0, 488,
	489, 490, 491, 492, 493, 494, 825, 826, 827, 595,
	879, 495, 496, 497, 0, 498, 499, 500, 501, 502,
	503, 504, 0, 0, 0, 505, 506, 507, 508, 0,
	867, 341, 343, 878, 828, 509, 596, 510, 829, 830,
	0, 831, 0, 511, 512, 515, 880, 832, 881, 514,
	516, 517, 882, 518, 0, 0, 0, 519, 520, 521,
	522, 523, 524, 525, 0, 526, 528, 527, 0, 530,
	833, 529, 883, 531, 532, 884, 0, 533, 534, 535,
	536, 537, 538, 541, 0, 0, 539, 540, 542, 543,
	0, 544, 545, 547, 550, 546, 548, 549, 551, 552,
	565, 566, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 568, 0, 567, 885, 569, 570,
	571, 572, 573, 581, 583, 584, 579, 580, 582, 585,
	586, 588, 589, 576, 577, 578, 886, 587, 574, 0,
	575, 344, 887, 590, 591, 592, 593, 0, 834, 594,
	835, 597, 598, 0, 0, 599, 0, 600, 0, 0,
	602, 603, 604, 0, 0, 605, 606, 836, 888, 607,
	889, 837, 608, 609, 601, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 0, 620, 621, 838, 622,
	623, 624, 839, 625, 626, 627, 840, 628, 841, 629,
	630, 0, 631, 632, 633, 0, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 842, 644, 645, 647,
	646, 648, 649, 0, 650, 0, 651, 652, 653, 0,
	0, 0, 0, 0, 654, 655, 657, 0, 658, 659,
	660, 661, 662, 656, 663, 664, 665, 666, 667, 668,
	669, 0, 671, 672, 670, 673, 674, 890, 675, 676,
	677, 678, 679, 843, 680, 0, 681, 682, 690, 691,
	692, 683, 684, 686, 693, 685, 694, 695, 696, 697,
	699, 698, 0, 701, 702, 700, 703, 704, 705, 706,
	0, 707, 844, 708, 687, 688, 709, 710, 711, 891,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 845,
	0, 721, 0, 722, 723, 724, 725, 726, 727, 729,
	689, 730, 731, 732, 737, 738, 846, 733, 734, 735,
	736, 847, 740, 741, 742, 743, 0, 744, 745, 0,
	739, 728, 0, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 755, 0, 756, 848, 849, 850, 851, 0,
	768, 0, 757, 759, 760, 761, 762, 852, 763, 853,
	0, 764, 765, 766, 767, 758, 769, 770, 0, 0,
	771, 772, 773, 774, 776, 778, 779, 780, 775, 777,
	781, 0, 782, 0, 0, 783, 784, 785, 854, 855,
	856, 0, 787, 788, 786, 789, 790, 793, 791, 792,
	857, 796, 513, 797, 798, 799, 794, 795, 0, 1372,
	0, 337, 800, 801, 858, 802, 803, 804, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 346,
	348, 347, 349, 350, 351, 352, 0, 353, 354, 0,
	0, 0, 0, 0, 805, 0, 0, 0, 356, 864,
	355, 0, 357, 358, 359, 0, 360, 361, 362, 363,
	364, 365, 366, 367, 806, 807, 0, 368, 808, 369,
	809, 0, 810, 370, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 0, 0, 0, 380, 811, 812, 813,
	0, 381, 382, 383, 384, 814, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 0, 394,
	395, 396, 393, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 0, 0, 0, 0, 0, 0,
	413, 414, 415, 416, 417, 0, 418, 420, 421, 815,
	422, 816, 0, 425, 427, 419, 423, 0, 426, 424,
	428, 429, 0, 430, 431, 432, 433, 0, 0, 434,
	435, 436, 0, 437, 438, 440, 439, 0, 441, 442,
	443, 0, 444, 445, 817, 446, 447, 448, 450, 452,
	449, 451, 453, 454, 455, 456, 457, 818, 819, 458,
	459, 0, 0, 0, 0, 0, 0, 0, 460, 461,
	462, 820, 0, 0, 0, 463, 0, 465, 469, 466,
	467, 468, 470, 0, 464, 471, 472, 0, 0, 473,
	474, 475, 821, 822, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 0, 485, 486, 823, 0, 824, 487,
	0, 488, 489, 490, 491, 492, 493, 494, 825, 826,
	827, 595, 0, 495, 496, 497, 0, 498, 499, 500,
	501, 502, 503, 504, 0, 0, 0, 505, 506, 507,
	508, 0, 0, 0, 0, 0, 828, 509, 596, 510,
	829, 830, 0, 831, 0, 511, 512, 515, 0, 832,
	0, 514, 516, 517, 0, 518, 0, 0, 0, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 528, 527,
	0, 530, 833, 529, 0, 531, 532, 0, 0, 533,
	534, 535, 536, 537, 538, 541, 0, 0, 539, 540,
	542, 543, 0, 544, 545, 547, 550, 546, 548, 549,
	551, 552, 565, 566, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 568, 0, 567, 0,
	569, 570, 571, 572, 573, 581, 583, 584, 579, 580,
	582, 585, 586, 588, 589, 576, 577, 578, 0, 587,
	574, 0, 575, 0, 0, 590, 591, 592, 593, 0,
	834, 594, 835, 597, 598, 0, 0, 599, 0, 600,
	0, 0, 602, 603, 604, 0, 0, 605, 606, 836,
	0, 607, 0, 837, 608, 609, 601, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 0, 620, 621,
	838, 622, 623, 624, 839, 625, 626, 627, 840, 628,
	841, 629, 630, 0, 631, 632, 633, 0, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 842, 644,
	645, 647, 646, 648, 649, 0, 650, 0, 651, 652,
	653, 0, 0, 0, 0, 0, 654, 655, 657, 0,
	658, 659, 660, 661, 662, 656, 663, 664, 665, 666,
	667, 668, 669, 0, 671, 672, 670, 673, 674, 0,
	675, 676, 677, 678, 679, 843, 680, 0, 681, 682,
	690, 691, 692, 683, 684, 686, 693, 685, 694, 695,
	696, 697, 699, 698, 295, 701, 702, 700, 703, 704,
	705, 706, 0, 707, 844, 708, 687, 688, 709, 710,
	711, 0, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 845, 0, 721, 0, 722, 723, 724, 725, 726,
	727, 729, 689, 730, 731, 732, 737, 738, 846, 733,
	734, 735, 736, 847, 740, 741, 742, 743, 0, 744,
	745, 0, 739, 728, 297, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 0, 756, 848, 849, 850,
	851, 0, 768, 0, 757, 759, 760, 761, 762, 852,
	763, 853, 0, 764, 765, 766, 767, 758, 769, 770,
	0, 0, 771, 772, 773, 774, 776, 778, 779, 780,
	775, 777, 781, 0, 782, 0, 0, 783, 784, 785,
	2114, 855, 856, 0, 787, 788, 786, 789, 790, 793,
	791, 792, 857, 796, 513, 797, 798, 799, 794, 795,
	0, 0, 0, 289, 800, 801, 858, 802, 803, 804,
	0, 337, 290, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 346,
	348, 347, 349, 350, 351, 352, 0, 353, 354, 0,
	0, 0, 0, 233, 805, 0, 0, 0, 356, 0,
	355, 0, 357, 358, 359, 0, 360, 361, 362, 363,
	364, 365, 366, 367, 806, 807, 0, 368, 808, 369,
	809, 0, 810, 370, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 0, 0, 0, 380, 811, 812, 813,
	0, 381, 382, 383, 384, 814, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 0, 394,
	395, 396, 393, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 0, 0, 0, 0, 0, 0,
	413, 414, 415, 416, 417, 0, 418, 420, 421, 815,
	422, 816, 0, 425, 427, 419, 423, 0, 426, 424,
	428, 429, 0, 430, 431, 432, 433, 0, 0, 434,
	435, 436, 0, 437, 438, 440, 439, 0, 441, 442,
	443, 0, 444, 445, 817, 446, 447, 448, 450, 452,
	449, 451, 453, 454, 455, 456, 457, 818, 819, 458,
	459, 0, 340, 0, 0, 0, 0, 0, 460, 461,
	462, 820, 0, 0, 0, 463, 0, 465, 469, 466,
	467, 468, 470, 0, 464, 471, 472, 0, 0, 473,
	474, 475, 821, 822, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 0, 485, 486, 823, 0, 824, 487,
	0, 488, 489, 490, 491, 492, 493, 494, 825, 826,
	827, 595, 0, 495, 496, 497, 0, 498, 499, 500,
	501, 502, 503, 504, 0, 0, 0, 505, 506, 507,
	508, 0, 342, 341, 343, 0, 828, 509, 596, 510,
	829, 830, 0, 831, 0, 511, 512, 515, 0, 832,
	0, 514, 516, 517, 0, 518, 0, 0, 0, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 528, 527,
	0, 530, 833, 529, 0, 531, 532, 0, 0, 533,
	534, 535, 536, 537, 538, 541, 0, 0, 539, 540,
	542, 543, 0, 544, 545, 547, 550, 546, 548, 549,
	551, 552, 565, 566, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 568, 0, 567, 0,
	569, 570, 571, 572, 573, 581, 583, 584, 579, 580,
	582, 585, 586, 588, 589, 576, 577, 578, 0, 587,
	574, 0, 575, 344, 0, 590, 591, 592, 593, 0,
	834, 594, 835, 597, 598, 0, 0, 599, 0, 600,
	0, 0, 602, 603, 604, 0, 0, 605, 606, 836,
	0, 607, 0, 837, 608, 609, 601, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 0, 620, 621,
	838, 622, 623, 624, 839, 625, 626, 627, 840, 628,
	841, 629, 630, 0, 631, 632, 633, 0, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 842, 644,
	645, 647, 646, 648, 649, 0, 650, 0, 651, 652,
	653, 0, 0, 0, 0, 0, 654, 655, 657, 0,
	658, 659, 660, 661, 662, 656, 663, 664, 665, 666,
	667, 668, 669, 0, 671, 672, 670, 673, 674, 0,
	675, 676, 677, 678, 679, 843, 680, 0, 681, 682,
	690, 691, 692, 683, 684, 686, 693, 685, 694, 695,
	696, 697, 699, 698, 0, 701, 702, 700, 703, 704,
	705, 706, 0, 707, 844, 708, 687, 688, 709, 710,
	711, 0, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 845, 0, 721, 0, 722, 723, 724, 725, 726,
	727, 729, 689, 730, 731, 732, 737, 738, 846, 733,
	734, 735, 736, 847, 740, 741, 742, 743, 0, 744,
	745, 0, 739, 728, 0, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 0, 756, 848, 849, 850,
	851, 0, 768, 0, 757, 759, 760, 761, 762, 852,
	763, 853, 0, 764, 765, 766, 767, 758, 769, 770,
	0, 0, 771, 772, 773, 774, 776, 778, 779, 780,
	775, 777, 781, 0, 782, 0, 0, 783, 784, 785,
	854, 855, 856, 0, 787, 788, 786, 789, 790, 793,
	791, 792, 857, 796, 513, 797, 798, 799, 794, 795,
	0, 0, 0, 337, 800, 801, 858, 802, 803, 804,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 346, 348, 347, 349, 350, 351, 352, 0, 353,
	354, 0, 0, 0, 0, 0, 805, 0, 0, 0,
	356, 0, 355, 2380, 357, 358, 359, 0, 360, 361,
	362, 363, 364, 365, 366, 367, 806, 807, 0, 368,
	808, 369, 809, 0, 810, 370, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 0, 0, 0, 380, 811,
	812, 813, 0, 381, 382, 383, 384, 814, 0, 0,
	0, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	0, 394, 395, 396, 393, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 412, 0, 0, 0, 0, 0,
	0, 0, 413, 414, 415, 416, 417, 0, 418, 420,
	421, 815, 422, 816, 0, 425, 427, 419, 423, 0,
	426, 424, 428, 429, 0, 430, 431, 432, 433, 0,
	0, 434, 435, 436, 0, 437, 438, 440, 439, 0,
	441, 442, 443, 0, 444, 445, 817, 446, 447, 448,
	450, 452, 449, 451, 453, 454, 455, 456, 457, 818,
	819, 458, 459, 0, 340, 0, 0, 0, 0, 0,
	460, 461, 462, 820, 0, 0, 0, 463, 0, 465,
	469, 466, 467, 468, 470, 0, 464, 471, 472, 0,
	0, 473, 474, 475, 821, 822, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 0, 485, 486, 823, 0,
	824, 487, 0, 488, 489, 490, 491, 492, 493, 494,
	825, 826, 827, 595, 0, 495, 496, 497, 0, 498,
	499, 500, 501, 502, 503, 504, 0, 0, 0, 505,
	506, 507, 508, 0, 342, 341, 343, 0, 828, 509,
	596, 510, 829, 830, 0, 831, 0, 511, 512, 515,
	0, 832, 0, 514, 516, 517, 0, 518, 0, 0,
	0, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	528, 527, 0, 530, 833, 529, 0, 531, 532, 0,
	0, 533, 534, 535, 536, 537, 538, 541, 0, 0,
	539, 540, 542, 543, 0, 544, 545, 547, 550, 546,
	548, 549, 551, 552, 565, 566, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 568, 0,
	567, 0, 569, 570, 571, 572, 573, 581, 583, 584,
	579, 580, 582, 585, 586, 588, 589, 576, 577, 578,
	0, 587, 574, 0, 575, 344, 0, 590, 591, 592,
	593, 0, 834, 594, 835, 597, 598, 0, 0, 599,
	0, 600, 0, 0, 602, 603, 604, 0, 0, 605,
	606, 836, 0, 607, 0, 837, 608, 609, 601, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 0,
	620, 621, 838, 622, 623, 624, 839, 625, 626, 627,
	840, 628, 841, 629, 630, 0, 631, 632, 633, 0,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	842, 644, 645, 647, 646, 648, 649, 0, 650, 0,
	651, 652, 653, 0, 0, 0, 0, 0, 654, 655,
	657, 0, 658, 659, 660, 661, 662, 656, 663, 664,
	665, 666, 667, 668, 669, 0, 671, 672, 670, 673,
	674, 0, 675, 676, 677, 678, 679, 843, 680, 0,
	681, 682, 690, 691, 692, 683, 684, 686, 693, 685,
	694, 695, 696, 697, 699, 698, 0, 701, 702, 700,
	703, 704, 705, 706, 0, 707, 844, 708, 687, 688,
	709, 710, 711, 0, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 845, 0, 721, 0, 722, 723, 724,
	725, 726, 727, 729, 689, 730, 731, 732, 737, 738,
	846, 733, 734, 735, 736, 847, 740, 741, 742, 743,
	0, 744, 745, 0, 739, 728, 0, 746, 747, 748,
	749, 750, 751, 752, 753, 754, 755, 0, 756, 848,
	849, 850, 851, 0, 768, 0, 757, 759, 760, 761,
	762, 852, 763, 853, 0, 764, 765, 766, 767, 758,
	769, 770, 0, 0, 771, 772, 773, 774, 776, 778,
	779, 780, 775, 777, 781, 0, 782, 0, 0, 783,
	784, 785, 854, 855, 856, 0, 787, 788, 786, 789,
	790, 793, 791, 792, 857, 796, 513, 797, 798, 799,
	794, 795, 0, 0, 0, 337, 800, 801, 858, 802,
	803, 804, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 346, 348, 347, 349, 350, 351, 352,
	0, 353, 354, 0, 0, 0, 0, 0, 805, 0,
	0, 0, 356, 0, 355, 893, 357, 358, 359, 0,
	360, 361, 362, 363, 364, 365, 366, 367, 806, 807,
	0, 368, 808, 369, 809, 0, 810, 370, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 0, 0, 0,
	380, 811, 812, 813, 0, 381, 382, 383, 384, 814,
	0, 0, 0, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 0, 394, 395, 396, 393, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 412, 0, 0, 0,
	0, 0, 0, 0, 413, 414, 415, 416, 417, 0,
	418, 420, 421, 815, 422, 816, 0, 425, 427, 419,
	423, 0, 426, 424, 428, 429, 0, 430, 431, 432,
	433, 0, 0, 434, 435, 436, 0, 437, 438, 440,
	439, 0, 441, 442, 443, 0, 444, 445, 817, 446,
	447, 448, 450, 452, 449, 451, 453, 454, 455, 456,
	457, 818, 819, 458, 459, 0, 340, 0, 0, 0,
	0, 0, 460, 461, 462, 820, 0, 0, 0, 463,
	0, 465, 469, 466, 467, 468, 470, 0, 464, 471,
	472, 0, 0, 473, 474, 475, 821, 822, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 486,
	823, 0, 824, 487, 0, 488, 489, 490, 491, 492,
	493, 494, 825, 826, 827, 595, 0, 495, 496, 497,
	0, 498, 499, 500, 501, 502, 503, 504, 0, 0,
	0, 505, 506, 507, 508, 0, 342, 341, 343, 0,
	828, 509, 596, 510, 829, 830, 0, 831, 0, 511,
	512, 515, 0, 832, 0, 514, 516, 517, 0, 518,
	0, 0, 0, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 528, 527, 0, 530, 833, 529, 0, 531,
	532, 0, 0, 533, 534, 535, 536, 537, 538, 541,
	0, 0, 539, 540, 542, 543, 0, 544, 545, 547,
	550, 546, 548, 549, 551, 552, 565, 566, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	568, 0, 567, 0, 569, 570, 571, 572, 573, 581,
	583, 584, 579, 580, 582, 585, 586, 588, 589, 576,
	577, 578, 0, 587, 574, 0, 575, 344, 0, 590,
	591, 592, 593, 0, 834, 594, 835, 597, 598, 0,
	0, 599, 0, 600, 0, 0, 602, 603, 604, 0,
	0, 605, 606, 836, 0, 607, 0, 837, 608, 609,
	601, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 0, 620, 621, 838, 622, 623, 624, 839, 625,
	626, 627, 840, 628, 841, 629, 630, 0, 631, 632,
	633, 0, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 842, 644, 645, 647, 646, 648, 649, 0,
	650, 0, 651, 652, 653, 0, 0, 0, 0, 0,
	654, 655, 657, 0, 658, 659, 660, 661, 662, 656,
	663, 664, 665, 666, 667, 668, 669, 0, 671, 672,
	670, 673, 674, 0, 675, 676, 677, 678, 679, 843,
	680, 0, 681, 682, 690, 691, 692, 683, 684, 686,
	693, 685, 694, 695, 696, 697, 699, 698, 0, 701,
	702, 700, 703, 704, 705, 706, 0, 707, 844, 708,
	687, 688, 709, 710, 711, 0, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 845, 0, 721, 0, 722,
	723, 724, 725, 726, 727, 729, 689, 730, 731, 732,
	737, 738, 846, 733, 734, 735, 736, 847, 740, 741,
	742, 743, 0, 744, 745, 0, 739, 728, 0, 746,
	747, 748, 749, 750, 751, 752, 753, 754, 755, 0,
	756, 848, 849, 850, 851, 0, 768, 0, 757, 759,
	760, 761, 762, 852, 763, 853, 0, 764, 765, 766,
	767, 758, 769, 770, 0, 0, 771, 772, 773, 774,
	776, 778, 779, 780, 775, 777, 781, 0, 782, 0,
	0, 783, 784, 785, 854, 855, 856, 0, 787, 788,
	786, 789, 790, 793, 791, 792, 857, 796, 513, 797,
	798, 799, 794, 795, 0, 337, 0, 0, 800, 801,
	858, 802, 803, 804, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 346, 348, 347, 349, 350, 351, 352,
	0, 353, 354, 0, 0, 0, 0, 0, 805, 0,
	0, 0, 356, 0, 355, 2108, 357, 358, 359, 0,
	360, 361, 362, 363, 364, 365, 366, 367, 806, 807,
	0, 368, 808, 369, 809, 0, 810, 370, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 0, 0, 0,
	380, 811, 812, 813, 0, 381, 382, 383, 384, 814,
	0, 0, 0, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 0, 394, 395, 396, 393, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 412, 0, 0, 0,
	0, 0, 0, 0, 413, 414, 415, 416, 417, 0,
	418, 420, 421, 815, 422, 816, 0, 425, 427, 419,
	423, 0, 426, 424, 428, 429, 0, 430, 431, 432,
	433, 0, 0, 434, 435, 436, 0, 437, 438, 440,
	439, 0, 441, 442, 443, 0, 444, 445, 817, 446,
	447, 448, 450, 452, 449, 451, 453, 454, 455, 456,
	457, 818, 819, 458, 459, 0, 340, 0, 0, 0,
	0, 0, 460, 461, 462, 820, 0, 0, 0, 463,
	0, 465, 469, 466, 467, 468, 470, 0, 464, 471,
	472, 0, 0, 473, 474, 475, 821, 822, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 486,
	823, 0, 824, 487, 0, 488, 489, 490, 491, 492,
	493, 494, 825, 826, 827, 595, 0, 495, 496, 497,
	0, 498, 499, 500, 501, 502, 503, 504, 0, 0,
	0, 505, 506, 507, 508, 0, 342, 341, 343, 0,
	828, 509, 596, 510, 829, 830, 0, 831, 0, 511,
	512, 515, 0, 832, 0, 514, 516, 517, 0, 518,
	0, 0, 0, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 528, 527, 0, 530, 833, 529, 0, 531,
	532, 0, 0, 533, 534, 535, 536, 537, 538, 541,
	0, 0, 539, 540, 542, 543, 0, 544, 545, 547,
	550, 546, 548, 549, 551, 552, 565, 566, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	568, 0, 567, 0, 569, 570, 571, 572, 573, 581,
	583, 584, 579, 580, 582, 585, 586, 588, 589, 576,
	577, 578, 0, 587, 574, 0, 575, 344, 0, 590,
	591, 592, 593, 0, 834, 594, 835, 597, 598, 0,
	0, 599, 0, 600, 0, 0, 602, 603, 604, 0,
	0, 605, 606, 836, 0, 607, 0, 837, 608, 609,
	601, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 0, 620, 621, 838, 622, 623, 624, 839, 625,
	626, 627, 840, 628, 841, 629, 630, 0, 631, 632,
	633, 0, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 842, 644, 645, 647, 646, 648, 649, 0,
	650, 0, 651, 652, 653, 0, 0, 0, 0, 0,
	654, 655, 657, 0, 658, 659, 660, 661, 662, 656,
	663, 664, 665, 666, 667, 668, 669, 0, 671, 672,
	670, 673, 674, 0, 675, 676, 677, 678, 679, 843,
	680, 0, 681, 682, 690, 691, 692, 683, 684, 686,
	693, 685, 694, 695, 696, 697, 699, 698, 0, 701,
	702, 700, 703, 704, 705, 706, 0, 707, 844, 708,
	687, 688, 709, 710, 711, 0, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 845, 0, 721, 0, 722,
	723, 724, 725, 726, 727, 729, 689, 730, 731, 732,
	737, 738, 846, 733, 734, 735, 736, 847, 740, 741,
	742, 743, 0, 744, 745, 0, 739, 728, 0, 746,
	747, 748, 749, 750, 751, 752, 753, 754, 755, 0,
	756, 848, 849, 850, 851, 0, 768, 0, 757, 759,
	760, 761, 762, 852, 763, 853, 0, 764, 765, 766,
	767, 758, 769, 770, 0, 0, 771, 772, 773, 774,
	776, 778, 779, 780, 775, 777, 781, 0, 782, 0,
	0, 783, 784, 785, 854, 855, 856, 0, 787, 788,
	786, 789, 790, 793, 791, 792, 857, 796, 513, 797,
	798, 799, 794, 795, 0, 337, 4327, 0, 800, 801,
	858, 802, 803, 804, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 346, 348, 347, 349, 350, 351, 352,
	0, 353, 354, 0, 0, 0, 0, 0, 805, 0,
	0, 0, 356, 0, 355, 5094, 357, 358, 359, 0,
	360, 361, 362, 363, 364, 365, 366, 367, 806, 807,
	0, 368, 808, 369, 809, 0, 810, 370, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 0, 0, 0,
	380, 811, 812, 813, 0, 381, 382, 383, 384, 814,
	0, 0, 0, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 0, 394, 395, 396, 393, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 412, 0, 0, 0,
	0, 0, 0, 0, 413, 414, 415, 416, 417, 0,
	418, 420, 421, 815, 422, 816, 0, 425, 427, 419,
	423, 0, 426, 424, 428, 429, 0, 430, 431, 432,
	433, 0, 0, 434, 435, 436, 0, 437, 438, 440,
	439, 0, 441, 442, 443, 0, 444, 445, 817, 446,
	447, 448, 450, 452, 449, 451, 453, 454, 455, 456,
	457, 818, 819, 458, 459, 0, 0, 0, 0, 0,
	0, 0, 460, 461, 462, 820, 0, 0, 0, 463,
	0, 465, 469, 466, 467, 468, 470, 0, 464, 471,
	472, 0, 0, 473, 474, 475, 821, 822, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 486,
	823, 0, 824, 487, 0, 488, 489, 490, 491, 492,
	493, 494, 825, 826, 827, 595, 0, 495, 496, 497,
	0, 498, 499, 500, 501, 502, 503, 504, 0, 0,
	0, 505, 506, 507, 508, 0, 0, 0, 0, 0,
	828, 509, 596, 510, 829, 830, 0, 831, 0, 511,
	512, 515, 0, 832, 0, 514, 516, 517, 0, 518,
	0, 0, 0, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 528, 527, 0, 530, 833, 529, 0, 531,
	532, 0, 0, 533, 534, 535, 536, 537, 538, 541,
	0, 0, 539, 540, 542, 543, 0, 544, 545, 547,
	550, 546, 548, 549, 551, 552, 565, 566, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	568, 0, 567, 0, 569, 570, 571, 572, 573, 581,
	583, 584, 579, 580, 582, 585, 586, 588, 589, 576,
	577, 578, 0, 587, 574, 0, 575, 0, 0, 590,
	591, 592, 593, 0, 834, 594, 835, 597, 598, 0,
	0, 599, 0, 600, 0, 0, 602, 603, 604, 0,
	0, 605, 606, 836, 0, 607, 0, 837, 608, 609,
	601, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 0, 620, 621, 838, 622, 623, 624, 839, 625,
	626, 627, 840, 628, 841, 629, 630, 0, 631, 632,
	633, 0, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 842, 644, 645, 647, 646, 648, 649, 0,
	650, 0, 651, 652, 653, 0, 0, 0, 0, 0,
	654, 655, 657, 0, 658, 659, 660, 661, 662, 656,
	663, 664, 665, 666, 667, 668, 669, 0, 671, 672,
	670, 673, 674, 0, 675, 676, 677, 678, 679, 843,
	680, 0, 681, 682, 690, 691, 692, 683, 684, 686,
	693, 685, 694, 695, 696, 697, 699, 698, 0, 701,
	702, 700, 703, 704, 705, 706, 0, 707, 844, 708,
	687, 688, 709, 710, 711, 0, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 845, 0, 721, 0, 722,
	723, 724, 725, 726, 727, 729, 689, 730, 731, 732,
	737, 738, 846, 733, 734, 735, 736, 847, 740, 741,
	742, 743, 0, 744, 745, 0, 739, 728, 0, 746,
	747, 748, 749, 750, 751, 752, 753, 754, 755, 0,
	756, 848, 849, 850, 851, 0, 768, 0, 757, 759,
	760, 761, 762, 852, 763, 853, 0, 764, 765, 766,
	767, 758, 769, 770, 0, 0, 771, 772, 773, 774,
	776, 778, 779, 780, 775, 777, 781, 0, 782, 0,
	0, 783, 784, 785, 854, 855, 856, 0, 787, 788,
	786, 789, 790, 793, 791, 792, 857, 796, 513, 797,
	798, 799, 794, 795, 0, 0, 0, 4022, 800, 801,
	858, 802, 803, 804, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 346, 348, 347, 349, 350,
	351, 352, 0, 353, 354, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 356, 0, 355, 6694, 357, 358,
	359, 874, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 2451, 0, 368, 2458, 369, 2457, 0, 2466, 370,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 0,
	0, 0, 380, 2469, 2470, 0, 0, 381, 382, 383,
	384, 0, 0, 875, 0, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 0, 394, 395, 396, 393, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 408, 409, 876, 410, 411, 412, 0,
	0, 0, 0, 0, 0, 0, 413, 414, 415, 416,
	417, 1477, 418, 420, 421, 2455, 422, 2454, 0, 425,
	427, 419, 423, 0, 426, 424, 428, 429, 0, 430,
	431, 432, 433, 0, 0, 434, 1469, 436, 0, 437,
	438, 440, 439, 0, 441, 442, 443, 0, 444, 445,
	0, 446, 447, 448, 450, 452, 449, 451, 453, 454,
	455, 456, 457, 0, 0, 458, 459, 0, 340, 0,
	0, 0, 0, 0, 460, 461, 462, 2453, 0, 0,
	0, 463, 0, 465, 469, 466, 467, 468, 470, 0,
	464, 471, 472, 0, 877, 473, 474, 475, 2464, 2465,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 0,
	485, 486, 0, 0, 0, 487, 0, 488, 489, 490,
	491, 492, 493, 494, 0, 0, 0, 595, 879, 495,
	496, 497, 4016, 498, 499, 500, 501, 502, 503, 504,
	0, 0, 0, 505, 506, 507, 508, 0, 0, 0,
	0, 878, 4018, 509, 596, 510, 2448, 2449, 0, 2444,
	0, 511, 512, 515, 880, 0, 881, 514, 516, 517,
	882, 518, 0, 0, 0, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 528, 527, 0, 530, 0, 529,
	883, 531, 532, 884, 0, 533, 534, 535, 536, 537,
	538, 541, 0, 0, 539, 540, 542, 543, 0, 544,
	545, 547, 550, 546, 548, 549, 551, 552, 565, 566,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 568, 0, 567, 885, 569, 570, 571, 572,
	573, 581, 583, 584, 579, 580, 582, 585, 586, 588,
	589, 576, 577, 578, 886, 587, 574, 0, 575, 0,
	887, 590, 591, 592, 593, 0, 0, 594, 2456, 597,
	598, 0, 0, 599, 0, 600, 0, 0, 602, 603,
	604, 0, 0, 605, 606, 4017, 888, 607, 889, 0,
	608, 609, 601, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 620, 621, 2441, 622, 623, 624,
	2442, 625, 626, 627, 0, 628, 0, 629, 630, 0,
	631, 632, 633, 0, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 2452, 644, 645, 647, 646, 648,
	649, 0, 650, 0, 651, 652, 653, 0, 0, 0,
	0, 0, 654, 655, 657, 0, 658, 659, 660, 661,
	662, 656, 663, 664, 665, 666, 667, 668, 669, 0,
	671, 672, 670, 673, 674, 890, 675, 676, 677, 678,
	679, 0, 680, 0, 681, 682, 690, 691, 692, 683,
	684, 686, 693, 685, 694, 695, 696, 697, 699, 698,
	0, 701, 702, 700, 703, 704, 705, 706, 0, 707,
	0, 708, 687, 688, 709, 710, 711, 891, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 2450, 0, 721,
	0, 722, 723, 724, 725, 726, 727, 729, 689, 730,
	731, 732, 737, 738, 2468, 733, 734, 735, 736, 0,
	740, 741, 742, 743, 0, 744, 745, 0, 739, 728,
	0, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	755, 0, 756, 2460, 2461, 2462, 2463, 0, 768, 0,
	757, 759, 760, 761, 762, 0, 763, 0, 0, 764,
	765, 766, 767, 758, 769, 770, 0, 0, 771, 772,
	773, 774, 776, 778, 779, 780, 775, 777, 781, 0,
	782, 0, 0, 783, 784, 785, 0, 2459, 2467, 4019,
	787, 788, 786, 789, 790, 793, 791, 792, 0, 796,
	513, 797, 798, 799, 794, 795, 0, 0, 0, 0,
	800, 801, 0, 802, 803, 804, 0, 0, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 346, 348, 347, 349,
	350, 351, 352, 0, 353, 354, 0, 0, 0, 0,
	4011, 805, 0, 2437, 0, 356, 0, 355, 0, 357,
	358, 359, 0, 360, 361, 362, 363, 364, 365, 366,
	367, 806, 807, 0, 368, 808, 369, 809, 0, 810,
	370, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	0, 0, 0, 380, 811, 812, 813, 0, 381, 382,
	383, 384, 814, 0, 0, 0, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 0, 394, 395, 396, 393,
	397, 398, 0, 399, 0, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 412,
	0, 0, 0, 0, 0, 0, 0, 413, 414, 415,
	416, 417, 0, 418, 420, 421, 815, 422, 816, 0,
	425, 427, 419, 423, 0, 426, 424, 428, 429, 0,
	430, 431, 432, 433, 0, 0, 434, 435, 436, 0,
	437, 438, 440, 439, 0, 441, 442, 443, 0, 444,
	445, 817, 446, 447, 448, 450, 452, 449, 451, 453,
	454, 455, 456, 457, 818, 819, 458, 459, 0, 0,
	0, 0, 0, 0, 0, 460, 461, 462, 820, 0,
	0, 0, 463, 0, 465, 469, 466, 467, 468, 470,
	0, 464, 471, 472, 0, 0, 473, 474, 475, 821,
	822, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 486, 823, 0, 824, 487, 0, 488, 489,
	490, 491, 492, 493, 494, 825, 826, 827, 595, 0,
	495, 496, 497, 0, 498, 499, 500, 501, 502, 503,
	504, 0, 0, 0, 505, 506, 507, 508, 0, 0,
	0, 0, 0, 828, 509, 596, 510, 829, 830, 0,
	831, 0, 511, 512, 515, 0, 832, 0, 514, 516,
	517, 0, 518, 0, 0, 0, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 528, 527, 0, 530, 833,
	529, 0, 531, 532, 0, 0, 533, 534, 535, 536,
	537, 538, 541, 0, 0, 539, 540, 542, 543, 0,
	544, 545, 547, 550, 546, 548, 549, 551, 552, 565,
	566, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 568, 0, 567, 0, 569, 570, 571,
	572, 573, 581, 583, 584, 579, 580, 582, 585, 586,
	588, 589, 576, 577, 578, 0, 587, 574, 0, 575,
	0, 0, 590, 591, 592, 593, 0, 834, 594, 835,
	597, 598, 0, 0, 599, 0, 600, 0, 0, 602,
	603, 604, 0, 0, 605, 606, 836, 0, 607, 0,
	837, 608, 609, 601, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 0, 620, 621, 838, 622, 623,
	624, 839, 625, 626, 627, 840, 628, 841, 629, 630,
	0, 631, 632, 633, 0, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 842, 644, 645, 647, 646,
	648, 649, 0, 650, 0, 651, 652, 653, 0, 0,
	0, 0, 0, 654, 655, 657, 0, 658, 659, 660,
	661, 662, 656, 663, 664, 665, 666, 667, 668, 669,
	0, 671, 672, 670, 673, 674, 0, 675, 676, 677,
	678, 679, 843, 680, 0, 681, 682, 690, 691, 692,
	683, 684, 686, 693, 685, 694, 695, 696, 697, 699,
	698, 0, 701, 702, 700, 703, 704, 705, 706, 0,
	707, 844, 708, 687, 688, 709, 710, 711, 0, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 845, 0,
	721, 0, 722, 723, 724, 725, 726, 727, 729, 689,
	730, 731, 732, 737, 738, 846, 733, 734, 735, 736,
	847, 740, 741, 742, 743, 0, 744, 745, 0, 739,
	728, 0, 746, 747, 748, 749, 750, 751, 752, 753,
	754, 755, 0, 756, 848, 849, 850, 851, 0, 768,
	0, 757, 759, 760, 761, 762, 852, 763, 853, 0,
	764, 765, 766, 767, 758, 769, 770, 0, 0, 771,
	772, 773, 774, 776, 778, 779, 780, 775, 777, 781,
	0, 782, 0, 0, 783, 784, 785, 854, 855, 856,
	0, 787, 788, 786, 789, 790, 793, 791, 792, 857,
	796, 513, 797, 798, 799, 794, 795, 0, 0, 0,
	4022, 800, 801, 858, 802, 803, 804, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 346, 348,
	347, 349, 350, 351, 352, 0, 353, 354, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 356, 0, 355,
	4469, 357, 358, 359, 874, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 2451, 0, 368, 2458, 369, 2457,
	0, 2466, 370, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 0, 0, 380, 2469, 2470, 0, 0,
	381, 382, 383, 384, 0, 0, 875, 0, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 0, 394, 395,
	396, 393, 397, 398, 0, 399, 0, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 408, 409, 876, 410,
	411, 412, 0, 0, 0, 0, 0, 0, 0, 413,
	414, 415, 416, 417, 1477, 418, 420, 421, 2455, 422,
	2454, 0, 425, 427, 419, 423, 0, 426, 424, 428,
	429, 0, 430, 431, 432, 433, 0, 0, 434, 1469,
	436, 0, 437, 438, 440, 439, 0, 441, 442, 443,
	0, 444, 445, 0, 446, 447, 448, 450, 452, 449,
	451, 453, 454, 455, 456, 457, 0, 0, 458, 459,
	0, 340, 0, 0, 0, 0, 0, 460, 461, 462,
	2453, 0, 0, 0, 463, 0, 465, 469, 466, 467,
	468, 470, 0, 464, 471, 472, 0, 877, 473, 474,
	475, 2464, 2465, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 486, 0, 0, 0, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 0, 0, 0,
	595, 879, 495, 496, 497, 4016, 498, 499, 500, 501,
	502, 503, 504, 0, 0, 0, 505, 506, 507, 508,
	0, 0, 0, 0, 878, 4018, 509, 596, 510, 2448,
	2449, 0, 2444, 0, 511, 512, 515, 880, 0, 881,
	514, 516, 517, 882, 518, 0, 0, 0, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 528, 527, 0,
	530, 0, 529, 883, 531, 532, 884, 0, 533, 534,
	535, 536, 537, 538, 541, 0, 0, 539, 540, 542,
	543, 0, 544, 545, 547, 550, 546, 548, 549, 551,
	552, 565, 566, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 568, 0, 567, 885, 569,
	570, 571, 572, 573, 581, 583, 584, 579, 580, 582,
	585, 586, 588, 589, 576, 577, 578, 886, 587, 574,
	0, 575, 0, 887, 590, 591, 592, 593, 0, 0,
	594, 2456, 597, 598, 0, 0, 599, 0, 600, 0,
	0, 602, 603, 604, 0, 0, 605, 606, 4017, 888,
	607, 889, 0, 608, 609, 601, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 0, 620, 621, 2441,
	622, 623, 624, 2442, 625, 626, 627, 0, 628, 0,
	629, 630, 0, 631, 632, 633, 0, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 2452, 644, 645,
	647, 646, 648, 649, 0, 650, 0, 651, 652, 653,
	0, 0, 0, 0, 0, 654, 655, 657, 0, 658,
	659, 660, 661, 662, 656, 663, 664, 665, 666, 667,
	668, 669, 0, 671, 672, 670, 673, 674, 890, 675,
	676, 677, 678, 679, 0, 680, 0, 681, 682, 690,
	691, 692, 683, 684, 686, 693, 685, 694, 695, 696,
	697, 699, 698, 0, 701, 702, 700, 703, 704, 705,
	706, 0, 707, 0, 708, 687, 688, 709, 710, 711,
	891, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	2450, 0, 721, 0, 722, 723, 724, 725, 726, 727,
	729, 689, 730, 731, 732, 737, 738, 2468, 733, 734,
	735, 736, 0, 740, 741, 742, 743, 0, 744, 745,
	0, 739, 728, 0, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 0, 756, 2460, 2461, 2462, 2463,
	0, 768, 0, 757, 759, 760, 761, 762, 0, 763,
	0, 0, 764, 765, 766, 767, 758, 769, 770, 0,
	0, 771, 772, 773, 774, 776, 778, 779, 780, 775,
	777, 781, 0, 782, 0, 0, 783, 784, 785, 0,
	2459, 2467, 4019, 787, 788, 786, 789, 790, 793, 791,
	792, 0, 796, 513, 797, 798, 799, 794, 795, 0,
	0, 0, 337, 800, 801, 0, 802, 803, 804, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	346, 348, 347, 349, 350, 351, 352, 0, 353, 354,
	0, 0, 0, 0, 0, 805, 0, 0, 0, 356,
	0, 355, 0, 357, 358, 359, 2437, 360, 361, 362,
	363, 364, 365, 366, 367, 806, 807, 0, 368, 808,
	369, 809, 0, 810, 370, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 0, 0, 0, 380, 811, 812,
	813, 0, 381, 382, 383, 384, 814, 0, 0, 0,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 0,
	394, 395, 396, 393, 397, 398, 0, 399, 0, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 412, 0, 0, 0, 0, 0, 0,
	0, 413, 414, 415, 416, 417, 0, 418, 420, 421,
	815, 422, 816, 0, 425, 427, 419, 423, 0, 426,
	424, 428, 429, 0, 430, 431, 432, 433, 0, 0,
	434, 435, 436, 0, 437, 438, 440, 439, 0, 441,
	442, 443, 0, 444, 445, 817, 446, 447, 448, 450,
	452, 449, 451, 453, 454, 455, 456, 457, 818, 819,
	458, 459, 0, 0, 0, 0, 0, 0, 0, 460,
	461, 462, 820, 0, 0, 0, 463, 0, 465, 469,
	466, 467, 468, 470, 0, 464, 471, 472, 0, 0,
	473, 474, 475, 821, 822, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 486, 823, 0, 824,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 825,
	826, 827, 595, 0, 495, 496, 497, 0, 498, 499,
	500, 501, 502, 503, 504, 0, 0, 0, 505, 506,
	507, 508, 0, 0, 0, 0, 0, 828, 509, 596,
	510, 829, 830, 0, 831, 0, 511, 512, 515, 0,
	832, 0, 514, 516, 517, 0, 518, 0, 0, 0,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 528,
	527, 0, 530, 833, 529, 0, 531, 532, 0, 0,
	533, 534, 535, 536, 537, 538, 541, 0, 0, 539,
	540, 542, 543, 0, 544, 545, 547, 550, 546, 548,
	549, 551, 552, 565, 566, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 568, 0, 567,
	0, 569, 570, 571, 572, 573, 581, 583, 584, 579,
	580, 582, 585, 586, 588, 589, 576, 577, 578, 0,
	587, 574, 0, 575, 0, 0, 590, 591, 592, 593,
	0, 834, 594, 835, 597, 598, 0, 0, 599, 0,
	600, 0, 0, 602, 603, 604, 0, 0, 605, 606,
	836, 0, 607, 0, 837, 608, 609, 601, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 0, 620,
	621, 838, 622, 623, 624, 839, 625, 626, 627, 840,
	628, 841, 629, 630, 0, 631, 632, 633, 0, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 842,
	644, 645, 647, 646, 648, 649, 0, 650, 0, 651,
	652, 653, 0, 0, 0, 0, 0, 654, 655, 657,
	0, 658, 659, 660, 661, 662, 656, 663, 664, 665,
	666, 667, 668, 669, 0, 671, 672, 670, 673, 674,
	0, 675, 676, 677, 678, 679, 843, 680, 0, 681,
	682, 690, 691, 692, 683, 684, 686, 693, 685, 694,
	695, 696, 697, 699, 698, 0, 701, 702, 700, 703,
	704, 705, 706, 0, 707, 844, 708, 687, 688, 709,
	710, 711, 0, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 845, 0, 721, 0, 722, 723, 724, 725,
	726, 727, 729, 689, 730, 731, 732, 737, 738, 846,
	733, 734, 735, 736, 847, 740, 741, 742, 743, 0,
	744, 745, 0, 739, 728, 0, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 0, 756, 848, 849,
	850, 851, 0, 768, 0, 757, 759, 760, 761, 762,
	852, 763, 853, 0, 764, 765, 766, 767, 758, 769,
	770, 0, 0, 771, 772, 773, 774, 776, 778, 779,
	780, 775, 777, 781, 0, 782, 0, 0, 783, 784,
	785, 854, 855, 856, 0, 787, 788, 786, 789, 790,
	793, 791, 792, 857, 796, 513, 797, 798, 799, 794,
	795, 0, 0, 0, 337, 800, 801, 858, 802, 803,
	804, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 346, 348, 347, 349, 350, 351, 352, 0,
	353, 354, 0, 0, 0, 0, 0, 805, 0, 0,
	0, 356, 0, 355, 5248, 357, 358, 359, 0, 360,
	361, 362, 363, 364, 365, 366, 367, 806, 807, 0,
	368, 808, 369, 809, 0, 810, 370, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 0, 0, 0, 380,
	811, 812, 813, 0, 381, 382, 383, 384, 814, 0,
	0, 0, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 0, 394, 395, 396, 393, 397, 398, 0, 399,
	0, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 412, 0, 0, 0, 0,
	0, 0, 0, 413, 414, 415, 416, 417, 0, 418,
	420, 421, 815, 422, 816, 0, 425, 427, 419, 423,
	0, 426, 424, 428, 429, 0, 430, 431, 432, 433,
	0, 0, 434, 435, 436, 0, 437, 438, 440, 439,
	0, 441, 442, 443, 0, 444, 445, 817, 446, 447,
	448, 450, 452, 449, 451, 453, 454, 455, 456, 457,
	818, 819, 458, 459, 0, 0, 0, 0, 0, 0,
	0, 460, 461, 462, 820, 0, 0, 0, 463, 0,
	465, 469, 466, 467, 468, 470, 0, 464, 471, 472,
	0, 0, 473, 474, 475, 821, 822, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 486, 823,
	0, 824, 487, 0, 488, 489, 490, 491, 492, 493,
	494, 825, 826, 827, 595, 0, 495, 496, 497, 0,
	498, 499, 500, 501, 502, 503, 504, 0, 0, 0,
	505, 506, 507, 508, 0, 0, 0, 0, 0, 828,
	509, 596, 510, 829, 830, 0, 831, 0, 511, 512,
	515, 0, 832, 0, 514, 516, 517, 0, 518, 0,
	0, 0, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 528, 527, 0, 530, 833, 529, 0, 531, 532,
	0, 0, 533, 534, 535, 536, 537, 538, 541, 0,
	0, 539, 540, 542, 543, 0, 544, 545, 547, 550,
	546, 548, 549, 551, 552, 565, 566, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 568,
	0, 567, 0, 569, 570, 571, 572, 573, 581, 583,
	584, 579, 580, 582, 585, 586, 588, 589, 576, 577,
	578, 0, 587, 574, 0, 575, 0, 0, 590, 591,
	592, 593, 0, 834, 594, 835, 597, 598, 0, 0,
	599, 0, 600, 0, 0, 602, 603, 604, 0, 0,
	605, 606, 836, 0, 607, 0, 837, 608, 609, 601,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	0, 620, 621, 838, 622, 623, 624, 839, 625, 626,
	627, 840, 628, 841, 629, 630, 0, 631, 632, 633,
	0, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 842, 644, 645, 647, 646, 648, 649, 0, 650,
	0, 651, 652, 653, 0, 0, 0, 0, 0, 654,
	655, 657, 0, 658, 659, 660, 661, 662, 656, 663,
	664, 665, 666, 667, 668, 669, 0, 671, 672, 670,
	673, 674, 0, 675, 676, 677, 678, 679, 843, 680,
	0, 681, 682, 690, 691, 692, 683, 684, 686, 693,
	685, 694, 695, 696, 697, 699, 698, 0, 701, 702,
	700, 703, 704, 705, 706, 0, 707, 844, 708, 687,
	688, 709, 710, 711, 0, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 845, 0, 721, 0, 722, 723,
	724, 725, 726, 727, 729, 689, 730, 731, 732, 737,
	738, 846, 733, 734, 735, 736, 847, 740, 741, 742,
	743, 0, 744, 745, 0, 739, 728, 0, 746, 747,
	748, 749, 750, 751, 752, 753, 754, 755, 0, 756,
	848, 849, 850, 851, 0, 768, 0, 757, 759, 760,
	761, 762, 852, 763, 853, 0, 764, 765, 766, 767,
	758, 769, 770, 0, 0, 771, 772, 773, 774, 776,
	778, 779, 780, 775, 777, 781, 0, 782, 0, 0,
	783, 784, 785, 854, 855, 856, 0, 787, 788, 786,
	789, 790, 793, 791, 792, 857, 796, 513, 797, 798,
	799, 794, 795, 0, 1246, 0, 1137, 800, 801, 858,
	802, 803, 804, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 346, 348, 347, 349, 350, 351,
	352, 0, 353, 354, 0, 0, 0, 0, 0, 805,
	0, 0, 0, 356, 0, 355, 2976, 357, 358, 359,
	0, 360, 361, 362, 363, 364, 365, 366, 367, 806,
	807, 0, 368, 808, 369, 809, 0, 810, 370, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 0, 0,
	0, 380, 811, 812, 813, 0, 381, 382, 383, 384,
	814, 0, 0, 0, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 0, 394, 395, 396, 393, 397, 398,
	0, 399, 0, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 412, 0, 0,
	0, 0, 0, 0, 0, 413, 414, 415, 1144, 417,
	0, 418, 420, 421, 815, 422, 816, 0, 425, 427,
	419, 423, 0, 426, 424, 428, 429, 0, 430, 431,
	432, 433, 0, 0, 434, 435, 436, 0, 437, 438,
	440, 439, 0, 441, 442, 443, 0, 444, 445, 817,
	446, 447, 448, 450, 452, 449, 451, 453, 454, 455,
	456, 457, 818, 819, 458, 459, 0, 340, 0, 0,
	0, 0, 0, 460, 461, 462, 820, 0, 0, 0,
	463, 0, 465, 469, 466, 467, 468, 470, 0, 464,
	471, 472, 1243, 0, 473, 474, 475, 821, 822, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	486, 823, 0, 824, 487, 0, 488, 489, 490, 491,
	492, 493, 494, 825, 826, 827, 595, 0, 495, 496,
	497, 0, 498, 499, 500, 501, 502, 503, 504, 0,
	0, 0, 505, 506, 507, 508, 0, 342, 341, 343,
	0, 828, 509, 596, 510, 829, 830, 0, 831, 0,
	511, 512, 515, 0, 832, 0, 514, 516, 517, 0,
	518, 0, 0, 0, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 528, 527, 0, 530, 833, 529, 0,
	531, 532, 0, 0, 533, 534, 535, 536, 537, 538,
	541, 0, 0, 539, 540, 542, 543, 0, 544, 545,
	547, 550, 546, 548, 549, 551, 552, 565, 566, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 568, 0, 567, 0, 569, 570, 571, 572, 573,
	581, 583, 584, 579, 580, 582, 585, 586, 588, 589,
	576, 577, 578, 0, 587, 574, 0, 575, 344, 0,
	590, 591, 592, 593, 0, 834, 594, 835, 597, 598,
	0, 0, 599, 0, 600, 0, 0, 602, 603, 604,
	0, 0, 605, 606, 836, 0, 607, 0, 837, 608,
	609, 601, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 0, 620, 621, 838, 622, 623, 624, 839,
	625, 626, 627, 840, 628, 841, 629, 630, 0, 631,
	632, 633, 0, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 842, 644, 645, 647, 646, 648, 649,
	0, 650, 0, 651, 652, 653, 0, 0, 0, 0,
	0, 654, 655, 657, 0, 658, 659, 660, 661, 662,
	656, 663, 664, 665, 666, 667, 668, 669, 0, 671,
	672, 670, 673, 674, 0, 675, 676, 677, 678, 679,
	843, 680, 0, 681, 682, 690, 691, 692, 683, 684,
	686, 693, 685, 694, 695, 696, 697, 699, 698, 0,
	701, 702, 700, 703, 704, 705, 706, 0, 707, 844,
	708, 687, 688, 709, 710, 711, 0, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 845, 0, 721, 0,
	722, 723, 724, 725, 726, 727, 729, 689, 730, 731,
	732, 737, 738, 846, 733, 734, 735, 736, 847, 740,
	741, 742, 743, 0, 744, 1245, 0, 739, 728, 1142,
	746, 747, 748, 749, 750, 1146, 752, 753, 754, 755,
	0, 756, 848, 849, 850, 851, 0, 768, 0, 757,
	759, 760, 761, 762, 852, 763, 853, 0, 764, 765,
	766, 767, 758, 769, 770, 0, 0, 771, 772, 773,
	774, 776, 778, 779, 780, 775, 777, 781, 0, 782,
	0, 0, 783, 784, 785, 854, 855, 856, 0, 787,
	788, 786, 789, 790, 793, 791, 792, 1145, 796, 513,
	797, 798, 799, 794, 795, 2418, 0, 0, 0, 800,
	801, 858, 802, 803, 804, 0, 0, 0, 0, 0,
	0, 0, 345, 346, 348, 347, 349, 350, 351, 352,
	5389, 353, 354, 0, 0, 0, 0, 0, 805, 0,
	1149, 0, 356, 0, 355, 0, 357, 358, 359, 0,
	360, 361, 362, 363, 364, 365, 366, 367, 806, 807,
	0, 368, 808, 369, 809, 0, 810, 370, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 0, 0, 0,
	380, 811, 812, 813, 0, 381, 382, 383, 384, 814,
	0, 0, 0, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 0, 394, 395, 396, 393, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 412, 0, 0, 0,
	0, 0, 0, 0, 413, 414, 415, 2425, 417, 0,
	418, 420, 421, 815, 422, 816, 0, 425, 427, 419,
	423, 0, 426, 424, 428, 429, 0, 430, 431, 432,
	433, 0, 0, 434, 435, 436, 0, 437, 438, 440,
	439, 0, 441, 442, 443, 0, 444, 445, 817, 446,
	447, 448, 450, 452, 449, 451, 453, 454, 455, 456,
	2426, 818, 819, 458, 459, 0, 340, 0, 0, 0,
	0, 0, 460, 461, 462, 820, 0, 0, 0, 463,
	0, 465, 469, 466, 467, 468, 470, 0, 464, 471,
	472, 0, 0, 2427, 474, 475, 821, 822, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 486,
	823, 0, 824, 487, 0, 488, 489, 490, 491, 492,
	493, 494, 825, 826, 827, 595, 0, 495, 496, 497,
	0, 498, 499, 500, 501, 502, 503, 504, 0, 0,
	0, 505, 506, 507, 508, 0, 342, 341, 343, 0,
	828, 509, 596, 510, 829, 830, 0, 831, 0, 511,
	512, 515, 0, 832, 0, 514, 516, 517, 0, 518,
	0, 0, 0, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 528, 527, 0, 530, 833, 529, 0, 531,
	532, 0, 0, 533, 534, 535, 536, 537, 538, 541,
	0, 0, 539, 540, 542, 543, 0, 544, 545, 547,
	550, 546, 548, 549, 551, 552, 565, 566, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	568, 0, 567, 0, 569, 570, 571, 572, 573, 581,
	583, 584, 579, 580, 582, 585, 586, 588, 589, 576,
	577, 578, 0, 587, 574, 0, 575, 344, 0, 590,
	591, 592, 593, 0, 834, 594, 835, 597, 598, 0,
	0, 599, 0, 600, 0, 0, 602, 603, 604, 0,
	0, 605, 606, 836, 0, 607, 0, 837, 608, 609,
	601, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 0, 620, 621, 838, 622, 623, 624, 839, 625,
	626, 627, 840, 628, 841, 629, 630, 0, 631, 632,
	633, 0, 2428, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 842, 644, 645, 647, 646, 648, 649, 0,
	650, 0, 651, 652, 653, 0, 0, 0, 0, 0,
	654, 655, 657, 0, 658, 659, 660, 661, 662, 656,
	663, 664, 665, 666, 667, 668, 669, 0, 671, 672,
	670, 673, 674, 0, 675, 676, 677, 678, 679, 843,
	680, 0, 681, 682, 690, 691, 692, 683, 684, 686,
	5388, 685, 694, 695, 696, 697, 699, 698, 0, 2422,
	702, 700, 703, 704, 705, 706, 0, 707, 844, 708,
	687, 688, 709, 710, 711, 0, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 845, 0, 721, 0, 722,
	723, 724, 725, 726, 727, 729, 689, 730, 731, 732,
	737, 738, 846, 733, 734, 735, 736, 847, 740, 741,
	742, 743, 0, 744, 745, 0, 739, 728, 2424, 746,
	747, 748, 749, 750, 751, 752, 753, 754, 755, 0,
	756, 848, 849, 850, 851, 0, 768, 0, 757, 759,
	760, 761, 762, 852, 763, 853, 0, 764, 765, 5387,
	767, 758, 769, 770, 0, 0, 771, 772, 773, 774,
	776, 778, 779, 780, 775, 777, 781, 0, 782, 0,
	0, 783, 784, 785, 854, 855, 856, 0, 787, 788,
	786, 789, 790, 793, 791, 792, 857, 796, 513, 797,
	798, 799, 794, 795, 0, 5055, 0, 1137, 800, 801,
	858, 802, 803, 804, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 346, 348, 347, 349, 350,
	351, 352, 0, 353, 354, 0, 0, 0, 0, 1149,
	805, 0, 0, 0, 356, 0, 355, 0, 357, 358,
	359, 0, 360, 361, 362, 363, 364, 365, 366, 367,
	806, 807, 0, 368, 808, 369, 809, 0, 810, 370,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 0,
	0, 0, 380, 811, 812, 813, 0, 381, 382, 383,
	384, 814, 0, 0, 0, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 0, 394, 395, 396, 393, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 412, 0,
	0, 0, 0, 0, 0, 0, 413, 414, 415, 1144,
	417, 0, 418, 420, 421, 815, 422, 816, 0, 425,
	427, 419, 423, 0, 426, 424, 428, 429, 0, 430,
	431, 432, 433, 0, 0, 434, 435, 436, 0, 437,
	438, 440, 439, 0, 441, 442, 443, 0, 444, 445,
	817, 446, 447, 448, 450, 452, 449, 451, 453, 454,
	455, 456, 457, 818, 819, 458, 459, 0, 340, 0,
	0, 0, 0, 0, 460, 461, 462, 820, 0, 0,
	0, 463, 0, 465, 469, 466, 467, 468, 470, 0,
	464, 471, 472, 0, 0, 473, 474, 475, 821, 822,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 0,
	485, 486, 823, 0, 824, 487, 0, 488, 489, 490,
	491, 492, 493, 494, 825, 826, 827, 595, 0, 495,
	496, 497, 0, 498, 499, 500, 501, 502, 503, 504,
	0, 0, 0, 505, 506, 507, 508, 0, 342, 341,
	343, 0, 828, 509, 596, 510, 829, 830, 0, 831,
	0, 511, 512, 515, 0, 832, 0, 514, 516, 517,
	0, 518, 0, 0, 0, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 528, 527, 0, 530, 833, 529,
	0, 531, 532, 0, 0, 533, 534, 535, 536, 537,
	538, 541, 0, 0, 539, 540, 542, 543, 0, 544,
	545, 547, 550, 546, 548, 549, 551, 552, 565, 566,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 568, 0, 567, 0, 569, 570, 571, 572,
	573, 581, 583, 584, 579, 580, 582, 585, 586, 588,
	589, 576, 577, 578, 0, 587, 574, 0, 575, 344,
	0, 590, 591, 592, 593, 0, 834, 594, 835, 597,
	598, 0, 0, 599, 0, 600, 0, 0, 602, 603,
	604, 0, 0, 605, 606, 836, 0, 607, 0, 837,
	608, 609, 601, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 620, 621, 838, 622, 623, 624,
	839, 625, 626, 627, 840, 628, 841, 629, 630, 0,
	631, 632, 633, 0, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 842, 644, 645, 647, 646, 648,
	649, 0, 650, 0, 651, 652, 653, 0, 0, 0,
	0, 0, 654, 655, 657, 0, 658, 659, 660, 661,
	662, 656, 663, 664, 665, 666, 667, 668, 669, 0,
	671, 672, 670, 673, 674, 0, 675, 676, 677, 678,
	679, 843, 680, 0, 681, 682, 690, 691, 692, 683,
	684, 686, 693, 685, 694, 695, 696, 697, 699, 698,
	0, 701, 702, 700, 703, 704, 705, 706, 0, 707,
	844, 708, 687, 688, 709, 710, 711, 0, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 845, 0, 721,
	0, 722, 723, 724, 725, 726, 727, 729, 689, 730,
	731, 732, 737, 738, 846, 733, 734, 735, 736, 847,
	740, 741, 742, 743, 0, 744, 745, 0, 739, 728,
	1142, 746, 747, 748, 749, 750, 1146, 752, 753, 754,
	755, 0, 756, 848, 849, 850, 851, 0, 768, 0,
	757, 759, 760, 761, 762, 852, 763, 853, 0, 764,
	765, 766, 767, 758, 769, 770, 0, 0, 771, 772,
	773, 774, 776, 778, 779, 780, 775, 777, 781, 0,
	782, 0, 0, 783, 784, 785, 854, 855, 856, 0,
	787, 788, 786, 789, 790, 793, 791, 792, 1145, 796,
	513, 797, 798, 799, 794, 795, 2445, 0, 0, 0,
	800, 801, 858, 802, 803, 804, 0, 0, 0, 0,
	0, 0, 0, 345, 346, 348, 347, 349, 350, 351,
	352, 0, 353, 354, 0, 0, 0, 0, 0, 0,
	0, 1149, 0, 356, 0, 355, 0, 357, 358, 359,
	874, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	2451, 0, 368, 2458, 369, 2457, 0, 2466, 370, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 0, 0,
	0, 380, 2469, 2470, 0, 0, 381, 382, 383, 384,
	0, 0, 875, 0, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 0, 394, 395, 396, 393, 397, 398,
	0, 399, 0, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 408, 409, 876, 410, 411, 412, 0, 0,
	0, 0, 0, 0, 0, 413, 414, 415, 416, 417,
	1477, 418, 420, 421, 2455, 422, 2454, 0, 425, 427,
	419, 423, 0, 426, 424, 428, 429, 0, 430, 431,
	432, 433, 0, 0, 434, 1469, 436, 0, 437, 438,
	440, 439, 0, 441, 442, 443, 0, 444, 445, 0,
	446, 447, 448, 450, 452, 449, 451, 453, 454, 455,
	456, 457, 0, 0, 458, 459, 0, 0, 0, 0,
	0, 0, 0, 460, 461, 462, 2453, 0, 0, 0,
	463, 0, 465, 469, 466, 467, 468, 470, 0, 464,
	471, 472, 0, 877, 473, 474, 475, 2464, 2465, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	486, 0, 0, 0, 487, 0, 488, 489, 490, 491,
	492, 493, 494, 0, 0, 0, 595, 879, 495, 496,
	497, 4016, 498, 499, 500, 501, 502, 503, 504, 0,
	0, 0, 505, 506, 507, 508, 0, 0, 0, 0,
	878, 4018, 509, 596, 510, 2448, 2449, 0, 2444, 0,
	511, 512, 515, 880, 0, 881, 514, 516, 517, 882,
	518, 0, 0, 0, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 528, 527, 0, 530, 0, 529, 883,
	531, 532, 884, 0, 533, 534, 535, 536, 537, 538,
	541, 0, 0, 539, 540, 542, 543, 0, 544, 545,
	547, 550, 546, 548, 549, 551, 552, 565, 566, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 568, 0, 567, 885, 569, 570, 571, 572, 573,
	581, 583, 584, 579, 580, 582, 585, 586, 588, 589,
	576, 577, 578, 886, 587, 574, 0, 575, 0, 887,
	590, 591, 592, 593, 0, 0, 594, 2456, 597, 598,
	0, 0, 599, 0, 600, 0, 0, 602, 603, 604,
	0, 0, 605, 606, 4017, 888, 607, 889, 0, 608,
	609, 601, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 0, 620, 621, 2441, 622, 623, 624, 2442,
	625, 626, 627, 0, 628, 0, 629, 630, 0, 631,
	632, 633, 0, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 2452, 644, 645, 647, 646, 648, 649,
	0, 650, 0, 651, 652, 653, 0, 0, 0, 0,
	0, 654, 655, 657, 0, 658, 659, 660, 661, 662,
	656, 663, 664, 665, 666, 667, 668, 669, 0, 671,
	672, 670, 673, 674, 890, 675, 676, 677, 678, 679,
	0, 680, 0, 681, 682, 690, 691, 692, 683, 684,
	686, 693, 685, 694, 695, 696, 697, 699, 698, 0,
	701, 702, 700, 703, 704, 705, 706, 0, 707, 0,
	708, 687, 688, 709, 710, 711, 891, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 2450, 0, 721, 0,
	722, 723, 724, 725, 726, 727, 729, 689, 730, 731,
	732, 737, 738, 2468, 733, 734, 735, 736, 0, 740,
	741, 742, 743, 0, 744, 745, 0, 739, 728, 0,
	746, 747, 748, 749, 750, 751, 752, 753, 754, 755,
	0, 756, 2460, 2461, 2462, 2463, 0, 768, 0, 757,
	759, 760, 761, 762, 0, 763, 0, 0, 764, 765,
	766, 767, 758, 769, 770, 0, 0, 771, 772, 773,
	774, 776, 778, 779, 780, 775, 777, 781, 0, 782,
	0, 0, 783, 784, 785, 0, 2459, 2467, 4019, 787,
	788, 786, 789, 790, 793, 791, 792, 0, 796, 513,
	797, 798, 799, 794, 795, 0, 0, 0, 2418, 800,
	801, 0, 802, 803, 804, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 346, 348, 347, 349,
	350, 351, 352, 2474, 353, 354, 0, 0, 0, 0,
	0, 805, 0, 0, 0, 356, 0, 355, 0, 357,
	358, 359, 2437, 360, 361, 362, 363, 364, 365, 366,
	367, 806, 807, 0, 368, 808, 369, 809, 0, 810,
	370, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	0, 0, 0, 380, 811, 812, 813, 0, 381, 382,
	383, 384, 814, 0, 0, 0, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 0, 394, 395, 396, 393,
	397, 398, 0, 399, 0, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 412,
	0, 0, 0, 0, 0, 0, 0, 413, 414, 415,
	2425, 417, 0, 418, 420, 421, 815, 422, 816, 0,
	425, 427, 419, 423, 0, 426, 424, 428, 429, 0,
	430, 431, 432, 433, 0, 0, 434, 435, 436, 0,
	437, 438, 440, 439, 0, 441, 442, 443, 0, 444,
	445, 817, 446, 447, 448, 450, 452, 449, 451, 453,
	454, 455, 456, 2426, 818, 819, 458, 459, 0, 340,
	0, 0, 0, 0, 0, 460, 461, 462, 820, 0,
	0, 0, 463, 0, 465, 469, 466, 467, 468, 470,
	0, 464, 471, 472, 0, 0, 2427, 474, 475, 821,
	822, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 486, 823, 0, 824, 487, 0, 488, 489,
	490, 491, 492, 493, 494, 825, 826, 827, 595, 0,
	495, 496, 497, 0, 498, 499, 500, 501, 502, 503,
	504, 0, 0, 0, 505, 506, 507, 508, 0, 342,
	341, 343, 0, 828, 509, 596, 510, 829, 830, 0,
	831, 0, 511, 512, 515, 0, 832, 0, 514, 516,
	517, 0, 518, 0, 0, 0, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 528, 527, 0, 530, 833,
	529, 0, 531, 532, 0, 0, 533, 534, 535, 536,
	537, 538, 541, 0, 0, 539, 540, 542, 543, 0,
	544, 545, 547, 550, 546, 548, 549, 551, 552, 565,
	566, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 568, 0, 567, 0, 569, 570, 571,
	572, 573, 581, 583, 584, 579, 580, 582, 585, 586,
	588, 589, 576, 577, 578, 0, 587, 574, 0, 575,
	344, 0, 590, 591, 592, 593, 0, 834, 594, 835,
	597, 598, 0, 0, 599, 0, 600, 0, 0, 602,
	603, 604, 0, 0, 605, 606, 836, 0, 607, 0,
	837, 608, 609, 601, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 0, 620, 621, 838, 622, 623,
	624, 839, 625, 626, 627, 840, 628, 841, 629, 630,
	0, 631, 632, 633, 0, 2428, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 842, 644, 645, 647, 646,
	648, 649, 0, 650, 0, 651, 652, 653, 0, 0,
	0, 0, 0, 654, 655, 657, 0, 658, 659, 660,
	661, 662, 656, 663, 664, 665, 666, 667, 668, 669,
	0, 671, 672, 670, 673, 674, 0, 675, 676, 677,
	678, 679, 843, 680, 0, 681, 682, 690, 691, 692,
	683, 684, 686, 2473, 685, 694, 695, 696, 697, 699,
	698, 0, 2475, 702, 700, 703, 704, 705, 706, 0,
	707, 844, 708, 687, 688, 709, 710, 711, 0, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 845, 0,
	721, 0, 722, 723, 724, 725, 726, 727, 729, 689,
	730, 731, 732, 737, 738, 846, 733, 734, 735, 736,
	847, 740, 741, 742, 743, 0, 744, 745, 0, 739,
	728, 2424, 746, 747, 748, 749, 750, 751, 752, 753,
	754, 755, 0, 756, 848, 849, 850, 851, 0, 768,
	0, 757, 759, 760, 761, 762, 852, 763, 853, 0,
	764, 765, 2472, 767, 758, 769, 770, 0, 0, 771,
	772, 773, 774, 776, 778, 779, 780, 775, 777, 781,
	0, 782, 0, 0, 783, 784, 785, 854, 855, 856,
	0, 787, 788, 786, 789, 790, 793, 791, 792, 857,
	796, 513, 797, 798, 799, 794, 795, 2418, 0, 0,
	0, 800, 801, 858, 802, 803, 804, 0, 0, 0,
	0, 0, 0, 0, 345, 346, 348, 347, 349, 350,
	351, 352, 2417, 353, 354, 0, 0, 0, 0, 0,
	805, 0, 1149, 0, 356, 0, 355, 0, 357, 358,
	359, 0, 360, 361, 362, 363, 364, 365, 366, 367,
	806, 807, 0, 368, 808, 369, 809, 0, 810, 370,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 0,
	0, 0, 380, 811, 812, 813, 0, 381, 382, 383,
	384, 814, 0, 0, 0, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 0, 394, 395, 396, 393, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 412, 0,
	0, 0, 0, 0, 0, 0, 413, 414, 415, 2425,
	417, 0, 418, 420, 421, 815, 422, 816, 0, 425,
	427, 419, 423, 0, 426, 424, 428, 429, 0, 430,
	431, 432, 433, 0, 0, 434, 435, 436, 0, 437,
	438, 440, 439, 0, 441, 442, 443, 0, 444, 445,
	817, 446, 447, 448, 450, 452, 449, 451, 453, 454,
	455, 456, 2426, 818, 819, 458, 459, 0, 340, 0,
	0, 0, 0, 0, 460, 461, 462, 820, 0, 0,
	0, 463, 0, 465, 469, 466, 467, 468, 470, 0,
	464, 471, 472, 0, 0, 2427, 474, 475, 821, 822,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 0,
	485, 486, 823, 0, 824, 487, 0, 488, 489, 490,
	491, 492, 493, 494, 825, 826, 827, 595, 0, 495,
	496, 497, 0, 498, 499, 500, 501, 502, 503, 504,
	0, 0, 0, 505, 506, 507, 508, 0, 342, 341,
	343, 0, 828, 509, 596, 510, 829, 830, 0, 831,
	0, 511, 512, 515, 0, 832, 0, 514, 516, 517,
	0, 518, 0, 0, 0, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 528, 527, 0, 530, 833, 529,
	0, 531, 532, 0, 0, 533, 534, 535, 536, 537,
	538, 541, 0, 0, 539, 540, 542, 543, 0, 544,
	545, 547, 550, 546, 548, 549, 551, 552, 565, 566,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 568, 0, 567, 0, 569, 570, 571, 572,
	573, 581, 583, 584, 579, 580, 582, 585, 586, 588,
	589, 576, 577, 578, 0, 587, 574, 0, 575, 344,
	0, 590, 591, 592, 593, 0, 834, 594, 835, 597,
	598, 0, 0, 599, 0, 600, 0, 0, 602, 603,
	604, 0, 0, 605, 606, 836, 0, 607, 0, 837,
	608, 609, 601, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 620, 621, 838, 622, 623, 624,
	839, 625, 626, 627, 840, 628, 841, 629, 630, 0,
	631, 632, 633, 0, 2428, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 842, 644, 645, 647, 646, 648,
	649, 0, 650, 0, 651, 652, 653, 0, 0, 0,
	0, 0, 654, 655, 657, 0, 658, 659, 660, 661,
	662, 656, 663, 664, 665, 666, 667, 668, 669, 0,
	671, 672, 670, 673, 674, 0, 675, 676, 677, 678,
	679, 843, 680, 0, 681, 682, 690, 691, 692, 683,
	684, 686, 2416, 685, 694, 695, 696, 697, 699, 698,
	0, 2422, 702, 700, 703, 704, 705, 706, 0, 707,
	844, 708, 687, 688, 709, 710, 711, 0, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 845, 0, 721,
	0, 722, 723, 724, 725, 726, 727, 729, 689, 730,
	731, 732, 737, 738, 846, 733, 734, 735, 736, 847,
	740, 741, 742, 743, 0, 744, 745, 0, 739, 728,
	2424, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	755, 0, 756, 848, 849, 850, 851, 0, 768, 0,
	757, 759, 760, 761, 762, 852, 763, 853, 0, 764,
	765, 2415, 767, 758, 769, 770, 0, 0, 771, 772,
	773, 774, 776, 778, 779, 780, 775, 777, 781, 0,
	782, 0, 0, 783, 784, 785, 854, 855, 856, 0,
	787, 788, 786, 789, 790, 793, 791, 792, 857, 796,
	513, 797, 798, 799, 794, 795, 0, 1135, 0, 1137,
	800, 801, 858, 802, 803, 804, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 346, 348, 347,
	349, 350, 351, 352, 0, 353, 354, 0, 0, 0,
	0, 1149, 805, 0, 0, 0, 356, 0, 355, 0,
	357, 358, 359, 0, 360, 361, 362, 363, 364, 365,
	366, 367, 806, 807, 0, 368, 808, 369, 809, 0,
	810, 370, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 0, 0, 0, 380, 811, 812, 813, 0, 381,
	382, 383, 384, 814, 0, 0, 0, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 0, 394, 395, 396,
	393, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	412, 0, 0, 0, 0, 0, 0, 0, 413, 414,
	415, 1144, 417, 0, 418, 420, 421, 815, 422, 816,
	0, 425, 427, 419, 423, 0, 426, 424, 428, 429,
	0, 430, 431, 432, 433, 0, 0, 434, 435, 436,
	0, 437, 438, 440, 439, 0, 441, 442, 443, 0,
	444, 445, 817, 446, 447, 448, 450, 452, 449, 451,
	453, 454, 455, 456, 457, 818, 819, 458, 459, 0,
	340, 0, 0, 0, 0, 0, 460, 461, 462, 820,
	0, 0, 0, 463, 0, 465, 469, 466, 467, 468,
	470, 0, 464, 471, 472, 0, 0, 473, 474, 475,
	821, 822, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 0, 485, 486, 823, 0, 824, 487, 0, 488,
	489, 490, 491, 492, 493, 494, 825, 826, 827, 595,
	0, 495, 496, 497, 0, 498, 499, 500, 501, 502,
	503, 504, 0, 0, 0, 505, 506, 507, 508, 0,
	342, 341, 343, 0, 828, 509, 596, 510, 829, 830,
	0, 831, 0, 511, 512, 515, 0, 832, 0, 514,
	516, 517, 0, 518, 0, 0, 0, 519, 520, 521,
	522, 523, 524, 525, 0, 526, 528, 527, 0, 530,
	833, 529, 0, 531, 532, 0, 0, 533, 534, 535,
	536, 537, 538, 541, 0, 0, 539, 540, 542, 543,
	0, 544, 545, 547, 550, 546, 548, 549, 551, 552,
	565, 566, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 568, 0, 567, 0, 569, 570,
	571, 572, 573, 581, 583, 584, 579, 580, 582, 585,
	586, 588, 589, 576, 577, 578, 0, 587, 574, 0,
	575, 344, 0, 590, 591, 592, 593, 0, 834, 594,
	835, 597, 598, 0, 0, 599, 0, 600, 0, 0,
	602, 603, 604, 0, 0, 605, 606, 836, 0, 607,
	0, 837, 608, 609, 601, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 0, 620, 621, 838, 622,
	623, 624, 839, 625, 626, 627, 840, 628, 841, 629,
	630, 0, 631, 632, 633, 0, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 842, 644, 645, 647,
	646, 648, 649, 0, 650, 0, 651, 652, 653, 0,
	0, 0, 0, 0, 654, 655, 657, 0, 658, 659,
	660, 661, 662, 656, 663, 664, 665, 666, 667, 668,
	669, 0, 671, 672, 670, 673, 674, 0, 675, 676,
	677, 678, 679, 843, 680, 0, 681, 682, 690, 691,
	692, 683, 684, 686, 693, 685, 694, 695, 696, 697,
	699, 698, 0, 701, 702, 700, 703, 704, 705, 706,
	0, 707, 844, 708, 687, 688, 709, 710, 711, 0,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 845,
	0, 721, 0, 722, 723, 724, 725, 726, 727, 729,
	689, 730, 731, 732, 737, 738, 846, 733, 734, 735,
	736, 847, 740, 741, 742, 743, 0, 744, 745, 0,
	739, 728, 1142, 746, 747, 748, 749, 750, 1146, 752,
	753, 754, 755, 0, 756, 848, 849, 850, 851, 0,
	768, 0, 757, 759, 760, 761, 762, 852, 763, 853,
	0, 764, 765, 766, 767, 758, 769, 770, 0, 0,
	771, 772, 773, 774, 776, 778, 779, 780, 775, 777,
	781, 0, 782, 0, 0, 783, 784, 785, 854, 855,
	856, 0, 787, 788, 786, 789, 790, 793, 791, 792,
	1145, 796, 513, 797, 798, 799, 794, 795, 0, 4002,
	0, 337, 800, 801, 858, 802, 803, 804, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 346,
	348, 347, 349, 350, 351, 352, 0, 353, 354, 0,
	0, 0, 0, 1149, 805, 0, 0, 0, 356, 0,
	355, 0, 357, 358, 359, 0, 360, 361, 362, 363,
	364, 365, 366, 367, 806, 807, 0, 368, 808, 369,
	809, 0, 810, 370, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 0, 0, 0, 380, 811, 812, 813,
	0, 381, 382, 383, 384, 814, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 0, 394,
	395, 396, 393, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 0, 0, 0, 0, 0, 0,
	413, 414, 415, 416, 417, 0, 418, 420, 421, 815,
	422, 816, 0, 425, 427, 419, 423, 0, 426, 424,
	428, 429, 0, 430, 431, 432, 433, 0, 0, 434,
	435, 436, 0, 437, 438, 440, 439, 0, 441, 442,
	443, 0, 444, 445, 817, 446, 447, 448, 450, 452,
	449, 451, 453, 454, 455, 456, 457, 818, 819, 458,
	459, 0, 340, 0, 0, 0, 0, 0, 460, 461,
	462, 820, 0, 0, 0, 463, 0, 465, 469, 466,
	467, 468, 470, 0, 464, 471, 472, 0, 0, 473,
	474, 475, 821, 822, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 0, 485, 486, 823, 0, 824, 487,
	0, 488, 489, 490, 491, 492, 493, 494, 825, 826,
	827, 595, 0, 495, 496, 497, 0, 498, 499, 500,
	501, 502, 503, 504, 0, 0, 0, 505, 506, 507,
	508, 0, 342, 341, 343, 0, 828, 509, 596, 510,
	829, 830, 0, 831, 0, 511, 512, 515, 0, 832,
	0, 514, 516, 517, 0, 518, 0, 0, 0, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 528, 527,
	0, 530, 833, 529, 0, 531, 532, 0, 0, 533,
	534, 535, 536, 537, 538, 541, 0, 0, 539, 540,
	542, 543, 0, 544, 545, 547, 550, 546, 548, 549,
	551, 552, 565, 566, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 568, 0, 567, 0,
	569, 570, 571, 572, 573, 581, 583, 584, 579, 580,
	582, 585, 586, 588, 589, 576, 577, 578, 0, 587,
	574, 0, 575, 344, 0, 590, 591, 592, 593, 0,
	834, 594, 835, 597, 598, 0, 0, 599, 0, 600,
	0, 0, 602, 603, 604, 0, 0, 605, 606, 836,
	0, 607, 0, 837, 608, 609, 601, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 0, 620, 621,
	838, 622, 623, 624, 839, 625, 626, 627, 840, 628,
	841, 629, 630, 0, 631, 632, 633, 0, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 842, 644,
	645, 647, 646, 648, 649, 0, 650, 0, 651, 652,
	653, 0, 0, 0, 0, 0, 654, 655, 657, 0,
	658, 659, 660, 661, 662, 656, 663, 664, 665, 666,
	667, 668, 669, 0, 671, 672, 670, 673, 674, 0,
	675, 676, 677, 678, 679, 843, 680, 0, 681, 682,
	690, 691, 692, 683, 684, 686, 693, 685, 694, 695,
	696, 697, 699, 698, 0, 701, 702, 700, 703, 704,
	705, 706, 0, 707, 844, 708, 687, 688, 709, 710,
	711, 0, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 845, 0, 721, 0, 722, 723, 724, 725, 726,
	727, 729, 689, 730, 731, 732, 737, 738, 846, 733,
	734, 735, 736, 847, 740, 741, 742, 743, 0, 744,
	745, 0, 739, 728, 0, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 0, 756, 848, 849, 850,
	851, 0, 768, 0, 757, 759, 760, 761, 762, 852,
	763, 853, 0, 764, 765, 766, 767, 758, 769, 770,
	0, 0, 771, 772, 773, 774, 776, 778, 779, 780,
	775, 777, 781, 0, 782, 0, 0, 783, 784, 785,
	854, 855, 856, 0, 787, 788, 786, 789, 790, 793,
	791, 792, 857, 796, 513, 797, 798, 799, 794, 795,
	2418, 0, 0, 0, 800, 801, 858, 802, 803, 804,
	0, 0, 0, 0, 0, 0, 0, 345, 346, 348,
	347, 349, 350, 351, 352, 0, 353, 354, 0, 0,
	0, 0, 0, 805, 0, 1149, 0, 356, 0, 355,
	0, 357, 358, 359, 0, 360, 361, 362, 363, 364,
	365, 366, 367, 806, 807, 0, 368, 808, 369, 809,
	0, 810, 370, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 0, 0, 380, 811, 812, 813, 0,
	381, 382, 383, 384, 814, 0, 0, 0, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 0, 394, 395,
	396, 393, 397, 398, 0, 399, 0, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 412, 0, 0, 0, 0, 0, 0, 0, 413,
	414, 415, 2425, 417, 0, 418, 420, 421, 815, 422,
	816, 0, 425, 427, 419, 423, 0, 426, 424, 428,
	429, 0, 430, 431, 432, 433, 0, 0, 434, 435,
	436, 0, 437, 438, 440, 439, 0, 441, 442, 443,
	0, 444, 445, 817, 446, 447, 448, 450, 452, 449,
	451, 453, 454, 455, 456, 2426, 818, 819, 458, 459,
	0, 340, 0, 0, 0, 0, 0, 460, 461, 462,
	820, 0, 0, 0, 463, 0, 465, 469, 466, 467,
	468, 470, 0, 464, 471, 472, 0, 0, 2427, 474,
	475, 821, 822, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 486, 823, 0, 824, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 825, 826, 827,
	595, 0, 495, 496, 497, 0, 498, 499, 500, 501,
	502, 503, 504, 0, 0, 0, 505, 506, 507, 508,
	0, 342, 341, 343, 0, 828, 509, 596, 510, 829,
	830, 0, 831, 0, 511, 512, 515, 0, 832, 0,
	514, 516, 517, 0, 518, 0, 0, 0, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 528, 527, 0,
	530, 833, 529, 0, 531, 532, 0, 0, 533, 534,
	535, 536, 537, 538, 541, 0, 0, 539, 540, 542,
	543, 0, 544, 545, 547, 550, 546, 548, 549, 551,
	552, 565, 566, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 568, 0, 567, 0, 569,
	570, 571, 572, 573, 581, 583, 584, 579, 580, 582,
	585, 586, 588, 589, 576, 577, 578, 0, 587, 574,
	0, 575, 344, 0, 590, 591, 592, 593, 0, 834,
	594, 835, 597, 598, 0, 0, 599, 0, 600, 0,
	0, 602, 603, 604, 0, 0, 605, 606, 836, 0,
	607, 0, 837, 608, 609, 601, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 0, 620, 621, 838,
	622, 623, 624, 839, 625, 626, 627, 840, 628, 841,
	629, 630, 0, 631, 632, 633, 0, 2428, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 842, 644, 645,
	647, 646, 648, 649, 0, 650, 0, 651, 652, 653,
	0, 0, 0, 0, 0, 654, 655, 657, 0, 658,
	659, 660, 661, 662, 656, 663, 664, 665, 666, 667,
	668, 669, 0, 671, 672, 670, 673, 674, 0, 2621,
	676, 677, 678, 679, 843, 680, 0, 681, 682, 690,
	691, 692, 683, 684, 686, 2622, 685, 694, 695, 696,
	697, 699, 698, 0, 2422, 702, 700, 703, 704, 705,
	706, 0, 707, 844, 708, 687, 688, 709, 710, 711,
	0, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	845, 0, 721, 0, 722, 723, 724, 725, 726, 727,
	729, 689, 730, 731, 732, 737, 738, 846, 733, 734,
	735, 736, 847, 740, 741, 742, 743, 0, 744, 745,
	0, 739, 728, 2424, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 0, 756, 848, 849, 850, 851,
	0, 768, 0, 757, 759, 760, 761, 762, 852, 763,
	853, 0, 764, 765, 2623, 767, 758, 769, 770, 0,
	0, 771, 772, 773, 774, 776, 778, 779, 780, 775,
	777, 781, 0, 782, 0, 0, 783, 784, 785, 854,
	855, 856, 0, 787, 788, 786, 789, 790, 793, 791,
	792, 857, 796, 513, 797, 798, 799, 794, 795, 337,
	0, 0, 0, 800, 801, 858, 802, 803, 804, 0,
	0, 0, 0, 0, 0, 0, 345, 346, 348, 347,
	349, 350, 351, 352, 0, 353, 354, 0, 0, 0,
	0, 0, 805, 0, 1149, 0, 356, 0, 355, 0,
	357, 358, 359, 0, 360, 361, 362, 363, 364, 365,
	366, 367, 806, 807, 0, 368, 808, 369, 809, 0,
	810, 370, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 0, 0, 0, 380, 811, 812, 813, 0, 381,
	382, 383, 384, 814, 0, 0, 0, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 0, 394, 395, 396,
	393, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	412, 0, 0, 0, 0, 0, 0, 0, 413, 414,
	415, 416, 417, 0, 418, 420, 421, 815, 422, 816,
	0, 425, 427, 419, 423, 0, 426, 424, 428, 429,
	0, 430, 431, 432, 433, 0, 0, 434, 435, 436,
	0, 437, 438, 440, 439, 0, 441, 442, 443, 0,
	444, 445, 817, 446, 447, 448, 450, 452, 449, 451,
	453, 454, 455, 456, 457, 818, 819, 458, 459, 0,
	340, 0, 0, 0, 0, 0, 460, 461, 462, 820,
	0, 0, 0, 463, 0, 465, 469, 466, 467, 468,
	470, 0, 464, 471, 472, 0, 0, 473, 474, 475,
	821, 822, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 0, 485, 486, 823, 0, 824, 487, 0, 488,
	489, 490, 491, 492, 493, 494, 825, 826, 827, 595,
	0, 495, 496, 497, 0, 498, 499, 500, 501, 502,
	503, 504, 0, 0, 0, 505, 506, 507, 508, 0,
	342, 341, 343, 0, 828, 509, 596, 510, 829, 830,
	0, 831, 0, 511, 512, 515, 0, 832, 0, 514,
	516, 517, 0, 518, 0, 0, 0, 519, 520, 521,
	522, 523, 524, 525, 0, 526, 528, 527, 0, 530,
	833, 529, 0, 531, 532, 0, 0, 533, 534, 535,
	536, 537, 538, 541, 0, 0, 539, 540, 542, 543,
	0, 544, 545, 547, 550, 546, 548, 549, 551, 552,
	565, 566, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 568, 0, 567, 0, 569, 570,
	571, 572, 573, 581, 583, 584, 579, 580, 582, 585,
	586, 588, 589, 576, 577, 578, 0, 587, 574, 0,
	575, 344, 0, 590, 591, 592, 593, 0, 834, 594,
	835, 597, 598, 0, 0, 599, 0, 600, 0, 0,
	602, 603, 604, 0, 0, 605, 606, 836, 0, 607,
	0, 837, 608, 609, 601, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 0, 620, 621, 838, 622,
	623, 624, 839, 625, 626, 627, 840, 628, 841, 629,
	630, 0, 631, 632, 633, 0, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 842, 644, 645, 647,
	646, 648, 649, 0, 650, 0, 651, 652, 653, 0,
	0, 0, 0, 0, 654, 655, 657, 0, 658, 659,
	660, 661, 662, 656, 663, 664, 665, 666, 667, 668,
	669, 0, 671, 672, 670, 673, 674, 0, 675, 676,
	677, 678, 679, 843, 680, 0, 681, 682, 690, 691,
	692, 683, 684, 686, 693, 685, 694, 695, 696, 697,
	699, 698, 0, 701, 702, 700, 703, 704, 705, 706,
	0, 707, 844, 708, 687, 688, 709, 710, 711, 0,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 845,
	0, 721, 0, 722, 723, 724, 725, 726, 727, 729,
	689, 730, 731, 732, 737, 738, 846, 733, 734, 735,
	736, 847, 740, 741, 742, 743, 0, 744, 745, 0,
	739, 728, 0, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 755, 0, 756, 848, 849, 850, 851, 0,
	768, 0, 757, 759, 760, 761, 762, 852, 763, 853,
	0, 764, 765, 766, 767, 758, 769, 770, 0, 0,
	771, 772, 773, 774, 776, 778, 779, 780, 775, 777,
	781, 0, 782, 0, 0, 783, 784, 785, 854, 855,
	856, 0, 787, 788, 786, 789, 790, 793, 791, 792,
	857, 796, 513, 797, 798, 799, 794, 795, 337, 0,
	0, 0, 800, 801, 858, 802, 803, 804, 0, 0,
	0, 0, 0, 0, 0, 345, 346, 348, 347, 349,
	350, 351, 352, 0, 353, 354, 0, 0, 0, 0,
	0, 805, 0, 1149, 0, 356, 0, 355, 0, 357,
	358, 359, 0, 360, 361, 362, 363, 364, 365, 366,
	367, 806, 807, 0, 368, 808, 369, 809, 0, 810,
	370, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	0, 0, 0, 380, 811, 812, 813, 0, 381, 382,
	383, 384, 814, 0, 0, 0, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 0, 394, 395, 396, 393,
	397, 398, 0, 399, 0, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 412,
	0, 0, 0, 0, 0, 0, 0, 413, 414, 415,
	416, 417, 0, 418, 420, 421, 815, 422, 816, 0,
	425, 427, 419, 423, 0, 426, 424, 428, 429, 0,
	430, 431, 432, 433, 0, 0, 434, 435, 436, 0,
	437, 438, 440, 439, 0, 441, 442, 443, 0, 444,
	445, 817, 446, 447, 448, 450, 452, 449, 451, 453,
	454, 455, 456, 457, 818, 819, 458, 459, 0, 340,
	0, 0, 0, 0, 0, 460, 461, 462, 820, 0,
	0, 0, 463, 0, 465, 469, 466, 467, 468, 470,
	0, 464, 471, 472, 0, 0, 473, 474, 475, 821,
	822, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 486, 823, 0, 824, 487, 0, 488, 489,
	490, 491, 492, 493, 494, 825, 826, 827, 595, 0,
	495, 496, 497, 0, 498, 499, 500, 501, 502, 503,
	504, 0, 0, 0, 505, 506, 507, 508, 0, 342,
	341, 343, 0, 828, 509, 596, 510, 829, 830, 0,
	831, 0, 511, 512, 515, 0, 832, 0, 514, 516,
	517, 0, 518, 0, 0, 0, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 528, 527, 0, 530, 833,
	529, 0, 531, 532, 0, 0, 533, 534, 535, 536,
	537, 538, 541, 0, 0, 539, 540, 542, 543, 0,
	544, 545, 547, 550, 546, 548, 549, 551, 552, 565,
	566, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 568, 0, 567, 0, 569, 570, 571,
	572, 573, 581, 583, 584, 579, 580, 582, 585, 586,
	588, 589, 576, 577, 578, 0, 587, 574, 0, 575,
	344, 0, 590, 591, 592, 593, 0, 834, 594, 835,
	597, 598, 0, 0, 599, 0, 600, 0, 0, 602,
	603, 604, 0, 0, 605, 606, 836, 0, 607, 0,
	837, 608, 609, 601, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 0, 620, 621, 838, 622, 623,
	624, 839, 625, 626, 627, 840, 628, 841, 629, 630,
	0, 631, 632, 633, 0, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 842, 644, 645, 647, 646,
	648, 649, 0, 650, 0, 651, 652, 653, 0, 0,
	0, 0, 0, 654, 655, 657, 0, 658, 659, 660,
	661, 662, 656, 663, 664, 665, 666, 667, 668, 669,
	0, 671, 672, 670, 673, 674, 0, 675, 676, 677,
	678, 679, 843, 680, 0, 681, 682, 690, 691, 692,
	683, 684, 686, 693, 685, 694, 695, 696, 697, 699,
	698, 0, 701, 702, 700, 703, 704, 705, 706, 0,
	707, 844, 708, 687, 688, 709, 710, 711, 0, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 845, 0,
	721, 0, 722, 723, 724, 725, 726, 727, 729, 689,
	730, 731, 732, 737, 738, 846, 733, 734, 735, 736,
	847, 740, 741, 742, 743, 0, 744, 745, 0, 739,
	728, 0, 746, 747, 748, 749, 750, 751, 752, 753,
	754, 755, 0, 756, 848, 849, 850, 851, 0, 768,
	0, 757, 759, 760, 761, 762, 852, 763, 853, 0,
	764, 765, 766, 767, 758, 769, 770, 0, 0, 771,
	772, 773, 774, 776, 778, 779, 780, 775, 777, 781,
	0, 782, 0, 0, 783, 784, 785, 854, 855, 856,
	0, 787, 788, 786, 789, 790, 793, 791, 792, 857,
	796, 513, 797, 798, 799, 794, 795, 4022, 0, 0,
	0, 800, 801, 858, 802, 803, 804, 0, 0, 0,
	0, 0, 0, 0, 345, 346, 348, 347, 349, 350,
	351, 352, 0, 353, 354, 0, 0, 0, 0, 0,
	0, 0, 1026, 0, 356, 0, 355, 0, 357, 358,
	359, 874, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 2451, 0, 368, 2458, 369, 2457, 0, 2466, 370,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 0,
	0, 0, 380, 2469, 2470, 0, 0, 381, 382, 383,
	384, 0, 0, 875, 0, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 0, 394, 395, 396, 393, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 408, 409, 876, 410, 411, 412, 0,
	0, 0, 0, 0, 0, 0, 413, 414, 415, 416,
	417, 1477, 418, 420, 421, 2455, 422, 2454, 0, 425,
	427, 419, 423, 0, 426, 424, 428, 429, 0, 430,
	431, 432, 433, 0, 0, 434, 1469, 436, 0, 437,
	438, 440, 439, 0, 441, 442, 443, 0, 444, 445,
	0, 446, 447, 448, 450, 452, 449, 451, 453, 454,
	455, 456, 457, 0, 0, 458, 459, 0, 340, 0,
	0, 0, 0, 0, 460, 461, 462, 2453, 0, 0,
	0, 463, 0, 465, 469, 466, 467, 468, 470, 0,
	464, 471, 472, 0, 877, 473, 474, 475, 2464, 2465,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 0,
	485, 486, 0, 0, 0, 487, 0, 488, 489, 490,
	491, 492, 493, 494, 0, 0, 0, 595, 879, 495,
	496, 497, 0, 498, 499, 500, 501, 502, 503, 504,
	0, 0, 0, 505, 506, 507, 508, 0, 0, 0,
	0, 878, 0, 509, 596, 510, 2448, 2449, 0, 2444,
	0, 511, 512, 515, 880, 0, 881, 514, 516, 517,
	882, 518, 0, 0, 0, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 528, 527, 0, 530, 0, 529,
	883, 531, 532, 884, 0, 533, 534, 535, 536, 537,
	538, 541, 0, 0, 539, 540, 542, 543, 0, 544,
	545, 547, 550, 546, 548, 549, 551, 552, 565, 566,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 568, 0, 567, 885, 569, 570, 571, 572,
	573, 581, 583, 584, 579, 580, 582, 585, 586, 588,
	589, 576, 577, 578, 886, 587, 574, 0, 575, 0,
	887, 590, 591, 592, 593, 0, 0, 594, 2456, 597,
	598, 0, 0, 599, 0, 600, 0, 0, 602, 603,
	604, 0, 0, 605, 606, 0, 888, 607, 889, 0,
	608, 609, 601, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 620, 621, 2441, 622, 623, 624,
	2442, 625, 626, 627, 0, 628, 0, 629, 630, 0,
	631, 632, 633, 0, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 2452, 644, 645, 647, 646, 648,
	649, 0, 650, 0, 651, 652, 653, 0, 0, 0,
	0, 0, 654, 655, 657, 0, 658, 659, 660, 661,
	662, 656, 663, 664, 665, 666, 667, 668, 669, 0,
	671, 672, 670, 673, 674, 890, 675, 676, 677, 678,
	679, 0, 680, 0, 681, 682, 690, 691, 692, 683,
	684, 686, 693, 685, 694, 695, 696, 697, 699, 698,
	0, 701, 702, 700, 703, 704, 705, 706, 0, 707,
	0, 708, 687, 688, 709, 710, 711, 891, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 2450, 0, 721,
	0, 722, 723, 724, 725, 726, 727, 729, 689, 730,
	731, 732, 737, 738, 2468, 733, 734, 735, 736, 0,
	740, 741, 742, 743, 0, 744, 745, 0, 739, 728,
	0, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	755, 0, 756, 2460, 2461, 2462, 2463, 0, 768, 0,
	757, 759, 760, 761, 762, 0, 763, 0, 0, 764,
	765, 766, 767, 758, 769, 770, 0, 0, 771, 772,
	773, 774, 776, 778, 779, 780, 775, 777, 781, 0,
	782, 0, 0, 783, 784, 785, 0, 2459, 2467, 0,
	787, 788, 786, 789, 790, 793, 791, 792, 0, 796,
	513, 797, 798, 799, 794, 795, 0, 0, 0, 0,
	800, 801, 0, 802, 803, 804, 0, 2445, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 346, 348, 347, 349, 350,
	351, 352, 0, 353, 354, 0, 0, 0, 0, 0,
	0, 0, 0, 2437, 356, 0, 355, 0, 357, 358,
	359, 874, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 2451, 0, 368, 2458, 369, 2457, 0, 2466, 370,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 0,
	0, 0, 380, 2469, 2470, 0, 0, 381, 382, 383,
	384, 0, 0, 875, 0, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 0, 394, 395, 396, 393, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 408, 409, 876, 410, 411, 412, 0,
	0, 0, 0, 0, 0, 0, 413, 414, 415, 416,
	417, 1477, 418, 420, 421, 2455, 422, 2454, 0, 425,
	427, 419, 423, 0, 426, 424, 428, 429, 0, 430,
	431, 432, 433, 0, 0, 434, 1469, 436, 0, 437,
	438, 440, 439, 0, 441, 442, 443, 0, 444, 445,
	0, 446, 447, 448, 450, 452, 449, 451, 453, 454,
	455, 456, 457, 0, 0, 458, 459, 0, 0, 0,
	0, 0, 0, 0, 460, 461, 462, 2453, 0, 0,
	0, 463, 0, 465, 469, 466, 467, 468, 470, 0,
	464, 471, 472, 0, 877, 473, 474, 475, 2464, 2465,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 0,
	485, 486, 0, 0, 0, 487, 0, 488, 489, 490,
	491, 492, 493, 494, 0, 0, 0, 595, 879, 495,
	496, 497, 0, 498, 499, 500, 501, 502, 503, 504,
	0, 0, 0, 505, 506, 507, 508, 0, 0, 0,
	0, 878, 0, 509, 596, 510, 2448, 2449, 0, 2444,
	0, 511, 512, 515, 880, 0, 881, 514, 516, 517,
	882, 518, 0, 0, 0, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 528, 527, 0, 530, 0, 529,
	883, 531, 532, 884, 0, 533, 534, 535, 536, 537,
	538, 541, 0, 0, 539, 540, 542, 543, 0, 544,
	545, 547, 550, 546, 548, 549, 551, 552, 565, 566,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 568, 0, 567, 885, 569, 570, 571, 572,
	573, 581, 583, 584, 579, 580, 582, 585, 586, 588,
	589, 576, 577, 578, 886, 587, 574, 0, 575, 0,
	887, 590, 591, 592, 593, 0, 0, 594, 2456, 597,
	598, 0, 0, 599, 0, 600, 0, 0, 602, 603,
	604, 0, 0, 605, 606, 0, 888, 607, 889, 0,
	608, 609, 601, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 620, 621, 2441, 622, 623, 624,
	2442, 625, 626, 627, 0, 628, 0, 629, 630, 0,
	631, 632, 633, 0, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 2452, 644, 645, 647, 646, 648,
	649, 0, 650, 0, 651, 652, 653, 0, 0, 0,
	0, 0, 654, 655, 657, 0, 658, 659, 660, 661,
	662, 656, 663, 664, 665, 666, 667, 668, 669, 0,
	671, 672, 670, 673, 674, 890, 675, 676, 677, 678,
	679, 0, 680, 0, 681, 682, 690, 691, 692, 683,
	684, 686, 693, 685, 694, 695, 696, 697, 699, 698,
	0, 701, 702, 700, 703, 704, 705, 706, 0, 707,
	0, 708, 687, 688, 709, 710, 711, 891, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 2450, 0, 721,
	0, 722, 723, 724, 725, 726, 727, 729, 689, 730,
	731, 732, 737, 738, 2468, 733, 734, 735, 736, 0,
	740, 741, 742, 743, 0, 744, 745, 0, 739, 728,
	0, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	755, 0, 756, 2460, 2461, 2462, 2463, 0, 768, 0,
	757, 759, 760, 761, 762, 0, 763, 0, 0, 764,
	765, 766, 767, 758, 769, 770, 0, 0, 771, 772,
	773, 774, 776, 778, 779, 780, 775, 777, 781, 0,
	782, 0, 0, 783, 784, 785, 0, 2459, 2467, 0,
	787, 788, 786, 789, 790, 793, 791, 792, 0, 796,
	513, 797, 798, 799, 794, 795, 0, 0, 0, 337,
	800, 801, 0, 802, 803, 804, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 346, 348, 347,
	349, 350, 351, 352, 0, 353, 354, 0, 0, 0,
	0, 0, 805, 0, 0, 0, 356, 0, 355, 0,
	357, 358, 359, 2437, 360, 361, 362, 363, 364, 365,
	366, 367, 806, 807, 0, 368, 808, 369, 809, 0,
	810, 370, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 0, 0, 0, 380, 811, 812, 813, 0, 381,
	382, 383, 384, 814, 0, 0, 0, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 0, 394, 395, 396,
	393, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	412, 0, 0, 0, 0, 0, 0, 0, 413, 414,
	415, 416, 417, 0, 418, 420, 421, 815, 422, 816,
	0, 425, 427, 419, 423, 0, 426, 424, 428, 429,
	0, 430, 431, 432, 433, 0, 0, 434, 435, 436,
	0, 437, 438, 440, 439, 0, 441, 442, 443, 0,
	444, 445, 817, 446, 447, 448, 450, 452, 449, 451,
	453, 454, 455, 456, 457, 818, 819, 458, 459, 0,
	0, 0, 0, 0, 0, 0, 460, 461, 462, 820,
	0, 0, 0, 463, 0, 465, 469, 466, 467, 468,
	470, 0, 464, 471, 472, 0, 0, 473, 474, 475,
	821, 822, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 0, 485, 486, 823, 0, 824, 487, 0, 488,
	489, 490, 491, 492, 493, 494, 825, 826, 827, 595,
	0, 495, 496, 497, 0, 498, 499, 500, 501, 502,
	503, 504, 0, 0, 0, 505, 506, 507, 508, 0,
	0, 0, 0, 0, 828, 509, 596, 510, 829, 830,
	0, 831, 0, 511, 512, 515, 0, 832, 0, 514,
	516, 517, 0, 518, 0, 0, 0, 519, 520, 521,
	522, 523, 524, 525, 0, 526, 528, 527, 0, 530,
	833, 529, 0, 531, 532, 0, 0, 533, 534, 535,
	536, 537, 538, 541, 0, 0, 539, 540, 542, 543,
	0, 544, 545, 547, 550, 546, 548, 549, 551, 552,
	565, 566, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 568, 0, 567, 0, 569, 570,
	571, 572, 573, 581, 583, 584, 579, 580, 582, 585,
	586, 588, 589, 576, 577, 578, 0, 587, 574, 0,
	575, 0, 0, 590, 591, 592, 593, 0, 834, 594,
	835, 597, 598, 0, 0, 599, 0, 600, 0, 0,
	602, 603, 604, 0, 0, 605, 606, 836, 0, 607,
	0, 837, 608, 609, 601, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 0, 620, 621, 838, 622,
	623, 624, 839, 625, 626, 627, 840, 628, 841, 629,
	630, 0, 631, 632, 633, 0, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 842, 644, 645, 647,
	646, 648, 649, 0, 650, 0, 651, 652, 653, 0,
	0, 0, 0, 0, 654, 655, 657, 0, 658, 659,
	660, 661, 662, 656, 663, 664, 665, 666, 667, 668,
	669, 0, 671, 672, 670, 673, 674, 0, 675, 676,
	677, 678, 679, 843, 680, 0, 681, 682, 690, 691,
	692, 683, 684, 686, 693, 685, 694, 695, 696, 697,
	699, 698, 0, 701, 702, 700, 703, 704, 705, 706,
	0, 707, 844, 708, 687, 688, 709, 710, 711, 0,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 845,
	0, 721, 0, 722, 723, 724, 725, 726, 727, 729,
	689, 730, 731, 732, 737, 738, 846, 733, 734, 735,
	736, 847, 740, 741, 742, 743, 0, 744, 745, 0,
	739, 728, 0, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 755, 0, 756, 848, 849, 850, 851, 0,
	768, 0, 757, 759, 760, 761, 762, 852, 763, 853,
	0, 764, 765, 766, 767, 758, 769, 770, 0, 0,
	771, 772, 773, 774, 776, 778, 779, 780, 775, 777,
	781, 0, 782, 0, 0, 783, 784, 785, 854, 855,
	856, 0, 787, 788, 786, 789, 790, 793, 791, 792,
	857, 796, 513, 797, 798, 799, 794, 795, 0, 0,
	0, 0, 800, 801, 858, 802, 803, 804, 1733, 1732,
	0, 0, 0, 0, 1730, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 346, 348, 347, 349,
	350, 351, 352, 5421, 353, 354, 0, 0, 0, 0,
	0, 805, 0, 0, 0, 356, 0, 355, 0, 357,
	358, 359, 874, 360, 361, 362, 363, 364, 365, 366,
	367, 806, 807, 0, 368, 808, 369, 809, 0, 810,
	370, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	0, 0, 0, 380, 811, 812, 813, 0, 381, 382,
	383, 384, 814, 0, 875, 0, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 0, 394, 395, 396, 393,
	397, 398, 0, 399, 0, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 408, 409, 876, 410, 411, 412,
	0, 0, 0, 0, 0, 0, 0, 413, 414, 415,
	416, 417, 0, 418, 420, 421, 815, 422, 816, 0,
	425, 427, 419, 423, 0, 426, 424, 428, 429, 0,
	430, 431, 432, 433, 0, 0, 434, 435, 436, 0,
	437, 438, 440, 439, 0, 441, 442, 443, 0, 444,
	445, 817, 446, 447, 448, 450, 452, 449, 451, 453,
	454, 455, 456, 457, 818, 819, 458, 459, 0, 340,
	0, 0, 0, 0, 0, 460, 461, 462, 820, 0,
	0, 0, 463, 0, 465, 469, 466, 467, 468, 470,
	0, 464, 471, 472, 0, 877, 473, 474, 475, 821,
	822, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 486, 823, 0, 824, 487, 0, 488, 489,
	490, 491, 492, 493, 494, 825, 826, 827, 595, 879,
	495, 496, 497, 0, 498, 499, 500, 501, 502, 503,
	504, 0, 0, 0, 505, 506, 507, 508, 0, 0,
	0, 0, 878, 828, 509, 596, 510, 829, 830, 0,
	831, 0, 511, 512, 515, 880, 832, 881, 514, 516,
	517, 882, 518, 0, 0, 0, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 528, 527, 0, 530, 833,
	529, 883, 531, 532, 884, 0, 533, 534, 535, 536,
	537, 538, 541, 0, 0, 539, 540, 542, 543, 0,
	544, 545, 547, 550, 546, 548, 549, 551, 552, 565,
	566, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 568, 0, 567, 885, 569, 570, 571,
	572, 573, 581, 583, 584, 579, 580, 582, 585, 586,
	588, 589, 576, 577, 578, 886, 587, 574, 0, 575,
	0, 887, 590, 591, 592, 593, 5554, 834, 594, 835,
	597, 598, 0, 0, 599, 0, 600, 0, 0, 602,
	603, 604, 0, 0, 605, 606, 836, 888, 607, 889,
	837, 608, 609, 601, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 0, 620, 621, 838, 622, 623,
	624, 839, 625, 626, 627, 840, 628, 841, 629, 630,
	0, 631, 632, 633, 0, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 842, 644, 645, 647, 646,
	648, 649, 0, 650, 0, 651, 652, 653, 0, 0,
	0, 0, 0, 654, 655, 657, 0, 658, 659, 660,
	661, 662, 656, 663, 664, 665, 666, 667, 668, 669,
	0, 671, 672, 670, 673, 674, 890, 675, 676, 677,
	678, 679, 843, 680, 0, 681, 682, 690, 691, 692,
	683, 684, 686, 693, 685, 694, 695, 696, 697, 699,
	698, 0, 701, 702, 700, 703, 704, 705, 706, 0,
	707, 844, 708, 687, 688, 709, 710, 711, 891, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 845, 0,
	721, 0, 722, 723, 724, 725, 726, 727, 729, 689,
	730, 731, 732, 737, 738, 846, 733, 734, 735, 736,
	847, 740, 741, 742, 743, 0, 744, 745, 0, 739,
	728, 0, 746, 747, 748, 749, 750, 751, 752, 753,
	754, 755, 0, 756, 848, 849, 850, 851, 0, 768,
	0, 757, 759, 760, 761, 762, 852, 763, 853, 0,
	764, 765, 766, 767, 758, 769, 770, 0, 0, 771,
	772, 773, 774, 776, 778, 779, 780, 775, 777, 781,
	0, 782, 0, 0, 783, 784, 785, 854, 855, 856,
	0, 787, 788, 786, 789, 790, 793, 791, 792, 857,
	796, 513, 797, 798, 799, 794, 795, 0, 0, 0,
	0, 800, 801, 858, 802, 803, 804, 4155, 0, 1733,
	1732, 0, 0, 0, 0, 1730, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 346, 348, 347,
	349, 350, 351, 352, 0, 353, 354, 0, 0, 0,
	0, 0, 805, 0, 0, 0, 356, 0, 355, 0,
	357, 358, 359, 874, 360, 361, 362, 363, 364, 365,
	366, 367, 806, 807, 0, 368, 808, 369, 809, 0,
	810, 370, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 0, 0, 0, 380, 811, 812, 813, 0, 381,
	382, 383, 384, 814, 0, 875, 0, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 0, 394, 395, 396,
	393, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 408, 409, 876, 410, 411,
	412, 0, 0, 0, 0, 0, 0, 0, 413, 414,
	415, 416, 417, 0, 418, 420, 421, 815, 422, 816,
	0, 425, 427, 419, 423, 0, 426, 424, 428, 429,
	0, 430, 431, 432, 433, 0, 0, 434, 435, 436,
	0, 437, 438, 440, 439, 0, 441, 442, 443, 0,
	444, 445, 817, 446, 447, 448, 450, 452, 449, 451,
	453, 454, 455, 456, 457, 818, 819, 458, 459, 0,
	340, 0, 0, 0, 0, 0, 460, 461, 462, 820,
	0, 0, 0, 463, 0, 465, 469, 466, 467, 468,
	470, 0, 464, 471, 472, 0, 877, 473, 474, 475,
	821, 822, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 0, 485, 486, 823, 0, 824, 487, 0, 488,
	489, 490, 491, 492, 493, 494, 825, 826, 827, 595,
	879, 495, 496, 497, 0, 498, 499, 500, 501, 502,
	503, 504, 0, 0, 0, 505, 506, 507, 508, 0,
	0, 0, 0, 878, 828, 509, 596, 510, 829, 830,
	0, 831, 0, 511, 512, 515, 880, 832, 881, 514,
	516, 517, 882, 518, 0, 0, 0, 519, 520, 521,
	522, 523, 524, 525, 0, 526, 528, 527, 0, 530,
	833, 529, 883, 531, 532, 884, 0, 533, 534, 535,
	536, 537, 538, 541, 0, 0, 539, 540, 542, 543,
	0, 544, 545, 547, 550, 546, 548, 549, 551, 552,
	565, 566, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 568, 0, 567, 885, 569, 570,
	571, 572, 573, 581, 583, 584, 579, 580, 582, 585,
	586, 588, 589, 576, 577, 578, 886, 587, 574, 0,
	575, 0, 887, 590, 591, 592, 593, 0, 834, 594,
	835, 597, 598, 0, 0, 599, 0, 600, 0, 0,
	602, 603, 604, 0, 0, 605, 606, 836, 888, 607,
	889, 837, 608, 609, 601, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 0, 620, 621, 838, 622,
	623, 624, 839, 625, 626, 627, 840, 628, 841, 629,
	630, 0, 631, 632, 633, 0, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 842, 644, 645, 647,
	646, 648, 649, 0, 650, 0, 651, 652, 653, 0,
	0, 0, 0, 0, 654, 655, 657, 0, 658, 659,
	660, 661, 662, 656, 663, 664, 665, 666, 667, 668,
	669, 0, 671, 672, 670, 673, 674, 890, 675, 676,
	677, 678, 679, 843, 680, 0, 681, 682, 690, 691,
	692, 683, 684, 686, 693, 685, 694, 695, 696, 697,
	699, 698, 0, 701, 702, 700, 703, 704, 705, 706,
	0, 707, 844, 708, 687, 688, 709, 710, 711, 891,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 845,
	0, 721, 0, 722, 723, 724, 725, 726, 727, 729,
	689, 730, 731, 732, 737, 738, 846, 733, 734, 735,
	736, 847, 740, 741, 742, 743, 0, 744, 745, 0,
	739, 728, 0, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 755, 0, 756, 848, 849, 850, 851, 0,
	768, 0, 757, 759, 760, 761, 762, 852, 763, 853,
	0, 764, 765, 766, 767, 758, 769, 770, 0, 0,
	771, 772, 773, 774, 776, 778, 779, 780, 775, 777,
	781, 0, 782, 0, 0, 783, 784, 785, 854, 855,
	856, 0, 787, 788, 786, 789, 790, 793, 791, 792,
	857, 796, 513, 797, 798, 799, 794, 795, 0, 0,
	0, 0, 800, 801, 858, 802, 803, 804, 2907, 0,
	1733, 1732, 0, 0, 0, 0, 1730, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 346, 348,
	347, 349, 350, 351, 352, 0, 353, 354, 0, 0,
	0, 0, 0, 805, 0, 0, 0, 356, 0, 355,
	0, 357, 358, 359, 874, 360, 361, 362, 363, 364,
	365, 366, 367, 806, 807, 0, 368, 808, 369, 809,
	0, 810, 370, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 0, 0, 380, 811, 812, 813, 0,
	381, 382, 383, 384, 814, 0, 875, 0, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 0, 394, 395,
	396, 393, 397, 398, 0, 399, 0, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 408, 409, 876, 410,
	411, 412, 0, 0, 0, 0, 0, 0, 0, 413,
	414, 415, 416, 417, 0, 418, 420, 421, 815, 422,
	816, 0, 425, 427, 419, 423, 0, 426, 424, 428,
	429, 0, 430, 431, 432, 433, 0, 0, 434, 435,
	436, 0, 437, 438, 440, 439, 0, 441, 442, 443,
	0, 444, 445, 817, 446, 447, 448, 450, 452, 449,
	451, 453, 454, 455, 456, 457, 818, 819, 458, 459,
	0, 340, 0, 0, 0, 0, 0, 460, 461, 462,
	820, 0, 0, 0, 463, 0, 465, 469, 466, 467,
	468, 470, 0, 464, 471, 472, 0, 877, 473, 474,
	475, 821, 822, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 486, 823, 0, 824, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 2036, 826, 827,
	595, 879, 495, 496, 497, 0, 498, 499, 500, 501,
	502, 503, 504, 0, 0, 0, 505, 506, 507, 508,
	0, 0, 0, 0, 878, 828, 509, 596, 510, 829,
	830, 0, 831, 0, 511, 512, 515, 880, 832, 881,
	514, 516, 517, 882, 518, 0, 0, 0, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 528, 527, 0,
	530, 833, 529, 883, 531, 532, 884, 0, 533, 534,
	535, 536, 537, 538, 541, 0, 0, 539, 540, 542,
	543, 0, 544, 545, 547, 550, 546, 548, 549, 551,
	552, 565, 566, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 568, 0, 567, 885, 569,
	570, 571, 572, 573, 581, 583, 584, 579, 580, 582,
	585, 586, 588, 589, 576, 577, 578, 886, 587, 574,
	0, 575, 0, 887, 590, 591, 592, 593, 0, 834,
	594, 835, 597, 598, 0, 0, 599, 0, 600, 0,
	0, 602, 603, 604, 0, 0, 605, 606, 836, 888,
	607, 889, 837, 608, 609, 601, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 0, 620, 621, 838,
	622, 623, 624, 839, 625, 626, 627, 840, 628, 841,
	629, 630, 0, 631, 632, 633, 0, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 842, 644, 645,
	647, 646, 648, 649, 0, 650, 0, 651, 652, 653,
	0, 0, 0, 0, 0, 654, 655, 657, 0, 658,
	659, 660, 661, 662, 656, 663, 664, 665, 666, 667,
	668, 669, 0, 671, 672, 670, 673, 674, 890, 675,
	676, 677, 678, 679, 843, 680, 0, 681, 682, 690,
	691, 692, 683, 684, 686, 693, 685, 694, 695, 696,
	697, 699, 698, 0, 701, 702, 700, 703, 704, 705,
	706, 0, 707, 844, 708, 687, 688, 709, 710, 711,
	891, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	845, 0, 721, 0, 722, 723, 724, 725, 726, 727,
	729, 689, 730, 731, 732, 737, 738, 846, 733, 734,
	735, 736, 847, 740, 741, 742, 743, 0, 744, 745,
	0, 739, 728, 0, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 0, 756, 848, 849, 850, 851,
	0, 768, 0, 757, 759, 760, 761, 762, 852, 763,
	853, 0, 764, 765, 766, 767, 758, 769, 770, 0,
	0, 771, 772, 773, 774, 776, 778, 779, 780, 775,
	777, 781, 0, 782, 0, 0, 783, 784, 785, 854,
	855, 856, 0, 787, 788, 786, 789, 790, 793, 791,
	792, 857, 796, 513, 797, 798, 799, 794, 795, 0,
	0, 0, 0, 800, 801, 858, 802, 803, 804, 2483,
	0, 1733, 1732, 0, 0, 0, 0, 1730, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 346,
	348, 347, 349, 350, 351, 352, 0, 353, 354, 0,
	0, 0, 0, 0, 805, 0, 0, 0, 356, 0,
	355, 0, 357, 358, 359, 874, 360, 361, 362, 363,
	364, 365, 366, 367, 806, 807, 0, 368, 808, 369,
	809, 0, 810, 370, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 0, 0, 0, 380, 811, 812, 813,
	0, 381, 382, 383, 384, 814, 0, 875, 0, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 0, 394,
	395, 396, 393, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 408, 409, 876,
	410, 411, 412, 0, 0, 0, 0, 0, 0, 0,
	413, 414, 415, 416, 417, 0, 418, 420, 421, 815,
	422, 816, 0, 425, 427, 419, 423, 0, 426, 424,
	428, 429, 0, 430, 431, 432, 433, 0, 0, 434,
	435, 436, 0, 437, 438, 440, 439, 0, 441, 442,
	443, 0, 444, 445, 817, 446, 447, 448, 450, 452,
	449, 451, 453, 454, 455, 456, 457, 818, 819, 458,
	459, 0, 340, 0, 0, 0, 0, 0, 460, 461,
	462, 820, 0, 0, 0, 463, 0, 465, 469, 466,
	467, 468, 470, 0, 464, 471, 472, 0, 877, 473,
	474, 475, 821, 822, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 0, 485, 486, 823, 0, 824, 487,
	0, 488, 489, 490, 491, 492, 493, 494, 825, 826,
	827, 595, 879, 495, 496, 497, 0, 498, 499, 500,
	501, 502, 503, 504, 0, 0, 0, 505, 506, 507,
	508, 0, 0, 0, 0, 878, 828, 509, 596, 510,
	829, 830, 0, 831, 0, 511, 512, 515, 880, 832,
	881, 514, 516, 517, 882, 518, 0, 0, 0, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 528, 527,
	0, 530, 833, 529, 883, 531, 532, 884, 0, 533,
	534, 535, 536, 537, 538, 541, 0, 0, 539, 540,
	542, 543, 0, 544, 545, 547, 550, 546, 548, 549,
	551, 552, 565, 566, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 568, 0, 567, 885,
	569, 570, 571, 572, 573, 581, 583, 584, 579, 580,
	582, 585, 586, 588, 589, 576, 577, 578, 886, 587,
	574, 0, 575, 0, 887, 590, 591, 592, 593, 0,
	834, 594, 835, 597, 598, 0, 0, 599, 0, 600,
	0, 0, 602, 603, 604, 0, 0, 605, 606, 836,
	888, 607, 889, 837, 608, 609, 601, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 0, 620, 621,
	838, 622, 623, 624, 839, 625, 626, 627, 840, 628,
	841, 629, 630, 0, 631, 632, 633, 0, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 842, 644,
	645, 647, 646, 648, 649, 0, 650, 0, 651, 652,
	653, 0, 0, 0, 0, 0, 654, 655, 657, 0,
	658, 659, 660, 661, 662, 656, 663, 664, 665, 666,
	667, 668, 669, 0, 671, 672, 670, 673, 674, 890,
	675, 676, 677, 678, 679, 843, 680, 0, 681, 682,
	690, 691, 692, 683, 684, 686, 693, 685, 694, 695,
	696, 697, 699, 698, 0, 701, 702, 700, 703, 704,
	705, 706, 0, 707, 844, 708, 687, 688, 709, 710,
	711, 891, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 845, 0, 721, 0, 722, 723, 724, 725, 726,
	727, 729, 689, 730, 731, 732, 737, 738, 846, 733,
	734, 735, 736, 847, 740, 741, 742, 743, 0, 744,
	745, 0, 739, 728, 0, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 0, 756, 848, 849, 850,
	851, 0, 768, 0, 757, 759, 760, 761, 762, 852,
	763, 853, 0, 764, 765, 766, 767, 758, 769, 770,
	0, 0, 771, 772, 773, 774, 776, 778, 779, 780,
	775, 777, 781, 0, 782, 0, 0, 783, 784, 785,
	854, 855, 856, 0, 787, 788, 786, 789, 790, 793,
	791, 792, 857, 796, 513, 797, 798, 799, 794, 795,
	0, 0, 0, 0, 800, 801, 858, 802, 803, 804,
	2033, 0, 1733, 1732, 0, 0, 0, 0, 1730, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	346, 348, 347, 349, 350, 351, 352, 0, 353, 354,
	0, 0, 0, 0, 0, 805, 0, 0, 0, 356,
	0, 355, 0, 357, 358, 359, 874, 360, 361, 362,
	363, 364, 365, 366, 367, 806, 807, 0, 368, 808,
	369, 809, 0, 810, 370, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 0, 0, 0, 380, 811, 812,
	813, 0, 381, 382, 383, 384, 814, 0, 875, 0,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 0,
	394, 395, 396, 393, 397, 398, 0, 399, 0, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 408, 409,
	876, 410, 411, 412, 0, 0, 0, 0, 0, 0,
	0, 413, 414, 415, 416, 417, 0, 418, 420, 421,
	815, 422, 816, 0, 425, 427, 419, 423, 0, 426,
	424, 428, 429, 0, 430, 431, 432, 433, 0, 0,
	434, 435, 436, 0, 437, 438, 440, 439, 0, 441,
	442, 443, 0, 444, 445, 817, 446, 447, 448, 450,
	452, 449, 451, 453, 454, 455, 456, 457, 818, 819,
	458, 459, 0, 340, 0, 0, 0, 0, 0, 460,
	461, 462, 820, 0, 0, 0, 463, 0, 465, 469,
	466, 467, 468, 470, 0, 464, 471, 472, 0, 877,
	473, 474, 475, 821, 822, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 486, 823, 0, 824,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 2036,
	826, 827, 595, 879, 495, 496, 497, 0, 498, 499,
	500, 501, 502, 503, 504, 0, 0, 0, 505, 506,
	507, 508, 0, 0, 0, 0, 878, 828, 509, 596,
	510, 829, 830, 0, 831, 0, 511, 512, 515, 880,
	832, 881, 514, 516, 517, 882, 518, 0, 0, 0,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 528,
	527, 0, 530, 833, 529, 883, 531, 532, 884, 0,
	533, 534, 535, 536, 537, 538, 541, 0, 0, 539,
	540, 542, 543, 0, 544, 545, 547, 550, 546, 548,
	549, 551, 552, 565, 566, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 568, 0, 567,
	885, 569, 570, 571, 572, 573, 581, 583, 584, 579,
	580, 582, 585, 586, 588, 589, 576, 577, 578, 886,
	587, 574, 0, 575, 0, 887, 590, 591, 592, 593,
	0, 834, 594, 835, 597, 598, 0, 0, 599, 0,
	600, 0, 0, 602, 603, 604, 0, 0, 605, 606,
	836, 888, 607, 889, 837, 608, 609, 601, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 0, 620,
	621, 838, 622, 623, 624, 839, 625, 626, 627, 840,
	628, 841, 629, 630, 0, 631, 632, 633, 0, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 842,
	644, 645, 647, 646, 648, 649, 0, 650, 0, 651,
	652, 653, 0, 0, 0, 0, 0, 654, 655, 657,
	0, 658, 659, 660, 661, 662, 656, 663, 664, 665,
	666, 667, 668, 669, 0, 671, 672, 670, 673, 674,
	890, 675, 676, 677, 678, 679, 843, 680, 0, 681,
	682, 690, 691, 692, 683, 684, 686, 693, 685, 694,
	695, 696, 697, 699, 698, 0, 701, 702, 700, 703,
	704, 705, 706, 0, 707, 844, 708, 687, 688, 709,
	710, 711, 891, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 845, 0, 721, 0, 722, 723, 724, 725,
	726, 727, 729, 689, 730, 731, 732, 737, 738, 846,
	733, 734, 735, 736, 847, 740, 741, 742, 743, 0,
	744, 745, 0, 739, 728, 0, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 0, 756, 848, 849,
	850, 851, 0, 768, 0, 757, 759, 760, 761, 762,
	852, 763, 853, 0, 764, 765, 766, 767, 758, 769,
	770, 0, 0, 771, 772, 773, 774, 776, 778, 779,
	780, 775, 777, 781, 0, 782, 0, 0, 783, 784,
	785, 854, 855, 856, 0, 787, 788, 786, 789, 790,
	793, 791, 792, 857, 796, 513, 797, 798, 799, 794,
	795, 0, 0, 0, 0, 800, 801, 858, 802, 803,
	804, 1983, 0, 1733, 1732, 0, 0, 0, 0, 1730,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 346, 348, 347, 349, 350, 351, 352, 0, 353,
	354, 0, 0, 0, 0, 0, 805, 0, 0, 0,
	356, 0, 355, 0, 357, 358, 359, 874, 360, 361,
	362, 363, 364, 365, 366, 367, 806, 807, 0, 368,
	808, 369, 809, 0, 810, 370, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 0, 0, 0, 380, 811,
	812, 813, 0, 381, 382, 383, 384, 814, 0, 875,
	0, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	0, 394, 395, 396, 393, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 408,
	409, 876, 410, 411, 412, 0, 0, 0, 0, 0,
	0, 0, 413, 414, 415, 416, 417, 0, 418, 420,
	421, 815, 422, 816, 0, 425, 427, 419, 423, 0,
	426, 424, 428, 429, 0, 430, 431, 432, 433, 0,
	0, 434, 435, 436, 0, 437, 438, 440, 439, 0,
	441, 442, 443, 0, 444, 445, 817, 446, 447, 448,
	450, 452, 449, 451, 453, 454, 455, 456, 457, 818,
	819, 458, 459, 0, 340, 0, 0, 0, 0, 0,
	460, 461, 462, 820, 0, 0, 0, 463, 0, 465,
	469, 466, 467, 468, 470, 0, 464, 471, 472, 0,
	877, 473, 474, 475, 821, 822, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 0, 485, 486, 823, 0,
	824, 487, 0, 488, 489, 490, 491, 492, 493, 494,
	825, 826, 827, 595, 879, 495, 496, 497, 0, 498,
	499, 500, 501, 502, 503, 504, 0, 0, 0, 505,
	506, 507, 508, 0, 0, 0, 0, 878, 828, 509,
	596, 510, 829, 830, 0, 831, 0, 511, 512, 515,
	880, 832, 881, 514, 516, 517, 882, 518, 0, 0,
	0, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	528, 527, 0, 530, 833, 529, 883, 531, 532, 884,
	0, 533, 534, 535, 536, 537, 538, 541, 0, 0,
	539, 540, 542, 543, 0, 544, 545, 547, 550, 546,
	548, 549, 551, 552, 565, 566, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 568, 0,
	567, 885, 569, 570, 571, 572, 573, 581, 583, 584,
	579, 580, 582, 585, 586, 588, 589, 576, 577, 578,
	886, 587, 574, 0, 575, 0, 887, 590, 591, 592,
	593, 0, 834, 594, 835, 597, 598, 0, 0, 599,
	0, 600, 0, 0, 602, 603, 604, 0, 0, 605,
	606, 836, 888, 607, 889, 837, 608, 609, 601, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 0,
	620, 621, 838, 622, 623, 624, 839, 625, 626, 627,
	840, 628, 841, 629, 630, 0, 631, 632, 633, 0,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	842, 644, 645, 647, 646, 648, 649, 0, 650, 0,
	651, 652, 653, 0, 0, 0, 0, 0, 654, 655,
	657, 0, 658, 659, 660, 661, 662, 656, 663, 664,
	665, 666, 667, 668, 669, 0, 671, 672, 670, 673,
	674, 890, 675, 676, 677, 678, 679, 843, 680, 0,
	681, 682, 690, 691, 692, 1981, 684, 686, 693, 685,
	694, 695, 696, 697, 699, 698, 0, 701, 702, 700,
	703, 704, 705, 706, 0, 707, 844, 708, 687, 688,
	709, 710, 711, 891, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 845, 0, 721, 0, 722, 723, 724,
	725, 726, 727, 729, 689, 730, 731, 732, 737, 738,
	846, 733, 734, 735, 736, 847, 740, 741, 742, 743,
	0, 744, 745, 0, 739, 728, 0, 746, 747, 748,
	749, 750, 751, 752, 753, 754, 755, 0, 756, 848,
	849, 850, 851, 0, 768, 0, 757, 759, 760, 761,
	762, 852, 763, 853, 0, 764, 765, 766, 767, 758,
	769, 770, 0, 0, 771, 772, 773, 774, 776, 778,
	779, 780, 775, 777, 781, 0, 782, 0, 0, 783,
	784, 785, 854, 855, 856, 0, 787, 788, 786, 789,
	790, 793, 791, 792, 857, 796, 513, 797, 798, 799,
	794, 795, 0, 0, 0, 0, 800, 801, 858, 802,
	803, 804, 1728, 0, 1733, 1732, 0, 0, 0, 0,
	1730, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 346, 348, 347, 349, 350, 351, 352, 0,
	353, 354, 0, 0, 0, 0, 0, 805, 0, 0,
	0, 356, 0, 355, 0, 357, 358, 359, 874, 360,
	361, 362, 363, 364, 365, 366, 367, 806, 807, 0,
	368, 808, 369, 809, 0, 810, 370, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 0, 0, 0, 380,
	811, 812, 813, 0, 381, 382, 383, 384, 814, 0,
	875, 0, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 0, 394, 395, 396, 393, 1727, 398, 0, 399,
	0, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	408, 409, 876, 410, 411, 412, 0, 0, 0, 0,
	0, 0, 0, 413, 414, 415, 416, 417, 0, 418,
	420, 421, 815, 422, 816, 0, 425, 427, 419, 423,
	0, 426, 424, 428, 429, 0, 430, 431, 432, 433,
	0, 0, 434, 435, 436, 0, 437, 438, 440, 439,
	0, 441, 442, 443, 0, 444, 445, 817, 446, 447,
	448, 450, 452, 449, 451, 453, 454, 455, 456, 457,
	818, 819, 458, 459, 0, 340, 0, 0, 0, 0,
	0, 1724, 461, 462, 820, 0, 0, 0, 463, 0,
	465, 469, 466, 467, 468, 470, 0, 464, 471, 472,
	0, 877, 473, 474, 475, 821, 822, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 486, 823,
	0, 824, 487, 0, 488, 489, 490, 491, 492, 493,
	494, 825, 826, 827, 595, 879, 495, 496, 497, 0,
	498, 499, 500, 501, 502, 503, 504, 0, 0, 0,
	505, 506, 507, 508, 0, 0, 0, 0, 878, 828,
	509, 596, 510, 829, 830, 0, 831, 0, 511, 512,
	515, 880, 832, 881, 514, 516, 517, 882, 518, 0,
	0, 0, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 528, 527, 0, 530, 833, 529, 883, 531, 532,
	884, 0, 533, 534, 535, 536, 537, 538, 541, 0,
	0, 539, 540, 542, 543, 0, 544, 545, 547, 550,
	546, 548, 549, 551, 552, 565, 566, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 568,
	0, 567, 885, 569, 570, 571, 572, 573, 581, 583,
	584, 579, 580, 582, 585, 586, 588, 589, 576, 577,
	578, 886, 587, 574, 0, 575, 0, 887, 590, 591,
	592, 593, 0, 834, 594, 835, 597, 598, 0, 0,
	599, 0, 600, 0, 0, 602, 603, 604, 0, 0,
	605, 606, 836, 888, 607, 889, 837, 608, 609, 601,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	0, 620, 621, 838, 622, 623, 624, 839, 625, 626,
	627, 840, 628, 841, 629, 630, 0, 631, 632, 633,
	0, 634, 635, 636, 637, 638, 639, 640, 641, 1725,
	643, 842, 644, 645, 647, 646, 648, 649, 0, 650,
	0, 651, 652, 653, 0, 0, 0, 0, 0, 654,
	655, 657, 0, 658, 659, 660, 661, 662, 656, 663,
	664, 665, 666, 667, 668, 669, 0, 671, 672, 670,
	673, 674, 890, 675, 676, 677, 678, 679, 843, 680,
	0, 681, 682, 690, 691, 692, 683, 684, 686, 693,
	685, 1723, 695, 696, 697, 699, 698, 0, 701, 702,
	700, 703, 704, 705, 706, 0, 707, 844, 708, 687,
	688, 709, 710, 711, 891, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 845, 0, 721, 0, 722, 723,
	724, 725, 726, 727, 729, 689, 730, 731, 732, 737,
	738, 846, 733, 734, 735, 736, 847, 740, 741, 742,
	743, 0, 744, 745, 0, 739, 728, 0, 746, 747,
	748, 749, 750, 751, 752, 753, 754, 755, 0, 756,
	848, 849, 850, 851, 0, 768, 0, 757, 759, 760,
	761, 762, 852, 763, 853, 0, 764, 765, 766, 767,
	758, 769, 770, 0, 0, 771, 772, 773, 774, 776,
	778, 779, 780, 775, 777, 781, 0, 782, 0, 0,
	783, 1726, 785, 854, 855, 856, 0, 787, 788, 786,
	789, 790, 793, 791, 792, 857, 796, 513, 797, 798,
	799, 794, 795, 0, 0, 0, 0, 800, 801, 858,
	802, 803, 804, 1733, 1732, 0, 0, 0, 0, 1730,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 346, 348, 347, 349, 350, 351, 352, 0, 353,
	354, 0, 0, 0, 0, 0, 805, 0, 0, 0,
	356, 0, 355, 0, 357, 358, 359, 874, 360, 361,
	362, 363, 364, 365, 366, 367, 806, 807, 0, 368,
	808, 369, 809, 0, 810, 370, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 0, 0, 0, 380, 811,
	812, 813, 0, 381, 382, 383, 384, 814, 0, 875,
	0, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	0, 394, 395, 396, 393, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 408,
	409, 876, 410, 411, 412, 0, 0, 0, 0, 0,
	0, 0, 413, 414, 415, 416, 417, 0, 418, 420,
	421, 815, 422, 816, 0, 425, 427, 419, 423, 0,
	426, 424, 428, 429, 0, 430, 431, 432, 433, 0,
	0, 434, 435, 436, 0, 437, 438, 440, 439, 0,
	441, 442, 443, 0, 444, 445, 817, 446, 447, 448,
	450, 452, 449, 451, 453, 454, 455, 456, 457, 818,
	819, 458, 459, 0, 340, 0, 0, 0, 0, 0,
	460, 461, 462, 820, 0, 0, 0, 463, 0, 465,
	469, 466, 467, 468, 470, 0, 464, 471, 472, 0,
	877, 473, 474, 475, 821, 822, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 0, 485, 486, 823, 0,
	824, 487, 0, 488, 489, 490, 491, 492, 493, 494,
	825, 826, 827, 595, 879, 495, 496, 497, 0, 498,
	499, 500, 501, 502, 503, 504, 0, 0, 0, 505,
	506, 507, 508, 0, 0, 0, 0, 878, 828, 509,
	596, 510, 829, 830, 0, 831, 0, 511, 512, 515,
	880, 832, 881, 514, 516, 517, 882, 518, 0, 0,
	0, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	528, 527, 0, 530, 833, 529, 883, 531, 532, 884,
	0, 533, 534, 535, 536, 537, 538, 541, 0, 0,
	539, 540, 542, 543, 0, 544, 545, 547, 550, 546,
	548, 549, 551, 552, 565, 566, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 568, 0,
	567, 885, 569, 570, 571, 572, 573, 581, 583, 584,
	579, 580, 582, 585, 586, 588, 589, 576, 577, 578,
	886, 587, 574, 0, 575, 0, 887, 590, 591, 592,
	593, 0, 834, 594, 835, 597, 598, 0, 0, 599,
	0, 600, 0, 0, 602, 603, 604, 0, 0, 605,
	606, 836, 888, 607, 889, 837, 608, 609, 601, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 0,
	620, 621, 838, 622, 623, 624, 839, 625, 626, 627,
	840, 628, 841, 629, 630, 0, 631, 632, 633, 0,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	842, 644, 645, 647, 646, 648, 649, 0, 650, 0,
	651, 652, 653, 0, 0, 0, 0, 0, 654, 655,
	657, 0, 658, 659, 660, 661, 662, 656, 663, 664,
	665, 666, 667, 668, 669, 0, 671, 672, 670, 673,
	674, 890, 675, 676, 677, 678, 679, 843, 680, 0,
	681, 682, 690, 691, 692, 683, 684, 686, 693, 685,
	694, 695, 696, 697, 699, 698, 0, 701, 702, 700,
	703, 704, 705, 706, 0, 707, 844, 708, 687, 688,
	709, 710, 711, 891, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 845, 0, 721, 0, 722, 723, 724,
	725, 726, 727, 729, 689, 730, 731, 732, 737, 738,
	846, 733, 734, 735, 736, 847, 740, 741, 742, 743,
	0, 744, 745, 0, 739, 728, 0, 746, 747, 748,
	749, 750, 751, 752, 753, 754, 755, 0, 756, 848,
	849, 850, 851, 0, 768, 0, 757, 759, 760, 761,
	762, 852, 763, 853, 0, 764, 765, 766, 767, 758,
	769, 770, 0, 0, 771, 772, 773, 774, 776, 778,
	779, 780, 775, 777, 781, 0, 782, 0, 0, 783,
	784, 785, 854, 855, 856, 0, 787, 788, 786, 789,
	790, 793, 791, 792, 857, 796, 513, 797, 798, 799,
	794, 795, 1733, 1732, 0, 0, 800, 801, 858, 802,
	803, 804, 0, 0, 0, 0, 0, 0, 0, 345,
	346, 348, 347, 349, 350, 351, 352, 0, 353, 354,
	0, 0, 0, 0, 0, 805, 0, 0, 0, 356,
	0, 355, 0, 357, 358, 359, 874, 360, 361, 362,
	363, 364, 365, 366, 367, 806, 807, 0, 368, 808,
	369, 809, 0, 810, 370, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 0, 0, 0, 380, 811, 812,
	813, 0, 381, 382, 383, 384, 814, 0, 875, 0,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 0,
	394, 395, 396, 393, 397, 398, 0, 399, 0, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 408, 409,
	876, 410, 411, 412, 0, 0, 0, 0, 0, 0,
	0, 413, 414, 415, 416, 417, 0, 418, 420, 421,
	815, 422, 816, 0, 425, 427, 419, 423, 0, 426,
	424, 428, 429, 0, 430, 431, 432, 433, 0, 0,
	434, 435, 436, 0, 437, 438, 440, 439, 0, 441,
	442, 443, 0, 444, 445, 817, 446, 447, 448, 450,
	452, 449, 451, 453, 454, 455, 456, 457, 818, 819,
	458, 459, 0, 340, 0, 0, 0, 0, 0, 460,
	461, 462, 820, 0, 0, 0, 463, 0, 465, 469,
	466, 467, 468, 470, 0, 464, 471, 472, 0, 877,
	473, 474, 475, 821, 822, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 486, 823, 0, 824,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 825,
	826, 827, 595, 879, 495, 496, 497, 0, 498, 499,
	500, 501, 502, 503, 504, 0, 0, 0, 505, 506,
	507, 508, 0, 0, 0, 0, 878, 828, 509, 596,
	510, 829, 830, 0, 831, 0, 511, 512, 515, 880,
	832, 881, 514, 516, 517, 882, 518, 0, 0, 0,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 528,
	527, 0, 530, 833, 529, 883, 531, 532, 884, 0,
	533, 534, 535, 536, 537, 538, 541, 0, 0, 539,
	540, 542, 543, 0, 544, 545, 547, 550, 546, 548,
	549, 551, 552, 565, 566, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 568, 0, 567,
	885, 569, 570, 571, 572, 573, 581, 583, 584, 579,
	580, 582, 585, 586, 588, 589, 576, 577, 578, 886,
	587, 574, 0, 575, 0, 887, 590, 591, 592, 593,
	0, 834, 594, 835, 597, 598, 0, 0, 599, 0,
	600, 0, 0, 602, 603, 604, 0, 0, 605, 606,
	836, 888, 607, 889, 837, 608, 609, 601, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 0, 620,
	621, 838, 622, 623, 624, 839, 625, 626, 627, 840,
	628, 841, 629, 630, 0, 631, 632, 633, 0, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 842,
	644, 645, 647, 646, 648, 649, 0, 650, 0, 651,
	652, 653, 0, 0, 0, 0, 0, 654, 655, 657,
	0, 658, 659, 660, 661, 662, 656, 663, 664, 665,
	666, 667, 668, 669, 0, 671, 672, 670, 673, 674,
	890, 675, 676, 677, 678, 679, 843, 680, 0, 681,
	682, 690, 691, 692, 683, 684, 686, 693, 685, 694,
	695, 696, 697, 699, 698, 0, 701, 702, 700, 703,
	704, 705, 706, 0, 707, 844, 708, 687, 688, 709,
	710, 711, 891, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 845, 0, 721, 0, 722, 723, 724, 725,
	726, 727, 729, 689, 730, 731, 732, 737, 738, 846,
	733, 734, 735, 736, 847, 740, 741, 742, 743, 0,
	744, 745, 0, 739, 728, 0, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 0, 756, 848, 849,
	850, 851, 0, 768, 0, 757, 759, 760, 761, 762,
	852, 763, 853, 0, 764, 765, 766, 767, 758, 769,
	770, 0, 0, 771, 772, 773, 774, 776, 778, 779,
	780, 775, 777, 781, 0, 782, 0, 0, 783, 784,
	785, 854, 855, 856, 0, 787, 788, 786, 789, 790,
	793, 791, 792, 857, 796, 513, 797, 798, 799, 794,
	795, 1733, 0, 0, 0, 800, 801, 858, 802, 803,
	804, 0, 0, 0, 0, 0, 0, 0, 345, 346,
	348, 347, 349, 350, 351, 352, 0, 353, 354, 0,
	0, 0, 0, 0, 805, 0, 0, 0, 356, 0,
	355, 0, 357, 358, 359, 874, 360, 361, 362, 363,
	364, 365, 366, 367, 806, 807, 0, 368, 808, 369,
	809, 0, 810, 370, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 0, 0, 0, 380, 811, 812, 813,
	0, 381, 382, 383, 384, 814, 0, 875, 0, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 0, 394,
	395, 396, 393, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 408, 409, 876,
	410, 411, 412, 0, 0, 0, 0, 0, 0, 0,
	413, 414, 415, 416, 417, 0, 418, 420, 421, 815,
	422, 816, 0, 425, 427, 419, 423, 0, 426, 424,
	428, 429, 0, 430, 431, 432, 433, 0, 0, 434,
	435, 436, 0, 437, 438, 440, 439, 0, 441, 442,
	443, 0, 444, 445, 817, 446, 447, 448, 450, 452,
	449, 451, 453, 454, 455, 456, 457, 818, 819, 458,
	459, 0, 340, 0, 0, 0, 0, 0, 460, 461,
	462, 820, 0, 0, 0, 463, 0, 465, 469, 466,
	467, 468, 470, 0, 464, 471, 472, 0, 877, 473,
	474, 475, 821, 822, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 0, 485, 486, 823, 0, 824, 487,
	0, 488, 489, 490, 491, 492, 493, 494, 825, 826,
	827, 595, 879, 495, 496, 497, 0, 498, 499, 500,
	501, 502, 503, 504, 0, 0, 0, 505, 506, 507,
	508, 0, 0, 0, 0, 878, 828, 509, 596, 510,
	829, 830, 0, 831, 0, 511, 512, 515, 880, 832,
	881, 514, 516, 517, 882, 518, 0, 0, 0, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 528, 527,
	0, 530, 833, 529, 883, 531, 532, 884, 0, 533,
	534, 535, 536, 537, 538, 541, 0, 0, 539, 540,
	542, 543, 0, 544, 545, 547, 550, 546, 548, 549,
	551, 552, 565, 566, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 568, 0, 567, 885,
	569, 570, 571, 572, 573, 581, 583, 584, 579, 580,
	582, 585, 586, 588, 589, 576, 577, 578, 886, 587,
	574, 0, 575, 0, 887, 590, 591, 592, 593, 0,
	834, 594, 835, 597, 598, 0, 0, 599, 0, 600,
	0, 0, 602, 603, 604, 0, 0, 605, 606, 836,
	888, 607, 889, 837, 608, 609, 601, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 0, 620, 621,
	838, 622, 623, 624, 839, 625, 626, 627, 840, 628,
	841, 629, 630, 0, 631, 632, 633, 0, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 842, 644,
	645, 647, 646, 648, 649, 0, 650, 0, 651, 652,
	653, 0, 0, 0, 0, 0, 654, 655, 657, 0,
	658, 659, 660, 661, 662, 656, 663, 664, 665, 666,
	667, 668, 669, 0, 671, 672, 670, 673, 674, 890,
	675, 676, 677, 678, 679, 843, 680, 0, 681, 682,
	690, 691, 692, 683, 684, 686, 693, 685, 694, 695,
	696, 697, 699, 698, 0, 701, 702, 700, 703, 704,
	705, 706, 0, 707, 844, 708, 687, 688, 709, 710,
	711, 891, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 845, 0, 721, 0, 722, 723, 724, 725, 726,
	727, 729, 689, 730, 731, 732, 737, 738, 846, 733,
	734, 735, 736, 847, 740, 741, 742, 743, 0, 744,
	745, 0, 739, 728, 0, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 0, 756, 848, 849, 850,
	851, 0, 768, 0, 757, 759, 760, 761, 762, 852,
	763, 853, 0, 764, 765, 766, 767, 758, 769, 770,
	0, 0, 771, 772, 773, 774, 776, 778, 779, 780,
	775, 777, 781, 0, 782, 0, 0, 783, 784, 785,
	854, 855, 856, 0, 787, 788, 786, 789, 790, 793,
	791, 792, 857, 796, 513, 797, 798, 799, 794, 795,
	337, 0, 0, 0, 800, 801, 858, 802, 803, 804,
	0, 0, 0, 0, 0, 0, 0, 345, 346, 348,
	347, 349, 350, 351, 352, 0, 353, 354, 0, 0,
	0, 0, 0, 805, 0, 0, 0, 356, 0, 355,
	0, 357, 358, 359, 0, 360, 361, 362, 363, 364,
	365, 366, 367, 806, 807, 0, 368, 808, 369, 809,
	0, 810, 370, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 0, 0, 380, 811, 812, 813, 4193,
	381, 382, 383, 384, 814, 0, 0, 0, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 0, 394, 395,
	396, 393, 397, 398, 5086, 399, 0, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 412, 0, 0, 0, 0, 0, 0, 0, 413,
	414, 415, 416, 417, 0, 418, 420, 421, 815, 422,
	816, 0, 425, 427, 419, 423, 0, 426, 424, 428,
	429, 0, 430, 431, 432, 433, 0, 0, 434, 435,
	436, 0, 437, 438, 440, 439, 0, 441, 442, 443,
	0, 4197, 445, 817, 446, 447, 448, 450, 452, 449,
	451, 453, 454, 455, 456, 457, 818, 819, 458, 459,
	0, 5085, 0, 0, 0, 0, 0, 460, 461, 462,
	820, 0, 0, 0, 463, 0, 465, 469, 466, 467,
	468, 470, 4196, 464, 471, 472, 0, 0, 473, 474,
	475, 821, 822, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 486, 823, 0, 824, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 825, 826, 827,
	595, 0, 495, 496, 497, 0, 498, 499, 500, 501,
	502, 503, 504, 0, 0, 0, 505, 506, 507, 508,
	0, 5081, 5082, 0, 0, 828, 509, 596, 510, 829,
	830, 0, 831, 0, 511, 5084, 515, 0, 832, 0,
	514, 516, 517, 0, 518, 0, 0, 0, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 528, 527, 0,
	530, 833, 529, 0, 531, 532, 5080, 0, 533, 534,
	535, 536, 537, 538, 541, 0, 0, 539, 540, 542,
	543, 0, 544, 545, 547, 550, 546, 548, 549, 551,
	552, 565, 566, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 568, 0, 567, 0, 569,
	570, 571, 572, 573, 581, 583, 584, 579, 580, 582,
	585, 586, 588, 589, 576, 577, 578, 0, 587, 574,
	0, 575, 0, 0, 590, 591, 592, 593, 0, 834,
	594, 835, 597, 598, 0, 0, 599, 0, 600, 0,
	0, 602, 603, 604, 0, 0, 605, 606, 836, 0,
	607, 0, 837, 608, 609, 601, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 0, 620, 621, 838,
	622, 623, 624, 839, 625, 626, 627, 840, 628, 841,
	629, 630, 4195, 631, 632, 633, 0, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 842, 644, 645,
	647, 646, 648, 649, 0, 650, 0, 651, 652, 653,
	0, 0, 0, 0, 0, 654, 655, 657, 0, 658,
	659, 660, 661, 662, 656, 663, 664, 665, 666, 667,
	668, 669, 0, 671, 672, 670, 673, 674, 0, 675,
	676, 677, 678, 679, 843, 680, 0, 681, 682, 690,
	691, 692, 683, 684, 686, 693, 685, 694, 695, 696,
	697, 699, 698, 0, 701, 702, 700, 703, 704, 705,
	706, 0, 707, 844, 708, 687, 688, 709, 710, 711,
	0, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	845, 0, 721, 0, 722, 723, 724, 725, 726, 727,
	729, 689, 730, 731, 732, 737, 738, 846, 733, 734,
	735, 736, 847, 740, 741, 742, 743, 0, 744, 745,
	0, 739, 728, 0, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 0, 756, 848, 849, 850, 851,
	0, 768, 0, 757, 759, 760, 761, 762, 852, 763,
	853, 0, 764, 765, 766, 767, 758, 769, 770, 0,
	5083, 771, 772, 773, 774, 776, 778, 779, 780, 775,
	777, 781, 0, 782, 0, 0, 783, 784, 785, 854,
	855, 856, 0, 787, 788, 786, 789, 790, 793, 791,
	792, 857, 796, 513, 797, 798, 799, 794, 795, 1830,
	0, 337, 0, 800, 801, 858, 802, 803, 804, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 346,
	348, 347, 349, 350, 351, 352, 1829, 353, 354, 0,
	0, 0, 0, 0, 805, 0, 0, 0, 356, 0,
	355, 0, 357, 358, 359, 0, 360, 361, 362, 363,
	364, 365, 366, 367, 806, 807, 0, 368, 808, 369,
	809, 0, 810, 370, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 0, 0, 0, 380, 811, 812, 813,
	0, 381, 382, 383, 384, 814, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 0, 394,
	395, 396, 393, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 0, 0, 0, 0, 0, 0,
	413, 414, 415, 1824, 417, 0, 418, 420, 421, 815,
	422, 816, 0, 425, 427, 419, 423, 0, 426, 424,
	428, 429, 0, 430, 431, 432, 433, 0, 0, 434,
	435, 436, 0, 437, 438, 440, 439, 0, 441, 442,
	443, 0, 444, 445, 817, 446, 447, 448, 450, 452,
	449, 451, 453, 454, 455, 456, 1832, 818, 819, 458,
	459, 0, 340, 0, 0, 0, 0, 0, 460, 461,
	462, 820, 0, 0, 0, 463, 0, 465, 469, 466,
	467, 468, 470, 0, 464, 471, 472, 0, 0, 1827,
	474, 475, 821, 822, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 0, 485, 486, 823, 0, 824, 487,
	0, 488, 489, 490, 491, 492, 493, 494, 825, 826,
	827, 595, 0, 495, 496, 497, 0, 498, 499, 500,
	501, 502, 503, 504, 0, 0, 0, 505, 1825, 507,
	508, 0, 342, 341, 343, 0, 828, 509, 596, 510,
	829, 830, 0, 831, 0, 511, 512, 515, 0, 832,
	0, 514, 516, 517, 0, 518, 0, 0, 0, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 528, 527,
	0, 530, 833, 529, 0, 531, 532, 0, 0, 533,
	534, 535, 536, 537, 538, 541, 0, 0, 539, 540,
	542, 543, 0, 544, 545, 547, 550, 546, 548, 549,
	551, 552, 565, 566, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 568, 0, 567, 0,
	569, 570, 571, 572, 573, 581, 583, 584, 579, 580,
	582, 585, 586, 588, 589, 576, 577, 578, 0, 587,
	574, 0, 575, 344, 0, 590, 591, 592, 593, 0,
	834, 594, 835, 597, 598, 0, 0, 599, 0, 600,
	0, 0, 602, 603, 604, 0, 0, 605, 606, 836,
	0, 607, 0, 837, 608, 609, 601, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 0, 620, 621,
	838, 622, 623, 624, 839, 625, 626, 627, 840, 628,
	841, 629, 630, 0, 631, 632, 633, 0, 1828, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 842, 644,
	645, 647, 646, 648, 649, 0, 650, 0, 651, 652,
	653, 0, 0, 0, 0, 0, 654, 655, 657, 0,
	658, 659, 660, 661, 662, 656, 663, 664, 665, 666,
	667, 668, 669, 0, 671, 672, 670, 673, 674, 0,
	675, 676, 677, 678, 679, 843, 680, 0, 681, 682,
	690, 691, 692, 1831, 684, 686, 693, 685, 694, 695,
	696, 697, 1826, 698, 0, 1823, 702, 700, 703, 704,
	705, 706, 0, 707, 844, 708, 687, 688, 709, 710,
	711, 0, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 845, 0, 721, 0, 722, 723, 724, 725, 726,
	727, 729, 689, 730, 731, 732, 737, 738, 846, 733,
	734, 735, 736, 847, 740, 741, 742, 743, 0, 744,
	745, 0, 739, 728, 1821, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 0, 756, 848, 849, 850,
	851, 0, 768, 0, 757, 759, 760, 761, 762, 852,
	763, 853, 0, 764, 765, 766, 767, 758, 769, 770,
	0, 0, 771, 772, 773, 774, 776, 778, 779, 780,
	775, 777, 781, 0, 782, 0, 0, 783, 784, 785,
	854, 855, 856, 0, 787, 1822, 786, 789, 790, 793,
	791, 792, 857, 796, 513, 797, 798, 799, 794, 795,
	1956, 0, 337, 0, 800, 801, 858, 802, 803, 804,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	346, 348, 347, 349, 350, 351, 352, 0, 353, 354,
	0, 0, 0, 0, 0, 805, 0, 0, 0, 356,
	0, 355, 0, 357, 358, 359, 0, 360, 361, 362,
	363, 364, 365, 366, 367, 806, 807, 0, 368, 808,
	369, 809, 0, 810, 370, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 0, 0, 0, 380, 811, 812,
	813, 0, 381, 382, 383, 384, 814, 0, 0, 0,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 0,
	394, 395, 396, 393, 397, 398, 0, 399, 0, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 412, 0, 0, 0, 0, 0, 0,
	0, 413, 414, 415, 416, 417, 0, 418, 420, 421,
	815, 422, 816, 0, 425, 427, 419, 423, 0, 426,
	424, 428, 429, 0, 430, 431, 432, 433, 0, 0,
	434, 435, 436, 0, 437, 438, 440, 439, 0, 441,
	442, 443, 0, 444, 445, 817, 446, 447, 448, 450,
	452, 449, 451, 453, 454, 455, 456, 457, 818, 819,
	458, 459, 0, 340, 0, 0, 0, 0, 0, 460,
	461, 462, 820, 0, 0, 0, 463, 0, 465, 469,
	466, 467, 468, 470, 0, 464, 471, 472, 0, 0,
	473, 474, 475, 821, 822, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 486, 823, 0, 824,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 1958,
	826, 827, 595, 0, 495, 496, 497, 0, 498, 499,
	500, 501, 502, 503, 504, 0, 0, 0, 505, 506,
	507, 508, 0, 342, 341, 343, 0, 828, 509, 596,
	510, 829, 830, 0, 831, 0, 511, 512, 515, 0,
	832, 0, 514, 516, 517, 0, 518, 0, 0, 0,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 528,
	527, 0, 530, 833, 529, 0, 531, 532, 0, 0,
	533, 534, 535, 536, 537, 538, 541, 0, 0, 539,
	540, 542, 543, 0, 544, 545, 547, 550, 546, 548,
	549, 551, 552, 565, 566, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 568, 0, 567,
	0, 569, 570, 571, 572, 573, 581, 583, 584, 579,
	580, 582, 585, 586, 588, 589, 576, 577, 578, 0,
	587, 574, 0, 575, 344, 0, 590, 591, 592, 593,
	0, 834, 594, 835, 597, 598, 0, 0, 599, 0,
	600, 0, 1528, 602, 603, 604, 0, 0, 605, 606,
	836, 0, 607, 0, 837, 608, 609, 601, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 0, 620,
	621, 838, 622, 623, 624, 839, 625, 626, 627, 840,
	628, 841, 629, 630, 0, 631, 632, 633, 0, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 842,
	644, 645, 647, 646, 648, 649, 0, 650, 0, 651,
	652, 653, 0, 0, 0, 0, 0, 654, 655, 657,
	0, 658, 659, 660, 661, 662, 656, 663, 664, 665,
	666, 667, 668, 669, 0, 671, 672, 670, 673, 674,
	0, 675, 676, 677, 678, 679, 843, 680, 0, 681,
	682, 690, 691, 692, 683, 684, 686, 693, 685, 694,
	695, 696, 697, 699, 698, 0, 701, 702, 700, 703,
	704, 705, 706, 0, 707, 844, 708, 687, 688, 709,
	710, 711, 0, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 845, 0, 721, 0, 722, 723, 724, 725,
	726, 727, 729, 689, 730, 731, 732, 737, 738, 846,
	733, 734, 735, 736, 847, 740, 741, 742, 743, 0,
	744, 745, 0, 739, 728, 0, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 0, 756, 848, 849,
	850, 851, 0, 768, 0, 757, 759, 760, 761, 762,
	852, 763, 853, 0, 764, 765, 766, 767, 758, 769,
	770, 0, 0, 771, 772, 773, 774, 776, 778, 779,
	780, 775, 777, 781, 0, 782, 0, 0, 783, 784,
	785, 854, 855, 856, 0, 787, 788, 786, 789, 790,
	793, 791, 792, 857, 796, 513, 797, 798, 799, 794,
	795, 1953, 0, 337, 0, 800, 801, 858, 802, 803,
	804, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 346, 348, 347, 349, 350, 351, 352, 0, 353,
	354, 0, 0, 0, 0, 0, 805, 0, 0, 0,
	356, 0, 355, 0, 357, 358, 359, 0, 360, 361,
	362, 363, 364, 365, 366, 367, 806, 807, 0, 368,
	808, 369, 809, 0, 810, 370, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 0, 0, 0, 380, 811,
	812, 813, 0, 381, 382, 383, 384, 814, 0, 0,
	0, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	0, 394, 395, 396, 393, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 412, 0, 0, 0, 0, 0,
	0, 0, 413, 414, 415, 416, 417, 0, 418, 420,
	421, 815, 422, 816, 0, 425, 427, 419, 423, 0,
	426, 424, 428, 429, 0, 430, 431, 432, 433, 0,
	0, 434, 435, 436, 0, 437, 438, 440, 439, 0,
	441, 442, 443, 0, 444, 445, 817, 446, 447, 448,
	450, 452, 449, 451, 453, 454, 455, 456, 457, 818,
	819, 458, 459, 0, 340, 0, 0, 0, 0, 0,
	460, 461, 462, 820, 0, 0, 0, 463, 0, 465,
	469, 466, 467, 468, 470, 0, 464, 471, 472, 0,
	0, 473, 474, 475, 821, 822, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 0, 485, 486, 823, 0,
	824, 487, 0, 488, 489, 490, 491, 492, 493, 494,
	1955, 826, 827, 595, 0, 495, 496, 497, 0, 498,
	499, 500, 501, 502, 503, 504, 0, 0, 0, 505,
	506, 507, 508, 0, 342, 341, 343, 0, 828, 509,
	596, 510, 829, 830, 0, 831, 0, 511, 512, 515,
	0, 832, 0, 514, 516, 517, 0, 518, 0, 0,
	0, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	528, 527, 0, 530, 833, 529, 0, 531, 532, 0,
	0, 533, 534, 535, 536, 537, 538, 541, 0, 0,
	539, 540, 542, 543, 0, 544, 545, 547, 550, 546,
	548, 549, 551, 552, 565, 566, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 568, 0,
	567, 0, 569, 570, 571, 572, 573, 581, 583, 584,
	579, 580, 582, 585, 586, 588, 589, 576, 577, 578,
	0, 587, 574, 0, 575, 344, 0, 590, 591, 592,
	593, 0, 834, 594, 835, 597, 598, 0, 0, 599,
	0, 600, 0, 1528, 602, 603, 604, 0, 0, 605,
	606, 836, 0, 607, 0, 837, 608, 609, 601, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 0,
	620, 621, 838, 622, 623, 624, 839, 625, 626, 627,
	840, 628, 841, 629, 630, 0, 631, 632, 633, 0,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	842, 644, 645, 647, 646, 648, 649, 0, 650, 0,
	651, 652, 653, 0, 0, 0, 0, 0, 654, 655,
	657, 0, 658, 659, 660, 661, 662, 656, 663, 664,
	665, 666, 667, 668, 669, 0, 671, 672, 670, 673,
	674, 0, 675, 676, 677, 678, 679, 843, 680, 0,
	681, 682, 690, 691, 692, 683, 684, 686, 693, 685,
	694, 695, 696, 697, 699, 698, 0, 701, 702, 700,
	703, 704, 705, 706, 0, 707, 844, 708, 687, 688,
	709, 710, 711, 0, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 845, 0, 721, 0, 722, 723, 724,
	725, 726, 727, 729, 689, 730, 731, 732, 737, 738,
	846, 733, 734, 735, 736, 847, 740, 741, 742, 743,
	0, 744, 745, 0, 739, 728, 0, 746, 747, 748,
	749, 750, 751, 752, 753, 754, 755, 0, 756, 848,
	849, 850, 851, 0, 768, 0, 757, 759, 760, 761,
	762, 852, 763, 853, 0, 764, 765, 766, 767, 758,
	769, 770, 0, 0, 771, 772, 773, 774, 776, 778,
	779, 780, 775, 777, 781, 0, 782, 0, 0, 783,
	784, 785, 854, 855, 856, 0, 787, 788, 786, 789,
	790, 793, 791, 792, 857, 796, 513, 797, 798, 799,
	794, 795, 1861, 0, 337, 0, 800, 801, 858, 802,
	803, 804, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 346, 348, 347, 349, 350, 351, 352, 0,
	353, 354, 0, 0, 0, 0, 0, 805, 0, 0,
	0, 356, 0, 355, 0, 357, 358, 359, 0, 360,
	361, 362, 363, 364, 365, 366, 367, 806, 807, 0,
	368, 808, 369, 809, 0, 810, 370, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 0, 0, 0, 380,
	811, 812, 813, 0, 381, 382, 383, 384, 814, 0,
	0, 0, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 0, 394, 395, 396, 393, 397, 398, 0, 399,
	0, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 412, 0, 0, 0, 0,
	0, 0, 0, 413, 414, 415, 416, 417, 0, 418,
	420, 421, 815, 422, 816, 0, 425, 427, 419, 423,
	0, 426, 424, 428, 429, 0, 430, 431, 432, 433,
	0, 0, 434, 435, 436, 0, 437, 438, 440, 439,
	0, 441, 442, 443, 0, 444, 445, 817, 446, 447,
	448, 450, 452, 449, 451, 453, 454, 455, 456, 457,
	818, 819, 458, 459, 0, 340, 0, 0, 0, 0,
	0, 460, 461, 462, 820, 0, 0, 0, 463, 0,
	465, 469, 466, 467, 468, 470, 0, 464, 471, 472,
	0, 0, 473, 474, 475, 821, 822, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 486, 823,
	0, 824, 487, 0, 488, 489, 490, 491, 492, 493,
	494, 1863, 826, 827, 595, 0, 495, 496, 497, 0,
	498, 499, 500, 501, 502, 503, 504, 0, 0, 0,
	505, 506, 507, 508, 0, 342, 341, 343, 0, 828,
	509, 596, 510, 829, 830, 0, 831, 0, 511, 512,
	515, 0, 832, 0, 514, 516, 517, 0, 518, 0,
	0, 0, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 528, 527, 0, 530, 833, 529, 0, 531, 532,
	0, 0, 533, 534, 535, 536, 537, 538, 541, 0,
	0, 539, 540, 542, 543, 0, 544, 545, 547, 550,
	546, 548, 549, 551, 552, 565, 566, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 568,
	0, 567, 0, 569, 570, 571, 572, 573, 581, 583,
	584, 579, 580, 582, 585, 586, 588, 589, 576, 577,
	578, 0, 587, 574, 0, 575, 344, 0, 590, 591,
	592, 593, 0, 834, 594, 835, 597, 598, 0, 0,
	599, 0, 600, 0, 1528, 602, 603, 604, 0, 0,
	605, 606, 836, 0, 607, 0, 837, 608, 609, 601,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	0, 620, 621, 838, 622, 623, 624, 839, 625, 626,
	627, 840, 628, 841, 629, 630, 0, 631, 632, 633,
	0, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 842, 644, 645, 647, 646, 648, 649, 0, 650,
	0, 651, 652, 653, 0, 0, 0, 0, 0, 654,
	655, 657, 0, 658, 659, 660, 661, 662, 656, 663,
	664, 665, 666, 667, 668, 669, 0, 671, 672, 670,
	673, 674, 0, 675, 676, 677, 678, 679, 843, 680,
	0, 681, 682, 690, 691, 692, 683, 684, 686, 693,
	685, 694, 695, 696, 697, 699, 698, 0, 701, 702,
	700, 703, 704, 705, 706, 0, 707, 844, 708, 687,
	688, 709, 710, 711, 0, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 845, 0, 721, 0, 722, 723,
	724, 725, 726, 727, 729, 689, 730, 731, 732, 737,
	738, 846, 733, 734, 735, 736, 847, 740, 741, 742,
	743, 0, 744, 745, 0, 739, 728, 0, 746, 747,
	748, 749, 750, 751, 752, 753, 754, 755, 0, 756,
	848, 849, 850, 851, 0, 768, 0, 757, 759, 760,
	761, 762, 852, 763, 853, 0, 764, 765, 766, 767,
	758, 769, 770, 0, 0, 771, 772, 773, 774, 776,
	778, 779, 780, 775, 777, 781, 0, 782, 0, 0,
	783, 784, 785, 854, 855, 856, 0, 787, 788, 786,
	789, 790, 793, 791, 792, 857, 796, 513, 797, 798,
	799, 794, 795, 337, 0, 0, 0, 800, 801, 858,
	802, 803, 804, 0, 0, 0, 0, 0, 0, 0,
	345, 346, 348, 347, 349, 350, 351, 352, 0, 353,
	354, 0, 0, 0, 0, 0, 805, 0, 0, 0,
	356, 0, 355, 0, 357, 358, 359, 0, 360, 361,
	362, 363, 364, 365, 366, 367, 806, 807, 0, 368,
	808, 369, 809, 0, 810, 370, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 0, 0, 0, 380, 811,
	812, 813, 0, 381, 382, 383, 384, 814, 0, 0,
	0, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	0, 394, 395, 396, 393, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 412, 0, 0, 0, 0, 0,
	0, 0, 413, 414, 415, 416, 417, 0, 418, 420,
	421, 815, 422, 816, 0, 425, 427, 419, 423, 0,
	426, 424, 428, 429, 0, 430, 431, 432, 433, 0,
	0, 434, 435, 436, 0, 437, 438, 440, 439, 0,
	441, 442, 443, 0, 444, 445, 817, 446, 447, 448,
	450, 452, 449, 451, 453, 454, 455, 456, 457, 818,
	819, 458, 459, 0, 340, 0, 0, 0, 0, 0,
	460, 461, 462, 820, 0, 0, 0, 463, 0, 465,
	469, 466, 467, 468, 470, 0, 464, 471, 472, 0,
	0, 473, 474, 475, 821, 822, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 0, 485, 486, 823, 0,
	824, 487, 0, 488, 489, 490, 491, 492, 493, 494,
	825, 826, 827, 595, 0, 495, 496, 497, 0, 498,
	499, 500, 501, 502, 503, 504, 0, 0, 0, 505,
	506, 507, 508, 0, 342, 341, 343, 0, 828, 509,
	596, 510, 829, 830, 0, 831, 0, 511, 512, 515,
	0, 832, 0, 514, 516, 517, 0, 518, 0, 0,
	0, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	528, 527, 0, 530, 833, 529, 0, 531, 532, 0,
	0, 533, 534, 535, 536, 537, 538, 541, 0, 0,
	539, 540, 542, 543, 0, 544, 545, 547, 550, 546,
	548, 549, 551, 552, 565, 566, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 568, 0,
	567, 0, 569, 570, 571, 572, 573, 581, 583, 584,
	579, 580, 582, 585, 586, 588, 589, 576, 577, 578,
	0, 587, 574, 0, 575, 344, 0, 590, 591, 592,
	593, 0, 834, 594, 835, 597, 598, 0, 0, 599,
	0, 600, 0, 1528, 602, 603, 604, 0, 0, 605,
	606, 836, 0, 607, 0, 837, 608, 609, 601, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 0,
	620, 621, 838, 622, 623, 624, 839, 625, 626, 627,
	840, 628, 841, 629, 630, 0, 631, 632, 633, 0,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	842, 644, 645, 647, 646, 648, 649, 0, 650, 0,
	651, 652, 653, 0, 0, 0, 0, 0, 654, 655,
	657, 0, 658, 659, 660, 661, 662, 656, 663, 664,
	665, 666, 667, 668, 669, 0, 671, 672, 670, 673,
	674, 0, 675, 676, 677, 678, 679, 843, 680, 0,
	681, 682, 690, 691, 692, 683, 684, 686, 693, 685,
	694, 695, 696, 697, 699, 698, 0, 701, 702, 700,
	703, 704, 705, 706, 0, 707, 844, 708, 687, 688,
	709, 710, 711, 0, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 845, 0, 721, 0, 722, 723, 724,
	725, 726, 727, 729, 689, 730, 731, 732, 737, 738,
	846, 733, 734, 735, 736, 847, 740, 741, 742, 743,
	0, 744, 745, 0, 739, 728, 0, 746, 747, 748,
	749, 750, 751, 752, 753, 754, 755, 0, 756, 848,
	849, 850, 851, 0, 768, 0, 757, 759, 760, 761,
	762, 852, 763, 853, 0, 764, 765, 766, 767, 758,
	769, 770, 0, 0, 771, 772, 773, 774, 776, 778,
	779, 780, 775, 777, 781, 0, 782, 0, 0, 783,
	784, 785, 854, 855, 856, 0, 787, 788, 786, 789,
	790, 793, 791, 792, 857, 796, 513, 797, 798, 799,
	794, 795, 337, 0, 0, 0, 800, 801, 858, 802,
	803, 804, 0, 0, 0, 0, 0, 0, 0, 345,
	346, 348, 347, 349, 350, 351, 352, 0, 353, 354,
	0, 0, 0, 0, 0, 805, 0, 0, 0, 356,
	0, 355, 0, 357, 358, 359, 0, 360, 361, 362,
	363, 364, 365, 366, 367, 806, 807, 0, 368, 808,
	369, 809, 0, 810, 370, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 0, 0, 0, 380, 811, 812,
	813, 0, 381, 382, 383, 384, 814, 0, 0, 0,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 0,
	394, 395, 396, 393, 397, 398, 0, 399, 0, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 412, 0, 0, 0, 0, 0, 0,
	0, 413, 414, 415, 416, 417, 0, 418, 420, 421,
	815, 422, 816, 0, 425, 427, 419, 423, 0, 426,
	424, 428, 429, 0, 430, 431, 432, 433, 0, 0,
	434, 435, 436, 0, 437, 438, 440, 439, 0, 441,
	442, 443, 0, 444, 445, 817, 446, 447, 448, 450,
	452, 449, 451, 453, 454, 455, 456, 457, 818, 819,
	458, 459, 0, 340, 0, 0, 0, 0, 0, 460,
	461, 462, 820, 0, 0, 0, 463, 0, 465, 469,
	466, 467, 468, 470, 0, 464, 471, 472, 0, 0,
	473, 474, 475, 821, 822, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 486, 823, 0, 824,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 825,
	826, 827, 595, 0, 495, 496, 497, 0, 498, 499,
	500, 501, 502, 503, 504, 0, 0, 0, 505, 506,
	507, 508, 0, 342, 341, 343, 0, 828, 509, 596,
	510, 829, 830, 0, 831, 0, 511, 512, 515, 0,
	832, 0, 514, 516, 517, 0, 518, 0, 0, 0,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 528,
	527, 0, 530, 833, 529, 0, 531, 532, 0, 0,
	533, 534, 535, 536, 537, 538, 541, 0, 0, 539,
	540, 542, 543, 0, 544, 545, 547, 550, 546, 548,
	549, 551, 552, 565, 566, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 568, 0, 567,
	0, 569, 570, 571, 572, 573, 581, 583, 584, 579,
	580, 582, 585, 586, 588, 589, 576, 577, 578, 4926,
	587, 574, 0, 575, 344, 0, 590, 591, 592, 593,
	0, 834, 594, 835, 597, 598, 0, 0, 599, 0,
	600, 0, 0, 602, 603, 604, 0, 0, 605, 606,
	836, 0, 607, 0, 837, 608, 609, 601, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 0, 620,
	621, 838, 622, 623, 624, 839, 625, 626, 627, 840,
	628, 841, 629, 630, 0, 631, 632, 633, 0, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 842,
	644, 645, 647, 646, 648, 649, 0, 650, 0, 651,
	652, 653, 0, 0, 0, 0, 0, 654, 655, 657,
	0, 658, 659, 660, 661, 662, 656, 663, 664, 665,
	666, 667, 668, 669, 0, 671, 672, 670, 673, 674,
	0, 675, 676, 677, 678, 679, 843, 680, 0, 681,
	682, 690, 691, 692, 683, 684, 686, 693, 685, 694,
	695, 696, 697, 699, 698, 0, 701, 702, 700, 703,
	704, 705, 706, 0, 707, 844, 708, 687, 688, 709,
	710, 711, 0, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 845, 0, 721, 0, 722, 723, 724, 725,
	726, 727, 729, 689, 730, 731, 732, 737, 738, 846,
	733, 734, 735, 736, 847, 740, 741, 742, 743, 0,
	744, 745, 0, 739, 728, 0, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 0, 756, 848, 849,
	850, 851, 0, 768, 0, 757, 759, 760, 761, 762,
	852, 763, 853, 0, 764, 765, 766, 767, 758, 769,
	770, 0, 0, 771, 772, 773, 774, 776, 778, 779,
	780, 775, 777, 781, 0, 782, 0, 0, 783, 784,
	785, 854, 855, 856, 0, 787, 788, 786, 789, 790,
	793, 791, 792, 857, 796, 513, 797, 798, 799, 794,
	795, 4436, 0, 337, 0, 800, 801, 858, 802, 803,
	804, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 346, 348, 347, 349, 350, 351, 352, 0, 353,
	354, 0, 0, 0, 0, 0, 805, 0, 0, 0,
	356, 0, 355, 0, 357, 358, 359, 0, 360, 361,
	362, 363, 364, 365, 366, 367, 806, 807, 0, 368,
	808, 369, 809, 0, 810, 370, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 0, 0, 0, 380, 811,
	812, 813, 0, 381, 382, 383, 384, 814, 0, 0,
	0, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	0, 394, 395, 396, 393, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 412, 0, 0, 0, 0, 0,
	0, 0, 413, 414, 415, 416, 417, 0, 418, 420,
	421, 815, 422, 816, 0, 425, 427, 419, 423, 0,
	426, 424, 428, 429, 0, 430, 431, 432, 433, 0,
	0, 434, 435, 436, 0, 437, 438, 440, 439, 0,
	441, 442, 443, 0, 444, 445, 817, 446, 447, 448,
	450, 452, 449, 451, 453, 454, 455, 456, 457, 818,
	819, 458, 459, 0, 340, 0, 0, 0, 0, 0,
	460, 461, 462, 820, 0, 0, 0, 463, 0, 465,
	469, 466, 467, 468, 470, 0, 464, 471, 472, 0,
	0, 473, 474, 475, 821, 822, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 0, 485, 486, 823, 0,
	824, 487, 0, 488, 489, 490, 491, 492, 493, 494,
	4435, 826, 827, 595, 0, 495, 496, 497, 0, 498,
	499, 500, 501, 502, 503, 504, 0, 0, 0, 505,
	506, 507, 508, 0, 342, 341, 343, 0, 828, 509,
	596, 510, 829, 830, 0, 831, 0, 511, 512, 515,
	0, 832, 0, 514, 516, 517, 0, 518, 0, 0,
	0, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	528, 527, 0, 530, 833, 529, 0, 531, 532, 0,
	0, 533, 534, 535, 536, 537, 538, 541, 0, 0,
	539, 540, 542, 543, 0, 544, 545, 547, 550, 546,
	548, 549, 551, 552, 565, 566, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 568, 0,
	567, 0, 569, 570, 571, 572, 573, 581, 583, 584,
	579, 580, 582, 585, 586, 588, 589, 576, 577, 578,
	0, 587, 574, 0, 575, 344, 0, 590, 591, 592,
	593, 0, 834, 594, 835, 597, 598, 0, 0, 599,
	0, 600, 0, 0, 602, 603, 604, 0, 0, 605,
	606, 836, 0, 607, 0, 837, 608, 609, 601, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 0,
	620, 621, 838, 622, 623, 624, 839, 625, 626, 627,
	840, 628, 841, 629, 630, 0, 631, 632, 633, 0,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	842, 644, 645, 647, 646, 648, 649, 0, 650, 0,
	651, 652, 653, 0, 0, 0, 0, 0, 654, 655,
	657, 0, 658, 659, 660, 661, 662, 656, 663, 664,
	665, 666, 667, 668, 669, 0, 671, 672, 670, 673,
	674, 0, 675, 676, 677, 678, 679, 843, 680, 0,
	681, 682, 690, 691, 692, 683, 684, 686, 693, 685,
	694, 695, 696, 697, 699, 698, 0, 701, 702, 700,
	703, 704, 705, 706, 0, 707, 844, 708, 687, 688,
	709, 710, 711, 0, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 845, 0, 721, 0, 722, 723, 724,
	725, 726, 727, 729, 689, 730, 731, 732, 737, 738,
	846, 733, 734, 735, 736, 847, 740, 741, 742, 743,
	0, 744, 745, 0, 739, 728, 0, 746, 747, 748,
	749, 750, 751, 752, 753, 754, 755, 0, 756, 848,
	849, 850, 851, 0, 768, 0, 757, 759, 760, 761,
	762, 852, 763, 853, 0, 764, 765, 766, 767, 758,
	769, 770, 0, 0, 771, 772, 773, 774, 776, 778,
	779, 780, 775, 777, 781, 0, 782, 0, 0, 783,
	784, 785, 854, 855, 856, 0, 787, 788, 786, 789,
	790, 793, 791, 792, 857, 796, 513, 797, 798, 799,
	794, 795, 337, 0, 0, 0, 800, 801, 858, 802,
	803, 804, 0, 0, 0, 0, 0, 0, 0, 345,
	346, 348, 347, 349, 350, 351, 352, 0, 353, 354,
	0, 0, 0, 0, 0, 805, 0, 0, 0, 356,
	0, 355, 0, 357, 358, 359, 0, 360, 361, 362,
	363, 364, 365, 366, 367, 806, 807, 0, 368, 808,
	369, 809, 0, 810, 370, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 0, 0, 0, 380, 811, 812,
	813, 4193, 381, 382, 383, 384, 814, 0, 0, 4187,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 0,
	394, 395, 396, 393, 397, 398, 4189, 399, 0, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 412, 0, 0, 0, 0, 0, 0,
	0, 413, 414, 415, 416, 417, 0, 418, 420, 421,
	815, 422, 816, 0, 425, 427, 419, 423, 0, 426,
	424, 428, 429, 0, 430, 431, 432, 433, 0, 0,
	434, 435, 436, 0, 437, 438, 440, 439, 0, 441,
	442, 443, 0, 4197, 445, 817, 446, 447, 448, 450,
	452, 449, 451, 453, 454, 455, 456, 457, 818, 819,
	458, 459, 0, 0, 0, 0, 0, 0, 0, 460,
	461, 462, 820, 0, 0, 0, 463, 0, 465, 469,
	466, 467, 468, 470, 4196, 464, 471, 472, 0, 0,
	473, 474, 475, 821, 822, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 486, 823, 0, 824,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 4186,
	826, 827, 595, 0, 495, 496, 497, 0, 498, 499,
	500, 501, 502, 503, 504, 0, 0, 0, 505, 506,
	507, 508, 0, 0, 0, 0, 0, 828, 509, 596,
	510, 829, 830, 0, 831, 0, 511, 512, 515, 0,
	832, 0, 514, 516, 517, 0, 518, 0, 0, 0,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 528,
	527, 0, 530, 833, 529, 0, 531, 532, 0, 0,
	533, 534, 535, 536, 537, 538, 541, 0, 0, 539,
	540, 542, 543, 0, 544, 545, 547, 550, 546, 548,
	549, 551, 552, 565, 566, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 568, 0, 567,
	0, 569, 570, 571, 572, 573, 581, 583, 584, 579,
	580, 582, 585, 586, 588, 589, 576, 577, 578, 0,
	587, 574, 0, 575, 0, 0, 590, 591, 592, 593,
	0, 834, 594, 835, 597, 598, 0, 0, 599, 0,
	600, 0, 0, 602, 603, 604, 0, 0, 605, 606,
	836, 0, 607, 0, 837, 608, 609, 601, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 0, 620,
	621, 838, 622, 623, 624, 839, 625, 626, 627, 840,
	628, 841, 629, 630, 4195, 631, 632, 633, 0, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 842,
	644, 645, 647, 646, 648, 649, 0, 650, 0, 651,
	652, 653, 0, 0, 0, 0, 0, 654, 655, 657,
	0, 658, 659, 660, 661, 662, 656, 663, 664, 665,
	666, 667, 668, 669, 0, 671, 672, 670, 673, 674,
	0, 675, 676, 677, 678, 679, 843, 680, 0, 681,
	682, 690, 691, 692, 683, 684, 686, 693, 685, 694,
	695, 696, 697, 699, 698, 0, 701, 702, 700, 703,
	704, 705, 706, 0, 707, 844, 708, 687, 688, 709,
	710, 711, 0, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 845, 0, 721, 0, 722, 723, 724, 725,
	726, 727, 729, 689, 730, 731, 732, 737, 738, 846,
	733, 734, 735, 736, 847, 740, 741, 742, 743, 0,
	744, 745, 0, 739, 728, 0, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 0, 756, 848, 849,
	850, 851, 0, 768, 0, 757, 759, 760, 761, 762,
	852, 763, 853, 0, 764, 765, 766, 767, 758, 769,
	770, 0, 4194, 771, 772, 773, 774, 776, 778, 779,
	780, 775, 777, 781, 0, 782, 0, 0, 783, 784,
	785, 854, 855, 856, 0, 787, 788, 786, 789, 790,
	793, 791, 792, 857, 796, 513, 797, 798, 799, 794,
	795, 2996, 0, 337, 0, 800, 801, 858, 802, 803,
	804, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 346, 348, 347, 349, 350, 351, 352, 0, 353,
	354, 0, 0, 0, 0, 0, 805, 0, 0, 0,
	356, 0, 355, 0, 357, 358, 359, 0, 360, 361,
	362, 363, 364, 365, 366, 367, 806, 807, 0, 368,
	808, 369, 809, 0, 810, 370, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 0, 0, 0, 380, 811,
	812, 813, 0, 381, 382, 383, 384, 814, 0, 0,
	0, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	0, 394, 395, 396, 393, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 412, 0, 0, 0, 0, 0,
	0, 0, 413, 414, 415, 416, 417, 0, 418, 420,
	421, 815, 422, 816, 0, 425, 427, 419, 423, 0,
	426, 424, 428, 429, 0, 430, 431, 432, 433, 0,
	0, 434, 435, 436, 0, 437, 438, 440, 439, 0,
	441, 442, 443, 0, 444, 445, 817, 446, 447, 448,
	450, 452, 449, 451, 453, 454, 455, 456, 457, 818,
	819, 458, 459, 0, 340, 0, 0, 0, 0, 0,
	460, 461, 462, 820, 0, 0, 0, 463, 0, 465,
	469, 466, 467, 468, 470, 0, 464, 471, 472, 0,
	0, 473, 474, 475, 821, 822, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 0, 485, 486, 823, 0,
	824, 487, 0, 488, 489, 490, 491, 492, 493, 494,
	825, 826, 827, 595, 0, 495, 496, 497, 0, 498,
	499, 500, 501, 502, 503, 504, 0, 0, 0, 505,
	506, 507, 508, 0, 342, 341, 343, 0, 828, 509,
	596, 510, 829, 830, 0, 831, 0, 511, 512, 515,
	0, 832, 0, 514, 516, 517, 0, 518, 0, 0,
	0, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	528, 527, 0, 530, 833, 529, 0, 531, 532, 0,
	0, 533, 534, 535, 536, 537, 538, 541, 0, 0,
	539, 540, 542, 543, 0, 544, 545, 547, 550, 546,
	548, 549, 551, 552, 565, 566, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 568, 0,
	567, 0, 569, 570, 571, 572, 573, 581, 583, 584,
	579, 580, 582, 585, 586, 588, 589, 576, 577, 578,
	0, 587, 574, 0, 575, 344, 0, 590, 591, 592,
	593, 0, 834, 594, 835, 597, 598, 0, 0, 599,
	0, 600, 0, 0, 602, 603, 604, 0, 0, 605,
	606, 836, 0, 607, 0, 837, 608, 609, 601, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 0,
	620, 621, 838, 622, 623, 624, 839, 625, 626, 627,
	840, 628, 841, 629, 630, 0, 631, 632, 633, 0,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	842, 644, 645, 647, 646, 648, 649, 0, 650, 0,
	651, 652, 653, 0, 0, 0, 0, 0, 654, 655,
	657, 0, 658, 659, 660, 661, 662, 656, 663, 664,
	665, 666, 667, 668, 669, 0, 671, 672, 670, 673,
	674, 0, 675, 676, 677, 678, 679, 843, 680, 0,
	681, 682, 690, 691, 692, 683, 684, 686, 693, 685,
	694, 695, 696, 697, 699, 698, 0, 701, 702, 700,
	703, 704, 705, 706, 0, 707, 844, 708, 687, 688,
	709, 710, 711, 0, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 845, 0, 721, 0, 722, 723, 724,
	725, 726, 727, 729, 689, 730, 731, 732, 737, 738,
	846, 733, 734, 735, 736, 847, 740, 741, 742, 743,
	0, 744, 745, 0, 739, 728, 0, 746, 747, 748,
	749, 750, 751, 752, 753, 754, 755, 0, 756, 848,
	849, 850, 851, 0, 768, 0, 757, 759, 760, 761,
	762, 852, 763, 853, 0, 764, 765, 766, 767, 758,
	769, 770, 0, 0, 771, 772, 773, 774, 776, 778,
	779, 780, 775, 777, 781, 0, 782, 0, 0, 783,
	784, 785, 854, 855, 856, 0, 787, 788, 786, 789,
	790, 793, 791, 792, 857, 796, 513, 797, 798, 799,
	794, 795, 2941, 0, 337, 0, 800, 801, 858, 802,
	803, 804, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 346, 348, 347, 349, 350, 351, 352, 0,
	353, 354, 0, 0, 0, 0, 0, 805, 0, 0,
	0, 356, 0, 355, 0, 357, 358, 359, 0, 360,
	361, 362, 363, 364, 365, 366, 367, 806, 807, 0,
	368, 808, 369, 809, 0, 810, 370, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 0, 0, 0, 380,
	811, 812, 813, 0, 381, 382, 383, 384, 814, 0,
	0, 0, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 0, 394, 395, 396, 393, 397, 398, 0, 399,
	0, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 412, 0, 0, 0, 0,
	0, 0, 0, 413, 414, 415, 416, 417, 0, 418,
	420, 421, 815, 422, 816, 0, 425, 427, 419, 423,
	0, 426, 424, 428, 429, 0, 430, 431, 432, 433,
	0, 0, 434, 435, 436, 0, 437, 438, 440, 439,
	0, 441, 442, 443, 0, 444, 445, 817, 446, 447,
	448, 450, 452, 449, 451, 453, 454, 455, 456, 457,
	818, 819, 458, 459, 0, 340, 0, 0, 0, 0,
	0, 460, 461, 462, 820, 0, 0, 0, 463, 0,
	465, 469, 466, 467, 468, 470, 0, 464, 471, 472,
	0, 0, 473, 474, 475, 821, 822, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 486, 823,
	0, 824, 487, 0, 488, 489, 490, 491, 492, 493,
	494, 2940, 826, 827, 595, 0, 495, 496, 497, 0,
	498, 499, 500, 501, 502, 503, 504, 0, 0, 0,
	505, 506, 507, 508, 0, 342, 341, 343, 0, 828,
	509, 596, 510, 829, 830, 0, 831, 0, 511, 512,
	515, 0, 832, 0, 514, 516, 517, 0, 518, 0,
	0, 0, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 528, 527, 0, 530, 833, 529, 0, 531, 532,
	0, 0, 533, 534, 535, 536, 537, 538, 541, 0,
	0, 539, 540, 542, 543, 0, 544, 545, 547, 550,
	546, 548, 549, 551, 552, 565, 566, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 568,
	0, 567, 0, 569, 570, 571, 572, 573, 581, 583,
	584, 579, 580, 582, 585, 586, 588, 589, 576, 577,
	578, 0, 587, 574, 0, 575, 344, 0, 590, 591,
	592, 593, 0, 834, 594, 835, 597, 598, 0, 0,
	599, 0, 600, 0, 0, 602, 603, 604, 0, 0,
	605, 606, 836, 0, 607, 0, 837, 608, 609, 601,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	0, 620, 621, 838, 622, 623, 624, 839, 625, 626,
	627, 840, 628, 841, 629, 630, 0, 631, 632, 633,
	0, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 842, 644, 645, 647, 646, 648, 649, 0, 650,
	0, 651, 652, 653, 0, 0, 0, 0, 0, 654,
	655, 657, 0, 658, 659, 660, 661, 662, 656, 663,
	664, 665, 666, 667, 668, 669, 0, 671, 672, 670,
	673, 674, 0, 675, 676, 677, 678, 679, 843, 680,
	0, 681, 682, 690, 691, 692, 683, 684, 686, 693,
	685, 694, 695, 696, 697, 699, 698, 0, 701, 702,
	700, 703, 704, 705, 706, 0, 707, 844, 708, 687,
	688, 709, 710, 711, 0, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 845, 0, 721, 0, 722, 723,
	724, 725, 726, 727, 729, 689, 730, 731, 732, 737,
	738, 846, 733, 734, 735, 736, 847, 740, 741, 742,
	743, 0, 744, 745, 0, 739, 728, 0, 746, 747,
	748, 749, 750, 751, 752, 753, 754, 755, 0, 756,
	848, 849, 850, 851, 0, 768, 0, 757, 759, 760,
	761, 762, 852, 763, 853, 0, 764, 765, 766, 767,
	758, 769, 770, 0, 0, 771, 772, 773, 774, 776,
	778, 779, 780, 775, 777, 781, 0, 782, 0, 0,
	783, 784, 785, 854, 855, 856, 0, 787, 788, 786,
	789, 790, 793, 791, 792, 857, 796, 513, 797, 798,
	799, 794, 795, 2925, 0, 337, 0, 800, 801, 858,
	802, 803, 804, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 346, 348, 347, 349, 350, 351, 352,
	0, 353, 354, 0, 0, 0, 0, 0, 805, 0,
	0, 0, 356, 0, 355, 0, 357, 358, 359, 0,
	360, 361, 362, 363, 364, 365, 366, 367, 806, 807,
	0, 368, 808, 369, 809, 0, 810, 370, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 0, 0, 0,
	380, 811, 812, 813, 0, 381, 382, 383, 384, 814,
	0, 0, 0, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 0, 394, 395, 396, 393, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 412, 0, 0, 0,
	0, 0, 0, 0, 413, 414, 415, 416, 417, 0,
	418, 420, 421, 815, 422, 816, 0, 425, 427, 419,
	423, 0, 426, 424, 428, 429, 0, 430, 431, 432,
	433, 0, 0, 434, 435, 436, 0, 437, 438, 440,
	439, 0, 441, 442, 443, 0, 444, 445, 817, 446,
	447, 448, 450, 452, 449, 451, 453, 454, 455, 456,
	457, 818, 819, 458, 459, 0, 340, 0, 0, 0,
	0, 0, 460, 461, 462, 820, 0, 0, 0, 463,
	0, 465, 469, 466, 467, 468, 470, 0, 464, 471,
	472, 0, 0, 473, 474, 475, 821, 822, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 486,
	823, 0, 824, 487, 0, 488, 489, 490, 491, 492,
	493, 494, 2927, 826, 827, 595, 0, 495, 496, 497,
	0, 498, 499, 500, 501, 502, 503, 504, 0, 0,
	0, 505, 506, 507, 508, 0, 342, 341, 343, 0,
	828, 509, 596, 510, 829, 830, 0, 831, 0, 511,
	512, 515, 0, 832, 0, 514, 516, 517, 0, 518,
	0, 0, 0, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 528, 527, 0, 530, 833, 529, 0, 531,
	532, 0, 0, 533, 534, 535, 536, 537, 538, 541,
	0, 0, 539, 540, 542, 543, 0, 544, 545, 547,
	550, 546, 548, 549, 551, 552, 565, 566, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	568, 0, 567, 0, 569, 570, 571, 572, 573, 581,
	583, 584, 579, 580, 582, 585, 586, 588, 589, 576,
	577, 578, 0, 587, 574, 0, 575, 344, 0, 590,
	591, 592, 593, 0, 834, 594, 835, 597, 598, 0,
	0, 599, 0, 600, 0, 0, 602, 603, 604, 0,
	0, 605, 606, 836, 0, 607, 0, 837, 608, 609,
	601, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 0, 620, 621, 838, 622, 623, 624, 839, 625,
	626, 627, 840, 628, 841, 629, 630, 0, 631, 632,
	633, 0, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 842, 644, 645, 647, 646, 648, 649, 0,
	650, 0, 651, 652, 653, 0, 0, 0, 0, 0,
	654, 655, 657, 0, 658, 659, 660, 661, 662, 656,
	663, 664, 665, 666, 667, 668, 669, 0, 671, 672,
	670, 673, 674, 0, 675, 676, 677, 678, 679, 843,
	680, 0, 681, 682, 690, 691, 692, 683, 684, 686,
	693, 685, 694, 695, 696, 697, 699, 698, 0, 701,
	702, 700, 703, 704, 705, 706, 0, 707, 844, 708,
	687, 688, 709, 710, 711, 0, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 845, 0, 721, 0, 722,
	723, 724, 725, 726, 727, 729, 689, 730, 731, 732,
	737, 738, 846, 733, 734, 735, 736, 847, 740, 741,
	742, 743, 0, 744, 745, 0, 739, 728, 0, 746,
	747, 748, 749, 750, 751, 752, 753, 754, 755, 0,
	756, 848, 849, 850, 851, 0, 768, 0, 757, 759,
	760, 761, 762, 852, 763, 853, 0, 764, 765, 766,
	767, 758, 769, 770, 0, 0, 771, 772, 773, 774,
	776, 778, 779, 780, 775, 777, 781, 0, 782, 0,
	0, 783, 784, 785, 854, 855, 856, 0, 787, 788,
	786, 789, 790, 793, 791, 792, 857, 796, 513, 797,
	798, 799, 794, 795, 2917, 0, 337, 0, 800, 801,
	858, 802, 803, 804, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 346, 348, 347, 349, 350, 351,
	352, 0, 353, 354, 0, 0, 0, 0, 0, 805,
	0, 0, 0, 356, 0, 355, 0, 357, 358, 359,
	0, 360, 361, 362, 363, 364, 365, 366, 367, 806,
	807, 0, 368, 808, 369, 809, 0, 810, 370, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 0, 0,
	0, 380, 811, 812, 813, 0, 381, 382, 383, 384,
	814, 0, 0, 0, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 0, 394, 395, 396, 393, 397, 398,
	0, 399, 0, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 412, 0, 0,
	0, 0, 0, 0, 0, 413, 414, 415, 416, 417,
	0, 418, 420, 421, 815, 422, 816, 0, 425, 427,
	419, 423, 0, 426, 424, 428, 429, 0, 430, 431,
	432, 433, 0, 0, 434, 435, 436, 0, 437, 438,
	440, 439, 0, 441, 442, 443, 0, 444, 445, 817,
	446, 447, 448, 450, 452, 449, 451, 453, 454, 455,
	456, 457, 818, 819, 458, 459, 0, 340, 0, 0,
	0, 0, 0, 460, 461, 462, 820, 0, 0, 0,
	463, 0, 465, 469, 466, 467, 468, 470, 0, 464,
	471, 472, 0, 0, 473, 474, 475, 821, 822, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	486, 823, 0, 824, 487, 0, 488, 489, 490, 491,
	492, 493, 494, 825, 826, 827, 595, 0, 495, 496,
	497, 0, 498, 499, 500, 501, 502, 503, 504, 0,
	0, 0, 505, 506, 507, 508, 0, 342, 341, 343,
	0, 828, 509, 596, 510, 829, 830, 0, 831, 0,
	511, 512, 515, 0, 832, 0, 514, 516, 517, 0,
	518, 0, 0, 0, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 528, 527, 0, 530, 833, 529, 0,
	531, 532, 0, 0, 533, 534, 535, 536, 537, 538,
	541, 0, 0, 539, 540, 542, 543, 0, 544, 545,
	547, 550, 546, 548, 549, 551, 552, 565, 566, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 568, 0, 567, 0, 569, 570, 571, 572, 573,
	581, 583, 584, 579, 580, 582, 585, 586, 588, 589,
	576, 577, 578, 0, 587, 574, 0, 575, 344, 0,
	590, 591, 592, 593, 0, 834, 594, 835, 597, 598,
	0, 0, 599, 0, 600, 0, 0, 602, 603, 604,
	0, 0, 605, 606, 836, 0, 607, 0, 837, 608,
	609, 601, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 0, 620, 621, 838, 622, 623, 624, 839,
	625, 626, 627, 840, 628, 841, 629, 630, 0, 631,
	632, 633, 0, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 842, 644, 645, 647, 646, 648, 649,
	0, 650, 0, 651, 652, 653, 0, 0, 0, 0,
	0, 654, 655, 657, 0, 658, 659, 660, 661, 662,
	656, 663, 664, 665, 666, 667, 668, 669, 0, 671,
	672, 670, 673, 674, 0, 675, 676, 677, 678, 679,
	843, 680, 0, 681, 682, 690, 691, 692, 683, 684,
	686, 693, 685, 694, 695, 696, 697, 699, 698, 0,
	701, 702, 700, 703, 704, 705, 706, 0, 707, 844,
	708, 687, 688, 709, 710, 711, 0, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 845, 0, 721, 0,
	722, 723, 724, 725, 726, 727, 729, 689, 730, 731,
	732, 737, 738, 846, 733, 734, 735, 736, 847, 740,
	741, 742, 743, 0, 744, 745, 0, 739, 728, 0,
	746, 747, 748, 749, 750, 751, 752, 753, 754, 755,
	0, 756, 848, 849, 850, 851, 0, 768, 0, 757,
	759, 760, 761, 762, 852, 763, 853, 0, 764, 765,
	766, 767, 758, 769, 770, 0, 0, 771, 772, 773,
	774, 776, 778, 779, 780, 775, 777, 781, 0, 782,
	0, 0, 783, 784, 785, 854, 855, 856, 0, 787,
	788, 786, 789, 790, 793, 791, 792, 857, 796, 513,
	797, 798, 799, 794, 795, 2914, 0, 337, 0, 800,
	801, 858, 802, 803, 804, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 346, 348, 347, 349, 350,
	351, 352, 0, 353, 354, 0, 0, 0, 0, 0,
	805, 0, 0, 0, 356, 0, 355, 0, 357, 358,
	359, 0, 360, 361, 362, 363, 364, 365, 366, 367,
	806, 807, 0, 368, 808, 369, 809, 0, 810, 370,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 0,
	0, 0, 380, 811, 812, 813, 0, 381, 382, 383,
	384, 814, 0, 0, 0, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 0, 394, 395, 396, 393, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 412, 0,
	0, 0, 0, 0, 0, 0, 413, 414, 415, 416,
	417, 0, 418, 420, 421, 815, 422, 816, 0, 425,
	427, 419, 423, 0, 426, 424, 428, 429, 0, 430,
	431, 432, 433, 0, 0, 434, 435, 436, 0, 437,
	438, 440, 439, 0, 441, 442, 443, 0, 444, 445,
	817, 446, 447, 448, 450, 452, 449, 451, 453, 454,
	455, 456, 457, 818, 819, 458, 459, 0, 340, 0,
	0, 0, 0, 0, 460, 461, 462, 820, 0, 0,
	0, 463, 0, 465, 469, 466, 467, 468, 470, 0,
	464, 471, 472, 0, 0, 473, 474, 475, 821, 822,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 0,
	485, 486, 823, 0, 824, 487, 0, 488, 489, 490,
	491, 492, 493, 494, 825, 826, 827, 595, 0, 495,
	496, 497, 0, 498, 499, 500, 501, 502, 503, 504,
	0, 0, 0, 505, 506, 507, 508, 0, 342, 341,
	343, 0, 828, 509, 596, 510, 829, 830, 0, 831,
	0, 511, 512, 515, 0, 832, 0, 514, 516, 517,
	0, 518, 0, 0, 0, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 528, 527, 0, 530, 833, 529,
	0, 531, 532, 0, 0, 533, 534, 535, 536, 537,
	538, 541, 0, 0, 539, 540, 542, 543, 0, 544,
	545, 547, 550, 546, 548, 549, 551, 552, 565, 566,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 568, 0, 567, 0, 569, 570, 571, 572,
	573, 581, 583, 584, 579, 580, 582, 585, 586, 588,
	589, 576, 577, 578, 0, 587, 574, 0, 575, 344,
	0, 590, 591, 592, 593, 0, 834, 594, 835, 597,
	598, 0, 0, 599, 0, 600, 0, 0, 602, 603,
	604, 0, 0, 605, 606, 836, 0, 607, 0, 837,
	608, 609, 601, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 620, 621, 838, 622, 623, 624,
	839, 625, 626, 627, 840, 628, 841, 629, 630, 0,
	631, 632, 633, 0, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 842, 644, 645, 647, 646, 648,
	649, 0, 650, 0, 651, 652, 653, 0, 0, 0,
	0, 0, 654, 655, 657, 0, 658, 659, 660, 661,
	662, 656, 663, 664, 665, 666, 667, 668, 669, 0,
	671, 672, 670, 673, 674, 0, 675, 676, 677, 678,
	679, 843, 680, 0, 681, 682, 690, 691, 692, 683,
	684, 686, 693, 685, 694, 695, 696, 697, 699, 698,
	0, 701, 702, 700, 703, 704, 705, 706, 0, 707,
	844, 708, 687, 688, 709, 710, 711, 0, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 845, 0, 721,
	0, 722, 723, 724, 725, 726, 727, 729, 689, 730,
	731, 732, 737, 738, 846, 733, 734, 735, 736, 847,
	740, 741, 742, 743, 0, 744, 745, 0, 739, 728,
	0, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	755, 0, 756, 848, 849, 850, 851, 0, 768, 0,
	757, 759, 760, 761, 762, 852, 763, 853, 0, 764,
	765, 766, 767, 758, 769, 770, 0, 0, 771, 772,
	773, 774, 776, 778, 779, 780, 775, 777, 781, 0,
	782, 0, 0, 783, 784, 785, 854, 855, 856, 0,
	787, 788, 786, 789, 790, 793, 791, 792, 857, 796,
	513, 797, 798, 799, 794, 795, 337, 0, 0, 0,
	800, 801, 858, 802, 803, 804, 0, 0, 0, 0,
	0, 0, 0, 345, 346, 348, 347, 349, 350, 351,
	352, 0, 353, 354, 0, 0, 0, 0, 0, 805,
	0, 0, 0, 356, 0, 355, 0, 357, 358, 359,
	0, 360, 361, 362, 363, 364, 365, 366, 367, 806,
	807, 0, 368, 808, 369, 809, 0, 810, 370, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 0, 0,
	0, 380, 811, 812, 813, 0, 381, 382, 383, 384,
	814, 0, 0, 0, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 0, 394, 395, 396, 393, 397, 398,
	0, 399, 0, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 412, 0, 0,
	0, 0, 0, 0, 0, 413, 414, 415, 416, 417,
	0, 418, 420, 421, 815, 422, 816, 0, 425, 427,
	419, 423, 0, 426, 424, 428, 429, 0, 430, 431,
	432, 433, 0, 0, 434, 435, 436, 0, 437, 438,
	440, 439, 0, 441, 442, 443, 0, 444, 445, 817,
	446, 447, 448, 450, 452, 449, 451, 453, 454, 455,
	456, 457, 818, 819, 458, 459, 0, 340, 0, 0,
	0, 0, 0, 460, 461, 462, 820, 0, 0, 0,
	463, 0, 465, 469, 466, 467, 468, 470, 0, 464,
	471, 472, 0, 0, 473, 474, 475, 821, 822, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	486, 823, 0, 824, 487, 0, 488, 489, 490, 491,
	492, 493, 494, 2884, 826, 827, 595, 0, 495, 496,
	497, 0, 498, 499, 500, 501, 502, 503, 504, 0,
	0, 0, 505, 506, 507, 508, 0, 342, 341, 343,
	0, 828, 509, 596, 510, 829, 830, 0, 831, 0,
	511, 512, 515, 0, 832, 0, 514, 516, 517, 0,
	518, 0, 0, 0, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 528, 527, 0, 530, 833, 529, 0,
	531, 532, 0, 0, 533, 534, 535, 536, 537, 538,
	541, 0, 0, 539, 540, 542, 543, 0, 544, 545,
	547, 550, 546, 548, 549, 551, 552, 565, 566, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 568, 0, 567, 0, 569, 570, 571, 572, 573,
	581, 583, 584, 579, 580, 582, 585, 586, 588, 589,
	576, 577, 578, 0, 587, 574, 0, 575, 344, 0,
	590, 591, 592, 593, 0, 834, 594, 835, 597, 598,
	0, 0, 599, 0, 600, 0, 1528, 602, 603, 604,
	0, 0, 605, 606, 836, 0, 607, 0, 837, 608,
	609, 601, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 0, 620, 621, 838, 622, 623, 624, 839,
	625, 626, 627, 840, 628, 841, 629, 630, 0, 631,
	632, 633, 0, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 842, 644, 645, 647, 646, 648, 649,
	0, 650, 0, 651, 652, 653, 0, 0, 0, 0,
	0, 654, 655, 657, 0, 658, 659, 660, 661, 662,
	656, 663, 664, 665, 666, 667, 668, 669, 0, 671,
	672, 670, 673, 674, 0, 675, 676, 677, 678, 679,
	843, 680, 0, 681, 682, 690, 691, 692, 683, 684,
	686, 693, 685, 694, 695, 696, 697, 699, 698, 0,
	701, 702, 700, 703, 704, 705, 706, 0, 707, 844,
	708, 687, 688, 709, 710, 711, 0, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 845, 0, 721, 0,
	722, 723, 724, 725, 726, 727, 729, 689, 730, 731,
	732, 737, 738, 846, 733, 734, 735, 736, 847, 740,
	741, 742, 743, 0, 744, 745, 0, 739, 728, 0,
	746, 747, 748, 749, 750, 751, 752, 753, 754, 755,
	0, 756, 848, 849, 850, 851, 0, 768, 0, 757,
	759, 760, 761, 762, 852, 763, 853, 0, 764, 765,
	766, 767, 758, 769, 770, 0, 0, 771, 772, 773,
	774, 776, 778, 779, 780, 775, 777, 781, 0, 782,
	0, 0, 783, 784, 785, 854, 855, 856, 0, 787,
	788, 786, 789, 790, 793, 791, 792, 857, 796, 513,
	797, 798, 799, 794, 795, 2085, 0, 337, 0, 800,
	801, 858, 802, 803, 804, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 346, 348, 347, 349, 350,
	351, 352, 0, 353, 354, 0, 0, 0, 0, 0,
	805, 0, 0, 0, 356, 0, 355, 0, 357, 358,
	359, 0, 360, 361, 362, 363, 364, 365, 366, 367,
	806, 807, 0, 368, 808, 369, 809, 0, 810, 370,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 0,
	0, 0, 380, 811, 812, 813, 0, 381, 382, 383,
	384, 814, 0, 0, 0, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 0, 394, 395, 396, 393, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 412, 0,
	0, 0, 0, 0, 0, 0, 413, 414, 415, 416,
	417, 0, 418, 420, 421, 815, 422, 816, 0, 425,
	427, 419, 423, 0, 426, 424, 428, 429, 0, 430,
	431, 432, 433, 0, 0, 434, 435, 436, 0, 437,
	438, 440, 439, 0, 441, 442, 443, 0, 444, 445,
	817, 446, 447, 448, 450, 452, 449, 451, 453, 454,
	455, 456, 457, 818, 819, 458, 459, 0, 340, 0,
	0, 0, 0, 0, 460, 461, 462, 820, 0, 0,
	0, 463, 0, 465, 469, 466, 467, 468, 470, 0,
	464, 471, 472, 0, 0, 473, 474, 475, 821, 822,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 0,
	485, 486, 823, 0, 824, 487, 0, 488, 489, 490,
	491, 492, 493, 494, 2084, 826, 827, 595, 0, 495,
	496, 497, 0, 498, 499, 500, 501, 502, 503, 504,
	0, 0, 0, 505, 506, 507, 508, 0, 342, 341,
	343, 0, 828, 509, 596, 510, 829, 830, 0, 831,
	0, 511, 512, 515, 0, 832, 0, 514, 516, 517,
	0, 518, 0, 0, 0, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 528, 527, 0, 530, 833, 529,
	0, 531, 532, 0, 0, 533, 534, 535, 536, 537,
	538, 541, 0, 0, 539, 540, 542, 543, 0, 544,
	545, 547, 550, 546, 548, 549, 551, 552, 565, 566,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 568, 0, 567, 0, 569, 570, 571, 572,
	573, 581, 583, 584, 579, 580, 582, 585, 586, 588,
	589, 576, 577, 578, 0, 587, 574, 0, 575, 344,
	0, 590, 591, 592, 593, 0, 834, 594, 835, 597,
	598, 0, 0, 599, 0, 600, 0, 0, 602, 603,
	604, 0, 0, 605, 606, 836, 0, 607, 0, 837,
	608, 609, 601, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 620, 621, 838, 622, 623, 624,
	839, 625, 626, 627, 840, 628, 841, 629, 630, 0,
	631, 632, 633, 0, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 842, 644, 645, 647, 646, 648,
	649, 0, 650, 0, 651, 652, 653, 0, 0, 0,
	0, 0, 654, 655, 657, 0, 658, 659, 660, 661,
	662, 656, 663, 664, 665, 666, 667, 668, 669, 0,
	671, 672, 670, 673, 674, 0, 675, 676, 677, 678,
	679, 843, 680, 0, 681, 682, 690, 691, 692, 683,
	684, 686, 693, 685, 694, 695, 696, 697, 699, 698,
	0, 701, 702, 700, 703, 704, 705, 706, 0, 707,
	844, 708, 687, 688, 709, 710, 711, 0, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 845, 0, 721,
	0, 722, 723, 724, 725, 726, 727, 729, 689, 730,
	731, 732, 737, 738, 846, 733, 734, 735, 736, 847,
	740, 741, 742, 743, 0, 744, 745, 0, 739, 728,
	0, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	755, 0, 756, 848, 849, 850, 851, 0, 768, 0,
	757, 759, 760, 761, 762, 852, 763, 853, 0, 764,
	765, 766, 767, 758, 769, 770, 0, 0, 771, 772,
	773, 774, 776, 778, 779, 780, 775, 777, 781, 0,
	782, 0, 0, 783, 784, 785, 854, 855, 856, 0,
	787, 788, 786, 789, 790, 793, 791, 792, 857, 796,
	513, 797, 798, 799, 794, 795, 1980, 0, 337, 0,
	800, 801, 858, 802, 803, 804, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 346, 348, 347, 349,
	350, 351, 352, 0, 353, 354, 0, 0, 0, 0,
	0, 805, 0, 0, 0, 356, 0, 355, 0, 357,
	358, 359, 0, 360, 361, 362, 363, 364, 365, 366,
	367, 806, 807, 0, 368, 808, 369, 809, 0, 810,
	370, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	0, 0, 0, 380, 811, 812, 813, 0, 381, 382,
	383, 384, 814, 0, 0, 0, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 0, 394, 395, 396, 393,
	397, 398, 0, 399, 0, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 412,
	0, 0, 0, 0, 0, 0, 0, 413, 414, 415,
	416, 417, 0, 418, 420, 421, 815, 422, 816, 0,
	425, 427, 419, 423, 0, 426, 424, 428, 429, 0,
	430, 431, 432, 433, 0, 0, 434, 435, 436, 0,
	437, 438, 440, 439, 0, 441, 442, 443, 0, 444,
	445, 817, 446, 447, 448, 450, 452, 449, 451, 453,
	454, 455, 456, 457, 818, 819, 458, 459, 0, 340,
	0, 0, 0, 0, 0, 460, 461, 462, 820, 0,
	0, 0, 463, 0, 465, 469, 466, 467, 468, 470,
	0, 464, 471, 472, 0, 0, 473, 474, 475, 821,
	822, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 486, 823, 0, 824, 487, 0, 488, 489,
	490, 491, 492, 493, 494, 825, 826, 827, 595, 0,
	495, 496, 497, 0, 498, 499, 500, 501, 502, 503,
	504, 0, 0, 0, 505, 506, 507, 508, 0, 342,
	341, 343, 0, 828, 509, 596, 510, 829, 830, 0,
	831, 0, 511, 512, 515, 0, 832, 0, 514, 516,
	517, 0, 518, 0, 0, 0, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 528, 527, 0, 530, 833,
	529, 0, 531, 532, 0, 0, 533, 534, 535, 536,
	537, 538, 541, 0, 0, 539, 540, 542, 543, 0,
	544, 545, 547, 550, 546, 548, 549, 551, 552, 565,
	566, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 568, 0, 567, 0, 569, 570, 571,
	572, 573, 581, 583, 584, 579, 580, 582, 585, 586,
	588, 589, 576, 577, 578, 0, 587, 574, 0, 575,
	344, 0, 590, 591, 592, 593, 0, 834, 594, 835,
	597, 598, 0, 0, 599, 0, 600, 0, 0, 602,
	603, 604, 0, 0, 605, 606, 836, 0, 607, 0,
	837, 608, 609, 601, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 0, 620, 621, 838, 622, 623,
	624, 839, 625, 626, 627, 840, 628, 841, 629, 630,
	0, 631, 632, 633, 0, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 842, 644, 645, 647, 646,
	648, 649, 0, 650, 0, 651, 652, 653, 0, 0,
	0, 0, 0, 654, 655, 657, 0, 658, 659, 660,
	661, 662, 656, 663, 664, 665, 666, 667, 668, 669,
	0, 671, 672, 670, 673, 674, 0, 675, 676, 677,
	678, 679, 843, 680, 0, 681, 682, 690, 691, 692,
	683, 684, 686, 693, 685, 694, 695, 696, 697, 699,
	698, 0, 701, 702, 700, 703, 704, 705, 706, 0,
	707, 844, 708, 687, 688, 709, 710, 711, 0, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 845, 0,
	721, 0, 722, 723, 724, 725, 726, 727, 729, 689,
	730, 731, 732, 737, 738, 846, 733, 734, 735, 736,
	847, 740, 741, 742, 743, 0, 744, 745, 0, 739,
	728, 0, 746, 747, 748, 749, 750, 751, 752, 753,
	754, 755, 0, 756, 848, 849, 850, 851, 0, 768,
	0, 757, 759, 760, 761, 762, 852, 763, 853, 0,
	764, 765, 766, 767, 758, 769, 770, 0, 0, 771,
	772, 773, 774, 776, 778, 779, 780, 775, 777, 781,
	0, 782, 0, 0, 783, 784, 785, 854, 855, 856,
	0, 787, 788, 786, 789, 790, 793, 791, 792, 857,
	796, 513, 797, 798, 799, 794, 795, 1973, 0, 337,
	0, 800, 801, 858, 802, 803, 804, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 346, 348, 347,
	349, 350, 351, 352, 0, 353, 354, 0, 0, 0,
	0, 0, 805, 0, 0, 0, 356, 0, 355, 0,
	357, 358, 359, 0, 360, 361, 362, 363, 364, 365,
	366, 367, 806, 807, 0, 368, 808, 369, 809, 0,
	810, 370, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 0, 0, 0, 380, 811, 812, 813, 0, 381,
	382, 383, 384, 814, 0, 0, 0, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 0, 394, 395, 396,
	393, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	412, 0, 0, 0, 0, 0, 0, 0, 413, 414,
	415, 416, 417, 0, 418, 420, 421, 815, 422, 816,
	0, 425, 427, 419, 423, 0, 426, 424, 428, 429,
	0, 430, 431, 432, 433, 0, 0, 434, 435, 436,
	0, 437, 438, 440, 439, 0, 441, 442, 443, 0,
	444, 445, 817, 446, 447, 448, 450, 452, 449, 451,
	453, 454, 455, 456, 457, 818, 819, 458, 459, 0,
	340, 0, 0, 0, 0, 0, 460, 461, 462, 820,
	0, 0, 0, 463, 0, 465, 469, 466, 467, 468,
	470, 0, 464, 471, 472, 0, 0, 473, 474, 475,
	821, 822, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 0, 485, 486, 823, 0, 824, 487, 0, 488,
	489, 490, 491, 492, 493, 494, 1975, 826, 827, 595,
	0, 495, 496, 497, 0, 498, 499, 500, 501, 502,
	503, 504, 0, 0, 0, 505, 506, 507, 508, 0,
	342, 341, 343, 0, 828, 509, 596, 510, 829, 830,
	0, 831, 0, 511, 512, 515, 0, 832, 0, 514,
	516, 517, 0, 518, 0, 0, 0, 519, 520, 521,
	522, 523, 524, 525, 0, 526, 528, 527, 0, 530,
	833, 529, 0, 531, 532, 0, 0, 533, 534, 535,
	536, 537, 538, 541, 0, 0, 539, 540, 542, 543,
	0, 544, 545, 547, 550, 546, 548, 549, 551, 552,
	565, 566, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 568, 0, 567, 0, 569, 570,
	571, 572, 573, 581, 583, 584, 579, 580, 582, 585,
	586, 588, 589, 576, 577, 578, 0, 587, 574, 0,
	575, 344, 0, 590, 591, 592, 593, 0, 834, 594,
	835, 597, 598, 0, 0, 599, 0, 600, 0, 0,
	602, 603, 604, 0, 0, 605, 606, 836, 0, 607,
	0, 837, 608, 609, 601, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 0, 620, 621, 838, 622,
	623, 624, 839, 625, 626, 627, 840, 628, 841, 629,
	630, 0, 631, 632, 633, 0, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 842, 644, 645, 647,
	646, 648, 649, 0, 650, 0, 651, 652, 653, 0,
	0, 0, 0, 0, 654, 655, 657, 0, 658, 659,
	660, 661, 662, 656, 663, 664, 665, 666, 667, 668,
	669, 0, 671, 672, 670, 673, 674, 0, 675, 676,
	677, 678, 679, 843, 680, 0, 681, 682, 690, 691,
	692, 683, 684, 686, 693, 685, 694, 695, 696, 697,
	699, 698, 0, 701, 702, 700, 703, 704, 705, 706,
	0, 707, 844, 708, 687, 688, 709, 710, 711, 0,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 845,
	0, 721, 0, 722, 723, 724, 725, 726, 727, 729,
	689, 730, 731, 732, 737, 738, 846, 733, 734, 735,
	736, 847, 740, 741, 742, 743, 0, 744, 745, 0,
	739, 728, 0, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 755, 0, 756, 848, 849, 850, 851, 0,
	768, 0, 757, 759, 760, 761, 762, 852, 763, 853,
	0, 764, 765, 766, 767, 758, 769, 770, 0, 0,
	771, 772, 773, 774, 776, 778, 779, 780, 775, 777,
	781, 0, 782, 0, 0, 783, 784, 785, 854, 855,
	856, 0, 787, 788, 786, 789, 790, 793, 791, 792,
	857, 796, 513, 797, 798, 799, 794, 795, 1963, 0,
	337, 0, 800, 801, 858, 802, 803, 804, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 346, 348,
	347, 349, 350, 351, 352, 0, 353, 354, 0, 0,
	0, 0, 0, 805, 0, 0, 0, 356, 0, 355,
	0, 357, 358, 359, 0, 360, 361, 362, 363, 364,
	365, 366, 367, 806, 807, 0, 368, 808, 369, 809,
	0, 810, 370, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 0, 0, 380, 811, 812, 813, 0,
	381, 382, 383, 384, 814, 0, 0, 0, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 0, 394, 395,
	396, 393, 397, 398, 0, 399, 0, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 412, 0, 0, 0, 0, 0, 0, 0, 413,
	414, 415, 416, 417, 0, 418, 420, 421, 815, 422,
	816, 0, 425, 427, 419, 423, 0, 426, 424, 428,
	429, 0, 430, 431, 432, 433, 0, 0, 434, 435,
	436, 0, 437, 438, 440, 439, 0, 441, 442, 443,
	0, 444, 445, 817, 446, 447, 448, 450, 452, 449,
	451, 453, 454, 455, 456, 457, 818, 819, 458, 459,
	0, 340, 0, 0, 0, 0, 0, 460, 461, 462,
	820, 0, 0, 0, 463, 0, 465, 469, 466, 467,
	468, 470, 0, 464, 471, 472, 0, 0, 473, 474,
	475, 821, 822, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 486, 823, 0, 824, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 825, 826, 827,
	595, 0, 495, 496, 497, 0, 498, 499, 500, 501,
	502, 503, 504, 0, 0, 0, 505, 506, 507, 508,
	0, 342, 341, 343, 0, 828, 509, 596, 510, 829,
	830, 0, 831, 0, 511, 512, 515, 0, 832, 0,
	514, 516, 517, 0, 518, 0, 0, 0, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 528, 527, 0,
	530, 833, 529, 0, 531, 532, 0, 0, 533, 534,
	535, 536, 537, 538, 541, 0, 0, 539, 540, 542,
	543, 0, 544, 545, 547, 550, 546, 548, 549, 551,
	552, 565, 566, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 568, 0, 567, 0, 569,
	570, 571, 572, 573, 581, 583, 584, 579, 580, 582,
	585, 586, 588, 589, 576, 577, 578, 0, 587, 574,
	0, 575, 344, 0, 590, 591, 592, 593, 0, 834,
	594, 835, 597, 598, 0, 0, 599, 0, 600, 0,
	0, 602, 603, 604, 0, 0, 605, 606, 836, 0,
	607, 0, 837, 608, 609, 601, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 0, 620, 621, 838,
	622, 623, 624, 839, 625, 626, 627, 840, 628, 841,
	629, 630, 0, 631, 632, 633, 0, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 842, 644, 645,
	647, 646, 648, 649, 0, 650, 0, 651, 652, 653,
	0, 0, 0, 0, 0, 654, 655, 657, 0, 658,
	659, 660, 661, 662, 656, 663, 664, 665, 666, 667,
	668, 669, 0, 671, 672, 670, 673, 674, 0, 675,
	676, 677, 678, 679, 843, 680, 0, 681, 682, 690,
	691, 692, 683, 684, 686, 693, 685, 694, 695, 696,
	697, 699, 698, 0, 701, 702, 700, 703, 704, 705,
	706, 0, 707, 844, 708, 687, 688, 709, 710, 711,
	0, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	845, 0, 721, 0, 722, 723, 724, 725, 726, 727,
	729, 689, 730, 731, 732, 737, 738, 846, 733, 734,
	735, 736, 847, 740, 741, 742, 743, 0, 744, 745,
	0, 739, 728, 0, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 0, 756, 848, 849, 850, 851,
	0, 768, 0, 757, 759, 760, 761, 762, 852, 763,
	853, 0, 764, 765, 766, 767, 758, 769, 770, 0,
	0, 771, 772, 773, 774, 776, 778, 779, 780, 775,
	777, 781, 0, 782, 0, 0, 783, 784, 785, 854,
	855, 856, 0, 787, 788, 786, 789, 790, 793, 791,
	792, 857, 796, 513, 797, 798, 799, 794, 795, 1961,
	0, 337, 0, 800, 801, 858, 802, 803, 804, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 346,
	348, 347, 349, 350, 351, 352, 0, 353, 354, 0,
	0, 0, 0, 0, 805, 0, 0, 0, 356, 0,
	355, 0, 357, 358, 359, 0, 360, 361, 362, 363,
	364, 365, 366, 367, 806, 807, 0, 368, 808, 369,
	809, 0, 810, 370, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 0, 0, 0, 380, 811, 812, 813,
	0, 381, 382, 383, 384, 814, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 0, 394,
	395, 396, 393, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 0, 0, 0, 0, 0, 0,
	413, 414, 415, 416, 417, 0, 418, 420, 421, 815,
	422, 816, 0, 425, 427, 419, 423, 0, 426, 424,
	428, 429, 0, 430, 431, 432, 433, 0, 0, 434,
	435, 436, 0, 437, 438, 440, 439, 0, 441, 442,
	443, 0, 444, 445, 817, 446, 447, 448, 450, 452,
	449, 451, 453, 454, 455, 456, 457, 818, 819, 458,
	459, 0, 340, 0, 0, 0, 0, 0, 460, 461,
	462, 820, 0, 0, 0, 463, 0, 465, 469, 466,
	467, 468, 470, 0, 464, 471, 472, 0, 0, 473,
	474, 475, 821, 822, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 0, 485, 486, 823, 0, 824, 487,
	0, 488, 489, 490, 491, 492, 493, 494, 825, 826,
	827, 595, 0, 495, 496, 497, 0, 498, 499, 500,
	501, 502, 503, 504, 0, 0, 0, 505, 506, 507,
	508, 0, 342, 341, 343, 0, 828, 509, 596, 510,
	829, 830, 0, 831, 0, 511, 512, 515, 0, 832,
	0, 514, 516, 517, 0, 518, 0, 0, 0, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 528, 527,
	0, 530, 833, 529, 0, 531, 532, 0, 0, 533,
	534, 535, 536, 537, 538, 541, 0, 0, 539, 540,
	542, 543, 0, 544, 545, 547, 550, 546, 548, 549,
	551, 552, 565, 566, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 568, 0, 567, 0,
	569, 570, 571, 572, 573, 581, 583, 584, 579, 580,
	582, 585, 586, 588, 589, 576, 577, 578, 0, 587,
	574, 0, 575, 344, 0, 590, 591, 592, 593, 0,
	834, 594, 835, 597, 598, 0, 0, 599, 0, 600,
	0, 0, 602, 603, 604, 0, 0, 605, 606, 836,
	0, 607, 0, 837, 608, 609, 601, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 0, 620, 621,
	838, 622, 623, 624, 839, 625, 626, 627, 840, 628,
	841, 629, 630, 0, 631, 632, 633, 0, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 842, 644,
	645, 647, 646, 648, 649, 0, 650, 0, 651, 652,
	653, 0, 0, 0, 0, 0, 654, 655, 657, 0,
	658, 659, 660, 661, 662, 656, 663, 664, 665, 666,
	667, 668, 669, 0, 671, 672, 670, 673, 674, 0,
	675, 676, 677, 678, 679, 843, 680, 0, 681, 682,
	690, 691, 692, 683, 684, 686, 693, 685, 694, 695,
	696, 697, 699, 698, 0, 701, 702, 700, 703, 704,
	705, 706, 0, 707, 844, 708, 687, 688, 709, 710,
	711, 0, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 845, 0, 721, 0, 722, 723, 724, 725, 726,
	727, 729, 689, 730, 731, 732, 737, 738, 846, 733,
	734, 735, 736, 847, 740, 741, 742, 743, 0, 744,
	745, 0, 739, 728, 0, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 0, 756, 848, 849, 850,
	851, 0, 768, 0, 757, 759, 760, 761, 762, 852,
	763, 853, 0, 764, 765, 766, 767, 758, 769, 770,
	0, 0, 771, 772, 773, 774, 776, 778, 779, 780,
	775, 777, 781, 0, 782, 0, 0, 783, 784, 785,
	854, 855, 856, 0, 787, 788, 786, 789, 790, 793,
	791, 792, 857, 796, 513, 797, 798, 799, 794, 795,
	1623, 0, 337, 0, 800, 801, 858, 802, 803, 804,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	346, 348, 347, 349, 350, 351, 352, 0, 353, 354,
	0, 0, 0, 0, 0, 805, 0, 0, 0, 356,
	0, 355, 0, 357, 358, 359, 0, 360, 361, 362,
	363, 364, 365, 366, 367, 806, 807, 0, 368, 808,
	369, 809, 0, 810, 370, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 0, 0, 0, 380, 811, 812,
	813, 0, 381, 382, 383, 384, 814, 0, 0, 0,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 0,
	394, 395, 396, 393, 397, 398, 0, 399, 0, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 412, 0, 0, 0, 0, 0, 0,
	0, 413, 414, 415, 416, 417, 0, 418, 420, 421,
	815, 422, 816, 0, 425, 427, 419, 423, 0, 426,
	424, 428, 429, 0, 430, 431, 432, 433, 0, 0,
	434, 435, 436, 0, 437, 438, 440, 439, 0, 441,
	442, 443, 0, 444, 445, 817, 446, 447, 448, 450,
	452, 449, 451, 453, 454, 455, 456, 457, 818, 819,
	458, 459, 0, 340, 0, 0, 0, 0, 0, 460,
	461, 462, 820, 0, 0, 0, 463, 0, 465, 469,
	466, 467, 468, 470, 0, 464, 471, 472, 0, 0,
	473, 474, 475, 821, 822, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 486, 823, 0, 824,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 1622,
	826, 827, 595, 0, 495, 496, 497, 0, 498, 499,
	500, 501, 502, 503, 504, 0, 0, 0, 505, 506,
	507, 508, 0, 342, 341, 343, 0, 828, 509, 596,
	510, 829, 830, 0, 831, 0, 511, 512, 515, 0,
	832, 0, 514, 516, 517, 0, 518, 0, 0, 0,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 528,
	527, 0, 530, 833, 529, 0, 531, 532, 0, 0,
	533, 534, 535, 536, 537, 538, 541, 0, 0, 539,
	540, 542, 543, 0, 544, 545, 547, 550, 546, 548,
	549, 551, 552, 565, 566, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 568, 0, 567,
	0, 569, 570, 571, 572, 573, 581, 583, 584, 579,
	580, 582, 585, 586, 588, 589, 576, 577, 578, 0,
	587, 574, 0, 575, 344, 0, 590, 591, 592, 593,
	0, 834, 594, 835, 597, 598, 0, 0, 599, 0,
	600, 0, 0, 602, 603, 604, 0, 0, 605, 606,
	836, 0, 607, 0, 837, 608, 609, 601, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 0, 620,
	621, 838, 622, 623, 624, 839, 625, 626, 627, 840,
	628, 841, 629, 630, 0, 631, 632, 633, 0, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 842,
	644, 645, 647, 646, 648, 649, 0, 650, 0, 651,
	652, 653, 0, 0, 0, 0, 0, 654, 655, 657,
	0, 658, 659, 660, 661, 662, 656, 663, 664, 665,
	666, 667, 668, 669, 0, 671, 672, 670, 673, 674,
	0, 675, 676, 677, 678, 679, 843, 680, 0, 681,
	682, 690, 691, 692, 683, 684, 686, 693, 685, 694,
	695, 696, 697, 699, 698, 0, 701, 702, 700, 703,
	704, 705, 706, 0, 707, 844, 708, 687, 688, 709,
	710, 711, 0, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 845, 0, 721, 0, 722, 723, 724, 725,
	726, 727, 729, 689, 730, 731, 732, 737, 738, 846,
	733, 734, 735, 736, 847, 740, 741, 742, 743, 0,
	744, 745, 0, 739, 728, 0, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 0, 756, 848, 849,
	850, 851, 0, 768, 0, 757, 759, 760, 761, 762,
	852, 763, 853, 0, 764, 765, 766, 767, 758, 769,
	770, 0, 0, 771, 772, 773, 774, 776, 778, 779,
	780, 775, 777, 781, 0, 782, 0, 0, 783, 784,
	785, 854, 855, 856, 0, 787, 788, 786, 789, 790,
	793, 791, 792, 857, 796, 513, 797, 798, 799, 794,
	795, 1612, 0, 337, 0, 800, 801, 858, 802, 803,
	804, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 346, 348, 347, 349, 350, 351, 352, 0, 353,
	354, 0, 0, 0, 0, 0, 805, 0, 0, 0,
	356, 0, 355, 0, 357, 358, 359, 0, 360, 361,
	362, 363, 364, 365, 366, 367, 806, 807, 0, 368,
	808, 369, 809, 0, 810, 370, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 0, 0, 0, 380, 811,
	812, 813, 0, 381, 382, 383, 384, 814, 0, 0,
	0, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	0, 394, 395, 396, 393, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 412, 0, 0, 0, 0, 0,
	0, 0, 413, 414, 415, 416, 417, 0, 418, 420,
	421, 815, 422, 816, 0, 425, 427, 419, 423, 0,
	426, 424, 428, 429, 0, 430, 431, 432, 433, 0,
	0, 434, 435, 436, 0, 437, 438, 440, 439, 0,
	441, 442, 443, 0, 444, 445, 817, 446, 447, 448,
	450, 452, 449, 451, 453, 454, 455, 456, 457, 818,
	819, 458, 459, 0, 340, 0, 0, 0, 0, 0,
	460, 461, 462, 820, 0, 0, 0, 463, 0, 465,
	469, 466, 467, 468, 470, 0, 464, 471, 472, 0,
	0, 473, 474, 475, 821, 822, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 0, 485, 486, 823, 0,
	824, 487, 0, 488, 489, 490, 491, 492, 493, 494,
	1611, 826, 827, 595, 0, 495, 496, 497, 0, 498,
	499, 500, 501, 502, 503, 504, 0, 0, 0, 505,
	506, 507, 508, 0, 342, 341, 343, 0, 828, 509,
	596, 510, 829, 830, 0, 831, 0, 511, 512, 515,
	0, 832, 0, 514, 516, 517, 0, 518, 0, 0,
	0, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	528, 527, 0, 530, 833, 529, 0, 531, 532, 0,
	0, 533, 534, 535, 536, 537, 538, 541, 0, 0,
	539, 540, 542, 543, 0, 544, 545, 547, 550, 546,
	548, 549, 551, 552, 565, 566, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 568, 0,
	567, 0, 569, 570, 571, 572, 573, 581, 583, 584,
	579, 580, 582, 585, 586, 588, 589, 576, 577, 578,
	0, 587, 574, 0, 575, 344, 0, 590, 591, 592,
	593, 0, 834, 594, 835, 597, 598, 0, 0, 599,
	0, 600, 0, 0, 602, 603, 604, 0, 0, 605,
	606, 836, 0, 607, 0, 837, 608, 609, 601, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 0,
	620, 621, 838, 622, 623, 624, 839, 625, 626, 627,
	840, 628, 841, 629, 630, 0, 631, 632, 633, 0,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	842, 644, 645, 647, 646, 648, 649, 0, 650, 0,
	651, 652, 653, 0, 0, 0, 0, 0, 654, 655,
	657, 0, 658, 659, 660, 661, 662, 656, 663, 664,
	665, 666, 667, 668, 669, 0, 671, 672, 670, 673,
	674, 0, 675, 676, 677, 678, 679, 843, 680, 0,
	681, 682, 690, 691, 692, 683, 684, 686, 693, 685,
	694, 695, 696, 697, 699, 698, 0, 701, 702, 700,
	703, 704, 705, 706, 0, 707, 844, 708, 687, 688,
	709, 710, 711, 0, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 845, 0, 721, 0, 722, 723, 724,
	725, 726, 727, 729, 689, 730, 731, 732, 737, 738,
	846, 733, 734, 735, 736, 847, 740, 741, 742, 743,
	0, 744, 745, 0, 739, 728, 0, 746, 747, 748,
	749, 750, 751, 752, 753, 754, 755, 0, 756, 848,
	849, 850, 851, 0, 768, 0, 757, 759, 760, 761,
	762, 852, 763, 853, 0, 764, 765, 766, 767, 758,
	769, 770, 0, 0, 771, 772, 773, 774, 776, 778,
	779, 780, 775, 777, 781, 0, 782, 0, 0, 783,
	784, 785, 854, 855, 856, 0, 787, 788, 786, 789,
	790, 793, 791, 792, 857, 796, 513, 797, 798, 799,
	794, 795, 1608, 0, 337, 0, 800, 801, 858, 802,
	803, 804, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 346, 348, 347, 349, 350, 351, 352, 0,
	353, 354, 0, 0, 0, 0, 0, 805, 0, 0,
	0, 356, 0, 355, 0, 357, 358, 359, 0, 360,
	361, 362, 363, 364, 365, 366, 367, 806, 807, 0,
	368, 808, 369, 809, 0, 810, 370, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 0, 0, 0, 380,
	811, 812, 813, 0, 381, 382, 383, 384, 814, 0,
	0, 0, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 0, 394, 395, 396, 393, 397, 398, 0, 399,
	0, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 412, 0, 0, 0, 0,
	0, 0, 0, 413, 414, 415, 416, 417, 0, 418,
	420, 421, 815, 422, 816, 0, 425, 427, 419, 423,
	0, 426, 424, 428, 429, 0, 430, 431, 432, 433,
	0, 0, 434, 435, 436, 0, 437, 438, 440, 439,
	0, 441, 442, 443, 0, 444, 445, 817, 446, 447,
	448, 450, 452, 449, 451, 453, 454, 455, 456, 457,
	818, 819, 458, 459, 0, 340, 0, 0, 0, 0,
	0, 460, 461, 462, 820, 0, 0, 0, 463, 0,
	465, 469, 466, 467, 468, 470, 0, 464, 471, 472,
	0, 0, 473, 474, 475, 821, 822, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 486, 823,
	0, 824, 487, 0, 488, 489, 490, 491, 492, 493,
	494, 1607, 826, 827, 595, 0, 495, 496, 497, 0,
	498, 499, 500, 501, 502, 503, 504, 0, 0, 0,
	505, 506, 507, 508, 0, 342, 341, 343, 0, 828,
	509, 596, 510, 829, 830, 0, 831, 0, 511, 512,
	515, 0, 832, 0, 514, 516, 517, 0, 518, 0,
	0, 0, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 528, 527, 0, 530, 833, 529, 0, 531, 532,
	0, 0, 533, 534, 535, 536, 537, 538, 541, 0,
	0, 539, 540, 542, 543, 0, 544, 545, 547, 550,
	546, 548, 549, 551, 552, 565, 566, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 568,
	0, 567, 0, 569, 570, 571, 572, 573, 581, 583,
	584, 579, 580, 582, 585, 586, 588, 589, 576, 577,
	578, 0, 587, 574, 0, 575, 344, 0, 590, 591,
	592, 593, 0, 834, 594, 835, 597, 598, 0, 0,
	599, 0, 600, 0, 0, 602, 603, 604, 0, 0,
	605, 606, 836, 0, 607, 0, 837, 608, 609, 601,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	0, 620, 621, 838, 622, 623, 624, 839, 625, 626,
	627, 840, 628, 841, 629, 630, 0, 631, 632, 633,
	0, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 842, 644, 645, 647, 646, 648, 649, 0, 650,
	0, 651, 652, 653, 0, 0, 0, 0, 0, 654,
	655, 657, 0, 658, 659, 660, 661, 662, 656, 663,
	664, 665, 666, 667, 668, 669, 0, 671, 672, 670,
	673, 674, 0, 675, 676, 677, 678, 679, 843, 680,
	0, 681, 682, 690, 691, 692, 683, 684, 686, 693,
	685, 694, 695, 696, 697, 699, 698, 0, 701, 702,
	700, 703, 704, 705, 706, 0, 707, 844, 708, 687,
	688, 709, 710, 711, 0, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 845, 0, 721, 0, 722, 723,
	724, 725, 726, 727, 729, 689, 730, 731, 732, 737,
	738, 846, 733, 734, 735, 736, 847, 740, 741, 742,
	743, 0, 744, 745, 0, 739, 728, 0, 746, 747,
	748, 749, 750, 751, 752, 753, 754, 755, 0, 756,
	848, 849, 850, 851, 0, 768, 0, 757, 759, 760,
	761, 762, 852, 763, 853, 0, 764, 765, 766, 767,
	758, 769, 770, 0, 0, 771, 772, 773, 774, 776,
	778, 779, 780, 775, 777, 781, 0, 782, 0, 0,
	783, 784, 785, 854, 855, 856, 0, 787, 788, 786,
	789, 790, 793, 791, 792, 857, 796, 513, 797, 798,
	799, 794, 795, 1602, 0, 337, 0, 800, 801, 858,
	802, 803, 804, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 346, 348, 347, 349, 350, 351, 352,
	0, 353, 354, 0, 0, 0, 0, 0, 805, 0,
	0, 0, 356, 0, 355, 0, 357, 358, 359, 0,
	360, 361, 362, 363, 364, 365, 366, 367, 806, 807,
	0, 368, 808, 369, 809, 0, 810, 370, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 0, 0, 0,
	380, 811, 812, 813, 0, 381, 382, 383, 384, 814,
	0, 0, 0, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 0, 394, 395, 396, 393, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 412, 0, 0, 0,
	0, 0, 0, 0, 413, 414, 415, 416, 417, 0,
	418, 420, 421, 815, 422, 816, 0, 425, 427, 419,
	423, 0, 426, 424, 428, 429, 0, 430, 431, 432,
	433, 0, 0, 434, 435, 436, 0, 437, 438, 440,
	439, 0, 441, 442, 443, 0, 444, 445, 817, 446,
	447, 448, 450, 452, 449, 451, 453, 454, 455, 456,
	457, 818, 819, 458, 459, 0, 340, 0, 0, 0,
	0, 0, 460, 461, 462, 820, 0, 0, 0, 463,
	0, 465, 469, 466, 467, 468, 470, 0, 464, 471,
	472, 0, 0, 473, 474, 475, 821, 822, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 486,
	823, 0, 824, 487, 0, 488, 489, 490, 491, 492,
	493, 494, 1601, 826, 827, 595, 0, 495, 496, 497,
	0, 498, 499, 500, 501, 502, 503, 504, 0, 0,
	0, 505, 506, 507, 508, 0, 342, 341, 343, 0,
	828, 509, 596, 510, 829, 830, 0, 831, 0, 511,
	512, 515, 0, 832, 0, 514, 516, 517, 0, 518,
	0, 0, 0, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 528, 527, 0, 530, 833, 529, 0, 531,
	532, 0, 0, 533, 534, 535, 536, 537, 538, 541,
	0, 0, 539, 540, 542, 543, 0, 544, 545, 547,
	550, 546, 548, 549, 551, 552, 565, 566, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	568, 0, 567, 0, 569, 570, 571, 572, 573, 581,
	583, 584, 579, 580, 582, 585, 586, 588, 589, 576,
	577, 578, 0, 587, 574, 0, 575, 344, 0, 590,
	591, 592, 593, 0, 834, 594, 835, 597, 598, 0,
	0, 599, 0, 600, 0, 0, 602, 603, 604, 0,
	0, 605, 606, 836, 0, 607, 0, 837, 608, 609,
	601, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 0, 620, 621, 838, 622, 623, 624, 839, 625,
	626, 627, 840, 628, 841, 629, 630, 0, 631, 632,
	633, 0, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 842, 644, 645, 647, 646, 648, 649, 0,
	650, 0, 651, 652, 653, 0, 0, 0, 0, 0,
	654, 655, 657, 0, 658, 659, 660, 661, 662, 656,
	663, 664, 665, 666, 667, 668, 669, 0, 671, 672,
	670, 673, 674, 0, 675, 676, 677, 678, 679, 843,
	680, 0, 681, 682, 690, 691, 692, 683, 684, 686,
	693, 685, 694, 695, 696, 697, 699, 698, 0, 701,
	702, 700, 703, 704, 705, 706, 0, 707, 844, 708,
	687, 688, 709, 710, 711, 0, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 845, 0, 721, 0, 722,
	723, 724, 725, 726, 727, 729, 689, 730, 731, 732,
	737, 738, 846, 733, 734, 735, 736, 847, 740, 741,
	742, 743, 0, 744, 745, 0, 739, 728, 0, 746,
	747, 748, 749, 750, 751, 752, 753, 754, 755, 0,
	756, 848, 849, 850, 851, 0, 768, 0, 757, 759,
	760, 761, 762, 852, 763, 853, 0, 764, 765, 766,
	767, 758, 769, 770, 0, 0, 771, 772, 773, 774,
	776, 778, 779, 780, 775, 777, 781, 0, 782, 0,
	0, 783, 784, 785, 854, 855, 856, 0, 787, 788,
	786, 789, 790, 793, 791, 792, 857, 796, 513, 797,
	798, 799, 794, 795, 1581, 0, 337, 0, 800, 801,
	858, 802, 803, 804, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 346, 348, 347, 349, 350, 351,
	352, 0, 353, 354, 0, 0, 0, 0, 0, 805,
	0, 0, 0, 356, 0, 355, 0, 357, 358, 359,
	0, 360, 361, 362, 363, 364, 365, 366, 367, 806,
	807, 0, 368, 808, 369, 809, 0, 810, 370, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 0, 0,
	0, 380, 811, 812, 813, 0, 381, 382, 383, 384,
	814, 0, 0, 0, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 0, 394, 395, 396, 393, 397, 398,
	0, 399, 0, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 412, 0, 0,
	0, 0, 0, 0, 0, 413, 414, 415, 416, 417,
	0, 418, 420, 421, 815, 422, 816, 0, 425, 427,
	419, 423, 0, 426, 424, 428, 429, 0, 430, 431,
	432, 433, 0, 0, 434, 435, 436, 0, 437, 438,
	440, 439, 0, 441, 442, 443, 0, 444, 445, 817,
	446, 447, 448, 450, 452, 449, 451, 453, 454, 455,
	456, 457, 818, 819, 458, 459, 0, 340, 0, 0,
	0, 0, 0, 460, 461, 462, 820, 0, 0, 0,
	463, 0, 465, 469, 466, 467, 468, 470, 0, 464,
	471, 472, 0, 0, 473, 474, 475, 821, 822, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	486, 823, 0, 824, 487, 0, 488, 489, 490, 491,
	492, 493, 494, 1580, 826, 827, 595, 0, 495, 496,
	497, 0, 498, 499, 500, 501, 502, 503, 504, 0,
	0, 0, 505, 506, 507, 508, 0, 342, 341, 343,
	0, 828, 509, 596, 510, 829, 830, 0, 831, 0,
	511, 512, 515, 0, 832, 0, 514, 516, 517, 0,
	518, 0, 0, 0, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 528, 527, 0, 530, 833, 529, 0,
	531, 532, 0, 0, 533, 534, 535, 536, 537, 538,
	541, 0, 0, 539, 540, 542, 543, 0, 544, 545,
	547, 550, 546, 548, 549, 551, 552, 565, 566, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 568, 0, 567, 0, 569, 570, 571, 572, 573,
	581, 583, 584, 579, 580, 582, 585, 586, 588, 589,
	576, 577, 578, 0, 587, 574, 0, 575, 344, 0,
	590, 591, 592, 593, 0, 834, 594, 835, 597, 598,
	0, 0, 599, 0, 600, 0, 0, 602, 603, 604,
	0, 0, 605, 606, 836, 0, 607, 0, 837, 608,
	609, 601, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 0, 620, 621, 838, 622, 623, 624, 839,
	625, 626, 627, 840, 628, 841, 629, 630, 0, 631,
	632, 633, 0, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 842, 644, 645, 647, 646, 648, 649,
	0, 650, 0, 651, 652, 653, 0, 0, 0, 0,
	0, 654, 655, 657, 0, 658, 659, 660, 661, 662,
	656, 663, 664, 665, 666, 667, 668, 669, 0, 671,
	672, 670, 673, 674, 0, 675, 676, 677, 678, 679,
	843, 680, 0, 681, 682, 690, 691, 692, 683, 684,
	686, 693, 685, 694, 695, 696, 697, 699, 698, 0,
	701, 702, 700, 703, 704, 705, 706, 0, 707, 844,
	708, 687, 688, 709, 710, 711, 0, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 845, 0, 721, 0,
	722, 723, 724, 725, 726, 727, 729, 689, 730, 731,
	732, 737, 738, 846, 733, 734, 735, 736, 847, 740,
	741, 742, 743, 0, 744, 745, 0, 739, 728, 0,
	746, 747, 748, 749, 750, 751, 752, 753, 754, 755,
	0, 756, 848, 849, 850, 851, 0, 768, 0, 757,
	759, 760, 761, 762, 852, 763, 853, 0, 764, 765,
	766, 767, 758, 769, 770, 0, 0, 771, 772, 773,
	774, 776, 778, 779, 780, 775, 777, 781, 0, 782,
	0, 0, 783, 784, 785, 854, 855, 856, 0, 787,
	788, 786, 789, 790, 793, 791, 792, 857, 796, 513,
	797, 798, 799, 794, 795, 1576, 0, 337, 0, 800,
	801, 858, 802, 803, 804, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 346, 348, 347, 349, 350,
	351, 352, 0, 353, 354, 0, 0, 0, 0, 0,
	805, 0, 0, 0, 356, 0, 355, 0, 357, 358,
	359, 0, 360, 361, 362, 363, 364, 365, 366, 367,
	806, 807, 0, 368, 808, 369, 809, 0, 810, 370,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 0,
	0, 0, 380, 811, 812, 813, 0, 381, 382, 383,
	384, 814, 0, 0, 0, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 0, 394, 395, 396, 393, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 412, 0,
	0, 0, 0, 0, 0, 0, 413, 414, 415, 416,
	417, 0, 418, 420, 421, 815, 422, 816, 0, 425,
	427, 419, 423, 0, 426, 424, 428, 429, 0, 430,
	431, 432, 433, 0, 0, 434, 435, 436, 0, 437,
	438, 440, 439, 0, 441, 442, 443, 0, 444, 445,
	817, 446, 447, 448, 450, 452, 449, 451, 453, 454,
	455, 456, 457, 818, 819, 458, 459, 0, 340, 0,
	0, 0, 0, 0, 460, 461, 462, 820, 0, 0,
	0, 463, 0, 465, 469, 466, 467, 468, 470, 0,
	464, 471, 472, 0, 0, 473, 474, 475, 821, 822,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 0,
	485, 486, 823, 0, 824, 487, 0, 488, 489, 490,
	491, 492, 493, 494, 1575, 826, 827, 595, 0, 495,
	496, 497, 0, 498, 499, 500, 501, 502, 503, 504,
	0, 0, 0, 505, 506, 507, 508, 0, 342, 341,
	343, 0, 828, 509, 596, 510, 829, 830, 0, 831,
	0, 511, 512, 515, 0, 832, 0, 514, 516, 517,
	0, 518, 0, 0, 0, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 528, 527, 0, 530, 833, 529,
	0, 531, 532, 0, 0, 533, 534, 535, 536, 537,
	538, 541, 0, 0, 539, 540, 542, 543, 0, 544,
	545, 547, 550, 546, 548, 549, 551, 552, 565, 566,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 568, 0, 567, 0, 569, 570, 571, 572,
	573, 581, 583, 584, 579, 580, 582, 585, 586, 588,
	589, 576, 577, 578, 0, 587, 574, 0, 575, 344,
	0, 590, 591, 592, 593, 0, 834, 594, 835, 597,
	598, 0, 0, 599, 0, 600, 0, 0, 602, 603,
	604, 0, 0, 605, 606, 836, 0, 607, 0, 837,
	608, 609, 601, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 620, 621, 838, 622, 623, 624,
	839, 625, 626, 627, 840, 628, 841, 629, 630, 0,
	631, 632, 633, 0, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 842, 644, 645, 647, 646, 648,
	649, 0, 650, 0, 651, 652, 653, 0, 0, 0,
	0, 0, 654, 655, 657, 0, 658, 659, 660, 661,
	662, 656, 663, 664, 665, 666, 667, 668, 669, 0,
	671, 672, 670, 673, 674, 0, 675, 676, 677, 678,
	679, 843, 680, 0, 681, 682, 690, 691, 692, 683,
	684, 686, 693, 685, 694, 695, 696, 697, 699, 698,
	0, 701, 702, 700, 703, 704, 705, 706, 0, 707,
	844, 708, 687, 688, 709, 710, 711, 0, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 845, 0, 721,
	0, 722, 723, 724, 725, 726, 727, 729, 689, 730,
	731, 732, 737, 738, 846, 733, 734, 735, 736, 847,
	740, 741, 742, 743, 0, 744, 745, 0, 739, 728,
	0, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	755, 0, 756, 848, 849, 850, 851, 0, 768, 0,
	757, 759, 760, 761, 762, 852, 763, 853, 0, 764,
	765, 766, 767, 758, 769, 770, 0, 0, 771, 772,
	773, 774, 776, 778, 779, 780, 775, 777, 781, 0,
	782, 0, 0, 783, 784, 785, 854, 855, 856, 0,
	787, 788, 786, 789, 790, 793, 791, 792, 857, 796,
	513, 797, 798, 799, 794, 795, 860, 0, 337, 0,
	800, 801, 858, 802, 803, 804, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 346, 348, 347, 349,
	350, 351, 352, 0, 353, 354, 0, 0, 0, 0,
	0, 805, 0, 0, 0, 356, 0, 355, 0, 357,
	358, 359, 0, 360, 361, 362, 363, 364, 365, 366,
	367, 806, 807, 0, 368, 808, 369, 809, 0, 810,
	370, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	0, 0, 0, 380, 811, 812, 813, 0, 381, 382,
	383, 384, 814, 0, 0, 0, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 0, 394, 395, 396, 393,
	397, 398, 0, 399, 0, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 412,
	0, 0, 0, 0, 0, 0, 0, 413, 414, 415,
	416, 417, 0, 418, 420, 421, 815, 422, 816, 0,
	425, 427, 419, 423, 0, 426, 424, 428, 429, 0,
	430, 431, 432, 433, 0, 0, 434, 435, 436, 0,
	437, 438, 440, 439, 0, 441, 442, 443, 0, 444,
	445, 817, 446, 447, 448, 450, 452, 449, 451, 453,
	454, 455, 456, 457, 818, 819, 458, 459, 0, 340,
	0, 0, 0, 0, 0, 460, 461, 462, 820, 0,
	0, 0, 463, 0, 465, 469, 466, 467, 468, 470,
	0, 464, 471, 472, 0, 0, 473, 474, 475, 821,
	822, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 486, 823, 0, 824, 487, 0, 488, 489,
	490, 491, 492, 493, 494, 825, 826, 827, 595, 0,
	495, 496, 497, 0, 498, 499, 500, 501, 502, 503,
	504, 0, 0, 0, 505, 506, 507, 508, 0, 342,
	341, 343, 0, 828, 509, 596, 510, 829, 830, 0,
	831, 0, 511, 512, 515, 0, 832, 0, 514, 516,
	517, 0, 518, 0, 0, 0, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 528, 527, 0, 530, 833,
	529, 0, 531, 532, 0, 0, 533, 534, 535, 536,
	537, 538, 541, 0, 0, 539, 540, 542, 543, 0,
	544, 545, 547, 550, 546, 548, 549, 551, 552, 565,
	566, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 568, 0, 567, 0, 569, 570, 571,
	572, 573, 581, 583, 584, 579, 580, 582, 585, 586,
	588, 589, 576, 577, 578, 0, 587, 574, 0, 575,
	344, 0, 590, 591, 592, 593, 0, 834, 594, 835,
	597, 598, 0, 0, 599, 0, 600, 0, 0, 602,
	603, 604, 0, 0, 605, 606, 836, 0, 607, 0,
	837, 608, 609, 601, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 0, 620, 621, 838, 622, 623,
	624, 839, 625, 626, 627, 840, 628, 841, 629, 630,
	0, 631, 632, 633, 0, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 842, 644, 645, 647, 646,
	648, 649, 0, 650, 0, 651, 652, 653, 0, 0,
	0, 0, 0, 654, 655, 657, 0, 658, 659, 660,
	661, 662, 656, 663, 664, 665, 666, 667, 668, 669,
	0, 671, 672, 670, 673, 674, 0, 675, 676, 677,
	678, 679, 843, 680, 0, 681, 682, 690, 691, 692,
	683, 684, 686, 693, 685, 694, 695, 696, 697, 699,
	698, 0, 701, 702, 700, 703, 704, 705, 706, 0,
	707, 844, 708, 687, 688, 709, 710, 711, 0, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 845, 0,
	721, 0, 722, 723, 724, 725, 726, 727, 729, 689,
	730, 731, 732, 737, 738, 846, 733, 734, 735, 736,
	847, 740, 741, 742, 743, 0, 744, 745, 0, 739,
	728, 0, 746, 747, 748, 749, 750, 751, 752, 753,
	754, 755, 0, 756, 848, 849, 850, 851, 0, 768,
	0, 757, 759, 760, 761, 762, 852, 763, 853, 0,
	764, 765, 766, 767, 758, 769, 770, 0, 0, 771,
	772, 773, 774, 776, 778, 779, 780, 775, 777, 781,
	0, 782, 0, 0, 783, 784, 785, 854, 855, 856,
	0, 787, 788, 786, 789, 790, 793, 791, 792, 857,
	796, 513, 797, 798, 799, 794, 795, 328, 0, 337,
	0, 800, 801, 858, 802, 803, 804, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 346, 348, 347,
	349, 350, 351, 352, 0, 353, 354, 0, 0, 0,
	0, 0, 805, 0, 0, 0, 356, 0, 355, 0,
	357, 358, 359, 0, 360, 361, 362, 363, 364, 365,
	366, 367, 806, 807, 0, 368, 808, 369, 809, 0,
	810, 370, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 0, 0, 0, 380, 811, 812, 813, 0, 381,
	382, 383, 384, 814, 0, 0, 0, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 0, 394, 395, 396,
	393, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	412, 0, 0, 0, 0, 0, 0, 0, 413, 414,
	415, 416, 417, 0, 418, 420, 421, 815, 422, 816,
	0, 425, 427, 419, 423, 0, 426, 424, 428, 429,
	0, 430, 431, 432, 433, 0, 0, 434, 435, 436,
	0, 437, 438, 440, 439, 0, 441, 442, 443, 0,
	444, 445, 817, 446, 447, 448, 450, 452, 449, 451,
	453, 454, 455, 456, 457, 818, 819, 458, 459, 0,
	340, 0, 0, 0, 0, 0, 460, 461, 462, 820,
	0, 0, 0, 463, 0, 465, 469, 466, 467, 468,
	470, 0, 464, 471, 472, 0, 0, 473, 474, 475,
	821, 822, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 0, 485, 486, 823, 0, 824, 487, 0, 488,
	489, 490, 491, 492, 493, 494, 825, 826, 827, 595,
	0, 495, 496, 497, 0, 498, 499, 500, 501, 502,
	503, 504, 0, 0, 0, 505, 506, 507, 508, 0,
	342, 341, 343, 0, 828, 509, 596, 510, 829, 830,
	0, 831, 0, 511, 512, 515, 0, 832, 0, 514,
	516, 517, 0, 518, 0, 0, 0, 519, 520, 521,
	522, 523, 524, 525, 0, 526, 528, 527, 0, 530,
	833, 529, 0, 531, 532, 0, 0, 533, 534, 535,
	536, 537, 538, 541, 0, 0, 539, 540, 542, 543,
	0, 544, 545, 547, 550, 546, 548, 549, 551, 552,
	565, 566, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 568, 0, 567, 0, 569, 570,
	571, 572, 573, 581, 583, 584, 579, 580, 582, 585,
	586, 588, 589, 576, 577, 578, 0, 587, 574, 0,
	575, 344, 0, 590, 591, 592, 593, 0, 834, 594,
	835, 597, 598, 0, 0, 599, 0, 600, 0, 0,
	602, 603, 604, 0, 0, 605, 606, 836, 0, 607,
	0, 837, 608, 609, 601, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 0, 620, 621, 838, 622,
	623, 624, 839, 625, 626, 627, 840, 628, 841, 629,
	630, 0, 631, 632, 633, 0, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 842, 644, 645, 647,
	646, 648, 649, 0, 650, 0, 651, 652, 653, 0,
	0, 0, 0, 0, 654, 655, 657, 0, 658, 659,
	660, 661, 662, 656, 663, 664, 665, 666, 667, 668,
	669, 0, 671, 672, 670, 673, 674, 0, 675, 676,
	677, 678, 679, 843, 680, 0, 681, 682, 690, 691,
	692, 683, 684, 686, 693, 685, 694, 695, 696, 697,
	699, 698, 0, 701, 702, 700, 703, 704, 705, 706,
	0, 707, 844, 708, 687, 688, 709, 710, 711, 0,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 845,
	0, 721, 0, 722, 723, 724, 725, 726, 727, 729,
	689, 730, 731, 732, 737, 738, 846, 733, 734, 735,
	736, 847, 740, 741, 742, 743, 0, 744, 745, 0,
	739, 728, 0, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 755, 0, 756, 848, 849, 850, 851, 0,
	768, 0, 757, 759, 760, 761, 762, 852, 763, 853,
	0, 764, 765, 766, 767, 758, 769, 770, 0, 0,
	771, 772, 773, 774, 776, 778, 779, 780, 775, 777,
	781, 0, 782, 0, 0, 783, 784, 785, 854, 855,
	856, 0, 787, 788, 786, 789, 790, 793, 791, 792,
	857, 796, 513, 797, 798, 799, 794, 795, 337, 0,
	0, 0, 800, 801, 858, 802, 803, 804, 0, 0,
	0, 0, 0, 0, 0, 345, 346, 348, 347, 349,
	350, 351, 352, 0, 353, 354, 0, 0, 0, 0,
	0, 805, 0, 0, 0, 356, 0, 355, 0, 357,
	358, 359, 0, 360, 361, 362, 363, 364, 365, 366,
	367, 806, 807, 0, 368, 808, 369, 809, 0, 810,
	370, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	0, 0, 0, 380, 811, 812, 813, 0, 381, 382,
	383, 384, 814, 0, 0, 0, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 0, 394, 395, 396, 393,
	397, 398, 0, 399, 0, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 412,
	0, 0, 0, 0, 0, 0, 0, 413, 414, 415,
	416, 417, 0, 418, 420, 421, 815, 422, 816, 0,
	425, 427, 419, 423, 0, 426, 424, 428, 429, 0,
	430, 431, 432, 433, 0, 0, 434, 435, 436, 0,
	437, 438, 440, 439, 0, 441, 442, 443, 0, 444,
	445, 817, 446, 447, 448, 450, 452, 449, 451, 453,
	454, 455, 456, 457, 818, 819, 458, 459, 0, 340,
	0, 0, 0, 0, 0, 460, 461, 462, 820, 0,
	0, 0, 463, 0, 465, 469, 466, 467, 468, 470,
	0, 464, 471, 472, 0, 0, 473, 474, 475, 821,
	822, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 486, 823, 0, 824, 487, 0, 488, 489,
	490, 491, 492, 493, 494, 825, 826, 827, 595, 0,
	495, 496, 497, 0, 498, 499, 500, 501, 502, 503,
	504, 0, 0, 0, 505, 506, 507, 508, 0, 342,
	341, 343, 0, 828, 509, 596, 510, 829, 830, 0,
	831, 0, 511, 512, 515, 0, 832, 0, 514, 516,
	517, 0, 518, 0, 0, 0, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 528, 527, 0, 530, 833,
	529, 0, 531, 532, 0, 0, 533, 534, 535, 536,
	537, 538, 541, 0, 0, 539, 540, 542, 543, 0,
	544, 545, 547, 550, 546, 548, 549, 551, 552, 565,
	566, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 568, 0, 567, 0, 569, 570, 571,
	572, 573, 581, 583, 584, 579, 580, 582, 585, 586,
	588, 589, 576, 577, 578, 0, 587, 574, 0, 575,
	344, 0, 590, 591, 592, 593, 0, 834, 594, 835,
	597, 598, 0, 0, 599, 0, 600, 0, 0, 602,
	603, 604, 0, 0, 605, 606, 836, 0, 607, 0,
	837, 608, 609, 601, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 0, 620, 621, 838, 622, 623,
	624, 839, 625, 626, 627, 840, 628, 841, 629, 630,
	0, 631, 632, 633, 0, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 842, 644, 645, 647, 646,
	648, 649, 0, 650, 0, 651, 652, 653, 0, 0,
	0, 0, 0, 654, 655, 657, 0, 658, 659, 660,
	661, 662, 656, 663, 664, 665, 666, 667, 668, 669,
	0, 671, 672, 670, 673, 674, 0, 675, 676, 677,
	678, 679, 843, 680, 0, 681, 682, 690, 691, 692,
	683, 684, 686, 693, 685, 694, 695, 696, 697, 699,
	698, 0, 701, 702, 700, 703, 704, 705, 706, 0,
	707, 844, 708, 687, 688, 709, 710, 711, 0, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 845, 0,
	721, 0, 722, 723, 724, 725, 726, 727, 729, 689,
	730, 731, 732, 737, 738, 846, 733, 734, 735, 736,
	847, 740, 741, 742, 743, 0, 744, 745, 0, 739,
	728, 0, 746, 747, 748, 749, 750, 751, 752, 753,
	754, 755, 0, 756, 848, 849, 850, 851, 0, 768,
	0, 757, 759, 760, 761, 762, 852, 763, 853, 0,
	764, 765, 766, 767, 758, 769, 770, 0, 0, 771,
	772, 773, 774, 776, 778, 779, 780, 775, 777, 781,
	0, 782, 0, 0, 783, 784, 785, 854, 855, 856,
	0, 787, 788, 786, 789, 790, 793, 791, 792, 857,
	796, 513, 797, 798, 799, 794, 795, 337, 0, 0,
	0, 800, 801, 858, 802, 803, 804, 0, 0, 0,
	0, 0, 0, 0, 345, 346, 348, 347, 349, 350,
	351, 352, 0, 353, 354, 0, 0, 0, 0, 0,
	805, 0, 0, 0, 356, 0, 355, 0, 357, 358,
	359, 0, 360, 361, 362, 363, 364, 365, 366, 367,
	806, 807, 0, 368, 808, 369, 809, 0, 810, 370,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 0,
	0, 0, 380, 811, 812, 813, 0, 381, 382, 383,
	384, 814, 0, 0, 0, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 0, 394, 395, 396, 393, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 412, 0,
	0, 0, 0, 0, 0, 0, 413, 414, 415, 416,
	417, 0, 418, 420, 421, 815, 422, 816, 0, 425,
	427, 419, 423, 0, 426, 424, 428, 429, 0, 430,
	431, 432, 433, 0, 0, 434, 435, 436, 0, 437,
	438, 440, 439, 0, 441, 442, 443, 0, 444, 445,
	817, 446, 447, 448, 450, 452, 449, 451, 453, 454,
	455, 456, 457, 818, 819, 458, 459, 0, 340, 0,
	0, 0, 0, 0, 460, 461, 462, 820, 0, 0,
	0, 463, 0, 465, 469, 466, 467, 468, 470, 0,
	464, 471, 472, 0, 0, 473, 474, 475, 821, 822,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 0,
	485, 486, 823, 0, 824, 487, 0, 488, 489, 490,
	491, 492, 493, 494, 2947, 826, 827, 595, 0, 495,
	496, 497, 0, 498, 499, 500, 501, 502, 503, 504,
	0, 0, 0, 505, 506, 507, 508, 0, 342, 341,
	343, 0, 828, 509, 596, 510, 829, 830, 0, 831,
	0, 511, 512, 515, 0, 832, 0, 514, 516, 517,
	0, 518, 0, 0, 0, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 528, 527, 0, 530, 833, 529,
	0, 531, 532, 0, 0, 533, 534, 535, 536, 537,
	538, 541, 0, 0, 539, 540, 542, 543, 0, 544,
	545, 547, 550, 546, 548, 549, 551, 552, 565, 566,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 568, 0, 567, 0, 569, 570, 571, 572,
	573, 581, 583, 584, 579, 580, 582, 585, 586, 588,
	589, 576, 577, 578, 0, 587, 574, 0, 575, 344,
	0, 590, 591, 592, 593, 0, 834, 594, 835, 597,
	598, 0, 0, 599, 0, 600, 0, 0, 602, 603,
	604, 0, 0, 605, 606, 836, 0, 607, 0, 837,
	608, 609, 601, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 620, 621, 838, 622, 623, 624,
	839, 625, 626, 627, 840, 628, 841, 629, 630, 0,
	631, 632, 633, 0, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 842, 644, 645, 647, 646, 648,
	649, 0, 650, 0, 651, 652, 653, 0, 0, 0,
	0, 0, 654, 655, 657, 0, 658, 659, 660, 661,
	662, 656, 663, 664, 665, 666, 667, 668, 669, 0,
	671, 672, 670, 673, 674, 0, 675, 676, 677, 678,
	679, 843, 680, 0, 681, 682, 690, 691, 692, 683,
	684, 686, 693, 685, 694, 695, 696, 697, 699, 698,
	0, 701, 702, 700, 703, 704, 705, 706, 0, 707,
	844, 708, 687, 688, 709, 710, 711, 0, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 845, 0, 721,
	0, 722, 723, 724, 725, 726, 727, 729, 689, 730,
	731, 732, 737, 738, 846, 733, 734, 735, 736, 847,
	740, 741, 742, 743, 0, 744, 745, 0, 739, 728,
	0, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	755, 0, 756, 848, 849, 850, 851, 0, 768, 0,
	757, 759, 760, 761, 762, 852, 763, 853, 0, 764,
	765, 766, 767, 758, 769, 770, 0, 0, 771, 772,
	773, 774, 776, 778, 779, 780, 775, 777, 781, 0,
	782, 0, 0, 783, 784, 785, 854, 855, 856, 0,
	787, 788, 786, 789, 790, 793, 791, 792, 857, 796,
	513, 797, 798, 799, 794, 795, 337, 0, 0, 0,
	800, 801, 858, 802, 803, 804, 0, 0, 0, 0,
	0, 0, 0, 345, 346, 348, 347, 349, 350, 351,
	352, 0, 353, 354, 0, 0, 0, 0, 0, 805,
	0, 0, 0, 356, 0, 355, 0, 357, 358, 359,
	0, 360, 361, 362, 363, 364, 365, 366, 367, 806,
	807, 0, 368, 808, 369, 809, 0, 810, 370, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 0, 0,
	0, 380, 811, 812, 813, 0, 381, 382, 383, 384,
	814, 0, 0, 0, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 0, 394, 395, 396, 393, 397, 398,
	0, 399, 0, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 412, 0, 0,
	0, 0, 0, 0, 0, 413, 414, 415, 2631, 417,
	0, 418, 420, 421, 815, 422, 816, 0, 425, 427,
	419, 423, 0, 426, 424, 428, 429, 0, 430, 431,
	432, 433, 0, 0, 434, 435, 436, 0, 437, 438,
	440, 439, 0, 441, 442, 443, 0, 444, 445, 817,
	446, 447, 448, 450, 452, 449, 451, 453, 454, 455,
	456, 457, 818, 819, 458, 459, 0, 340, 0, 0,
	0, 0, 0, 460, 461, 462, 820, 0, 0, 0,
	463, 0, 465, 469, 466, 467, 468, 470, 0, 464,
	471, 472, 0, 0, 473, 474, 475, 821, 822, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	486, 823, 0, 824, 487, 0, 488, 489, 490, 491,
	492, 493, 494, 825, 826, 827, 595, 0, 495, 496,
	497, 0, 498, 499, 500, 501, 502, 503, 504, 0,
	0, 0, 505, 506, 507, 508, 0, 342, 341, 343,
	0, 828, 509, 596, 510, 829, 830, 0, 831, 0,
	511, 512, 515, 0, 832, 0, 514, 516, 517, 0,
	518, 0, 0, 0, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 528, 527, 0, 530, 833, 529, 0,
	531, 532, 0, 0, 533, 534, 535, 536, 537, 538,
	541, 0, 0, 539, 540, 542, 543, 0, 544, 545,
	547, 550, 546, 548, 549, 551, 552, 565, 566, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 568, 0, 567, 0, 569, 570, 571, 572, 573,
	581, 583, 584, 579, 580, 582, 585, 586, 588, 589,
	576, 577, 578, 0, 587, 574, 0, 575, 344, 0,
	590, 591, 592, 593, 0, 834, 594, 835, 597, 598,
	0, 0, 599, 0, 600, 0, 0, 602, 603, 604,
	0, 0, 605, 606, 836, 0, 607, 0, 837, 608,
	609, 601, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 0, 620, 621, 838, 622, 623, 624, 839,
	625, 626, 627, 840, 628, 841, 629, 630, 0, 631,
	632, 633, 0, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 842, 644, 645, 647, 646, 648, 649,
	0, 650, 0, 651, 652, 653, 0, 0, 0, 0,
	0, 654, 655, 657, 0, 658, 659, 660, 661, 662,
	656, 663, 664, 665, 666, 667, 668, 669, 0, 671,
	672, 670, 673, 674, 0, 675, 676, 677, 678, 679,
	843, 680, 0, 681, 682, 690, 691, 692, 683, 684,
	686, 693, 685, 694, 695, 696, 697, 699, 698, 0,
	701, 702, 700, 703, 704, 705, 706, 0, 707, 844,
	708, 687, 688, 709, 710, 711, 0, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 845, 0, 721, 0,
	722, 723, 724, 725, 726, 727, 729, 689, 730, 731,
	732, 737, 738, 846, 733, 734, 735, 736, 847, 740,
	741, 742, 743, 0, 744, 745, 0, 739, 728, 0,
	746, 747, 748, 749, 750, 751, 752, 753, 754, 755,
	0, 756, 848, 849, 850, 851, 0, 768, 0, 757,
	759, 760, 761, 762, 852, 763, 853, 0, 764, 765,
	766, 767, 758, 769, 770, 0, 0, 771, 772, 773,
	774, 776, 778, 779, 780, 775, 777, 781, 0, 782,
	0, 0, 783, 784, 785, 854, 855, 856, 0, 787,
	788, 786, 789, 790, 793, 791, 792, 857, 796, 513,
	797, 798, 799, 794, 795, 337, 0, 0, 0, 800,
	801, 858, 802, 803, 804, 0, 0, 0, 0, 0,
	0, 0, 345, 346, 348, 347, 349, 350, 351, 352,
	0, 353, 354, 0, 0, 0, 0, 0, 805, 0,
	0, 0, 356, 0, 355, 0, 357, 358, 359, 0,
	360, 361, 362, 363, 364, 365, 366, 367, 806, 807,
	0, 368, 808, 369, 809, 0, 810, 370, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 0, 0, 0,
	380, 811, 812, 813, 0, 381, 382, 383, 384, 814,
	0, 0, 0, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 0, 394, 395, 396, 393, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 412, 0, 0, 0,
	0, 0, 0, 0, 413, 414, 415, 2629, 417, 0,
	418, 420, 421, 815, 422, 816, 0, 425, 427, 419,
	423, 0, 426, 424, 428, 429, 0, 430, 431, 432,
	433, 0, 0, 434, 435, 436, 0, 437, 438, 440,
	439, 0, 441, 442, 443, 0, 444, 445, 817, 446,
	447, 448, 450, 452, 449, 451, 453, 454, 455, 456,
	457, 818, 819, 458, 459, 0, 340, 0, 0, 0,
	0, 0, 460, 461, 462, 820, 0, 0, 0, 463,
	0, 465, 469, 466, 467, 468, 470, 0, 464, 471,
	472, 0, 0, 473, 474, 475, 821, 822, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 486,
	823, 0, 824, 487, 0, 488, 489, 490, 491, 492,
	493, 494, 825, 826, 827, 595, 0, 495, 496, 497,
	0, 498, 499, 500, 501, 502, 503, 504, 0, 0,
	0, 505, 506, 507, 508, 0, 342, 341, 343, 0,
	828, 509, 596, 510, 829, 830, 0, 831, 0, 511,
	512, 515, 0, 832, 0, 514, 516, 517, 0, 518,
	0, 0, 0, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 528, 527, 0, 530, 833, 529, 0, 531,
	532, 0, 0, 533, 534, 535, 536, 537, 538, 541,
	0, 0, 539, 540, 542, 543, 0, 544, 545, 547,
	550, 546, 548, 549, 551, 552, 565, 566, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	568, 0, 567, 0, 569, 570, 571, 572, 573, 581,
	583, 584, 579, 580, 582, 585, 586, 588, 589, 576,
	577, 578, 0, 587, 574, 0, 575, 344, 0, 590,
	591, 592, 593, 0, 834, 594, 835, 597, 598, 0,
	0, 599, 0, 600, 0, 0, 602, 603, 604, 0,
	0, 605, 606, 836, 0, 607, 0, 837, 608, 609,
	601, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 0, 620, 621, 838, 622, 623, 624, 839, 625,
	626, 627, 840, 628, 841, 629, 630, 0, 631, 632,
	633, 0, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 842, 644, 645, 647, 646, 648, 649, 0,
	650, 0, 651, 652, 653, 0, 0, 0, 0, 0,
	654, 655, 657, 0, 658, 659, 660, 661, 662, 656,
	663, 664, 665, 666, 667, 668, 669, 0, 671, 672,
	670, 673, 674, 0, 675, 676, 677, 678, 679, 843,
	680, 0, 681, 682, 690, 691, 692, 683, 684, 686,
	693, 685, 694, 695, 696, 697, 699, 698, 0, 701,
	702, 700, 703, 704, 705, 706, 0, 707, 844, 708,
	687, 688, 709, 710, 711, 0, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 845, 0, 721, 0, 722,
	723, 724, 725, 726, 727, 729, 689, 730, 731, 732,
	737, 738, 846, 733, 734, 735, 736, 847, 740, 741,
	742, 743, 0, 744, 745, 0, 739, 728, 0, 746,
	747, 748, 749, 750, 751, 752, 753, 754, 755, 0,
	756, 848, 849, 850, 851, 0, 768, 0, 757, 759,
	760, 761, 762, 852, 763, 853, 0, 764, 765, 766,
	767, 758, 769, 770, 0, 0, 771, 772, 773, 774,
	776, 778, 779, 780, 775, 777, 781, 0, 782, 0,
	0, 783, 784, 785, 854, 855, 856, 0, 787, 788,
	786, 789, 790, 793, 791, 792, 857, 796, 513, 797,
	798, 799, 794, 795, 337, 0, 0, 0, 800, 801,
	858, 802, 803, 804, 0, 0, 0, 0, 0, 0,
	0, 345, 346, 348, 347, 349, 350, 351, 352, 0,
	353, 354, 0, 0, 0, 0, 0, 805, 0, 0,
	0, 356, 0, 355, 0, 357, 358, 359, 0, 360,
	361, 362, 363, 364, 365, 366, 367, 806, 807, 0,
	368, 808, 369, 809, 0, 810, 370, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 0, 0, 0, 380,
	811, 812, 813, 0, 381, 382, 383, 384, 814, 0,
	0, 0, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 0, 394, 395, 396, 393, 397, 398, 0, 399,
	0, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 412, 0, 0, 0, 0,
	0, 0, 0, 413, 414, 415, 2627, 417, 0, 418,
	420, 421, 815, 422, 816, 0, 425, 427, 419, 423,
	0, 426, 424, 428, 429, 0, 430, 431, 432, 433,
	0, 0, 434, 435, 436, 0, 437, 438, 440, 439,
	0, 441, 442, 443, 0, 444, 445, 817, 446, 447,
	448, 450, 452, 449, 451, 453, 454, 455, 456, 457,
	818, 819, 458, 459, 0, 340, 0, 0, 0, 0,
	0, 460, 461, 462, 820, 0, 0, 0, 463, 0,
	465, 469, 466, 467, 468, 470, 0, 464, 471, 472,
	0, 0, 473, 474, 475, 821, 822, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 486, 823,
	0, 824, 487, 0, 488, 489, 490, 491, 492, 493,
	494, 825, 826, 827, 595, 0, 495, 496, 497, 0,
	498, 499, 500, 501, 502, 503, 504, 0, 0, 0,
	505, 506, 507, 508, 0, 342, 341, 343, 0, 828,
	509, 596, 510, 829, 830, 0, 831, 0, 511, 512,
	515, 0, 832, 0, 514, 516, 517, 0, 518, 0,
	0, 0, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 528, 527, 0, 530, 833, 529, 0, 531, 532,
	0, 0, 533, 534, 535, 536, 537, 538, 541, 0,
	0, 539, 540, 542, 543, 0, 544, 545, 547, 550,
	546, 548, 549, 551, 552, 565, 566, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 568,
	0, 567, 0, 569, 570, 571, 572, 573, 581, 583,
	584, 579, 580, 582, 585, 586, 588, 589, 576, 577,
	578, 0, 587, 574, 0, 575, 344, 0, 590, 591,
	592, 593, 0, 834, 594, 835, 597, 598, 0, 0,
	599, 0, 600, 0, 0, 602, 603, 604, 0, 0,
	605, 606, 836, 0, 607, 0, 837, 608, 609, 601,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	0, 620, 621, 838, 622, 623, 624, 839, 625, 626,
	627, 840, 628, 841, 629, 630, 0, 631, 632, 633,
	0, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 842, 644, 645, 647, 646, 648, 649, 0, 650,
	0, 651, 652, 653, 0, 0, 0, 0, 0, 654,
	655, 657, 0, 658, 659, 660, 661, 662, 656, 663,
	664, 665, 666, 667, 668, 669, 0, 671, 672, 670,
	673, 674, 0, 675, 676, 677, 678, 679, 843, 680,
	0, 681, 682, 690, 691, 692, 683, 684, 686, 693,
	685, 694, 695, 696, 697, 699, 698, 0, 701, 702,
	700, 703, 704, 705, 706, 0, 707, 844, 708, 687,
	688, 709, 710, 711, 0, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 845, 0, 721, 0, 722, 723,
	724, 725, 726, 727, 729, 689, 730, 731, 732, 737,
	738, 846, 733, 734, 735, 736, 847, 740, 741, 742,
	743, 0, 744, 745, 0, 739, 728, 0, 746, 747,
	748, 749, 750, 751, 752, 753, 754, 755, 0, 756,
	848, 849, 850, 851, 0, 768, 0, 757, 759, 760,
	761, 762, 852, 763, 853, 0, 764, 765, 766, 767,
	758, 769, 770, 0, 0, 771, 772, 773, 774, 776,
	778, 779, 780, 775, 777, 781, 0, 782, 0, 0,
	783, 784, 785, 854, 855, 856, 0, 787, 788, 786,
	789, 790, 793, 791, 792, 857, 796, 513, 797, 798,
	799, 794, 795, 337, 0, 0, 0, 800, 801, 858,
	802, 803, 804, 0, 0, 0, 0, 0, 0, 0,
	345, 346, 348, 347, 349, 350, 351, 352, 0, 353,
	354, 0, 0, 0, 0, 0, 805, 0, 0, 0,
	356, 0, 355, 0, 357, 358, 359, 0, 360, 361,
	362, 363, 364, 365, 366, 367, 806, 807, 0, 368,
	808, 369, 809, 0, 810, 370, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 0, 0, 0, 380, 811,
	812, 813, 0, 381, 382, 383, 384, 814, 0, 0,
	0, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	0, 394, 395, 396, 393, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 412, 0, 0, 0, 0, 0,
	0, 0, 413, 414, 415, 416, 417, 0, 418, 420,
	421, 815, 422, 816, 0, 425, 427, 419, 423, 0,
	426, 424, 428, 429, 0, 430, 431, 432, 433, 0,
	0, 434, 435, 436, 0, 437, 438, 440, 439, 0,
	441, 442, 443, 0, 444, 445, 817, 446, 447, 448,
	450, 452, 449, 451, 453, 454, 455, 456, 457, 818,
	819, 458, 459, 0, 340, 0, 0, 0, 0, 0,
	460, 461, 462, 820, 0, 0, 0, 463, 0, 465,
	469, 466, 467, 468, 470, 0, 464, 471, 472, 0,
	0, 473, 474, 475, 821, 822, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 0, 485, 486, 823, 0,
	824, 487, 0, 488, 489, 490, 491, 492, 493, 494,
	2509, 826, 827, 595, 0, 495, 496, 497, 0, 498,
	499, 500, 501, 502, 503, 504, 0, 0, 0, 505,
	506, 507, 508, 0, 342, 341, 343, 0, 828, 509,
	596, 510, 829, 830, 0, 831, 0, 511, 512, 515,
	0, 832, 0, 514, 516, 517, 0, 518, 0, 0,
	0, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	528, 527, 0, 530, 833, 529, 0, 531, 532, 0,
	0, 533, 534, 535, 536, 537, 538, 541, 0, 0,
	539, 540, 542, 543, 0, 544, 545, 547, 550, 546,
	548, 549, 551, 552, 565, 566, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 568, 0,
	567, 0, 569, 570, 571, 572, 573, 581, 583, 584,
	579, 580, 582, 585, 586, 588, 589, 576, 577, 578,
	0, 587, 574, 0, 575, 344, 0, 590, 591, 592,
	593, 0, 834, 594, 835, 597, 598, 0, 0, 599,
	0, 600, 0, 0, 602, 603, 604, 0, 0, 605,
	606, 836, 0, 607, 0, 837, 608, 609, 601, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 0,
	620, 621, 838, 622, 623, 624, 839, 625, 626, 627,
	840, 628, 841, 629, 630, 0, 631, 632, 633, 0,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	842, 644, 645, 647, 646, 648, 649, 0, 650, 0,
	651, 652, 653, 0, 0, 0, 0, 0, 654, 655,
	657, 0, 658, 659, 660, 661, 662, 656, 663, 664,
	665, 666, 667, 668, 669, 0, 671, 672, 670, 673,
	674, 0, 675, 676, 677, 678, 679, 843, 680, 0,
	681, 682, 690, 691, 692, 683, 684, 686, 693, 685,
	694, 695, 696, 697, 699, 698, 0, 701, 702, 700,
	703, 704, 705, 706, 0, 707, 844, 708, 687, 688,
	709, 710, 711, 0, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 845, 0, 721, 0, 722, 723, 724,
	725, 726, 727, 729, 689, 730, 731, 732, 737, 738,
	846, 733, 734, 735, 736, 847, 740, 741, 742, 743,
	0, 744, 745, 0, 739, 728, 0, 746, 747, 748,
	749, 750, 751, 752, 753, 754, 755, 0, 756, 848,
	849, 850, 851, 0, 768, 0, 757, 759, 760, 761,
	762, 852, 763, 853, 0, 764, 765, 766, 767, 758,
	769, 770, 0, 0, 771, 772, 773, 774, 776, 778,
	779, 780, 775, 777, 781, 0, 782, 0, 0, 783,
	784, 785, 854, 855, 856, 0, 787, 788, 786, 789,
	790, 793, 791, 792, 857, 796, 513, 797, 798, 799,
	794, 795, 337, 0, 0, 0, 800, 801, 858, 802,
	803, 804, 0, 0, 0, 0, 0, 0, 0, 345,
	346, 348, 347, 349, 350, 351, 352, 0, 353, 354,
	0, 0, 0, 0, 0, 805, 0, 0, 0, 356,
	0, 355, 0, 357, 358, 359, 0, 360, 361, 362,
	363, 364, 365, 366, 367, 806, 807, 0, 368, 808,
	369, 809, 0, 810, 370, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 0, 0, 0, 380, 811, 812,
	813, 0, 381, 382, 383, 384, 814, 0, 0, 0,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 0,
	394, 395, 396, 393, 397, 398, 0, 399, 0, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 412, 0, 0, 0, 0, 0, 0,
	0, 413, 414, 415, 416, 417, 0, 418, 420, 421,
	815, 422, 816, 0, 425, 427, 419, 423, 0, 426,
	424, 428, 429, 0, 430, 431, 432, 433, 0, 0,
	434, 435, 436, 0, 437, 438, 440, 439, 0, 441,
	442, 443, 0, 444, 445, 817, 446, 447, 448, 450,
	452, 449, 451, 453, 454, 455, 456, 457, 818, 819,
	458, 459, 0, 340, 0, 0, 0, 0, 0, 460,
	461, 462, 820, 0, 0, 0, 463, 0, 465, 469,
	466, 467, 468, 470, 0, 464, 471, 472, 0, 0,
	473, 474, 475, 821, 822, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 486, 823, 0, 824,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 2503,
	826, 827, 595, 0, 495, 496, 497, 0, 498, 499,
	500, 501, 502, 503, 504, 0, 0, 0, 505, 506,
	507, 508, 0, 342, 341, 343, 0, 828, 509, 596,
	510, 829, 830, 0, 831, 0, 511, 512, 515, 0,
	832, 0, 514, 516, 517, 0, 518, 0, 0, 0,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 528,
	527, 0, 530, 833, 529, 0, 531, 532, 0, 0,
	533, 534, 535, 536, 537, 538, 541, 0, 0, 539,
	540, 542, 543, 0, 544, 545, 547, 550, 546, 548,
	549, 551, 552, 565, 566, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 568, 0, 567,
	0, 569, 570, 571, 572, 573, 581, 583, 584, 579,
	580, 582, 585, 586, 588, 589, 576, 577, 578, 0,
	587, 574, 0, 575, 344, 0, 590, 591, 592, 593,
	0, 834, 594, 835, 597, 598, 0, 0, 599, 0,
	600, 0, 0, 602, 603, 604, 0, 0, 605, 606,
	836, 0, 607, 0, 837, 608, 609, 601, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 0, 620,
	621, 838, 622, 623, 624, 839, 625, 626, 627, 840,
	628, 841, 629, 630, 0, 631, 632, 633, 0, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 842,
	644, 645, 647, 646, 648, 649, 0, 650, 0, 651,
	652, 653, 0, 0, 0, 0, 0, 654, 655, 657,
	0, 658, 659, 660, 661, 662, 656, 663, 664, 665,
	666, 667, 668, 669, 0, 671, 672, 670, 673, 674,
	0, 675, 676, 677, 678, 679, 843, 680, 0, 681,
	682, 690, 691, 692, 683, 684, 686, 693, 685, 694,
	695, 696, 697, 699, 698, 0, 701, 702, 700, 703,
	704, 705, 706, 0, 707, 844, 708, 687, 688, 709,
	710, 711, 0, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 845, 0, 721, 0, 722, 723, 724, 725,
	726, 727, 729, 689, 730, 731, 732, 737, 738, 846,
	733, 734, 735, 736, 847, 740, 741, 742, 743, 0,
	744, 745, 0, 739, 728, 0, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 0, 756, 848, 849,
	850, 851, 0, 768, 0, 757, 759, 760, 761, 762,
	852, 763, 853, 0, 764, 765, 766, 767, 758, 769,
	770, 0, 0, 771, 772, 773, 774, 776, 778, 779,
	780, 775, 777, 781, 0, 782, 0, 0, 783, 784,
	785, 854, 855, 856, 0, 787, 788, 786, 789, 790,
	793, 791, 792, 857, 796, 513, 797, 798, 799, 794,
	795, 925, 0, 337, 0, 800, 801, 858, 802, 803,
	804, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 346, 348, 347, 349, 923, 351, 352, 912, 353,
	354, 0, 0, 0, 0, 0, 805, 0, 0, 0,
	356, 0, 355, 0, 357, 358, 359, 0, 360, 361,
	362, 363, 364, 365, 366, 367, 806, 807, 0, 368,
	808, 369, 809, 0, 810, 370, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 0, 0, 0, 380, 811,
	812, 813, 0, 381, 382, 383, 384, 814, 0, 0,
	0, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	0, 394, 395, 396, 393, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 915, 407, 408,
	409, 0, 410, 411, 412, 0, 0, 0, 0, 0,
	0, 0, 413, 414, 415, 416, 417, 0, 418, 420,
	421, 815, 422, 816, 0, 425, 427, 419, 423, 0,
	426, 424, 428, 429, 0, 430, 431, 432, 433, 0,
	0, 434, 435, 436, 0, 437, 438, 440, 439, 0,
	441, 442, 443, 0, 444, 445, 817, 446, 447, 448,
	450, 452, 449, 451, 453, 454, 455, 456, 457, 818,
	819, 458, 459, 0, 0, 0, 0, 0, 0, 0,
	460, 461, 462, 820, 0, 0, 0, 463, 0, 465,
	469, 466, 467, 468, 470, 0, 464, 471, 472, 0,
	0, 473, 474, 475, 821, 822, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 921, 485, 486, 823, 0,
	824, 487, 0, 488, 489, 490, 491, 492, 493, 494,
	825, 826, 827, 595, 0, 495, 496, 497, 0, 498,
	499, 500, 501, 502, 503, 504, 0, 0, 0, 505,
	506, 507, 508, 0, 0, 0, 0, 0, 828, 509,
	596, 510, 829, 830, 0, 831, 0, 511, 512, 515,
	0, 832, 0, 514, 516, 517, 0, 518, 0, 0,
	0, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	528, 527, 0, 530, 833, 529, 0, 531, 532, 0,
	0, 533, 534, 535, 536, 537, 538, 541, 0, 0,
	539, 540, 542, 543, 0, 544, 545, 547, 550, 546,
	548, 549, 551, 552, 565, 566, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 568, 0,
	567, 0, 569, 570, 571, 572, 573, 581, 583, 584,
	579, 580, 582, 585, 586, 588, 589, 576, 577, 578,
	0, 587, 574, 0, 575, 0, 0, 590, 591, 592,
	593, 0, 834, 594, 835, 597, 598, 0, 0, 599,
	0, 600, 0, 0, 602, 603, 604, 0, 0, 605,
	606, 836, 0, 607, 0, 837, 608, 609, 601, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 0,
	620, 621, 838, 622, 623, 624, 839, 625, 626, 627,
	840, 628, 841, 629, 630, 0, 631, 632, 633, 0,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	842, 644, 645, 647, 646, 648, 649, 0, 650, 0,
	651, 652, 653, 0, 0, 0, 0, 0, 654, 655,
	657, 0, 658, 659, 660, 661, 662, 656, 663, 664,
	665, 666, 667, 668, 669, 0, 671, 672, 670, 673,
	674, 0, 675, 676, 677, 678, 679, 843, 680, 0,
	681, 682, 690, 691, 692, 683, 684, 686, 693, 685,
	694, 695, 696, 697, 699, 698, 917, 701, 702, 700,
	703, 704, 705, 706, 0, 707, 844, 708, 687, 688,
	709, 710, 711, 0, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 845, 0, 721, 0, 722, 723, 724,
	725, 726, 727, 729, 689, 730, 731, 732, 737, 738,
	846, 733, 734, 735, 736, 847, 740, 741, 742, 743,
	0, 744, 924, 0, 739, 728, 0, 746, 747, 748,
	749, 750, 751, 752, 753, 754, 755, 0, 756, 848,
	849, 850, 851, 0, 768, 0, 757, 759, 760, 761,
	762, 852, 763, 853, 0, 764, 765, 766, 767, 758,
	769, 770, 0, 0, 771, 772, 773, 774, 776, 778,
	779, 780, 775, 777, 781, 0, 782, 0, 0, 783,
	784, 785, 854, 855, 856, 0, 787, 788, 786, 789,
	790, 793, 791, 792, 857, 796, 513, 797, 798, 799,
	794, 795, 911, 0, 337, 0, 800, 801, 858, 802,
	803, 804, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 346, 348, 347, 349, 350, 351, 352, 912,
	353, 354, 0, 0, 0, 0, 0, 805, 0, 0,
	0, 356, 0, 355, 0, 357, 358, 359, 0, 360,
	361, 362, 363, 364, 365, 366, 367, 806, 807, 0,
	368, 808, 369, 809, 0, 810, 370, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 0, 0, 0, 380,
	811, 812, 813, 0, 381, 382, 383, 384, 814, 0,
	0, 0, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 0, 394, 395, 396, 393, 397, 398, 0, 399,
	0, 400, 401, 402, 403, 404, 405, 406, 915, 407,
	408, 409, 0, 410, 411, 412, 0, 0, 0, 0,
	0, 0, 0, 413, 414, 415, 416, 417, 0, 418,
	420, 421, 815, 422, 816, 0, 425, 427, 419, 423,
	0, 426, 424, 428, 429, 0, 430, 431, 432, 433,
	0, 0, 434, 435, 436, 0, 437, 438, 440, 439,
	0, 441, 442, 443, 0, 444, 445, 817, 446, 447,
	448, 450, 452, 449, 451, 453, 454, 455, 456, 457,
	818, 819, 458, 459, 0, 0, 0, 0, 0, 0,
	0, 460, 461, 462, 820, 0, 0, 0, 463, 0,
	465, 469, 466, 467, 468, 470, 0, 464, 471, 472,
	0, 0, 473, 474, 475, 821, 822, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 916, 485, 486, 823,
	0, 824, 487, 0, 488, 489, 490, 491, 492, 493,
	494, 825, 826, 827, 595, 0, 495, 496, 497, 0,
	498, 499, 500, 501, 502, 503, 504, 0, 0, 0,
	505, 506, 507, 508, 0, 0, 0, 0, 0, 828,
	509, 596, 510, 829, 830, 0, 831, 0, 511, 512,
	515, 0, 832, 0, 514, 516, 517, 0, 518, 0,
	0, 0, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 528, 527, 0, 530, 833, 529, 0, 531, 532,
	0, 0, 533, 534, 535, 536, 537, 538, 541, 0,
	0, 539, 540, 542, 543, 0, 544, 545, 547, 550,
	546, 548, 549, 551, 552, 565, 566, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 568,
	0, 567, 0, 569, 570, 571, 572, 573, 581, 583,
	584, 579, 580, 582, 585, 586, 588, 589, 576, 577,
	578, 0, 587, 574, 0, 575, 0, 0, 590, 591,
	592, 593, 0, 834, 594, 835, 597, 598, 0, 0,
	599, 0, 600, 0, 0, 602, 603, 604, 0, 0,
	605, 606, 836, 0, 607, 0, 837, 608, 609, 601,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	0, 620, 621, 838, 622, 623, 624, 839, 625, 626,
	627, 840, 628, 841, 629, 630, 0, 631, 632, 633,
	0, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 842, 644, 645, 647, 646, 648, 649, 0, 650,
	0, 651, 652, 653, 0, 0, 0, 0, 0, 654,
	655, 657, 0, 658, 659, 660, 661, 662, 656, 663,
	664, 665, 666, 667, 668, 669, 0, 671, 672, 670,
	673, 674, 0, 675, 676, 677, 678, 679, 843, 680,
	0, 681, 682, 690, 691, 692, 683, 684, 686, 693,
	685, 694, 695, 696, 697, 699, 698, 917, 701, 702,
	700, 703, 704, 705, 706, 0, 707, 844, 708, 687,
	688, 709, 710, 711, 0, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 845, 0, 721, 0, 722, 723,
	724, 725, 726, 727, 729, 689, 730, 731, 732, 737,
	738, 846, 733, 734, 735, 736, 847, 740, 741, 742,
	743, 0, 744, 910, 0, 739, 728, 0, 746, 747,
	748, 749, 750, 751, 752, 753, 754, 755, 0, 756,
	848, 849, 850, 851, 0, 768, 0, 757, 759, 760,
	761, 762, 852, 763, 853, 0, 764, 765, 766, 767,
	758, 769, 770, 0, 0, 771, 772, 773, 774, 776,
	778, 779, 780, 775, 777, 781, 0, 782, 0, 0,
	783, 784, 785, 854, 855, 856, 0, 787, 788, 786,
	789, 790, 793, 791, 792, 857, 796, 513, 797, 798,
	799, 794, 795, 337, 0, 0, 0, 800, 801, 858,
	802, 803, 804, 0, 0, 0, 0, 0, 0, 0,
	345, 346, 348, 347, 349, 350, 351, 352, 912, 353,
	354, 0, 0, 0, 0, 0, 805, 0, 0, 0,
	356, 0, 355, 0, 357, 358, 359, 0, 360, 361,
	362, 363, 364, 365, 366, 367, 806, 807, 0, 368,
	808, 369, 809, 0, 810, 370, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 0, 0, 0, 380, 811,
	812, 813, 0, 381, 382, 383, 384, 814, 0, 0,
	0, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	0, 394, 395, 396, 393, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 915, 407, 408,
	409, 0, 410, 411, 412, 0, 0, 0, 0, 0,
	0, 0, 413, 414, 415, 416, 417, 0, 418, 420,
	421, 815, 422, 816, 0, 425, 427, 419, 423, 0,
	426, 424, 428, 429, 0, 430, 431, 432, 433, 0,
	0, 434, 435, 436, 0, 437, 438, 440, 439, 0,
	441, 442, 443, 0, 444, 445, 817, 446, 447, 448,
	450, 452, 449, 451, 453, 454, 455, 456, 457, 818,
	819, 458, 459, 0, 0, 0, 0, 0, 0, 0,
	460, 461, 462, 820, 0, 0, 0, 463, 0, 465,
	469, 466, 467, 468, 470, 0, 464, 471, 472, 0,
	0, 473, 474, 475, 821, 822, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 916, 485, 486, 823, 0,
	824, 487, 0, 488, 489, 490, 491, 492, 493, 494,
	825, 826, 827, 595, 0, 495, 496, 497, 0, 498,
	499, 500, 501, 502, 503, 504, 0, 0, 0, 505,
	506, 507, 508, 0, 0, 0, 0, 0, 828, 509,
	596, 510, 829, 830, 0, 831, 0, 511, 512, 515,
	0, 832, 0, 514, 516, 517, 0, 518, 0, 0,
	0, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	528, 527, 0, 530, 833, 529, 0, 531, 532, 0,
	0, 533, 534, 535, 536, 537, 538, 541, 0, 0,
	539, 540, 542, 543, 0, 544, 545, 547, 550, 546,
	548, 549, 551, 552, 565, 566, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 568, 0,
	567, 0, 569, 570, 571, 572, 573, 581, 583, 584,
	579, 580, 582, 585, 586, 588, 589, 576, 577, 578,
	0, 587, 574, 0, 575, 0, 0, 590, 591, 592,
	593, 0, 834, 594, 835, 597, 598, 0, 0, 599,
	0, 600, 0, 0, 602, 603, 604, 0, 0, 605,
	606, 836, 0, 607, 0, 837, 608, 609, 601, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 0,
	620, 621, 838, 622, 623, 624, 839, 625, 626, 627,
	840, 628, 841, 629, 630, 0, 631, 632, 633, 0,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	842, 644, 645, 647, 646, 648, 649, 0, 650, 0,
	651, 652, 653, 0, 0, 0, 0, 0, 654, 655,
	657, 0, 658, 659, 660, 661, 662, 656, 663, 664,
	665, 666, 667, 668, 669, 0, 671, 672, 670, 673,
	674, 0, 675, 676, 677, 678, 679, 843, 680, 0,
	681, 682, 690, 691, 692, 683, 684, 686, 693, 685,
	694, 695, 696, 697, 699, 698, 917, 701, 702, 700,
	703, 704, 705, 706, 0, 707, 844, 708, 687, 688,
	709, 710, 711, 0, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 845, 0, 721, 0, 722, 723, 724,
	725, 726, 727, 729, 689, 730, 731, 732, 737, 738,
	846, 733, 734, 735, 736, 847, 740, 741, 742, 743,
	0, 744, 745, 0, 739, 728, 0, 746, 747, 748,
	749, 750, 751, 752, 753, 754, 755, 0, 756, 848,
	849, 850, 851, 0, 768, 0, 757, 759, 760, 761,
	762, 852, 763, 853, 0, 764, 765, 766, 767, 758,
	769, 770, 0, 0, 771, 772, 773, 774, 776, 778,
	779, 780, 775, 777, 781, 0, 782, 0, 0, 783,
	784, 785, 854, 855, 856, 0, 787, 788, 786, 789,
	790, 793, 791, 792, 857, 796, 513, 797, 798, 799,
	794, 795, 337, 0, 0, 0, 800, 801, 858, 802,
	803, 804, 0, 0, 0, 0, 0, 0, 0, 345,
	346, 348, 347, 349, 350, 351, 352, 912, 353, 354,
	0, 0, 0, 0, 0, 805, 0, 0, 0, 356,
	0, 355, 0, 357, 358, 359, 0, 360, 361, 362,
	363, 364, 365, 366, 367, 806, 807, 0, 368, 808,
	369, 809, 0, 810, 370, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 0, 0, 0, 380, 811, 812,
	813, 0, 381, 382, 383, 384, 814, 0, 0, 0,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 0,
	394, 395, 396, 393, 397, 398, 0, 399, 0, 400,
	401, 402, 403, 404, 405, 406, 915, 407, 408, 409,
	0, 410, 411, 412, 0, 0, 0, 0, 0, 0,
	0, 413, 414, 415, 416, 417, 0, 418, 420, 421,
	815, 422, 816, 0, 425, 427, 419, 423, 0, 426,
	424, 428, 429, 0, 430, 431, 432, 433, 0, 0,
	434, 435, 436, 0, 437, 438, 440, 439, 0, 441,
	442, 443, 0, 444, 445, 817, 446, 447, 448, 450,
	452, 449, 451, 453, 454, 455, 456, 457, 818, 819,
	458, 459, 0, 0, 0, 0, 0, 0, 0, 460,
	461, 462, 820, 0, 0, 0, 463, 0, 465, 469,
	466, 467, 468, 470, 0, 464, 471, 472, 0, 0,
	473, 474, 475, 821, 822, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 5564, 485, 486, 823, 0, 824,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 825,
	826, 827, 595, 0, 495, 496, 497, 0, 498, 499,
	500, 501, 502, 503, 504, 0, 0, 0, 505, 506,
	507, 508, 0, 0, 0, 0, 0, 828, 509, 596,
	510, 829, 830, 0, 831, 0, 511, 512, 515, 0,
	832, 0, 514, 516, 517, 0, 518, 0, 0, 0,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 528,
	527, 0, 530, 833, 529, 0, 531, 532, 0, 0,
	533, 534, 535, 536, 537, 538, 541, 0, 0, 539,
	540, 542, 543, 0, 544, 545, 547, 550, 546, 548,
	549, 551, 552, 565, 566, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 568, 0, 567,
	0, 569, 570, 571, 572, 573, 581, 583, 584, 579,
	580, 582, 585, 586, 588, 589, 576, 577, 578, 0,
	587, 574, 0, 575, 0, 0, 590, 591, 592, 593,
	0, 834, 594, 835, 597, 598, 0, 0, 599, 0,
	600, 0, 0, 602, 603, 604, 0, 0, 605, 606,
	836, 0, 607, 0, 837, 608, 609, 601, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 0, 620,
	621, 838, 622, 623, 624, 839, 625, 626, 627, 840,
	628, 841, 629, 630, 0, 631, 632, 633, 0, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 842,
	644, 645, 647, 646, 648, 649, 0, 650, 0, 651,
	652, 653, 0, 0, 0, 0, 0, 654, 655, 657,
	0, 658, 659, 660, 661, 662, 656, 663, 664, 665,
	666, 667, 668, 669, 0, 671, 672, 670, 673, 674,
	0, 675, 676, 677, 678, 679, 843, 680, 0, 681,
	682, 690, 691, 692, 683, 684, 686, 693, 685, 694,
	695, 696, 697, 699, 698, 917, 701, 702, 700, 703,
	704, 705, 706, 0, 707, 844, 708, 687, 688, 709,
	710, 711, 0, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 845, 0, 721, 0, 722, 723, 724, 725,
	726, 727, 729, 689, 730, 731, 732, 737, 738, 846,
	733, 734, 735, 736, 847, 740, 741, 742, 743, 0,
	744, 745, 0, 739, 728, 0, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 0, 756, 848, 849,
	850, 851, 0, 768, 0, 757, 759, 760, 761, 762,
	852, 763, 853, 0, 764, 765, 766, 767, 758, 769,
	770, 0, 0, 771, 772, 773, 774, 776, 778, 779,
	780, 775, 777, 781, 0, 782, 0, 0, 783, 784,
	785, 854, 855, 856, 0, 787, 788, 786, 789, 790,
	793, 791, 792, 857, 796, 513, 797, 798, 799, 794,
	795, 337, 0, 0, 0, 800, 801, 858, 802, 803,
	804, 0, 0, 0, 0, 0, 0, 0, 345, 346,
	348, 347, 349, 350, 351, 352, 912, 353, 354, 0,
	0, 0, 0, 0, 805, 0, 0, 0, 356, 0,
	355, 0, 357, 358, 359, 0, 360, 361, 362, 363,
	364, 365, 366, 367, 806, 807, 0, 368, 808, 369,
	809, 0, 810, 370, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 0, 0, 0, 380, 811, 812, 813,
	0, 381, 382, 383, 384, 814, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 0, 394,
	395, 396, 393, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 915, 407, 408, 409, 0,
	410, 411, 412, 0, 0, 0, 0, 0, 0, 0,
	413, 414, 415, 416, 417, 0, 418, 420, 421, 815,
	422, 816, 0, 425, 427, 419, 423, 0, 426, 424,
	428, 429, 0, 430, 431, 432, 433, 0, 0, 434,
	435, 436, 0, 437, 438, 440, 439, 0, 441, 442,
	443, 0, 444, 445, 817, 446, 447, 448, 450, 452,
	449, 451, 453, 454, 455, 456, 457, 818, 819, 458,
	459, 0, 0, 0, 0, 0, 0, 0, 460, 461,
	462, 820, 0, 0, 0, 463, 0, 465, 469, 466,
	467, 468, 470, 0, 464, 471, 472, 0, 0, 473,
	474, 475, 821, 822, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 916, 485, 486, 823, 0, 824, 487,
	0, 488, 489, 490, 491, 492, 493, 494, 825, 826,
	827, 595, 0, 495, 496, 497, 0, 498, 499, 500,
	501, 502, 503, 504, 0, 0, 0, 505, 506, 507,
	508, 0, 0, 0, 0, 0, 828, 509, 596, 510,
	829, 830, 0, 831, 0, 511, 512, 515, 0, 832,
	0, 514, 516, 517, 0, 518, 0, 0, 0, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 528, 527,
	0, 530, 833, 529, 0, 531, 532, 0, 0, 533,
	534, 535, 536, 537, 538, 541, 0, 0, 539, 540,
	542, 543, 0, 544, 545, 547, 550, 546, 548, 549,
	551, 552, 565, 566, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 568, 0, 567, 0,
	569, 570, 571, 572, 573, 581, 583, 584, 579, 580,
	582, 585, 586, 588, 589, 576, 577, 578, 0, 587,
	574, 0, 575, 0, 0, 590, 591, 592, 593, 0,
	834, 594, 835, 597, 598, 0, 0, 599, 0, 600,
	0, 0, 602, 603, 604, 0, 0, 605, 606, 836,
	0, 607, 0, 837, 608, 609, 601, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 0, 620, 621,
	838, 622, 623, 624, 839, 625, 626, 627, 840, 628,
	841, 629, 630, 0, 631, 632, 633, 0, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 842, 644,
	645, 647, 646, 648, 649, 0, 650, 0, 651, 652,
	653, 0, 0, 0, 0, 0, 654, 655, 657, 0,
	658, 659, 660, 661, 662, 656, 663, 664, 665, 666,
	667, 668, 669, 0, 671, 672, 670, 673, 674, 0,
	675, 676, 677, 678, 679, 843, 680, 0, 681, 682,
	690, 691, 692, 683, 684, 686, 693, 685, 694, 695,
	696, 697, 699, 698, 917, 701, 702, 700, 703, 704,
	705, 706, 0, 707, 844, 708, 687, 688, 709, 710,
	711, 0, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 845, 0, 721, 0, 722, 723, 724, 725, 726,
	727, 729, 689, 730, 731, 732, 737, 738, 846, 733,
	734, 735, 736, 847, 740, 741, 742, 743, 0, 744,
	4004, 0, 739, 728, 0, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 0, 756, 848, 849, 850,
	851, 0, 768, 0, 757, 759, 760, 761, 762, 852,
	763, 853, 0, 764, 765, 766, 767, 758, 769, 770,
	0, 0, 771, 772, 773, 774, 776, 778, 779, 780,
	775, 777, 781, 0, 782, 0, 0, 783, 784, 785,
	854, 855, 856, 0, 787, 788, 786, 789, 790, 793,
	791, 792, 857, 796, 513, 797, 798, 799, 794, 795,
	337, 0, 0, 0, 800, 801, 858, 802, 803, 804,
	0, 0, 0, 0, 0, 0, 0, 345, 346, 348,
	347, 349, 350, 351, 352, 0, 353, 354, 0, 0,
	0, 0, 0, 805, 0, 0, 0, 356, 0, 355,
	0, 357, 358, 359, 0, 360, 361, 362, 363, 364,
	365, 366, 367, 806, 807, 0, 368, 808, 369, 809,
	0, 810, 370, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 0, 0, 380, 811, 812, 813, 0,
	381, 382, 383, 384, 814, 0, 0, 0, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 0, 394, 395,
	396, 393, 397, 398, 0, 399, 0, 400, 401, 402,
	403, 404, 405, 406, 915, 407, 408, 409, 0, 410,
	411, 412, 0, 0, 0, 0, 0, 0, 0, 413,
	414, 415, 416, 417, 0, 418, 420, 421, 815, 422,
	816, 0, 425, 427, 419, 423, 0, 426, 424, 428,
	429, 0, 430, 431, 432, 433, 0, 0, 434, 435,
	436, 0, 437, 438, 440, 439, 0, 441, 442, 443,
	0, 444, 445, 817, 446, 447, 448, 450, 452, 449,
	451, 453, 454, 455, 456, 457, 818, 819, 458, 459,
	0, 0, 0, 0, 0, 0, 0, 460, 461, 462,
	820, 0, 0, 0, 463, 0, 465, 469, 466, 467,
	468, 470, 0, 464, 471, 472, 0, 0, 473, 474,
	475, 821, 822, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 916, 485, 486, 823, 0, 824, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 825, 826, 827,
	595, 0, 495, 496, 497, 0, 498, 499, 500, 501,
	502, 503, 504, 0, 0, 0, 505, 506, 507, 508,
	0, 0, 0, 0, 0, 828, 509, 596, 510, 829,
	830, 0, 831, 0, 511, 512, 515, 0, 832, 0,
	514, 516, 517, 0, 518, 0, 0, 0, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 528, 527, 0,
	530, 833, 529, 0, 531, 532, 0, 0, 533, 534,
	535, 536, 537, 538, 541, 0, 0, 539, 540, 542,
	543, 0, 544, 545, 547, 550, 546, 548, 549, 551,
	552, 565, 566, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 568, 0, 567, 0, 569,
	570, 571, 572, 573, 581, 583, 584, 579, 580, 582,
	585, 586, 588, 589, 576, 577, 578, 0, 587, 574,
	0, 575, 0, 0, 590, 591, 592, 593, 0, 834,
	594, 835, 597, 598, 0, 0, 599, 0, 600, 0,
	0, 602, 603, 604, 0, 0, 605, 606, 836, 0,
	607, 0, 837, 608, 609, 601, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 0, 620, 621, 838,
	622, 623, 624, 839, 625, 626, 627, 840, 628, 841,
	629, 630, 0, 631, 632, 633, 0, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 842, 644, 645,
	647, 646, 648, 649, 0, 650, 0, 651, 652, 653,
	0, 0, 0, 0, 0, 654, 655, 657, 0, 658,
	659, 660, 661, 662, 656, 663, 664, 665, 666, 667,
	668, 669, 0, 671, 672, 670, 673, 674, 0, 675,
	676, 677, 678, 679, 843, 680, 0, 681, 682, 690,
	691, 692, 683, 684, 686, 693, 685, 694, 695, 696,
	697, 699, 698, 917, 701, 702, 700, 703, 704, 705,
	706, 0, 707, 844, 708, 687, 688, 709, 710, 711,
	0, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	845, 0, 721, 0, 722, 723, 724, 725, 726, 727,
	729, 689, 730, 731, 732, 737, 738, 846, 733, 734,
	735, 736, 847, 740, 741, 742, 743, 0, 744, 745,
	0, 739, 728, 0, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 0, 756, 848, 849, 850, 851,
	0, 768, 0, 757, 759, 760, 761, 762, 852, 763,
	853, 0, 764, 765, 766, 767, 758, 769, 770, 0,
	0, 771, 772, 773, 774, 776, 778, 779, 780, 775,
	777, 781, 0, 782, 0, 0, 783, 784, 785, 854,
	855, 856, 0, 787, 788, 786, 789, 790, 793, 791,
	792, 857, 796, 513, 797, 798, 799, 794, 795, 1230,
	0, 337, 0, 800, 801, 858, 802, 803, 804, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 346,
	348, 347, 349, 350, 351, 352, 0, 353, 354, 0,
	0, 0, 0, 0, 805, 0, 0, 0, 356, 0,
	355, 0, 357, 358, 359, 0, 360, 361, 362, 363,
	364, 365, 366, 367, 806, 807, 0, 368, 808, 369,
	809, 0, 810, 370, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 0, 0, 0, 380, 811, 812, 813,
	0, 381, 382, 383, 384, 814, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 0, 394,
	395, 396, 393, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 0, 0, 0, 0, 0, 0,
	413, 414, 415, 416, 417, 0, 418, 420, 421, 815,
	422, 816, 0, 425, 427, 419, 423, 0, 426, 424,
	428, 429, 0, 430, 431, 432, 433, 0, 0, 434,
	435, 436, 0, 437, 438, 440, 439, 0, 441, 442,
	443, 0, 444, 445, 817, 446, 447, 448, 450, 452,
	449, 451, 453, 454, 455, 456, 457, 818, 819, 458,
	459, 0, 0, 0, 0, 0, 0, 0, 460, 461,
	462, 820, 0, 0, 0, 463, 0, 465, 469, 466,
	467, 468, 470, 0, 464, 471, 472, 0, 0, 473,
	474, 475, 821, 822, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 0, 485, 486, 823, 0, 824, 487,
	0, 488, 489, 490, 491, 492, 493, 494, 825, 826,
	827, 595, 0, 495, 496, 497, 0, 498, 499, 500,
	501, 502, 503, 504, 0, 0, 0, 505, 506, 507,
	508, 0, 0, 0, 0, 0, 828, 509, 596, 510,
	829, 830, 0, 831, 1229, 511, 512, 515, 0, 832,
	0, 514, 516, 517, 0, 518, 0, 0, 0, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 528, 527,
	0, 530, 833, 529, 0, 531, 532, 0, 0, 533,
	534, 535, 536, 537, 538, 541, 0, 0, 539, 540,
	542, 543, 0, 544, 545, 547, 550, 546, 548, 549,
	551, 552, 565, 566, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 568, 0, 567, 0,
	569, 570, 571, 572, 573, 581, 583, 584, 579, 580,
	582, 585, 586, 588, 589, 576, 577, 578, 0, 587,
	574, 0, 575, 0, 0, 590, 591, 592, 593, 0,
	834, 594, 835, 597, 598, 0, 0, 599, 0, 600,
	0, 0, 602, 603, 604, 0, 0, 605, 606, 836,
	0, 607, 0, 837, 608, 609, 601, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 0, 620, 621,
	838, 622, 623, 624, 839, 625, 626, 627, 840, 628,
	841, 629, 630, 0, 631, 632, 633, 0, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 842, 644,
	645, 647, 646, 648, 649, 0, 650, 0, 651, 652,
	653, 0, 0, 0, 0, 0, 654, 655, 657, 0,
	658, 659, 660, 661, 662, 656, 663, 664, 665, 666,
	667, 668, 669, 0, 671, 672, 670, 673, 674, 0,
	675, 676, 677, 678, 679, 843, 680, 0, 681, 682,
	690, 691, 692, 683, 684, 686, 693, 685, 694, 695,
	696, 697, 699, 698, 0, 701, 702, 700, 703, 704,
	705, 706, 0, 707, 844, 708, 687, 688, 709, 710,
	711, 0, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 845, 0, 721, 0, 722, 723, 724, 725, 726,
	727, 729, 689, 730, 731, 732, 737, 738, 846, 733,
	734, 735, 736, 847, 740, 741, 742, 743, 0, 744,
	745, 0, 739, 728, 1228, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 0, 756, 848, 849, 850,
	851, 0, 768, 0, 757, 759, 760, 761, 762, 852,
	763, 853, 0, 764, 765, 766, 767, 758, 769, 770,
	0, 0, 771, 772, 773, 774, 776, 778, 779, 780,
	775, 777, 781, 0, 782, 0, 0, 783, 784, 785,
	854, 855, 856, 0, 787, 788, 786, 789, 790, 793,
	791, 792, 857, 796, 513, 797, 798, 799, 794, 795,
	1019, 0, 337, 0, 800, 801, 858, 802, 803, 804,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	1008, 348, 347, 349, 350, 351, 352, 0, 353, 354,
	0, 0, 0, 0, 0, 805, 0, 0, 0, 356,
	0, 355, 0, 357, 358, 359, 0, 360, 361, 362,
	363, 1017, 365, 366, 367, 806, 807, 0, 368, 808,
	369, 809, 0, 810, 370, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 0, 0, 0, 380, 811, 812,
	813, 0, 381, 382, 383, 384, 814, 0, 0, 0,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 0,
	394, 395, 396, 393, 397, 398, 0, 399, 0, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 412, 0, 0, 0, 0, 0, 0,
	0, 413, 414, 415, 416, 417, 0, 418, 420, 421,
	815, 422, 816, 0, 425, 427, 419, 423, 0, 426,
	424, 428, 429, 0, 430, 431, 432, 433, 0, 0,
	434, 435, 436, 0, 437, 438, 440, 439, 0, 441,
	442, 443, 0, 444, 445, 817, 446, 447, 448, 450,
	452, 449, 451, 453, 454, 455, 456, 457, 818, 819,
	458, 459, 0, 0, 0, 0, 0, 0, 0, 460,
	461, 1010, 820, 0, 0, 0, 463, 0, 465, 469,
	466, 467, 468, 470, 0, 464, 1016, 472, 1012, 0,
	473, 474, 475, 821, 822, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 486, 823, 0, 824,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 825,
	826, 827, 595, 0, 495, 496, 497, 1013, 498, 499,
	500, 501, 502, 503, 504, 0, 0, 0, 505, 506,
	507, 508, 0, 0, 0, 0, 0, 828, 509, 596,
	510, 829, 830, 0, 831, 0, 511, 512, 515, 0,
	832, 0, 514, 516, 517, 0, 518, 0, 0, 0,
	519, 520, 521, 522, 523, 524, 1011, 0, 526, 528,
	527, 0, 530, 833, 529, 0, 531, 532, 0, 0,
	533, 534, 535, 536, 537, 538, 541, 0, 0, 539,
	540, 542, 543, 0, 544, 545, 547, 550, 546, 548,
	549, 551, 552, 565, 566, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 568, 0, 567,
	0, 569, 570, 571, 1014, 573, 581, 583, 584, 579,
	580, 582, 585, 586, 588, 589, 576, 577, 578, 0,
	587, 574, 0, 575, 0, 0, 590, 591, 592, 593,
	0, 834, 594, 835, 597, 598, 0, 0, 599, 0,
	600, 0, 0, 602, 603, 604, 0, 0, 605, 606,
	836, 0, 607, 0, 837, 608, 609, 601, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 0, 620,
	621, 838, 622, 623, 624, 839, 625, 626, 627, 840,
	628, 841, 629, 630, 0, 1015, 632, 633, 0, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 842,
	644, 645, 647, 646, 648, 649, 0, 650, 0, 651,
	652, 653, 0, 0, 0, 0, 0, 654, 1009, 657,
	0, 658, 659, 660, 661, 662, 656, 663, 664, 665,
	666, 667, 668, 669, 0, 671, 672, 670, 673, 674,
	0, 675, 676, 677, 678, 679, 843, 680, 0, 681,
	682, 690, 691, 692, 683, 684, 686, 693, 685, 694,
	695, 696, 697, 699, 698, 0, 701, 702, 700, 703,
	704, 705, 706, 0, 707, 844, 708, 687, 688, 709,
	710, 711, 0, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 845, 0, 721, 0, 722, 723, 724, 725,
	726, 727, 729, 689, 730, 731, 732, 737, 738, 846,
	733, 734, 735, 736, 847, 740, 741, 742, 743, 0,
	744, 745, 0, 739, 728, 0, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 0, 756, 848, 849,
	850, 851, 0, 768, 0, 757, 759, 760, 761, 762,
	852, 763, 853, 0, 764, 765, 766, 767, 758, 769,
	770, 0, 0, 771, 772, 773, 774, 776, 778, 779,
	780, 775, 777, 781, 0, 782, 0, 0, 783, 784,
	785, 854, 855, 856, 0, 787, 788, 786, 789, 790,
	793, 791, 792, 857, 796, 513, 797, 798, 799, 794,
	795, 1002, 0, 337, 0, 800, 801, 858, 802, 803,
	804, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 1008, 348, 347, 349, 350, 351, 352, 0, 353,
	354, 0, 0, 0, 0, 0, 805, 0, 0, 0,
	356, 0, 355, 0, 357, 358, 359, 0, 360, 361,
	362, 363, 1017, 365, 366, 367, 806, 807, 0, 368,
	808, 369, 809, 0, 810, 370, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 0, 0, 0, 380, 811,
	812, 813, 0, 381, 382, 383, 384, 814, 0, 0,
	0, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	0, 394, 395, 396, 393, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 412, 0, 0, 0, 0, 0,
	0, 0, 413, 414, 415, 416, 417, 0, 418, 420,
	421, 815, 422, 816, 0, 425, 427, 419, 423, 0,
	426, 424, 428, 429, 0, 430, 431, 432, 433, 0,
	0, 434, 435, 436, 0, 437, 438, 440, 439, 0,
	441, 442, 443, 0, 444, 445, 817, 446, 447, 448,
	450, 452, 449, 451, 453, 454, 455, 456, 457, 818,
	819, 458, 459, 0, 0, 0, 0, 0, 0, 0,
	460, 461, 1010, 820, 0, 0, 0, 463, 0, 465,
	469, 466, 467, 468, 470, 0, 464, 1016, 472, 1012,
	0, 473, 474, 475, 821, 822, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 0, 485, 486, 823, 0,
	824, 487, 0, 488, 489, 490, 491, 492, 493, 494,
	825, 826, 827, 595, 0, 495, 496, 497, 1013, 498,
	499, 500, 501, 502, 503, 504, 0, 0, 0, 505,
	506, 507, 508, 0, 0, 0, 0, 0, 828, 509,
	596, 510, 829, 830, 0, 831, 0, 511, 512, 515,
	0, 832, 0, 514, 516, 517, 0, 518, 0, 0,
	0, 519, 520, 521, 522, 523, 524, 1011, 0, 526,
	528, 527, 0, 530, 833, 529, 0, 531, 532, 0,
	0, 533, 534, 535, 536, 537, 538, 541, 0, 0,
	539, 540, 542, 543, 0, 544, 545, 547, 550, 546,
	548, 549, 551, 552, 565, 566, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 568, 0,
	567, 0, 569, 570, 571, 1014, 573, 581, 583, 584,
	579, 580, 582, 585, 586, 588, 589, 576, 577, 578,
	0, 587, 574, 0, 575, 0, 0, 590, 591, 592,
	593, 0, 834, 594, 835, 597, 598, 0, 0, 599,
	0, 600, 0, 0, 602, 603, 604, 0, 0, 605,
	606, 836, 0, 607, 0, 837, 608, 609, 601, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 0,
	620, 621, 838, 622, 623, 624, 839, 625, 626, 627,
	840, 628, 841, 629, 630, 0, 1015, 632, 633, 0,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	842, 644, 645, 647, 646, 648, 649, 0, 650, 0,
	651, 652, 653, 0, 0, 0, 0, 0, 654, 1009,
	657, 0, 658, 659, 660, 661, 662, 656, 663, 664,
	665, 666, 667, 668, 669, 0, 671, 672, 670, 673,
	674, 0, 675, 676, 677, 678, 679, 843, 680, 0,
	681, 682, 690, 691, 692, 683, 684, 686, 693, 685,
	694, 695, 696, 697, 699, 698, 0, 701, 702, 700,
	703, 704, 705, 706, 0, 707, 844, 708, 687, 688,
	709, 710, 711, 0, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 845, 0, 721, 0, 722, 723, 724,
	725, 726, 727, 729, 689, 730, 731, 732, 737, 738,
	846, 733, 734, 735, 736, 847, 740, 741, 742, 743,
	0, 744, 745, 0, 739, 728, 0, 746, 747, 748,
	749, 750, 751, 752, 753, 754, 755, 0, 756, 848,
	849, 850, 851, 0, 768, 0, 757, 759, 760, 761,
	762, 852, 763, 853, 0, 764, 765, 766, 767, 758,
	769, 770, 0, 0, 771, 772, 773, 774, 776, 778,
	779, 780, 775, 777, 781, 0, 782, 0, 0, 783,
	784, 785, 854, 855, 856, 0, 787, 788, 786, 789,
	790, 793, 791, 792, 857, 796, 513, 797, 798, 799,
	794, 795, 337, 4953, 0, 0, 800, 801, 858, 802,
	803, 804, 0, 0, 0, 0, 0, 0, 0, 345,
	346, 348, 347, 349, 350, 351, 352, 0, 353, 354,
	0, 0, 0, 0, 0, 805, 0, 0, 0, 356,
	0, 355, 0, 357, 358, 359, 0, 360, 361, 362,
	363, 364, 365, 366, 367, 806, 807, 0, 368, 808,
	369, 809, 0, 810, 370, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 0, 0, 0, 380, 811, 812,
	813, 0, 381, 382, 383, 384, 814, 0, 0, 0,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 0,
	394, 395, 396, 393, 397, 398, 0, 399, 0, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 412, 0, 0, 0, 0, 0, 0,
	0, 413, 414, 415, 416, 417, 0, 418, 420, 421,
	815, 422, 816, 0, 425, 427, 419, 423, 0, 426,
	424, 428, 429, 0, 430, 431, 432, 433, 0, 0,
	434, 435, 436, 0, 437, 438, 440, 439, 0, 441,
	442, 443, 0, 444, 445, 817, 446, 447, 448, 450,
	452, 449, 451, 453, 454, 455, 456, 457, 818, 819,
	458, 459, 0, 0, 0, 0, 0, 0, 0, 460,
	461, 462, 820, 0, 0, 0, 463, 0, 465, 469,
	466, 467, 468, 470, 0, 464, 471, 472, 0, 0,
	473, 474, 475, 821, 822, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 486, 823, 0, 824,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 825,
	826, 827, 595, 0, 495, 496, 497, 0, 498, 499,
	500, 501, 502, 503, 504, 0, 0, 0, 505, 506,
	507, 508, 0, 0, 0, 0, 0, 828, 509, 596,
	510, 829, 830, 0, 831, 0, 511, 512, 515, 0,
	832, 0, 514, 516, 517, 0, 518, 0, 0, 0,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 528,
	527, 0, 530, 833, 529, 0, 531, 532, 0, 0,
	533, 534, 535, 536, 537, 538, 541, 0, 0, 539,
	540, 542, 543, 0, 544, 545, 547, 550, 546, 548,
	549, 551, 552, 565, 566, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 568, 0, 567,
	0, 569, 570, 571, 572, 573, 581, 583, 584, 579,
	580, 582, 585, 586, 588, 589, 576, 577, 578, 0,
	587, 574, 0, 575, 0, 0, 590, 591, 592, 593,
	0, 834, 594, 835, 597, 598, 0, 0, 599, 0,
	600, 0, 0, 602, 603, 604, 0, 0, 605, 606,
	836, 0, 607, 0, 837, 608, 609, 601, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 0, 620,
	621, 838, 622, 623, 624, 839, 625, 626, 627, 840,
	628, 841, 629, 630, 6351, 631, 632, 633, 0, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 842,
	644, 645, 647, 646, 648, 649, 0, 650, 0, 651,
	652, 653, 0, 0, 0, 0, 0, 654, 655, 657,
	0, 658, 659, 660, 661, 662, 656, 663, 664, 665,
	666, 667, 668, 669, 0, 671, 672, 670, 673, 674,
	0, 675, 676, 677, 678, 679, 843, 680, 0, 681,
	682, 690, 691, 692, 683, 684, 686, 693, 685, 694,
	695, 696, 697, 699, 698, 0, 701, 702, 700, 703,
	704, 705, 706, 0, 707, 844, 708, 687, 688, 709,
	710, 711, 0, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 845, 0, 721, 0, 722, 723, 724, 725,
	726, 727, 729, 689, 730, 731, 732, 737, 738, 846,
	733, 734, 735, 736, 847, 740, 741, 742, 743, 0,
	744, 745, 0, 739, 728, 0, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 0, 756, 848, 849,
	850, 851, 0, 768, 0, 757, 759, 760, 761, 762,
	852, 763, 853, 0, 764, 765, 766, 767, 758, 769,
	770, 0, 0, 771, 772, 773, 774, 776, 778, 779,
	780, 775, 777, 781, 0, 782, 0, 0, 783, 784,
	785, 854, 855, 856, 0, 787, 788, 786, 789, 790,
	793, 791, 792, 857, 796, 513, 797, 798, 799, 794,
	795, 337, 0, 0, 0, 800, 801, 858, 802, 803,
	804, 0, 0, 0, 0, 0, 0, 0, 345, 346,
	348, 347, 349, 350, 351, 352, 0, 353, 354, 0,
	0, 0, 0, 0, 805, 0, 0, 0, 356, 0,
	355, 0, 357, 358, 359, 0, 360, 361, 362, 363,
	364, 365, 366, 367, 806, 807, 0, 368, 808, 369,
	809, 0, 810, 370, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 0, 0, 0, 380, 811, 812, 813,
	0, 381, 382, 383, 384, 814, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 0, 394,
	395, 396, 393, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 0, 0, 0, 0, 0, 0,
	413, 414, 415, 416, 417, 0, 418, 420, 421, 815,
	422, 816, 0, 425, 427, 419, 423, 0, 426, 424,
	428, 429, 0, 430, 431, 432, 433, 0, 0, 434,
	435, 436, 0, 437, 438, 440, 439, 0, 441, 442,
	443, 0, 444, 445, 817, 446, 447, 448, 450, 452,
	449, 451, 453, 454, 455, 456, 457, 818, 819, 458,
	459, 0, 5085, 0, 0, 0, 0, 0, 460, 461,
	462, 820, 0, 0, 0, 463, 0, 465, 469, 466,
	467, 468, 470, 0, 464, 471, 472, 0, 0, 473,
	474, 475, 821, 822, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 0, 485, 486, 823, 0, 824, 487,
	0, 488, 489, 490, 491, 492, 493, 494, 825, 826,
	827, 595, 0, 495, 496, 497, 0, 498, 499, 500,
	501, 502, 503, 504, 0, 0, 0, 505, 506, 507,
	508, 0, 0, 0, 0, 0, 828, 509, 596, 510,
	829, 830, 0, 831, 0, 511, 512, 515, 0, 832,
	0, 514, 516, 517, 0, 518, 0, 0, 0, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 528, 527,
	0, 530, 833, 529, 0, 531, 532, 0, 0, 533,
	534, 535, 536, 537, 538, 541, 0, 0, 539, 540,
	542, 543, 0, 544, 545, 547, 550, 546, 548, 549,
	551, 552, 565, 566, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 568, 0, 567, 0,
	569, 570, 571, 572, 573, 581, 583, 584, 579, 580,
	582, 585, 586, 588, 589, 576, 577, 578, 0, 587,
	574, 0, 575, 0, 0, 590, 591, 592, 593, 0,
	834, 594, 835, 597, 598, 0, 0, 599, 0, 600,
	0, 0, 602, 603, 604, 0, 0, 605, 606, 836,
	0, 607, 0, 837, 608, 609, 601, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 0, 620, 621,
	838, 622, 623, 624, 839, 625, 626, 627, 840, 628,
	841, 629, 630, 5975, 631, 632, 633, 0, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 842, 644,
	645, 647, 646, 648, 649, 0, 650, 0, 651, 652,
	653, 0, 0, 0, 0, 0, 654, 655, 657, 0,
	658, 659, 660, 661, 662, 656, 663, 664, 665, 666,
	667, 668, 669, 0, 671, 672, 670, 673, 674, 0,
	675, 676, 677, 678, 679, 843, 680, 0, 681, 682,
	690, 691, 692, 683, 684, 686, 693, 685, 694, 695,
	696, 697, 699, 698, 0, 701, 702, 700, 703, 704,
	705, 706, 0, 707, 844, 708, 687, 688, 709, 710,
	711, 0, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 845, 0, 721, 0, 722, 723, 724, 725, 726,
	727, 729, 689, 730, 731, 732, 737, 738, 846, 733,
	734, 735, 736, 847, 740, 741, 742, 743, 0, 744,
	745, 0, 739, 728, 0, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 0, 756, 848, 849, 850,
	851, 0, 768, 0, 757, 759, 760, 761, 762, 852,
	763, 853, 0, 764, 765, 766, 767, 758, 769, 770,
	0, 0, 771, 772, 773, 774, 776, 778, 779, 780,
	775, 777, 781, 0, 782, 0, 0, 783, 784, 785,
	854, 855, 856, 0, 787, 788, 786, 789, 790, 793,
	791, 792, 857, 796, 513, 797, 798, 799, 794, 795,
	337, 4953, 0, 0, 800, 801, 858, 802, 803, 804,
	0, 0, 0, 0, 0, 0, 0, 345, 346, 348,
	347, 349, 350, 351, 352, 0, 353, 354, 0, 0,
	0, 0, 0, 805, 0, 0, 0, 356, 0, 355,
	0, 357, 358, 359, 0, 360, 361, 362, 363, 364,
	365, 366, 367, 806, 807, 0, 368, 808, 369, 809,
	0, 810, 370, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 0, 0, 380, 811, 812, 813, 0,
	381, 382, 383, 384, 814, 0, 0, 0, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 0, 394, 395,
	396, 393, 397, 398, 0, 399, 0, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 412, 0, 0, 0, 0, 0, 0, 0, 413,
	414, 415, 416, 417, 0, 418, 420, 421, 815, 422,
	816, 0, 425, 427, 419, 423, 0, 426, 424, 428,
	429, 0, 430, 431, 432, 433, 0, 0, 434, 435,
	436, 0, 437, 438, 440, 439, 0, 441, 442, 443,
	0, 444, 445, 817, 446, 447, 448, 450, 452, 449,
	451, 453, 454, 455, 456, 457, 818, 819, 458, 459,
	0, 0, 0, 0, 0, 0, 0, 460, 461, 462,
	820, 0, 0, 0, 463, 0, 465, 469, 466, 467,
	468, 470, 0, 464, 471, 472, 0, 0, 473, 474,
	475, 821, 822, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 486, 823, 0, 824, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 825, 826, 827,
	595, 0, 495, 496, 497, 0, 498, 499, 500, 501,
	502, 503, 504, 0, 0, 0, 505, 506, 507, 508,
	0, 0, 0, 0, 0, 828, 509, 596, 510, 829,
	830, 0, 831, 0, 511, 512, 515, 0, 832, 0,
	514, 516, 517, 0, 518, 0, 0, 0, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 528, 527, 0,
	530, 833, 529, 0, 531, 532, 0, 0, 533, 534,
	535, 536, 537, 538, 541, 0, 0, 539, 540, 542,
	543, 0, 544, 545, 547, 550, 546, 548, 549, 551,
	552, 565, 566, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 568, 0, 567, 0, 569,
	570, 571, 572, 573, 581, 583, 584, 579, 580, 582,
	585, 586, 588, 589, 576, 577, 578, 0, 587, 574,
	0, 575, 0, 0, 590, 591, 592, 593, 0, 834,
	594, 835, 597, 598, 0, 0, 599, 0, 600, 0,
	0, 602, 603, 604, 0, 0, 605, 606, 836, 0,
	607, 0, 837, 608, 609, 601, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 0, 620, 621, 838,
	622, 623, 624, 839, 625, 626, 627, 840, 628, 841,
	629, 630, 5828, 631, 632, 633, 0, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 842, 644, 645,
	647, 646, 648, 649, 0, 650, 0, 651, 652, 653,
	0, 0, 0, 0, 0, 654, 655, 657, 0, 658,
	659, 660, 661, 662, 656, 663, 664, 665, 666, 667,
	668, 669, 0, 671, 672, 670, 673, 674, 0, 675,
	676, 677, 678, 679, 843, 680, 0, 681, 682, 690,
	691, 692, 683, 684, 686, 693, 685, 694, 695, 696,
	697, 699, 698, 0, 701, 702, 700, 703, 704, 705,
	706, 0, 707, 844, 708, 687, 688, 709, 710, 711,
	0, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	845, 0, 721, 0, 722, 723, 724, 725, 726, 727,
	729, 689, 730, 731, 732, 737, 738, 846, 733, 734,
	735, 736, 847, 740, 741, 742, 743, 0, 744, 745,
	0, 739, 728, 0, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 0, 756, 848, 849, 850, 851,
	0, 768, 0, 757, 759, 760, 761, 762, 852, 763,
	853, 0, 764, 765, 766, 767, 758, 769, 770, 0,
	0, 771, 772, 773, 774, 776, 778, 779, 780, 775,
	777, 781, 0, 782, 0, 0, 783, 784, 785, 854,
	855, 856, 0, 787, 788, 786, 789, 790, 793, 791,
	792, 857, 796, 513, 797, 798, 799, 794, 795, 1657,
	0, 337, 0, 800, 801, 858, 802, 803, 804, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 346,
	348, 347, 349, 350, 351, 352, 0, 353, 354, 0,
	0, 0, 0, 0, 805, 0, 0, 0, 356, 0,
	355, 0, 357, 358, 359, 1660, 360, 361, 362, 363,
	364, 365, 366, 367, 806, 807, 0, 368, 808, 369,
	809, 0, 810, 370, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 0, 0, 0, 380, 811, 812, 1658,
	0, 381, 382, 383, 384, 814, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 0, 394,
	395, 396, 393, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 0, 0, 0, 0, 0, 0,
	413, 414, 415, 416, 417, 0, 418, 420, 421, 815,
	422, 816, 0, 425, 427, 419, 423, 0, 426, 424,
	428, 429, 0, 430, 431, 432, 433, 0, 0, 434,
	435, 436, 0, 437, 438, 440, 439, 0, 441, 442,
	443, 0, 444, 445, 817, 446, 447, 448, 450, 452,
	449, 451, 453, 454, 455, 456, 457, 818, 819, 458,
	459, 0, 0, 0, 0, 0, 0, 0, 460, 461,
	462, 820, 0, 0, 0, 463, 0, 465, 469, 466,
	467, 468, 470, 0, 464, 471, 472, 0, 0, 473,
	474, 475, 821, 822, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 0, 485, 486, 823, 0, 824, 487,
	0, 488, 489, 490, 491, 492, 493, 494, 825, 826,
	827, 595, 0, 495, 496, 497, 0, 498, 499, 500,
	501, 502, 503, 504, 0, 0, 0, 505, 506, 507,
	508, 0, 0, 0, 0, 0, 828, 509, 596, 510,
	829, 830, 0, 831, 0, 511, 512, 515, 0, 832,
	0, 514, 516, 517, 0, 518, 0, 0, 0, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 528, 527,
	0, 530, 833, 529, 0, 531, 532, 0, 0, 533,
	534, 535, 536, 537, 538, 541, 0, 0, 539, 540,
	542, 543, 0, 544, 545, 547, 550, 546, 548, 549,
	551, 552, 565, 566, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 568, 0, 990, 0,
	569, 570, 571, 572, 573, 581, 583, 584, 579, 580,
	582, 585, 586, 588, 589, 576, 577, 578, 0, 587,
	574, 0, 575, 0, 0, 590, 591, 592, 593, 0,
	834, 594, 835, 597, 598, 0, 0, 599, 0, 600,
	0, 0, 602, 603, 604, 0, 0, 605, 606, 836,
	0, 607, 0, 837, 608, 609, 601, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 0, 620, 621,
	838, 622, 623, 624, 839, 625, 626, 627, 840, 628,
	841, 629, 630, 0, 631, 632, 633, 0, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 842, 644,
	645, 647, 646, 648, 649, 0, 650, 0, 651, 652,
	653, 0, 0, 0, 0, 0, 654, 655, 657, 0,
	658, 659, 660, 661, 662, 656, 663, 664, 665, 666,
	667, 668, 669, 0, 671, 672, 670, 673, 674, 0,
	989, 676, 677, 678, 679, 843, 680, 0, 681, 682,
	690, 691, 692, 683, 684, 686, 988, 685, 694, 695,
	696, 697, 699, 698, 0, 701, 702, 700, 703, 704,
	1661, 706, 0, 707, 844, 708, 687, 688, 709, 710,
	711, 0, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 845, 0, 721, 0, 722, 723, 724, 725, 726,
	727, 729, 689, 730, 731, 732, 737, 738, 846, 733,
	734, 735, 736, 847, 740, 741, 742, 743, 0, 744,
	745, 0, 739, 728, 0, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 0, 756, 986, 849, 850,
	851, 0, 768, 0, 757, 759, 760, 761, 762, 852,
	763, 853, 0, 764, 765, 766, 767, 758, 769, 770,
	0, 0, 771, 772, 773, 774, 776, 778, 779, 780,
	775, 777, 781, 0, 782, 0, 0, 783, 784, 785,
	854, 855, 856, 0, 787, 788, 786, 789, 790, 793,
	791, 792, 857, 796, 513, 797, 798, 799, 794, 795,
	1657, 0, 337, 0, 800, 801, 858, 802, 803, 804,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	346, 348, 347, 349, 350, 351, 352, 0, 353, 354,
	0, 0, 0, 0, 0, 805, 0, 0, 0, 356,
	0, 355, 0, 357, 358, 359, 1660, 360, 361, 362,
	363, 364, 365, 366, 367, 806, 807, 0, 368, 808,
	369, 809, 0, 810, 370, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 0, 0, 0, 380, 811, 812,
	1658, 0, 381, 382, 383, 384, 814, 0, 0, 0,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 0,
	394, 395, 396, 393, 397, 398, 0, 399, 0, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 412, 0, 0, 0, 0, 0, 0,
	0, 413, 414, 415, 416, 417, 0, 418, 420, 421,
	815, 422, 816, 0, 425, 427, 419, 423, 0, 426,
	424, 428, 429, 0, 430, 431, 432, 433, 0, 0,
	434, 435, 436, 0, 437, 438, 440, 439, 0, 441,
	442, 443, 0, 444, 445, 817, 446, 447, 448, 450,
	452, 449, 451, 453, 454, 455, 456, 457, 818, 819,
	458, 459, 0, 0, 0, 0, 0, 0, 0, 460,
	461, 462, 820, 0, 0, 0, 463, 0, 465, 469,
	466, 467, 468, 470, 0, 464, 471, 472, 0, 0,
	473, 474, 475, 821, 822, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 486, 823, 0, 824,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 825,
	826, 827, 595, 0, 495, 496, 497, 0, 498, 499,
	500, 501, 502, 503, 504, 0, 0, 0, 505, 506,
	507, 508, 0, 0, 0, 0, 0, 828, 509, 596,
	510, 829, 830, 0, 831, 0, 511, 512, 515, 0,
	832, 0, 514, 516, 517, 0, 518, 0, 0, 0,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 528,
	527, 0, 530, 833, 529, 0, 531, 532, 0, 0,
	533, 534, 535, 536, 537, 538, 541, 0, 0, 539,
	540, 542, 543, 0, 544, 545, 547, 550, 546, 548,
	549, 551, 552, 565, 566, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 568, 0, 990,
	0, 569, 570, 571, 572, 573, 581, 583, 584, 579,
	580, 582, 585, 586, 588, 589, 576, 577, 578, 0,
	587, 574, 0, 575, 0, 0, 590, 591, 592, 593,
	0, 834, 594, 835, 597, 598, 0, 0, 599, 0,
	600, 0, 0, 602, 603, 604, 0, 0, 605, 606,
	836, 0, 607, 0, 837, 608, 609, 601, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 0, 620,
	621, 838, 622, 623, 624, 839, 625, 626, 627, 840,
	628, 841, 629, 630, 0, 631, 632, 633, 0, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 842,
	644, 645, 647, 646, 648, 649, 0, 650, 0, 651,
	652, 653, 0, 0, 0, 0, 0, 654, 655, 657,
	0, 658, 659, 660, 661, 662, 656, 663, 664, 665,
	666, 667, 668, 669, 0, 671, 672, 670, 673, 674,
	0, 989, 676, 677, 678, 679, 843, 680, 0, 681,
	682, 690, 691, 692, 683, 684, 686, 988, 685, 694,
	695, 696, 697, 699, 698, 0, 701, 702, 700, 703,
	704, 1661, 706, 0, 707, 844, 708, 687, 688, 709,
	710, 711, 0, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 845, 0, 721, 0, 722, 723, 724, 725,
	726, 727, 729, 689, 730, 731, 732, 737, 738, 846,
	733, 734, 735, 736, 847, 740, 741, 742, 743, 0,
	744, 745, 0, 739, 728, 0, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 0, 756, 986, 849,
	850, 851, 0, 768, 0, 757, 1659, 760, 761, 762,
	852, 763, 853, 0, 764, 765, 766, 767, 758, 769,
	770, 0, 0, 771, 772, 773, 774, 776, 778, 779,
	780, 775, 777, 781, 0, 782, 0, 0, 783, 784,
	785, 854, 855, 856, 0, 787, 788, 786, 789, 790,
	793, 791, 792, 857, 796, 513, 797, 798, 799, 794,
	795, 997, 0, 337, 0, 800, 801, 858, 802, 803,
	804, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 346, 348, 347, 349, 350, 351, 352, 995, 353,
	354, 0, 0, 0, 0, 0, 805, 0, 0, 0,
	356, 0, 355, 0, 357, 358, 359, 0, 360, 361,
	362, 363, 364, 365, 366, 367, 806, 807, 0, 368,
	808, 369, 809, 0, 810, 370, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 0, 0, 0, 380, 811,
	812, 813, 0, 381, 382, 383, 384, 814, 0, 0,
	0, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	0, 394, 395, 396, 393, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 412, 0, 0, 0, 0, 0,
	0, 0, 413, 414, 415, 416, 417, 0, 418, 420,
	421, 815, 422, 816, 0, 425, 427, 419, 423, 0,
	426, 424, 428, 429, 0, 430, 431, 432, 433, 0,
	0, 434, 435, 436, 0, 437, 438, 440, 439, 0,
	441, 442, 443, 0, 444, 445, 817, 446, 447, 448,
	450, 452, 449, 451, 453, 454, 455, 456, 457, 818,
	819, 458, 459, 0, 0, 0, 0, 0, 0, 0,
	460, 461, 462, 820, 0, 0, 0, 463, 0, 465,
	469, 466, 467, 468, 470, 0, 464, 471, 472, 0,
	0, 473, 474, 475, 821, 822, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 0, 485, 486, 823, 0,
	824, 487, 0, 488, 489, 490, 491, 492, 493, 494,
	825, 826, 827, 595, 0, 495, 496, 497, 0, 498,
	499, 500, 501, 502, 503, 504, 0, 0, 0, 505,
	506, 507, 508, 0, 0, 0, 0, 0, 828, 509,
	596, 510, 829, 830, 0, 831, 0, 511, 512, 515,
	0, 832, 0, 514, 516, 517, 0, 518, 0, 0,
	0, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	528, 527, 0, 530, 833, 529, 0, 531, 532, 0,
	0, 533, 534, 535, 536, 537, 538, 541, 0, 0,
	539, 540, 542, 543, 0, 544, 545, 547, 550, 546,
	548, 549, 551, 552, 565, 566, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 568, 0,
	567, 0, 569, 570, 571, 572, 573, 581, 583, 584,
	579, 580, 582, 585, 586, 588, 589, 576, 577, 578,
	0, 587, 574, 0, 575, 0, 0, 590, 591, 592,
	593, 0, 834, 594, 835, 597, 598, 0, 0, 599,
	0, 600, 0, 0, 602, 603, 604, 0, 0, 605,
	606, 836, 0, 607, 0, 837, 608, 609, 601, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 0,
	620, 621, 838, 622, 623, 624, 839, 625, 626, 627,
	840, 628, 841, 629, 630, 0, 631, 632, 633, 0,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	842, 644, 645, 647, 646, 648, 649, 0, 650, 0,
	651, 652, 653, 0, 0, 0, 0, 0, 654, 655,
	657, 0, 658, 659, 660, 661, 662, 656, 663, 664,
	665, 666, 667, 668, 669, 0, 671, 672, 670, 673,
	674, 0, 675, 676, 677, 678, 679, 843, 680, 0,
	681, 682, 690, 691, 692, 683, 684, 686, 693, 685,
	694, 695, 696, 697, 699, 698, 0, 701, 702, 700,
	703, 704, 705, 706, 0, 707, 844, 708, 687, 688,
	709, 710, 711, 0, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 845, 0, 721, 0, 722, 723, 724,
	725, 726, 727, 729, 689, 730, 731, 732, 737, 738,
	846, 733, 734, 735, 736, 847, 740, 741, 742, 743,
	0, 744, 745, 0, 739, 728, 0, 746, 747, 748,
	749, 750, 751, 752, 753, 754, 755, 0, 756, 848,
	849, 850, 851, 0, 768, 0, 757, 759, 760, 761,
	762, 852, 763, 853, 0, 764, 765, 766, 767, 758,
	769, 770, 0, 0, 771, 772, 773, 774, 776, 778,
	779, 780, 775, 777, 781, 0, 782, 0, 0, 783,
	784, 785, 854, 855, 856, 0, 787, 788, 786, 789,
	790, 793, 791, 792, 857, 796, 513, 797, 798, 799,
	794, 795, 901, 0, 337, 0, 800, 801, 858, 802,
	803, 804, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 346, 348, 347, 349, 350, 351, 352, 900,
	353, 354, 0, 0, 0, 0, 0, 805, 0, 0,
	0, 356, 0, 355, 0, 357, 358, 359, 0, 360,
	361, 362, 363, 364, 365, 366, 367, 806, 807, 0,
	368, 808, 369, 809, 0, 810, 370, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 0, 0, 0, 380,
	811, 812, 813, 0, 381, 382, 383, 384, 814, 0,
	0, 0, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 0, 394, 395, 396, 393, 397, 398, 0, 399,
	0, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 412, 0, 0, 0, 0,
	0, 0, 0, 413, 414, 415, 416, 417, 0, 418,
	420, 421, 815, 422, 816, 0, 425, 427, 419, 423,
	0, 426, 424, 428, 429, 0, 430, 431, 432, 433,
	0, 0, 434, 435, 436, 0, 437, 438, 440, 439,
	0, 441, 442, 443, 0, 444, 445, 817, 446, 447,
	448, 450, 452, 449, 451, 453, 454, 455, 456, 457,
	818, 819, 458, 459, 0, 0, 0, 0, 0, 0,
	0, 460, 461, 462, 820, 0, 0, 0, 463, 0,
	465, 469, 466, 467, 468, 470, 0, 464, 471, 472,
	0, 0, 473, 474, 475, 821, 822, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 486, 823,
	0, 824, 487, 0, 488, 489, 490, 491, 492, 493,
	494, 825, 826, 827, 595, 0, 495, 496, 497, 0,
	498, 499, 500, 501, 502, 503, 504, 0, 0, 0,
	505, 506, 507, 508, 0, 0, 0, 0, 0, 828,
	509, 596, 510, 829, 830, 0, 831, 0, 511, 512,
	515, 0, 832, 0, 514, 516, 517, 0, 518, 0,
	0, 0, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 528, 527, 0, 530, 833, 529, 0, 531, 532,
	0, 0, 533, 534, 535, 536, 537, 538, 541, 0,
	0, 539, 540, 542, 543, 0, 544, 545, 547, 550,
	546, 548, 549, 551, 552, 565, 566, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 568,
	0, 567, 0, 569, 570, 571, 572, 573, 581, 583,
	584, 579, 580, 582, 585, 586, 588, 589, 576, 577,
	578, 0, 587, 574, 0, 575, 0, 0, 590, 591,
	592, 593, 0, 834, 594, 835, 597, 598, 0, 0,
	599, 0, 600, 0, 0, 602, 603, 604, 0, 0,
	605, 606, 836, 0, 607, 0, 837, 608, 609, 601,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	0, 620, 621, 838, 622, 623, 624, 839, 625, 626,
	627, 840, 628, 841, 899, 630, 0, 631, 632, 633,
	0, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 842, 644, 645, 647, 646, 648, 649, 0, 650,
	0, 651, 652, 653, 0, 0, 0, 0, 0, 654,
	655, 657, 0, 658, 659, 660, 661, 662, 656, 663,
	664, 665, 666, 667, 668, 669, 0, 671, 672, 670,
	673, 674, 0, 675, 676, 677, 678, 679, 843, 680,
	0, 681, 682, 690, 691, 692, 683, 684, 686, 693,
	685, 694, 695, 696, 697, 699, 698, 0, 701, 702,
	700, 703, 704, 705, 706, 0, 707, 844, 708, 687,
	688, 709, 710, 711, 0, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 845, 0, 721, 0, 722, 723,
	724, 725, 726, 727, 729, 689, 730, 731, 732, 737,
	738, 846, 733, 734, 735, 736, 847, 740, 741, 742,
	743, 0, 744, 745, 0, 739, 728, 0, 746, 747,
	748, 749, 750, 751, 752, 753, 754, 755, 0, 756,
	848, 849, 850, 851, 0, 768, 0, 757, 759, 760,
	761, 762, 852, 763, 853, 0, 764, 765, 766, 767,
	758, 769, 770, 0, 0, 771, 772, 773, 774, 776,
	778, 779, 780, 775, 777, 781, 0, 782, 0, 0,
	783, 784, 785, 854, 855, 856, 0, 787, 788, 786,
	789, 790, 793, 791, 792, 857, 796, 513, 797, 798,
	799, 794, 795, 337, 4953, 0, 0, 800, 801, 858,
	802, 803, 804, 0, 0, 0, 0, 0, 0, 0,
	345, 346, 348, 347, 349, 350, 351, 352, 0, 353,
	354, 0, 0, 0, 0, 0, 805, 0, 0, 0,
	356, 0, 355, 0, 357, 358, 359, 0, 360, 361,
	362, 363, 364, 365, 366, 367, 806, 807, 0, 368,
	808, 369, 809, 0, 810, 370, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 0, 0, 0, 380, 811,
	812, 813, 0, 381, 382, 383, 384, 814, 0, 0,
	0, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	0, 394, 395, 396, 393, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 412, 0, 0, 0, 0, 0,
	0, 0, 413, 414, 415, 416, 417, 0, 418, 420,
	421, 815, 422, 816, 0, 425, 427, 419, 423, 0,
	426, 424, 428, 429, 0, 430, 431, 432, 433, 0,
	0, 434, 435, 436, 0, 437, 438, 440, 439, 0,
	441, 442, 443, 0, 444, 445, 817, 446, 447, 448,
	450, 452, 449, 451, 453, 454, 455, 456, 457, 818,
	819, 458, 459, 0, 0, 0, 0, 0, 0, 0,
	460, 461, 462, 820, 0, 0, 0, 463, 0, 465,
	469, 466, 467, 468, 470, 0, 464, 471, 472, 0,
	0, 473, 474, 475, 821, 822, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 0, 485, 486, 823, 0,
	824, 487, 0, 488, 489, 490, 491, 492, 493, 494,
	825, 826, 827, 595, 0, 495, 496, 497, 0, 498,
	499, 500, 501, 502, 503, 504, 0, 0, 0, 505,
	506, 507, 508, 0, 0, 0, 0, 0, 828, 509,
	596, 510, 829, 830, 0, 831, 0, 511, 512, 515,
	0, 832, 0, 514, 516, 517, 0, 518, 0, 0,
	0, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	528, 527, 0, 530, 833, 529, 0, 531, 532, 0,
	0, 533, 534, 535, 536, 537, 538, 541, 0, 0,
	539, 540, 542, 543, 0, 544, 545, 547, 550, 546,
	548, 549, 551, 552, 565, 566, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 568, 0,
	567, 0, 569, 570, 571, 572, 573, 581, 583, 584,
	579, 580, 582, 585, 586, 588, 589, 576, 577, 578,
	0, 587, 574, 0, 575, 0, 0, 590, 591, 592,
	593, 0, 834, 594, 835, 597, 598, 0, 0, 599,
	0, 600, 0, 0, 602, 603, 604, 0, 0, 605,
	606, 836, 0, 607, 0, 837, 608, 609, 601, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 0,
	620, 621, 838, 622, 623, 624, 839, 625, 626, 627,
	840, 628, 841, 629, 630, 0, 631, 632, 633, 0,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	842, 644, 645, 647, 646, 648, 649, 0, 650, 0,
	651, 652, 653, 0, 0, 0, 0, 0, 654, 655,
	657, 0, 658, 659, 660, 661, 662, 656, 663, 664,
	665, 666, 667, 668, 669, 0, 671, 672, 670, 673,
	674, 0, 675, 676, 677, 678, 679, 843, 680, 0,
	681, 682, 690, 691, 692, 683, 684, 686, 693, 685,
	694, 695, 696, 697, 699, 698, 0, 701, 702, 700,
	703, 704, 705, 706, 0, 707, 844, 708, 687, 688,
	709, 710, 711, 0, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 845, 0, 721, 0, 722, 723, 724,
	725, 726, 727, 729, 689, 730, 731, 732, 737, 738,
	846, 733, 734, 735, 736, 847, 740, 741, 742, 743,
	0, 744, 745, 0, 739, 728, 0, 746, 747, 748,
	749, 750, 751, 752, 753, 754, 755, 0, 756, 848,
	849, 850, 851, 0, 768, 0, 757, 759, 760, 761,
	762, 852, 763, 853, 0, 764, 765, 766, 767, 758,
	769, 770, 0, 0, 771, 772, 773, 774, 776, 778,
	779, 780, 775, 777, 781, 0, 782, 0, 0, 783,
	784, 785, 854, 855, 856, 0, 787, 788, 786, 789,
	790, 793, 791, 792, 857, 796, 513, 797, 798, 799,
	794, 795, 337, 4327, 0, 0, 800, 801, 858, 802,
	803, 804, 0, 0, 0, 0, 0, 0, 0, 345,
	346, 348, 347, 349, 350, 351, 352, 0, 353, 354,
	0, 0, 0, 0, 0, 805, 0, 0, 0, 356,
	0, 355, 0, 357, 358, 359, 0, 360, 361, 362,
	363, 364, 365, 366, 367, 806, 807, 0, 368, 808,
	369, 809, 0, 810, 370, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 0, 0, 0, 380, 811, 812,
	813, 0, 381, 382, 383, 384, 814, 0, 0, 0,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 0,
	394, 395, 396, 393, 397, 398, 0, 399, 0, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 412, 0, 0, 0, 0, 0, 0,
	0, 413, 414, 415, 416, 417, 0, 418, 420, 421,
	815, 422, 816, 0, 425, 427, 419, 423, 0, 426,
	424, 428, 429, 0, 430, 431, 432, 433, 0, 0,
	434, 435, 436, 0, 437, 438, 440, 439, 0, 441,
	442, 443, 0, 444, 445, 817, 446, 447, 448, 450,
	452, 449, 451, 453, 454, 455, 456, 457, 818, 819,
	458, 459, 0, 0, 0, 0, 0, 0, 0, 460,
	461, 462, 820, 0, 0, 0, 463, 0, 465, 469,
	466, 467, 468, 470, 0, 464, 471, 472, 0, 0,
	473, 474, 475, 821, 822, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 486, 823, 0, 824,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 825,
	826, 827, 595, 0, 495, 496, 497, 0, 498, 499,
	500, 501, 502, 503, 504, 0, 0, 0, 505, 506,
	507, 508, 0, 0, 0, 0, 0, 828, 509, 596,
	510, 829, 830, 0, 831, 0, 511, 512, 515, 0,
	832, 0, 514, 516, 517, 0, 518, 0, 0, 0,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 528,
	527, 0, 530, 833, 529, 0, 531, 532, 0, 0,
	533, 534, 535, 536, 537, 538, 541, 0, 0, 539,
	540, 542, 543, 0, 544, 545, 547, 550, 546, 548,
	549, 551, 552, 565, 566, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 568, 0, 567,
	0, 569, 570, 571, 572, 573, 581, 583, 584, 579,
	580, 582, 585, 586, 588, 589, 576, 577, 578, 0,
	587, 574, 0, 575, 0, 0, 590, 591, 592, 593,
	0, 834, 594, 835, 597, 598, 0, 0, 599, 0,
	600, 0, 0, 602, 603, 604, 0, 0, 605, 606,
	836, 0, 607, 0, 837, 608, 609, 601, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 0, 620,
	621, 838, 622, 623, 624, 839, 625, 626, 627, 840,
	628, 841, 629, 630, 0, 631, 632, 633, 0, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 842,
	644, 645, 647, 646, 648, 649, 0, 650, 0, 651,
	652, 653, 0, 0, 0, 0, 0, 654, 655, 657,
	0, 658, 659, 660, 661, 662, 656, 663, 664, 665,
	666, 667, 668, 669, 0, 671, 672, 670, 673, 674,
	0, 675, 676, 677, 678, 679, 843, 680, 0, 681,
	682, 690, 691, 692, 683, 684, 686, 693, 685, 694,
	695, 696, 697, 699, 698, 0, 701, 702, 700, 703,
	704, 705, 706, 0, 707, 844, 708, 687, 688, 709,
	710, 711, 0, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 845, 0, 721, 0, 722, 723, 724, 725,
	726, 727, 729, 689, 730, 731, 732, 737, 738, 846,
	733, 734, 735, 736, 847, 740, 741, 742, 743, 0,
	744, 745, 0, 739, 728, 0, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 0, 756, 848, 849,
	850, 851, 0, 768, 0, 757, 759, 760, 761, 762,
	852, 763, 853, 0, 764, 765, 766, 767, 758, 769,
	770, 0, 0, 771, 772, 773, 774, 776, 778, 779,
	780, 775, 777, 781, 0, 782, 0, 0, 783, 784,
	785, 854, 855, 856, 0, 787, 788, 786, 789, 790,
	793, 791, 792, 857, 796, 513, 797, 798, 799, 794,
	795, 337, 4866, 0, 0, 800, 801, 858, 802, 803,
	804, 0, 0, 0, 0, 0, 0, 0, 345, 346,
	348, 347, 349, 350, 351, 352, 0, 353, 354, 0,
	0, 0, 0, 0, 805, 0, 0, 0, 356, 0,
	355, 0, 357, 358, 359, 0, 360, 361, 362, 363,
	364, 365, 366, 367, 806, 807, 0, 368, 808, 369,
	809, 0, 810, 370, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 0, 0, 0, 380, 811, 812, 813,
	0, 381, 382, 383, 384, 814, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 0, 394,
	395, 396, 393, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 0, 0, 0, 0, 0, 0,
	413, 414, 415, 416, 417, 0, 418, 420, 421, 815,
	422, 816, 0, 425, 427, 419, 423, 0, 426, 424,
	428, 429, 0, 430, 431, 432, 433, 0, 0, 434,
	435, 436, 0, 437, 438, 440, 439, 0, 441, 442,
	443, 0, 444, 445, 817, 446, 447, 448, 450, 452,
	449, 451, 453, 454, 455, 456, 457, 818, 819, 458,
	459, 0, 0, 0, 0, 0, 0, 0, 460, 461,
	462, 820, 0, 0, 0, 463, 0, 465, 469, 466,
	467, 468, 470, 0, 464, 471, 472, 0, 0, 473,
	474, 475, 821, 822, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 0, 485, 486, 823, 0, 824, 487,
	0, 488, 489, 490, 491, 492, 493, 494, 825, 826,
	827, 595, 0, 495, 496, 497, 0, 498, 499, 500,
	501, 502, 503, 504, 0, 0, 0, 505, 506, 507,
	508, 0, 0, 0, 0, 0, 828, 509, 596, 510,
	829, 830, 0, 831, 0, 511, 512, 515, 0, 832,
	0, 514, 516, 517, 0, 518, 0, 0, 0, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 528, 527,
	0, 530, 833, 529, 0, 531, 532, 0, 0, 533,
	534, 535, 536, 537, 538, 541, 0, 0, 539, 540,
	542, 543, 0, 544, 545, 547, 550, 546, 548, 549,
	551, 552, 565, 566, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 568, 0, 567, 0,
	569, 570, 571, 572, 573, 581, 583, 584, 579, 580,
	582, 585, 586, 588, 589, 576, 577, 578, 0, 587,
	574, 0, 575, 0, 0, 590, 591, 592, 593, 0,
	834, 594, 835, 597, 598, 0, 0, 599, 0, 600,
	0, 0, 602, 603, 604, 0, 0, 605, 606, 836,
	0, 607, 0, 837, 608, 609, 601, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 0, 620, 621,
	838, 622, 623, 624, 839, 625, 626, 627, 840, 628,
	841, 629, 630, 0, 631, 632, 633, 0, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 842, 644,
	645, 647, 646, 648, 649, 0, 650, 0, 651, 652,
	653, 0, 0, 0, 0, 0, 654, 655, 657, 0,
	658, 659, 660, 661, 662, 656, 663, 664, 665, 666,
	667, 668, 669, 0, 671, 672, 670, 673, 674, 0,
	675, 676, 677, 678, 679, 843, 680, 0, 681, 682,
	690, 691, 692, 683, 684, 686, 693, 685, 694, 695,
	696, 697, 699, 698, 0, 701, 702, 700, 703, 704,
	705, 706, 0, 707, 844, 708, 687, 688, 709, 710,
	711, 0, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 845, 0, 721, 0, 722, 723, 724, 725, 726,
	727, 729, 689, 730, 731, 732, 737, 738, 846, 733,
	734, 735, 736, 847, 740, 741, 742, 743, 0, 744,
	745, 0, 739, 728, 0, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 0, 756, 848, 849, 850,
	851, 0, 768, 0, 757, 759, 760, 761, 762, 852,
	763, 853, 0, 764, 765, 766, 767, 758, 769, 770,
	0, 0, 771, 772, 773, 774, 776, 778, 779, 780,
	775, 777, 781, 0, 782, 0, 0, 783, 784, 785,
	854, 855, 856, 0, 787, 788, 786, 789, 790, 793,
	791, 792, 857, 796, 513, 797, 798, 799, 794, 795,
	337, 0, 0, 0, 800, 801, 858, 802, 803, 804,
	0, 0, 0, 0, 0, 0, 0, 345, 346, 348,
	347, 349, 350, 351, 352, 0, 353, 354, 0, 0,
	0, 0, 0, 805, 0, 0, 0, 356, 0, 355,
	0, 357, 358, 359, 0, 360, 361, 362, 363, 364,
	365, 366, 367, 806, 807, 0, 368, 808, 369, 809,
	0, 810, 370, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 0, 0, 380, 811, 812, 813, 0,
	381, 382, 383, 384, 814, 0, 0, 0, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 0, 394, 395,
	396, 393, 397, 398, 0, 399, 0, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 412, 0, 0, 0, 0, 0, 0, 0, 413,
	414, 415, 416, 417, 0, 418, 420, 421, 815, 422,
	816, 5478, 425, 427, 419, 423, 0, 426, 424, 428,
	429, 0, 430, 431, 432, 433, 0, 0, 434, 435,
	436, 0, 437, 438, 440, 439, 0, 441, 442, 443,
	0, 444, 445, 817, 446, 447, 448, 450, 452, 449,
	451, 453, 454, 455, 456, 457, 818, 819, 458, 459,
	0, 0, 0, 0, 0, 0, 0, 460, 461, 462,
	820, 0, 0, 0, 463, 0, 465, 469, 466, 467,
	468, 470, 0, 464, 471, 472, 0, 0, 473, 474,
	475, 821, 822, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 486, 823, 0, 824, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 825, 826, 827,
	595, 0, 495, 496, 497, 0, 498, 499, 500, 501,
	502, 503, 504, 0, 0, 0, 505, 506, 507, 508,
	0, 0, 0, 0, 0, 828, 509, 596, 510, 829,
	830, 0, 831, 0, 511, 512, 515, 0, 832, 0,
	514, 516, 517, 0, 518, 0, 0, 0, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 528, 527, 0,
	530, 833, 529, 0, 531, 532, 0, 0, 533, 534,
	535, 536, 537, 538, 541, 0, 0, 539, 540, 542,
	543, 0, 544, 545, 547, 550, 546, 548, 549, 551,
	552, 565, 566, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 568, 0, 567, 0, 569,
	570, 571, 572, 573, 581, 583, 584, 579, 580, 582,
	585, 586, 588, 589, 576, 577, 578, 0, 587, 574,
	0, 575, 0, 0, 590, 591, 592, 593, 0, 834,
	594, 835, 597, 598, 0, 0, 599, 0, 600, 0,
	0, 602, 603, 604, 0, 0, 605, 606, 836, 0,
	607, 0, 837, 608, 609, 601, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 0, 620, 621, 838,
	622, 623, 624, 839, 625, 626, 627, 840, 628, 841,
	629, 630, 0, 631, 632, 633, 0, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 842, 644, 645,
	647, 646, 648, 649, 0, 650, 0, 651, 652, 653,
	0, 0, 0, 0, 0, 654, 655, 657, 0, 658,
	659, 660, 661, 662, 656, 663, 664, 665, 666, 667,
	668, 669, 0, 671, 672, 670, 673, 674, 0, 675,
	676, 677, 678, 679, 843, 680, 0, 681, 682, 690,
	691, 692, 683, 684, 686, 693, 685, 694, 695, 696,
	697, 699, 698, 0, 701, 702, 700, 703, 704, 705,
	706, 0, 707, 844, 708, 687, 688, 709, 710, 711,
	0, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	845, 0, 721, 0, 722, 723, 724, 725, 726, 727,
	729, 689, 730, 731, 732, 737, 738, 846, 733, 734,
	735, 736, 847, 740, 741, 742, 743, 0, 744, 745,
	0, 739, 728, 0, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 0, 756, 848, 849, 850, 851,
	0, 768, 0, 757, 759, 760, 761, 762, 852, 763,
	853, 0, 764, 765, 766, 767, 758, 769, 770, 0,
	0, 771, 772, 773, 774, 776, 778, 779, 780, 775,
	777, 781, 0, 782, 0, 0, 783, 784, 785, 854,
	855, 856, 0, 787, 788, 786, 789, 790, 793, 791,
	792, 857, 796, 513, 797, 798, 799, 794, 795, 337,
	0, 0, 0, 800, 801, 858, 802, 803, 804, 0,
	0, 0, 0, 0, 0, 0, 345, 346, 348, 347,
	349, 350, 351, 352, 0, 353, 354, 0, 0, 0,
	0, 0, 805, 0, 3927, 0, 356, 0, 355, 0,
	357, 358, 359, 0, 360, 361, 362, 363, 364, 365,
	366, 367, 806, 807, 0, 368, 808, 369, 809, 0,
	810, 370, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 0, 0, 0, 380, 811, 812, 813, 0, 381,
	382, 383, 384, 814, 0, 0, 0, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 0, 394, 395, 396,
	393, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	412, 0, 0, 0, 0, 0, 0, 0, 413, 414,
	415, 416, 417, 0, 418, 420, 421, 815, 422, 816,
	0, 425, 427, 419, 423, 0, 426, 424, 428, 429,
	0, 430, 431, 432, 433, 0, 0, 434, 435, 436,
	0, 437, 438, 440, 439, 0, 441, 442, 443, 0,
	444, 445, 817, 446, 447, 448, 450, 452, 449, 451,
	453, 454, 455, 456, 457, 818, 819, 458, 459, 0,
	0, 0, 0, 0, 0, 0, 460, 461, 462, 820,
	0, 0, 0, 463, 0, 465, 469, 466, 467, 468,
	470, 0, 464, 471, 472, 0, 0, 473, 474, 475,
	821, 822, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 0, 485, 486, 823, 0, 824, 487, 0, 488,
	489, 490, 491, 492, 493, 494, 825, 826, 827, 595,
	0, 495, 496, 497, 0, 498, 499, 500, 501, 502,
	503, 504, 0, 0, 0, 505, 506, 507, 508, 0,
	0, 0, 0, 0, 828, 509, 596, 510, 829, 830,
	0, 831, 0, 511, 512, 515, 0, 832, 0, 514,
	516, 517, 0, 518, 0, 0, 0, 519, 520, 521,
	522, 523, 524, 525, 0, 526, 528, 527, 0, 530,
	833, 529, 0, 531, 532, 0, 0, 533, 534, 535,
	536, 537, 538, 541, 0, 0, 539, 540, 542, 543,
	0, 544, 545, 547, 550, 546, 548, 549, 551, 552,
	565, 566, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 568, 0, 567, 0, 569, 570,
	571, 572, 573, 581, 583, 584, 579, 580, 582, 585,
	586, 588, 589, 576, 577, 578, 0, 587, 574, 0,
	575, 0, 0, 590, 591, 592, 593, 0, 834, 594,
	835, 597, 598, 0, 0, 599, 0, 600, 0, 0,
	602, 603, 604, 0, 0, 605, 606, 836, 0, 607,
	0, 837, 608, 609, 601, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 0, 620, 621, 838, 622,
	623, 624, 839, 625, 626, 627, 840, 628, 841, 629,
	630, 0, 631, 632, 633, 0, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 842, 644, 645, 647,
	646, 648, 649, 0, 650, 0, 651, 652, 653, 0,
	0, 0, 0, 0, 654, 655, 657, 0, 658, 659,
	660, 661, 662, 656, 663, 664, 665, 666, 667, 668,
	669, 0, 671, 672, 670, 673, 674, 0, 675, 676,
	677, 678, 679, 843, 680, 0, 681, 682, 690, 691,
	692, 683, 684, 686, 693, 685, 694, 695, 696, 697,
	699, 698, 0, 701, 702, 700, 703, 704, 705, 706,
	0, 707, 844, 708, 687, 688, 709, 710, 711, 0,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 845,
	0, 721, 0, 722, 723, 724, 725, 726, 727, 729,
	689, 730, 731, 732, 737, 738, 846, 733, 734, 735,
	736, 847, 740, 741, 742, 743, 0, 744, 745, 0,
	739, 728, 0, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 755, 0, 756, 848, 849, 850, 851, 0,
	768, 0, 757, 759, 760, 761, 762, 852, 763, 853,
	0, 764, 765, 766, 767, 758, 769, 770, 0, 0,
	771, 772, 773, 774, 776, 778, 779, 780, 775, 777,
	781, 0, 782, 0, 0, 783, 784, 785, 854, 855,
	856, 0, 787, 788, 786, 789, 790, 793, 791, 792,
	857, 796, 513, 797, 798, 799, 794, 795, 337, 0,
	0, 0, 800, 801, 858, 802, 803, 804, 0, 0,
	0, 0, 0, 0, 0, 345, 346, 348, 347, 349,
	350, 351, 352, 0, 353, 354, 0, 0, 0, 0,
	0, 805, 0, 3919, 0, 356, 0, 355, 0, 357,
	358, 359, 0, 360, 361, 362, 363, 364, 365, 366,
	367, 806, 807, 0, 368, 808, 369, 809, 0, 810,
	370, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	0, 0, 0, 380, 811, 812, 813, 0, 381, 382,
	383, 384, 814, 0, 0, 0, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 0, 394, 395, 396, 393,
	397, 398, 0, 399, 0, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 412,
	0, 0, 0, 0, 0, 0, 0, 413, 414, 415,
	416, 417, 0, 418, 420, 421, 815, 422, 816, 0,
	425, 427, 419, 423, 0, 426, 424, 428, 429, 0,
	430, 431, 432, 433, 0, 0, 434, 435, 436, 0,
	437, 438, 440, 439, 0, 441, 442, 443, 0, 444,
	445, 817, 446, 447, 448, 450, 452, 449, 451, 453,
	454, 455, 456, 457, 818, 819, 458, 459, 0, 0,
	0, 0, 0, 0, 0, 460, 461, 462, 820, 0,
	0, 0, 463, 0, 465, 469, 466, 467, 468, 470,
	0, 464, 471, 472, 0, 0, 473, 474, 475, 821,
	822, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 486, 823, 0, 824, 487, 0, 488, 489,
	490, 491, 492, 493, 494, 825, 826, 827, 595, 0,
	495, 496, 497, 0, 498, 499, 500, 501, 502, 503,
	504, 0, 0, 0, 505, 506, 507, 508, 0, 0,
	0, 0, 0, 828, 509, 596, 510, 829, 830, 0,
	831, 0, 511, 512, 515, 0, 832, 0, 514, 516,
	517, 0, 518, 0, 0, 0, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 528, 527, 0, 530, 833,
	529, 0, 531, 532, 0, 0, 533, 534, 535, 536,
	537, 538, 541, 0, 0, 539, 540, 542, 543, 0,
	544, 545, 547, 550, 546, 548, 549, 551, 552, 565,
	566, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 568, 0, 567, 0, 569, 570, 571,
	572, 573, 581, 583, 584, 579, 580, 582, 585, 586,
	588, 589, 576, 577, 578, 0, 587, 574, 0, 575,
	0, 0, 590, 591, 592, 593, 0, 834, 594, 835,
	597, 598, 0, 0, 599, 0, 600, 0, 0, 602,
	603, 604, 0, 0, 605, 606, 836, 0, 607, 0,
	837, 608, 609, 601, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 0, 620, 621, 838, 622, 623,
	624, 839, 625, 626, 627, 840, 628, 841, 629, 630,
	0, 631, 632, 633, 0, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 842, 644, 645, 647, 646,
	648, 649, 0, 650, 0, 651, 652, 653, 0, 0,
	0, 0, 0, 654, 655, 657, 0, 658, 659, 660,
	661, 662, 656, 663, 664, 665, 666, 667, 668, 669,
	0, 671, 672, 670, 673, 674, 0, 675, 676, 677,
	678, 679, 843, 680, 0, 681, 682, 690, 691, 692,
	683, 684, 686, 693, 685, 694, 695, 696, 697, 699,
	698, 0, 701, 702, 700, 703, 704, 705, 706, 0,
	707, 844, 708, 687, 688, 709, 710, 711, 0, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 845, 0,
	721, 0, 722, 723, 724, 725, 726, 727, 729, 689,
	730, 731, 732, 737, 738, 846, 733, 734, 735, 736,
	847, 740, 741, 742, 743, 0, 744, 745, 0, 739,
	728, 0, 746, 747, 748, 749, 750, 751, 752, 753,
	754, 755, 0, 756, 848, 849, 850, 851, 0, 768,
	0, 757, 759, 760, 761, 762, 852, 763, 853, 0,
	764, 765, 766, 767, 758, 769, 770, 0, 0, 771,
	772, 773, 774, 776, 778, 779, 780, 775, 777, 781,
	0, 782, 0, 0, 783, 784, 785, 854, 855, 856,
	0, 787, 788, 786, 789, 790, 793, 791, 792, 857,
	796, 513, 797, 798, 799, 794, 795, 337, 4953, 0,
	0, 800, 801, 858, 802, 803, 804, 0, 0, 0,
	0, 0, 0, 0, 345, 346, 348, 347, 349, 350,
	351, 352, 0, 353, 354, 0, 0, 0, 0, 0,
	805, 0, 0, 0, 356, 0, 355, 0, 357, 358,
	359, 0, 360, 361, 362, 363, 364, 365, 366, 367,
	806, 807, 0, 368, 808, 369, 809, 0, 810, 370,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 0,
	0, 0, 380, 811, 812, 813, 0, 381, 382, 383,
	384, 814, 0, 0, 0, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 0, 394, 395, 396, 393, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 412, 0,
	0, 0, 0, 0, 0, 0, 413, 414, 415, 416,
	417, 0, 418, 420, 421, 815, 422, 816, 0, 425,
	427, 419, 423, 0, 426, 424, 428, 429, 0, 430,
	431, 432, 433, 0, 0, 434, 435, 436, 0, 437,
	438, 440, 439, 0, 441, 442, 443, 0, 444, 445,
	817, 446, 447, 448, 450, 452, 449, 451, 453, 454,
	455, 456, 457, 818, 819, 458, 459, 0, 0, 0,
	0, 0, 0, 0, 460, 461, 462, 820, 0, 0,
	0, 463, 0, 465, 469, 466, 467, 468, 470, 0,
	464, 471, 472, 0, 0, 473, 474, 475, 821, 822,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 0,
	485, 486, 823, 0, 824, 487, 0, 488, 489, 490,
	491, 492, 493, 494, 4956, 826, 827, 595, 0, 495,
	496, 497, 0, 498, 499, 500, 501, 502, 503, 504,
	0, 0, 0, 505, 506, 507, 508, 0, 0, 0,
	0, 0, 828, 509, 596, 510, 829, 830, 0, 831,
	0, 511, 512, 515, 0, 832, 0, 514, 516, 517,
	0, 518, 0, 0, 0, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 528, 527, 0, 530, 833, 529,
	0, 531, 532, 0, 0, 533, 534, 535, 536, 537,
	538, 541, 0, 0, 539, 540, 542, 543, 0, 544,
	545, 547, 550, 546, 548, 549, 551, 552, 565, 566,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 568, 0, 567, 0, 569, 570, 571, 572,
	573, 581, 583, 584, 579, 580, 582, 585, 586, 588,
	589, 576, 577, 578, 0, 587, 574, 0, 575, 0,
	0, 590, 591, 592, 593, 0, 834, 594, 835, 597,
	598, 0, 0, 599, 0, 600, 0, 0, 602, 603,
	604, 0, 0, 605, 606, 836, 0, 607, 0, 837,
	608, 609, 601, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 620, 621, 838, 622, 623, 624,
	839, 625, 626, 627, 840, 628, 841, 629, 630, 0,
	631, 632, 633, 0, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 842, 644, 645, 647, 646, 648,
	649, 0, 650, 0, 651, 652, 653, 0, 0, 0,
	0, 0, 654, 655, 657, 0, 658, 659, 660, 661,
	662, 656, 663, 664, 665, 666, 667, 668, 669, 0,
	671, 672, 670, 673, 674, 0, 675, 676, 677, 678,
	679, 843, 680, 0, 681, 682, 690, 691, 692, 683,
	684, 686, 693, 685, 694, 695, 696, 697, 699, 698,
	0, 701, 702, 700, 703, 704, 705, 706, 0, 707,
	844, 708, 687, 688, 709, 710, 711, 0, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 845, 0, 721,
	0, 722, 723, 724, 725, 726, 727, 729, 689, 730,
	731, 732, 737, 738, 846, 733, 734, 735, 736, 847,
	740, 741, 742, 743, 0, 744, 745, 0, 739, 728,
	0, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	755, 0, 756, 848, 849, 850, 851, 0, 768, 0,
	757, 759, 760, 761, 762, 852, 763, 853, 0, 764,
	765, 766, 767, 758, 769, 770, 0, 0, 771, 772,
	773, 774, 776, 778, 779, 780, 775, 777, 781, 0,
	782, 0, 0, 783, 784, 785, 854, 855, 856, 0,
	787, 788, 786, 789, 790, 793, 791, 792, 857, 796,
	513, 797, 798, 799, 794, 795, 337, 4953, 0, 0,
	800, 801, 858, 802, 803, 804, 0, 0, 0, 0,
	0, 0, 0, 345, 346, 348, 347, 349, 350, 351,
	352, 0, 353, 354, 0, 0, 0, 0, 0, 805,
	0, 0, 0, 356, 0, 355, 0, 357, 358, 359,
	0, 360, 361, 362, 363, 364, 365, 366, 367, 806,
	807, 0, 368, 808, 369, 809, 0, 810, 370, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 0, 0,
	0, 380, 811, 812, 813, 0, 381, 382, 383, 384,
	814, 0, 0, 0, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 0, 394, 395, 396, 393, 397, 398,
	0, 399, 0, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 412, 0, 0,
	0, 0, 0, 0, 0, 413, 414, 415, 416, 417,
	0, 418, 420, 421, 815, 422, 816, 0, 425, 427,
	419, 423, 0, 426, 424, 428, 429, 0, 430, 431,
	432, 433, 0, 0, 434, 435, 436, 0, 437, 438,
	440, 439, 0, 441, 442, 443, 0, 444, 445, 817,
	446, 447, 448, 450, 452, 449, 451, 453, 454, 455,
	456, 457, 818, 819, 458, 459, 0, 0, 0, 0,
	0, 0, 0, 460, 461, 462, 820, 0, 0, 0,
	463, 0, 465, 469, 466, 467, 468, 470, 0, 464,
	471, 472, 0, 0, 473, 474, 475, 821, 822, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	486, 823, 0, 824, 487, 0, 488, 489, 490, 491,
	492, 493, 494, 4951, 826, 827, 595, 0, 495, 496,
	497, 0, 498, 499, 500, 501, 502, 503, 504, 0,
	0, 0, 505, 506, 507, 508, 0, 0, 0, 0,
	0, 828, 509, 596, 510, 829, 830, 0, 831, 0,
	511, 512, 515, 0, 832, 0, 514, 516, 517, 0,
	518, 0, 0, 0, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 528, 527, 0, 530, 833, 529, 0,
	531, 532, 0, 0, 533, 534, 535, 536, 537, 538,
	541, 0, 0, 539, 540, 542, 543, 0, 544, 545,
	547, 550, 546, 548, 549, 551, 552, 565, 566, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 568, 0, 567, 0, 569, 570, 571, 572, 573,
	581, 583, 584, 579, 580, 582, 585, 586, 588, 589,
	576, 577, 578, 0, 587, 574, 0, 575, 0, 0,
	590, 591, 592, 593, 0, 834, 594, 835, 597, 598,
	0, 0, 599, 0, 600, 0, 0, 602, 603, 604,
	0, 0, 605, 606, 836, 0, 607, 0, 837, 608,
	609, 601, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 0, 620, 621, 838, 622, 623, 624, 839,
	625, 626, 627, 840, 628, 841, 629, 630, 0, 631,
	632, 633, 0, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 842, 644, 645, 647, 646, 648, 649,
	0, 650, 0, 651, 652, 653, 0, 0, 0, 0,
	0, 654, 655, 657, 0, 658, 659, 660, 661, 662,
	656, 663, 664, 665, 666, 667, 668, 669, 0, 671,
	672, 670, 673, 674, 0, 675, 676, 677, 678, 679,
	843, 680, 0, 681, 682, 690, 691, 692, 683, 684,
	686, 693, 685, 694, 695, 696, 697, 699, 698, 0,
	701, 702, 700, 703, 704, 705, 706, 0, 707, 844,
	708, 687, 688, 709, 710, 711, 0, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 845, 0, 721, 0,
	722, 723, 724, 725, 726, 727, 729, 689, 730, 731,
	732, 737, 738, 846, 733, 734, 735, 736, 847, 740,
	741, 742, 743, 0, 744, 745, 0, 739, 728, 0,
	746, 747, 748, 749, 750, 751, 752, 753, 754, 755,
	0, 756, 848, 849, 850, 851, 0, 768, 0, 757,
	759, 760, 761, 762, 852, 763, 853, 0, 764, 765,
	766, 767, 758, 769, 770, 0, 0, 771, 772, 773,
	774, 776, 778, 779, 780, 775, 777, 781, 0, 782,
	0, 0, 783, 784, 785, 854, 855, 856, 0, 787,
	788, 786, 789, 790, 793, 791, 792, 857, 796, 513,
	797, 798, 799, 794, 795, 337, 4327, 0, 0, 800,
	801, 858, 802, 803, 804, 0, 0, 0, 0, 0,
	0, 0, 345, 346, 348, 347, 349, 350, 351, 352,
	0, 353, 354, 0, 0, 0, 0, 0, 805, 0,
	0, 0, 356, 0, 355, 0, 357, 358, 359, 0,
	360, 361, 362, 363, 364, 365, 366, 367, 806, 807,
	0, 368, 808, 369, 809, 0, 810, 370, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 0, 0, 0,
	380, 811, 812, 813, 0, 381, 382, 383, 384, 814,
	0, 0, 0, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 0, 394, 395, 396, 393, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 412, 0, 0, 0,
	0, 0, 0, 0, 413, 414, 415, 416, 417, 0,
	418, 420, 421, 815, 422, 816, 0, 425, 427, 419,
	423, 0, 426, 424, 428, 429, 0, 430, 431, 432,
	433, 0, 0, 434, 435, 436, 0, 437, 438, 440,
	439, 0, 441, 442, 443, 0, 444, 445, 817, 446,
	447, 448, 450, 452, 449, 451, 453, 454, 455, 456,
	457, 818, 819, 458, 459, 0, 0, 0, 0, 0,
	0, 0, 460, 461, 462, 820, 0, 0, 0, 463,
	0, 465, 469, 466, 467, 468, 470, 0, 464, 471,
	472, 0, 0, 473, 474, 475, 821, 822, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 486,
	823, 0, 824, 487, 0, 488, 489, 490, 491, 492,
	493, 494, 825, 826, 827, 595, 0, 495, 496, 497,
	0, 498, 499, 500, 501, 502, 503, 504, 0, 0,
	0, 505, 506, 507, 508, 0, 0, 0, 0, 0,
	828, 509, 596, 510, 829, 830, 0, 831, 0, 511,
	512, 515, 0, 832, 0, 514, 516, 517, 0, 518,
	0, 0, 0, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 528, 527, 0, 530, 833, 529, 0, 531,
	532, 0, 0, 533, 534, 535, 536, 537, 538, 541,
	0, 0, 539, 540, 542, 543, 0, 544, 545, 547,
	550, 546, 548, 549, 551, 552, 565, 566, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	568, 0, 567, 0, 569, 570, 571, 572, 573, 581,
	583, 584, 579, 580, 582, 585, 586, 588, 589, 576,
	577, 578, 0, 587, 574, 0, 575, 0, 0, 590,
	591, 592, 593, 0, 834, 594, 835, 597, 598, 0,
	0, 599, 0, 600, 0, 0, 602, 603, 4428, 0,
	0, 605, 606, 836, 0, 607, 0, 837, 608, 609,
	601, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 0, 620, 621, 838, 622, 623, 624, 839, 625,
	626, 627, 840, 628, 841, 629, 630, 0, 631, 632,
	633, 0, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 842, 644, 645, 647, 646, 648, 649, 0,
	650, 0, 651, 652, 653, 0, 0, 0, 0, 0,
	654, 655, 657, 0, 658, 659, 660, 661, 662, 656,
	663, 664, 665, 666, 667, 668, 669, 0, 671, 672,
	670, 673, 674, 0, 675, 676, 677, 678, 679, 843,
	680, 0, 681, 682, 690, 691, 692, 683, 684, 686,
	693, 685, 694, 695, 696, 697, 699, 698, 0, 701,
	702, 700, 703, 704, 705, 706, 0, 707, 844, 708,
	687, 688, 709, 710, 711, 0, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 845, 0, 721, 0, 722,
	723, 724, 725, 726, 727, 729, 689, 730, 731, 732,
	737, 738, 846, 733, 734, 735, 736, 847, 740, 741,
	742, 743, 0, 744, 745, 0, 739, 728, 0, 746,
	747, 748, 749, 750, 751, 752, 753, 754, 755, 0,
	756, 848, 849, 850, 851, 0, 768, 0, 757, 759,
	760, 761, 762, 852, 763, 853, 0, 764, 765, 766,
	767, 758, 769, 770, 0, 0, 771, 772, 773, 774,
	776, 778, 779, 780, 775, 777, 781, 0, 782, 0,
	0, 783, 784, 785, 854, 855, 856, 0, 787, 788,
	786, 789, 790, 793, 791, 792, 857, 796, 513, 797,
	798, 799, 794, 795, 337, 0, 0, 0, 800, 801,
	858, 802, 803, 804, 0, 0, 0, 0, 0, 0,
	0, 345, 346, 348, 347, 349, 350, 351, 352, 0,
	353, 354, 0, 0, 0, 0, 0, 805, 0, 0,
	0, 356, 0, 355, 0, 357, 358, 359, 0, 360,
	361, 362, 363, 364, 365, 366, 367, 806, 807, 0,
	368, 808, 369, 809, 0, 810, 370, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 0, 0, 0, 380,
	811, 812, 813, 0, 381, 382, 383, 384, 814, 0,
	0, 0, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 0, 394, 395, 396, 393, 397, 398, 0, 399,
	0, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 412, 0, 0, 0, 0,
	0, 0, 0, 413, 414, 415, 416, 417, 0, 418,
	420, 421, 815, 422, 816, 0, 425, 427, 419, 423,
	0, 426, 424, 428, 429, 0, 430, 431, 432, 433,
	0, 0, 434, 435, 436, 0, 437, 438, 440, 439,
	0, 441, 442, 443, 0, 444, 445, 817, 446, 447,
	448, 450, 452, 449, 451, 453, 454, 455, 456, 457,
	818, 819, 458, 459, 0, 0, 0, 0, 0, 0,
	0, 460, 461, 462, 820, 0, 0, 0, 463, 0,
	465, 469, 466, 467, 468, 470, 0, 464, 471, 472,
	0, 0, 473, 474, 475, 821, 822, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 486, 823,
	0, 824, 487, 0, 488, 489, 490, 491, 492, 493,
	494, 825, 826, 827, 595, 0, 495, 496, 497, 0,
	498, 499, 500, 501, 502, 503, 504, 0, 0, 0,
	505, 506, 507, 508, 0, 0, 0, 0, 0, 828,
	509, 596, 510, 829, 830, 0, 831, 0, 511, 512,
	515, 0, 832, 0, 514, 516, 517, 0, 518, 0,
	0, 0, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 528, 527, 0, 530, 833, 529, 0, 531, 532,
	0, 0, 533, 534, 535, 536, 537, 538, 541, 0,
	0, 539, 540, 542, 543, 0, 544, 545, 547, 550,
	546, 548, 549, 551, 552, 565, 566, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 568,
	0, 567, 0, 569, 570, 571, 572, 573, 581, 583,
	584, 579, 580, 582, 585, 586, 588, 589, 576, 577,
	578, 0, 587, 574, 0, 575, 0, 0, 590, 591,
	592, 593, 0, 834, 594, 835, 597, 598, 0, 0,
	599, 0, 600, 0, 0, 602, 603, 604, 0, 0,
	605, 606, 836, 0, 607, 0, 837, 608, 609, 601,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	0, 620, 621, 838, 622, 623, 624, 839, 625, 626,
	627, 840, 628, 841, 629, 630, 2811, 631, 632, 633,
	0, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 842, 644, 645, 647, 646, 648, 649, 0, 650,
	0, 651, 652, 653, 0, 0, 0, 0, 0, 654,
	655, 657, 0, 658, 659, 660, 661, 662, 656, 663,
	664, 665, 666, 667, 668, 669, 0, 671, 672, 670,
	673, 674, 0, 989, 676, 677, 678, 679, 843, 680,
	0, 681, 682, 690, 691, 692, 683, 684, 686, 988,
	685, 694, 695, 696, 697, 4275, 698, 0, 701, 702,
	700, 703, 704, 705, 706, 0, 707, 844, 708, 687,
	688, 709, 710, 711, 0, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 845, 0, 721, 0, 722, 723,
	724, 725, 726, 727, 729, 689, 730, 731, 732, 737,
	738, 846, 733, 734, 735, 736, 847, 740, 741, 742,
	743, 0, 744, 745, 0, 739, 728, 0, 746, 747,
	748, 749, 750, 751, 752, 753, 754, 755, 0, 756,
	986, 849, 850, 851, 0, 768, 0, 757, 759, 760,
	761, 762, 852, 763, 853, 0, 764, 765, 766, 767,
	758, 769, 770, 0, 0, 771, 772, 773, 774, 776,
	778, 779, 780, 775, 777, 781, 0, 782, 0, 0,
	783, 784, 785, 854, 855, 856, 0, 787, 788, 786,
	789, 790, 793, 791, 792, 857, 796, 513, 797, 798,
	799, 794, 795, 2994, 0, 337, 0, 800, 801, 858,
	802, 803, 804, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 346, 348, 347, 349, 350, 351, 352,
	0, 353, 354, 0, 0, 0, 0, 0, 805, 0,
	0, 0, 356, 0, 355, 0, 357, 358, 359, 0,
	360, 361, 362, 363, 364, 365, 366, 367, 806, 807,
	0, 368, 808, 369, 809, 0, 810, 370, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 0, 0, 0,
	380, 811, 812, 813, 0, 381, 382, 383, 384, 814,
	0, 0, 0, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 0, 394, 395, 396, 393, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 412, 0, 0, 0,
	0, 0, 0, 0, 413, 414, 415, 416, 417, 0,
	418, 420, 421, 815, 422, 816, 0, 425, 427, 419,
	423, 0, 426, 424, 428, 429, 0, 430, 431, 432,
	433, 0, 0, 434, 435, 436, 0, 437, 438, 440,
	439, 0, 441, 442, 443, 0, 444, 445, 817, 446,
	447, 448, 450, 452, 449, 451, 453, 454, 455, 456,
	457, 818, 819, 458, 459, 0, 0, 0, 0, 0,
	0, 0, 460, 461, 462, 820, 0, 0, 0, 463,
	0, 465, 469, 466, 467, 468, 470, 0, 464, 471,
	472, 0, 0, 473, 474, 475, 821, 822, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 486,
	823, 0, 824, 487, 0, 488, 489, 490, 491, 492,
	493, 494, 825, 826, 827, 595, 0, 495, 496, 497,
	0, 498, 499, 500, 501, 502, 503, 504, 0, 0,
	0, 505, 506, 507, 508, 0, 0, 0, 0, 0,
	828, 509, 596, 510, 829, 830, 0, 831, 0, 511,
	512, 515, 0, 832, 0, 514, 516, 517, 0, 518,
	0, 0, 0, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 528, 527, 0, 530, 833, 529, 0, 531,
	532, 0, 0, 533, 534, 535, 536, 537, 538, 541,
	0, 0, 539, 540, 542, 543, 0, 544, 545, 547,
	550, 546, 548, 549, 551, 552, 565, 566, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	568, 0, 567, 0, 569, 570, 571, 572, 573, 581,
	583, 584, 579, 580, 582, 585, 586, 588, 589, 576,
	577, 578, 0, 587, 574, 0, 575, 0, 0, 590,
	591, 592, 593, 0, 834, 594, 835, 597, 598, 0,
	0, 599, 0, 600, 0, 0, 602, 603, 604, 0,
	0, 605, 606, 836, 0, 607, 0, 837, 608, 609,
	601, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 0, 620, 621, 838, 622, 623, 624, 839, 625,
	626, 627, 840, 628, 841, 629, 630, 0, 631, 632,
	633, 0, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 842, 644, 645, 647, 646, 648, 649, 0,
	650, 0, 651, 652, 653, 0, 0, 0, 0, 0,
	654, 655, 657, 0, 658, 659, 660, 661, 662, 656,
	663, 664, 665, 666, 667, 668, 669, 0, 671, 672,
	670, 673, 674, 0, 675, 676, 677, 678, 679, 843,
	680, 0, 681, 682, 690, 691, 692, 683, 684, 686,
	693, 685, 694, 695, 696, 697, 699, 698, 0, 701,
	702, 700, 703, 704, 705, 706, 0, 707, 844, 708,
	687, 688, 709, 710, 711, 0, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 845, 0, 721, 0, 722,
	723, 724, 725, 726, 727, 729, 689, 730, 731, 732,
	737, 738, 846, 733, 734, 735, 736, 847, 740, 741,
	742, 743, 0, 744, 745, 0, 739, 728, 0, 746,
	747, 748, 749, 750, 751, 752, 753, 754, 755, 0,
	756, 848, 849, 850, 851, 0, 768, 0, 757, 759,
	760, 761, 762, 852, 763, 853, 0, 764, 765, 766,
	767, 758, 769, 770, 0, 0, 771, 772, 773, 774,
	776, 778, 779, 780, 775, 777, 781, 0, 782, 0,
	0, 783, 784, 785, 854, 855, 856, 0, 787, 788,
	786, 789, 790, 793, 791, 792, 857, 796, 513, 797,
	798, 799, 794, 795, 337, 0, 0, 0, 800, 801,
	858, 802, 803, 804, 0, 0, 0, 0, 0, 0,
	0, 345, 346, 348, 347, 349, 350, 351, 352, 2598,
	353, 354, 0, 0, 0, 0, 0, 805, 0, 0,
	0, 356, 0, 355, 0, 357, 358, 359, 0, 360,
	361, 362, 363, 364, 365, 366, 367, 806, 807, 0,
	368, 808, 369, 809, 0, 810, 370, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 0, 0, 0, 380,
	811, 812, 813, 0, 381, 382, 383, 384, 814, 0,
	0, 0, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 0, 394, 395, 396, 393, 397, 398, 0, 399,
	0, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 412, 0, 0, 0, 0,
	0, 0, 0, 413, 414, 415, 416, 417, 0, 418,
	420, 421, 815, 422, 816, 0, 425, 427, 419, 423,
	0, 426, 424, 428, 429, 0, 430, 431, 432, 433,
	0, 0, 434, 435, 436, 0, 437, 438, 440, 439,
	0, 441, 442, 443, 0, 444, 445, 817, 446, 447,
	448, 450, 452, 449, 451, 453, 454, 455, 456, 457,
	818, 819, 458, 459, 0, 0, 0, 0, 0, 0,
	0, 460, 461, 462, 820, 0, 0, 0, 463, 0,
	465, 469, 466, 467, 468, 470, 0, 464, 471, 472,
	0, 0, 473, 474, 475, 821, 822, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 486, 823,
	0, 824, 487, 0, 488, 489, 490, 491, 492, 493,
	494, 825, 826, 827, 595, 0, 495, 496, 497, 0,
	498, 499, 500, 501, 502, 503, 504, 0, 0, 0,
	505, 506, 507, 508, 0, 0, 0, 0, 0, 828,
	509, 596, 510, 829, 830, 0, 831, 0, 511, 512,
	515, 0, 832, 0, 514, 516, 517, 0, 518, 0,
	0, 0, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 528, 527, 0, 530, 833, 529, 0, 531, 532,
	0, 0, 533, 534, 535, 536, 537, 538, 541, 0,
	0, 539, 540, 542, 543, 0, 544, 545, 547, 550,
	546, 548, 549, 551, 552, 565, 566, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 568,
	0, 567, 0, 569, 570, 571, 572, 573, 581, 583,
	584, 579, 580, 582, 585, 586, 588, 589, 576, 577,
	578, 0, 587, 574, 0, 575, 0, 0, 590, 591,
	592, 593, 0, 834, 594, 835, 597, 598, 0, 0,
	599, 0, 600, 0, 0, 602, 603, 604, 0, 0,
	605, 606, 836, 0, 607, 0, 837, 608, 609, 601,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	0, 620, 621, 838, 622, 623, 624, 839, 625, 626,
	627, 840, 628, 841, 629, 630, 0, 631, 632, 633,
	0, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 842, 644, 645, 647, 646, 648, 649, 0, 650,
	0, 651, 652, 653, 0, 0, 0, 0, 0, 654,
	655, 657, 0, 658, 659, 660, 661, 662, 656, 663,
	664, 665, 666, 667, 668, 669, 0, 671, 672, 670,
	673, 674, 0, 675, 676, 677, 678, 679, 843, 680,
	0, 681, 682, 690, 691, 692, 683, 684, 686, 693,
	685, 694, 695, 696, 697, 699, 698, 0, 701, 702,
	700, 703, 704, 705, 706, 0, 707, 844, 708, 687,
	688, 709, 710, 711, 0, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 845, 0, 721, 0, 722, 723,
	724, 725, 726, 727, 729, 689, 730, 731, 732, 737,
	738, 846, 733, 734, 735, 736, 847, 740, 741, 742,
	743, 0, 744, 745, 0, 739, 728, 0, 746, 747,
	748, 749, 750, 751, 752, 753, 754, 755, 0, 756,
	848, 849, 850, 851, 0, 768, 0, 757, 759, 760,
	761, 762, 852, 763, 853, 0, 764, 765, 766, 767,
	758, 769, 770, 0, 0, 771, 772, 773, 774, 776,
	778, 779, 780, 775, 777, 781, 0, 782, 0, 0,
	783, 784, 785, 854, 855, 856, 0, 787, 788, 786,
	789, 790, 793, 791, 792, 857, 796, 513, 797, 798,
	799, 794, 795, 2142, 0, 337, 0, 800, 801, 858,
	802, 803, 804, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 346, 348, 347, 349, 350, 351, 352,
	0, 353, 354, 0, 0, 0, 0, 0, 805, 0,
	0, 0, 356, 0, 355, 0, 357, 358, 359, 0,
	360, 361, 362, 363, 364, 365, 366, 367, 806, 807,
	0, 368, 808, 369, 809, 0, 810, 370, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 0, 0, 0,
	380, 811, 812, 813, 0, 381, 382, 383, 384, 814,
	0, 0, 0, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 0, 394, 395, 396, 393, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 412, 0, 0, 0,
	0, 0, 0, 0, 413, 414, 415, 416, 417, 0,
	418, 420, 421, 815, 422, 816, 0, 425, 427, 419,
	423, 0, 426, 424, 428, 429, 0, 430, 431, 432,
	433, 0, 0, 434, 435, 436, 0, 437, 438, 440,
	439, 0, 441, 442, 443, 0, 444, 445, 817, 446,
	447, 448, 450, 452, 449, 451, 453, 454, 455, 456,
	457, 818, 819, 458, 459, 0, 0, 0, 0, 0,
	0, 0, 460, 461, 462, 820, 0, 0, 0, 463,
	0, 465, 469, 466, 467, 468, 470, 0, 464, 471,
	472, 0, 0, 473, 474, 475, 821, 822, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 486,
	823, 0, 824, 487, 0, 488, 489, 490, 491, 492,
	493, 494, 825, 826, 827, 595, 0, 495, 496, 497,
	0, 498, 499, 500, 501, 502, 503, 504, 0, 0,
	0, 505, 506, 507, 508, 0, 0, 0, 0, 0,
	828, 509, 596, 510, 829, 830, 0, 831, 0, 511,
	512, 515, 0, 832, 0, 514, 516, 517, 0, 518,
	0, 0, 0, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 528, 527, 0, 530, 833, 529, 0, 531,
	532, 0, 0, 533, 534, 535, 536, 537, 538, 541,
	0, 0, 539, 540, 542, 543, 0, 544, 545, 547,
	550, 546, 548, 549, 551, 552, 565, 566, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	568, 0, 567, 0, 569, 570, 571, 572, 573, 581,
	583, 584, 579, 580, 582, 585, 586, 588, 589, 576,
	577, 578, 0, 587, 574, 0, 575, 0, 0, 590,
	591, 592, 593, 0, 834, 594, 835, 597, 598, 0,
	0, 599, 0, 600, 0, 0, 602, 603, 604, 0,
	0, 605, 606, 836, 0, 607, 0, 837, 608, 609,
	601, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 0, 620, 621, 838, 622, 623, 624, 839, 625,
	626, 627, 840, 628, 841, 629, 630, 0, 631, 632,
	633, 0, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 842, 644, 645, 647, 646, 648, 649, 0,
	650, 0, 651, 652, 653, 0, 0, 0, 0, 0,
	654, 655, 657, 0, 658, 659, 660, 661, 662, 656,
	663, 664, 665, 666, 667, 668, 669, 0, 671, 672,
	670, 673, 674, 0, 675, 676, 677, 678, 679, 843,
	680, 0, 681, 682, 690, 691, 692, 683, 684, 686,
	693, 685, 694, 695, 696, 697, 699, 698, 0, 701,
	702, 700, 703, 704, 705, 706, 0, 707, 844, 708,
	687, 688, 709, 710, 711, 0, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 845, 0, 721, 0, 722,
	723, 724, 725, 726, 727, 729, 689, 730, 731, 732,
	737, 738, 846, 733, 734, 735, 736, 847, 740, 741,
	742, 743, 0, 744, 745, 0, 739, 728, 0, 746,
	747, 748, 749, 750, 751, 752, 753, 754, 755, 0,
	756, 848, 849, 850, 851, 0, 768, 0, 757, 759,
	760, 761, 762, 852, 763, 853, 0, 764, 765, 766,
	767, 758, 769, 770, 0, 0, 771, 772, 773, 774,
	776, 778, 779, 780, 775, 777, 781, 0, 782, 0,
	0, 783, 784, 785, 854, 855, 856, 0, 787, 788,
	786, 789, 790, 793, 791, 792, 857, 796, 513, 797,
	798, 799, 794, 795, 2134, 0, 337, 0, 800, 801,
	858, 802, 803, 804, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 346, 348, 347, 349, 350, 351,
	352, 0, 353, 354, 0, 0, 0, 0, 0, 805,
	0, 0, 0, 356, 0, 355, 0, 357, 358, 359,
	0, 360, 361, 362, 363, 364, 365, 366, 367, 806,
	807, 0, 368, 808, 369, 809, 0, 810, 370, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 0, 0,
	0, 380, 811, 812, 813, 0, 381, 382, 383, 384,
	814, 0, 0, 0, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 0, 394, 395, 396, 393, 397, 398,
	0, 399, 0, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 412, 0, 0,
	0, 0, 0, 0, 0, 413, 414, 415, 416, 417,
	0, 418, 420, 421, 815, 422, 816, 0, 425, 427,
	419, 423, 0, 426, 424, 428, 429, 0, 430, 431,
	432, 433, 0, 0, 434, 435, 436, 0, 437, 438,
	440, 439, 0, 441, 442, 443, 0, 444, 445, 817,
	446, 447, 448, 450, 452, 449, 451, 453, 454, 455,
	456, 457, 818, 819, 458, 459, 0, 0, 0, 0,
	0, 0, 0, 460, 461, 462, 820, 0, 0, 0,
	463, 0, 465, 469, 466, 467, 468, 470, 0, 464,
	471, 472, 0, 0, 473, 474, 475, 821, 822, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	486, 823, 0, 824, 487, 0, 488, 489, 490, 491,
	492, 493, 494, 825, 826, 827, 595, 0, 495, 496,
	497, 0, 498, 499, 500, 501, 502, 503, 504, 0,
	0, 0, 505, 506, 507, 508, 0, 0, 0, 0,
	0, 828, 509, 596, 510, 829, 830, 0, 831, 0,
	511, 512, 515, 0, 832, 0, 514, 516, 517, 0,
	518, 0, 0, 0, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 528, 527, 0, 530, 833, 529, 0,
	531, 532, 0, 0, 533, 534, 535, 536, 537, 538,
	541, 0, 0, 539, 540, 542, 543, 0, 544, 545,
	547, 550, 546, 548, 549, 551, 552, 565, 566, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 568, 0, 567, 0, 569, 570, 571, 572, 573,
	581, 583, 584, 579, 580, 582, 585, 586, 588, 589,
	576, 577, 578, 0, 587, 574, 0, 575, 0, 0,
	590, 591, 592, 593, 0, 834, 594, 835, 597, 598,
	0, 0, 599, 0, 600, 0, 0, 602, 603, 604,
	0, 0, 605, 606, 836, 0, 607, 0, 837, 608,
	609, 601, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 0, 620, 621, 838, 622, 623, 624, 839,
	625, 626, 627, 840, 628, 841, 629, 630, 0, 631,
	632, 633, 0, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 842, 644, 645, 647, 646, 648, 649,
	0, 650, 0, 651, 652, 653, 0, 0, 0, 0,
	0, 654, 655, 657, 0, 658, 659, 660, 661, 662,
	656, 663, 664, 665, 666, 667, 668, 669, 0, 671,
	672, 670, 673, 674, 0, 675, 676, 677, 678, 679,
	843, 680, 0, 681, 682, 690, 691, 692, 683, 684,
	686, 693, 685, 694, 695, 696, 697, 699, 698, 0,
	701, 702, 700, 703, 704, 705, 706, 0, 707, 844,
	708, 687, 688, 709, 710, 711, 0, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 845, 0, 721, 0,
	722, 723, 724, 725, 726, 727, 729, 689, 730, 731,
	732, 737, 738, 846, 733, 734, 735, 736, 847, 740,
	741, 742, 743, 0, 744, 745, 0, 739, 728, 0,
	746, 747, 748, 749, 750, 751, 752, 753, 754, 755,
	0, 756, 848, 849, 850, 851, 0, 768, 0, 757,
	759, 760, 761, 762, 852, 763, 853, 0, 764, 765,
	766, 767, 758, 769, 770, 0, 0, 771, 772, 773,
	774, 776, 778, 779, 780, 775, 777, 781, 0, 782,
	0, 0, 783, 784, 785, 854, 855, 856, 0, 787,
	788, 786, 789, 790, 793, 791, 792, 857, 796, 513,
	797, 798, 799, 794, 795, 980, 0, 337, 0, 800,
	801, 858, 802, 803, 804, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 346, 348, 347, 349, 350,
	351, 352, 0, 353, 354, 0, 0, 0, 0, 0,
	805, 0, 0, 0, 356, 0, 355, 0, 357, 358,
	359, 0, 360, 361, 362, 363, 364, 365, 366, 367,
	806, 807, 0, 368, 808, 369, 809, 0, 810, 370,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 0,
	0, 0, 380, 811, 812, 813, 0, 381, 382, 976,
	384, 814, 0, 0, 0, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 0, 394, 395, 396, 393, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 412, 0,
	0, 0, 0, 0, 0, 0, 413, 414, 415, 416,
	417, 0, 418, 420, 421, 815, 422, 816, 0, 425,
	427, 419, 423, 0, 426, 424, 428, 429, 0, 430,
	431, 432, 433, 0, 0, 434, 435, 436, 0, 437,
	438, 440, 439, 0, 441, 442, 443, 0, 444, 445,
	817, 446, 447, 448, 450, 452, 449, 451, 453, 454,
	455, 456, 457, 818, 819, 458, 459, 0, 0, 0,
	0, 0, 0, 0, 460, 461, 462, 820, 0, 0,
	0, 463, 0, 465, 469, 466, 467, 468, 470, 0,
	464, 471, 472, 0, 0, 473, 474, 475, 821, 822,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 0,
	485, 486, 823, 0, 824, 487, 0, 488, 489, 490,
	491, 492, 493, 494, 825, 826, 827, 595, 0, 495,
	496, 497, 0, 498, 499, 500, 501, 502, 503, 504,
	0, 0, 0, 505, 506, 507, 508, 0, 0, 0,
	0, 0, 828, 509, 596, 510, 829, 830, 0, 831,
	0, 511, 512, 515, 0, 832, 0, 514, 516, 517,
	0, 518, 0, 0, 0, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 528, 527, 0, 530, 833, 529,
	0, 531, 532, 0, 0, 533, 534, 535, 536, 537,
	981, 541, 0, 0, 539, 540, 542, 543, 0, 544,
	545, 547, 550, 546, 548, 549, 551, 552, 565, 566,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 568, 0, 990, 0, 569, 570, 571, 572,
	573, 581, 583, 584, 579, 580, 582, 585, 586, 588,
	589, 576, 577, 578, 0, 587, 574, 0, 575, 0,
	0, 590, 591, 592, 593, 0, 834, 594, 835, 597,
	598, 0, 0, 599, 0, 600, 0, 0, 602, 603,
	604, 0, 0, 605, 606, 836, 0, 607, 0, 837,
	608, 609, 601, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 620, 621, 838, 622, 623, 624,
	839, 625, 626, 627, 840, 628, 841, 629, 630, 0,
	631, 632, 633, 0, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 842, 644, 645, 647, 646, 648,
	649, 0, 650, 0, 651, 652, 653, 0, 0, 0,
	0, 0, 654, 655, 657, 0, 658, 659, 660, 661,
	662, 656, 663, 664, 665, 666, 667, 668, 669, 0,
	671, 672, 670, 673, 674, 0, 989, 676, 677, 678,
	679, 843, 680, 0, 681, 682, 690, 691, 692, 683,
	684, 686, 988, 685, 694, 695, 696, 697, 699, 698,
	0, 701, 702, 700, 703, 704, 2119, 706, 0, 707,
	844, 708, 687, 688, 709, 710, 711, 0, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 845, 0, 721,
	0, 722, 723, 724, 725, 726, 727, 729, 689, 730,
	731, 732, 737, 738, 846, 733, 734, 735, 736, 847,
	740, 741, 742, 743, 0, 744, 745, 0, 739, 728,
	0, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	755, 0, 756, 986, 849, 850, 851, 0, 768, 0,
	757, 759, 760, 761, 762, 852, 763, 853, 0, 764,
	765, 766, 767, 758, 769, 770, 0, 0, 771, 772,
	773, 774, 776, 778, 779, 780, 775, 777, 781, 0,
	782, 0, 0, 783, 784, 785, 854, 855, 856, 0,
	787, 788, 786, 789, 790, 793, 791, 792, 857, 796,
	513, 797, 798, 799, 794, 795, 2091, 0, 337, 0,
	800, 801, 858, 802, 803, 804, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 346, 348, 347, 349,
	350, 351, 352, 0, 353, 354, 0, 0, 0, 0,
	0, 805, 0, 0, 0, 356, 0, 355, 0, 357,
	358, 359, 0, 360, 361, 362, 363, 364, 365, 366,
	367, 806, 807, 0, 368, 808, 369, 809, 0, 810,
	370, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	0, 0, 0, 380, 811, 812, 813, 0, 381, 382,
	383, 384, 814, 0, 0, 0, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 0, 394, 395, 396, 393,
	397, 398, 0, 399, 0, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 412,
	0, 0, 0, 0, 0, 0, 0, 413, 414, 415,
	416, 417, 0, 418, 420, 421, 815, 422, 816, 0,
	425, 427, 419, 423, 0, 426, 424, 428, 429, 0,
	430, 431, 432, 433, 0, 0, 434, 435, 436, 0,
	437, 438, 440, 439, 0, 441, 442, 443, 0, 444,
	445, 817, 446, 447, 448, 450, 452, 449, 451, 453,
	454, 455, 456, 457, 818, 819, 458, 459, 0, 0,
	0, 0, 0, 0, 0, 460, 461, 462, 820, 0,
	0, 0, 463, 0, 465, 469, 466, 467, 468, 470,
	0, 464, 471, 472, 0, 0, 473, 474, 475, 821,
	822, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 486, 823, 0, 824, 487, 0, 488, 489,
	490, 491, 492, 493, 494, 2090, 826, 827, 595, 0,
	495, 496, 497, 0, 498, 499, 500, 501, 502, 503,
	504, 0, 0, 0, 505, 506, 507, 508, 0, 0,
	0, 0, 0, 828, 509, 596, 510, 829, 830, 0,
	831, 0, 511, 512, 515, 0, 832, 0, 514, 516,
	517, 0, 518, 0, 0, 0, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 528, 527, 0, 530, 833,
	529, 0, 531, 532, 0, 0, 533, 534, 535, 536,
	537, 538, 541, 0, 0, 539, 540, 542, 543, 0,
	544, 545, 547, 550, 546, 548, 549, 551, 552, 565,
	566, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 568, 0, 567, 0, 569, 570, 571,
	572, 573, 581, 583, 584, 579, 580, 582, 585, 586,
	588, 589, 576, 577, 578, 0, 587, 574, 0, 575,
	0, 0, 590, 591, 592, 593, 0, 834, 594, 835,
	597, 598, 0, 0, 599, 0, 600, 0, 0, 602,
	603, 604, 0, 0, 605, 606, 836, 0, 607, 0,
	837, 608, 609, 601, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 0, 620, 621, 838, 622, 623,
	624, 839, 625, 626, 627, 840, 628, 841, 629, 630,
	0, 631, 632, 633, 0, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 842, 644, 645, 647, 646,
	648, 649, 0, 650, 0, 651, 652, 653, 0, 0,
	0, 0, 0, 654, 655, 657, 0, 658, 659, 660,
	661, 662, 656, 663, 664, 665, 666, 667, 668, 669,
	0, 671, 672, 670, 673, 674, 0, 675, 676, 677,
	678, 679, 843, 680, 0, 681, 682, 690, 691, 692,
	683, 684, 686, 693, 685, 694, 695, 696, 697, 699,
	698, 0, 701, 702, 700, 703, 704, 705, 706, 0,
	707, 844, 708, 687, 688, 709, 710, 711, 0, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 845, 0,
	721, 0, 722, 723, 724, 725, 726, 727, 729, 689,
	730, 731, 732, 737, 738, 846, 733, 734, 735, 736,
	847, 740, 741, 742, 743, 0, 744, 745, 0, 739,
	728, 0, 746, 747, 748, 749, 750, 751, 752, 753,
	754, 755, 0, 756, 848, 849, 850, 851, 0, 768,
	0, 757, 759, 760, 761, 762, 852, 763, 853, 0,
	764, 765, 766, 767, 758, 769, 770, 0, 0, 771,
	772, 773, 774, 776, 778, 779, 780, 775, 777, 781,
	0, 782, 0, 0, 783, 784, 785, 854, 855, 856,
	0, 787, 788, 786, 789, 790, 793, 791, 792, 857,
	796, 513, 797, 798, 799, 794, 795, 2074, 0, 337,
	0, 800, 801, 858, 802, 803, 804, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 346, 348, 347,
	349, 350, 351, 352, 0, 353, 354, 0, 0, 0,
	0, 0, 805, 0, 0, 0, 356, 0, 355, 0,
	357, 358, 359, 0, 360, 361, 362, 363, 364, 365,
	366, 367, 806, 807, 0, 368, 808, 369, 809, 0,
	810, 370, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 0, 0, 0, 380, 811, 812, 813, 0, 381,
	382, 383, 384, 814, 0, 0, 0, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 0, 394, 395, 396,
	393, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	412, 0, 0, 0, 0, 0, 0, 0, 413, 414,
	415, 416, 417, 0, 418, 420, 421, 815, 422, 816,
	0, 425, 427, 419, 423, 0, 426, 424, 428, 429,
	0, 430, 431, 432, 433, 0, 0, 434, 435, 436,
	0, 437, 438, 440, 439, 0, 441, 442, 443, 0,
	444, 445, 817, 446, 447, 448, 450, 452, 449, 451,
	453, 454, 455, 456, 457, 818, 819, 458, 459, 0,
	0, 0, 0, 0, 0, 0, 460, 461, 462, 820,
	0, 0, 0, 463, 0, 465, 469, 466, 467, 468,
	470, 0, 464, 471, 472, 0, 0, 473, 474, 475,
	821, 822, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 0, 485, 486, 823, 0, 824, 487, 0, 488,
	489, 490, 491, 492, 493, 494, 2072, 826, 827, 595,
	0, 495, 496, 497, 0, 498, 499, 500, 501, 502,
	503, 504, 0, 0, 0, 505, 506, 507, 508, 0,
	0, 0, 0, 0, 828, 509, 596, 510, 829, 830,
	0, 831, 0, 511, 512, 515, 0, 832, 0, 514,
	516, 517, 0, 518, 0, 0, 0, 519, 520, 521,
	522, 523, 524, 525, 0, 526, 528, 527, 0, 530,
	833, 529, 0, 531, 532, 0, 0, 533, 534, 535,
	536, 537, 538, 541, 0, 0, 539, 540, 542, 543,
	0, 544, 545, 547, 550, 546, 548, 549, 551, 552,
	565, 566, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 568, 0, 567, 0, 569, 570,
	571, 572, 573, 581, 583, 584, 579, 580, 582, 585,
	586, 588, 589, 576, 577, 578, 0, 587, 574, 0,
	575, 0, 0, 590, 591, 592, 593, 0, 834, 594,
	835, 597, 598, 0, 0, 599, 0, 600, 0, 0,
	602, 603, 604, 0, 0, 605, 606, 836, 0, 607,
	0, 837, 608, 609, 601, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 0, 620, 621, 838, 622,
	623, 624, 839, 625, 626, 627, 840, 628, 841, 629,
	630, 0, 631, 632, 633, 0, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 842, 644, 645, 647,
	646, 648, 649, 0, 650, 0, 651, 652, 653, 0,
	0, 0, 0, 0, 654, 655, 657, 0, 658, 659,
	660, 661, 662, 656, 663, 664, 665, 666, 667, 668,
	669, 0, 671, 672, 670, 673, 674, 0, 675, 676,
	677, 678, 679, 843, 680, 0, 681, 682, 690, 691,
	692, 683, 684, 686, 693, 685, 694, 695, 696, 697,
	699, 698, 0, 701, 702, 700, 703, 704, 705, 706,
	0, 707, 844, 708, 687, 688, 709, 710, 711, 0,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 845,
	0, 721, 0, 722, 723, 724, 725, 726, 727, 729,
	689, 730, 731, 732, 737, 738, 846, 733, 734, 735,
	736, 847, 740, 741, 742, 743, 0, 744, 745, 0,
	739, 728, 0, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 755, 0, 756, 848, 849, 850, 851, 0,
	768, 0, 757, 759, 760, 761, 762, 852, 763, 853,
	0, 764, 765, 766, 767, 758, 769, 770, 0, 0,
	771, 772, 773, 774, 776, 778, 779, 780, 775, 777,
	781, 0, 782, 0, 0, 783, 784, 785, 854, 855,
	856, 0, 787, 788, 786, 789, 790, 793, 791, 792,
	857, 796, 513, 797, 798, 799, 794, 795, 2066, 0,
	337, 0, 800, 801, 858, 802, 803, 804, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 346, 348,
	347, 349, 350, 351, 352, 0, 353, 354, 0, 0,
	0, 0, 0, 805, 0, 0, 0, 356, 0, 355,
	0, 357, 358, 359, 0, 360, 361, 362, 363, 364,
	365, 366, 367, 806, 807, 0, 368, 808, 369, 809,
	0, 810, 370, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 0, 0, 380, 811, 812, 813, 0,
	381, 382, 383, 384, 814, 0, 0, 0, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 0, 394, 395,
	396, 393, 397, 398, 0, 399, 0, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 412, 0, 0, 0, 0, 0, 0, 0, 413,
	414, 415, 416, 417, 0, 418, 420, 421, 815, 422,
	816, 0, 425, 427, 419, 423, 0, 426, 424, 428,
	429, 0, 430, 431, 432, 433, 0, 0, 434, 435,
	436, 0, 437, 438, 440, 439, 0, 441, 442, 443,
	0, 444, 445, 817, 446, 447, 448, 450, 452, 449,
	451, 453, 454, 455, 456, 457, 818, 819, 458, 459,
	0, 0, 0, 0, 0, 0, 0, 460, 461, 462,
	820, 0, 0, 0, 463, 0, 465, 469, 466, 467,
	468, 470, 0, 464, 471, 472, 0, 0, 473, 474,
	475, 821, 822, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 486, 823, 0, 824, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 825, 826, 827,
	595, 0, 495, 496, 497, 0, 498, 499, 500, 501,
	502, 503, 504, 0, 0, 0, 505, 506, 507, 508,
	0, 0, 0, 0, 0, 828, 509, 596, 510, 829,
	830, 0, 831, 0, 511, 512, 515, 0, 832, 0,
	514, 516, 517, 0, 518, 0, 0, 0, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 528, 527, 0,
	530, 833, 529, 0, 531, 532, 0, 0, 533, 534,
	535, 536, 537, 538, 541, 0, 0, 539, 540, 542,
	543, 0, 544, 545, 547, 550, 546, 548, 549, 551,
	552, 565, 566, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 568, 0, 567, 0, 569,
	570, 571, 572, 573, 581, 583, 584, 579, 580, 582,
	585, 586, 588, 589, 576, 577, 578, 0, 587, 574,
	0, 575, 0, 0, 590, 591, 592, 593, 0, 834,
	594, 835, 597, 598, 0, 0, 599, 0, 600, 0,
	0, 602, 603, 604, 0, 0, 605, 606, 836, 0,
	607, 0, 837, 608, 609, 601, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 0, 620, 621, 838,
	622, 623, 624, 839, 625, 626, 627, 840, 628, 841,
	629, 630, 0, 631, 632, 633, 0, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 842, 644, 645,
	647, 646, 648, 649, 0, 650, 0, 651, 652, 653,
	0, 0, 0, 0, 0, 654, 655, 657, 0, 658,
	659, 660, 661, 662, 656, 663, 664, 665, 666, 667,
	668, 669, 0, 671, 672, 670, 673, 674, 0, 675,
	676, 677, 678, 679, 843, 680, 0, 681, 682, 690,
	691, 692, 683, 684, 686, 693, 685, 694, 695, 696,
	697, 699, 698, 0, 701, 702, 700, 703, 704, 705,
	706, 0, 707, 844, 708, 687, 688, 709, 710, 711,
	0, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	845, 0, 721, 0, 722, 723, 724, 725, 726, 727,
	729, 689, 730, 731, 732, 737, 738, 846, 733, 734,
	735, 736, 847, 740, 741, 742, 743, 0, 744, 745,
	0, 739, 728, 0, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 0, 756, 848, 849, 850, 851,
	0, 768, 0, 757, 759, 760, 761, 762, 852, 763,
	853, 0, 764, 765, 766, 767, 758, 769, 770, 0,
	0, 771, 772, 773, 774, 776, 778, 779, 780, 775,
	777, 781, 0, 782, 0, 0, 783, 784, 785, 854,
	855, 856, 0, 787, 788, 786, 789, 790, 793, 791,
	792, 857, 796, 513, 797, 798, 799, 794, 795, 2043,
	0, 337, 0, 800, 801, 858, 802, 803, 804, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 346,
	348, 347, 349, 350, 351, 352, 0, 353, 354, 0,
	0, 0, 0, 0, 805, 0, 0, 0, 356, 0,
	355, 0, 357, 358, 359, 0, 360, 361, 362, 363,
	364, 365, 366, 367, 806, 807, 0, 368, 808, 369,
	809, 0, 810, 370, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 0, 0, 0, 380, 811, 812, 813,
	0, 381, 382, 383, 384, 814, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 0, 394,
	395, 396, 393, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 0, 0, 0, 0, 0, 0,
	413, 414, 415, 416, 417, 0, 418, 420, 421, 815,
	422, 816, 0, 425, 427, 419, 423, 0, 426, 424,
	428, 429, 0, 430, 431, 432, 433, 0, 0, 434,
	435, 436, 0, 437, 438, 440, 439, 0, 441, 442,
	443, 0, 444, 445, 817, 446, 447, 448, 450, 452,
	449, 451, 453, 454, 455, 456, 457, 818, 819, 458,
	459, 0, 0, 0, 0, 0, 0, 0, 460, 461,
	462, 820, 0, 0, 0, 463, 0, 465, 469, 466,
	467, 468, 470, 0, 464, 471, 472, 0, 0, 473,
	474, 475, 821, 822, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 0, 485, 486, 823, 0, 824, 487,
	0, 488, 489, 490, 491, 492, 493, 494, 2041, 826,
	827, 595, 0, 495, 496, 497, 0, 498, 499, 500,
	501, 502, 503, 504, 0, 0, 0, 505, 506, 507,
	508, 0, 0, 0, 0, 0, 828, 509, 596, 510,
	829, 830, 0, 831, 0, 511, 512, 515, 0, 832,
	0, 514, 516, 517, 0, 518, 0, 0, 0, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 528, 527,
	0, 530, 833, 529, 0, 531, 532, 0, 0, 533,
	534, 535, 536, 537, 538, 541, 0, 0, 539, 540,
	542, 543, 0, 544, 545, 547, 550, 546, 548, 549,
	551, 552, 565, 566, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 568, 0, 567, 0,
	569, 570, 571, 572, 573, 581, 583, 584, 579, 580,
	582, 585, 586, 588, 589, 576, 577, 578, 0, 587,
	574, 0, 575, 0, 0, 590, 591, 592, 593, 0,
	834, 594, 835, 597, 598, 0, 0, 599, 0, 600,
	0, 0, 602, 603, 604, 0, 0, 605, 606, 836,
	0, 607, 0, 837, 608, 609, 601, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 0, 620, 621,
	838, 622, 623, 624, 839, 625, 626, 627, 840, 628,
	841, 629, 630, 0, 631, 632, 633, 0, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 842, 644,
	645, 647, 646, 648, 649, 0, 650, 0, 651, 652,
	653, 0, 0, 0, 0, 0, 654, 655, 657, 0,
	658, 659, 660, 661, 662, 656, 663, 664, 665, 666,
	667, 668, 669, 0, 671, 672, 670, 673, 674, 0,
	675, 676, 677, 678, 679, 843, 680, 0, 681, 682,
	690, 691, 692, 683, 684, 686, 693, 685, 694, 695,
	696, 697, 699, 698, 0, 701, 702, 700, 703, 704,
	705, 706, 0, 707, 844, 708, 687, 688, 709, 710,
	711, 0, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 845, 0, 721, 0, 722, 723, 724, 725, 726,
	727, 729, 689, 730, 731, 732, 737, 738, 846, 733,
	734, 735, 736, 847, 740, 741, 742, 743, 0, 744,
	745, 0, 739, 728, 0, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 0, 756, 848, 849, 850,
	851, 0, 768, 0, 757, 759, 760, 761, 762, 852,
	763, 853, 0, 764, 765, 766, 767, 758, 769, 770,
	0, 0, 771, 772, 773, 774, 776, 778, 779, 780,
	775, 777, 781, 0, 782, 0, 0, 783, 784, 785,
	854, 855, 856, 0, 787, 788, 786, 789, 790, 793,
	791, 792, 857, 796, 513, 797, 798, 799, 794, 795,
	2031, 0, 337, 0, 800, 801, 858, 802, 803, 804,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	346, 348, 347, 349, 350, 351, 352, 0, 353, 354,
	0, 0, 0, 0, 0, 805, 0, 0, 0, 356,
	0, 355, 0, 357, 358, 359, 0, 360, 361, 362,
	363, 364, 365, 366, 367, 806, 807, 0, 368, 808,
	369, 809, 0, 810, 370, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 0, 0, 0, 380, 811, 812,
	813, 0, 381, 382, 383, 384, 814, 0, 0, 0,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 0,
	394, 395, 396, 393, 397, 398, 0, 399, 0, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 412, 0, 0, 0, 0, 0, 0,
	0, 413, 414, 415, 416, 417, 0, 418, 420, 421,
	815, 422, 816, 0, 425, 427, 419, 423, 0, 426,
	424, 428, 429, 0, 430, 431, 432, 433, 0, 0,
	434, 435, 436, 0, 437, 438, 440, 439, 0, 441,
	442, 443, 0, 444, 445, 817, 446, 447, 448, 450,
	452, 449, 451, 453, 454, 455, 456, 457, 818, 819,
	458, 459, 0, 0, 0, 0, 0, 0, 0, 460,
	461, 462, 820, 0, 0, 0, 463, 0, 465, 469,
	466, 467, 468, 470, 0, 464, 471, 472, 0, 0,
	473, 474, 475, 821, 822, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 486, 823, 0, 824,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 825,
	826, 827, 595, 0, 495, 496, 497, 0, 498, 499,
	500, 501, 502, 503, 504, 0, 0, 0, 505, 506,
	507, 508, 0, 0, 0, 0, 0, 828, 509, 596,
	510, 829, 830, 0, 831, 0, 511, 512, 515, 0,
	832, 0, 514, 516, 517, 0, 518, 0, 0, 0,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 528,
	527, 0, 530, 833, 529, 0, 531, 532, 0, 0,
	533, 534, 535, 536, 537, 538, 541, 0, 0, 539,
	540, 542, 543, 0, 544, 545, 547, 550, 546, 548,
	549, 551, 552, 565, 566, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 568, 0, 567,
	0, 569, 570, 571, 572, 573, 581, 583, 584, 579,
	580, 582, 585, 586, 588, 589, 576, 577, 578, 0,
	587, 574, 0, 575, 0, 0, 590, 591, 592, 593,
	0, 834, 594, 835, 597, 598, 0, 0, 599, 0,
	600, 0, 0, 602, 603, 604, 0, 0, 605, 606,
	836, 0, 607, 0, 837, 608, 609, 601, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 0, 620,
	621, 838, 622, 623, 624, 839, 625, 626, 627, 840,
	628, 841, 629, 630, 0, 631, 632, 633, 0, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 842,
	644, 645, 647, 646, 648, 649, 0, 650, 0, 651,
	652, 653, 0, 0, 0, 0, 0, 654, 655, 657,
	0, 658, 659, 660, 661, 662, 656, 663, 664, 665,
	666, 667, 668, 669, 0, 671, 672, 670, 673, 674,
	0, 675, 676, 677, 678, 679, 843, 680, 0, 681,
	682, 690, 691, 692, 683, 684, 686, 693, 685, 694,
	695, 696, 697, 699, 698, 0, 701, 702, 700, 703,
	704, 705, 706, 0, 707, 844, 708, 687, 688, 709,
	710, 711, 0, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 845, 0, 721, 0, 722, 723, 724, 725,
	726, 727, 729, 689, 730, 731, 732, 737, 738, 846,
	733, 734, 735, 736, 847, 740, 741, 742, 743, 0,
	744, 745, 0, 739, 728, 0, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 0, 756, 848, 849,
	850, 851, 0, 768, 0, 757, 759, 760, 761, 762,
	852, 763, 853, 0, 764, 765, 766, 767, 758, 769,
	770, 0, 0, 771, 772, 773, 774, 776, 778, 779,
	780, 775, 777, 781, 0, 782, 0, 0, 783, 784,
	785, 854, 855, 856, 0, 787, 788, 786, 789, 790,
	793, 791, 792, 857, 796, 513, 797, 798, 799, 794,
	795, 1993, 0, 337, 0, 800, 801, 858, 802, 803,
	804, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 346, 348, 347, 349, 350, 351, 352, 0, 353,
	354, 0, 0, 0, 0, 0, 805, 0, 0, 0,
	356, 0, 355, 0, 357, 358, 359, 0, 360, 361,
	362, 363, 364, 365, 366, 367, 806, 807, 0, 368,
	808, 369, 809, 0, 810, 370, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 0, 0, 0, 380, 811,
	812, 813, 0, 381, 382, 383, 384, 814, 0, 0,
	0, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	0, 394, 395, 396, 393, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 412, 0, 0, 0, 0, 0,
	0, 0, 413, 414, 415, 416, 417, 0, 418, 420,
	421, 815, 422, 816, 0, 425, 427, 419, 423, 0,
	426, 424, 428, 429, 0, 430, 431, 432, 433, 0,
	0, 434, 435, 436, 0, 437, 438, 440, 439, 0,
	441, 442, 443, 0, 444, 445, 817, 446, 447, 448,
	450, 452, 449, 451, 453, 454, 455, 456, 457, 818,
	819, 458, 459, 0, 0, 0, 0, 0, 0, 0,
	460, 461, 462, 820, 0, 0, 0, 463, 0, 465,
	469, 466, 467, 468, 470, 0, 464, 471, 472, 0,
	0, 473, 474, 475, 821, 822, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 0, 485, 486, 823, 0,
	824, 487, 0, 488, 489, 490, 491, 492, 493, 494,
	825, 826, 827, 595, 0, 495, 496, 497, 0, 498,
	499, 500, 501, 502, 503, 504, 0, 0, 0, 505,
	506, 507, 508, 0, 0, 0, 0, 0, 828, 509,
	596, 510, 829, 830, 0, 831, 0, 511, 512, 515,
	0, 832, 0, 514, 516, 517, 0, 518, 0, 0,
	0, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	528, 527, 0, 530, 833, 529, 0, 531, 532, 0,
	0, 533, 534, 535, 536, 537, 538, 541, 0, 0,
	539, 540, 542, 543, 0, 544, 545, 547, 550, 546,
	548, 549, 551, 552, 565, 566, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 568, 0,
	567, 0, 569, 570, 571, 572, 573, 581, 583, 584,
	579, 580, 582, 585, 586, 588, 589, 576, 577, 578,
	0, 587, 574, 0, 575, 0, 0, 590, 591, 592,
	593, 0, 834, 594, 835, 597, 598, 0, 0, 599,
	0, 600, 0, 0, 602, 603, 604, 0, 0, 605,
	606, 836, 0, 607, 0, 837, 608, 609, 601, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 0,
	620, 621, 838, 622, 623, 624, 839, 625, 626, 627,
	840, 628, 841, 629, 630, 0, 631, 632, 633, 0,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	842, 644, 645, 647, 646, 648, 649, 0, 650, 0,
	651, 652, 653, 0, 0, 0, 0, 0, 654, 655,
	657, 0, 658, 659, 660, 661, 662, 656, 663, 664,
	665, 666, 667, 668, 669, 0, 671, 672, 670, 673,
	674, 0, 675, 676, 677, 678, 679, 843, 680, 0,
	681, 682, 690, 691, 692, 683, 684, 686, 693, 685,
	694, 695, 696, 697, 699, 698, 0, 701, 702, 700,
	703, 704, 705, 706, 0, 707, 844, 708, 687, 688,
	709, 710, 711, 0, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 845, 0, 721, 0, 722, 723, 724,
	725, 726, 727, 729, 689, 730, 731, 732, 737, 738,
	846, 733, 734, 735, 736, 847, 740, 741, 742, 743,
	0, 744, 745, 0, 739, 728, 0, 746, 747, 748,
	749, 750, 751, 752, 753, 754, 755, 0, 756, 848,
	849, 850, 851, 0, 768, 0, 757, 759, 760, 761,
	762, 852, 763, 853, 0, 764, 765, 766, 767, 758,
	769, 770, 0, 0, 771, 772, 773, 774, 776, 778,
	779, 780, 775, 777, 781, 0, 782, 0, 0, 783,
	784, 785, 854, 855, 856, 0, 787, 788, 786, 789,
	790, 793, 791, 792, 857, 796, 513, 797, 798, 799,
	794, 795, 1965, 0, 337, 0, 800, 801, 858, 802,
	803, 804, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 346, 348, 347, 349, 350, 351, 352, 0,
	353, 354, 0, 0, 0, 0, 0, 805, 0, 0,
	0, 356, 0, 355, 0, 357, 358, 359, 0, 360,
	361, 362, 363, 364, 365, 366, 367, 806, 807, 0,
	368, 808, 369, 809, 0, 810, 370, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 0, 0, 0, 380,
	811, 812, 813, 0, 381, 382, 383, 384, 814, 0,
	0, 0, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 0, 394, 395, 396, 393, 397, 398, 0, 399,
	0, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 412, 0, 0, 0, 0,
	0, 0, 0, 413, 414, 415, 416, 417, 0, 418,
	420, 421, 815, 422, 816, 0, 425, 427, 419, 423,
	0, 426, 424, 428, 429, 0, 430, 431, 432, 433,
	0, 0, 434, 435, 436, 0, 437, 438, 440, 439,
	0, 441, 442, 443, 0, 444, 445, 817, 446, 447,
	448, 450, 452, 449, 451, 453, 454, 455, 456, 457,
	818, 819, 458, 459, 0, 0, 0, 0, 0, 0,
	0, 460, 461, 462, 820, 0, 0, 0, 463, 0,
	465, 469, 466, 467, 468, 470, 0, 464, 471, 472,
	0, 0, 473, 474, 475, 821, 822, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 486, 823,
	0, 824, 487, 0, 488, 489, 490, 491, 492, 493,
	494, 825, 826, 827, 595, 0, 495, 496, 497, 0,
	498, 499, 500, 501, 502, 503, 504, 0, 0, 0,
	505, 506, 507, 508, 0, 0, 0, 0, 0, 828,
	509, 596, 510, 829, 830, 0, 831, 0, 511, 512,
	515, 0, 832, 0, 514, 516, 517, 0, 518, 0,
	0, 0, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 528, 527, 0, 530, 833, 529, 0, 531, 532,
	0, 0, 533, 534, 535, 536, 537, 538, 541, 0,
	0, 539, 540, 542, 543, 0, 544, 545, 547, 550,
	546, 548, 549, 551, 552, 565, 566, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 568,
	0, 567, 0, 569, 570, 571, 572, 573, 581, 583,
	584, 579, 580, 582, 585, 586, 588, 589, 576, 577,
	578, 0, 587, 574, 0, 575, 0, 0, 590, 591,
	592, 593, 0, 834, 594, 835, 597, 598, 0, 0,
	599, 0, 600, 0, 0, 602, 603, 604, 0, 0,
	605, 606, 836, 0, 607, 0, 837, 608, 609, 601,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	0, 620, 621, 838, 622, 623, 624, 839, 625, 626,
	627, 840, 628, 841, 629, 630, 0, 631, 632, 633,
	0, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 842, 644, 645, 647, 646, 648, 649, 0, 650,
	0, 651, 652, 653, 0, 0, 0, 0, 0, 654,
	655, 657, 0, 658, 659, 660, 661, 662, 656, 663,
	664, 665, 666, 667, 668, 669, 0, 671, 672, 670,
	673, 674, 0, 675, 676, 677, 678, 679, 843, 680,
	0, 681, 682, 690, 691, 692, 683, 684, 686, 693,
	685, 694, 695, 696, 697, 699, 698, 0, 701, 702,
	700, 703, 704, 705, 706, 0, 707, 844, 708, 687,
	688, 709, 710, 711, 0, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 845, 0, 721, 0, 722, 723,
	724, 725, 726, 727, 729, 689, 730, 731, 732, 737,
	738, 846, 733, 734, 735, 736, 847, 740, 741, 742,
	743, 0, 744, 745, 0, 739, 728, 0, 746, 747,
	748, 749, 750, 751, 752, 753, 754, 755, 0, 756,
	848, 849, 850, 851, 0, 768, 0, 757, 759, 760,
	761, 762, 852, 763, 853, 0, 764, 765, 766, 767,
	758, 769, 770, 0, 0, 771, 772, 773, 774, 776,
	778, 779, 780, 775, 777, 781, 0, 782, 0, 0,
	783, 784, 785, 854, 855, 856, 0, 787, 788, 786,
	789, 790, 793, 791, 792, 857, 796, 513, 797, 798,
	799, 794, 795, 1663, 0, 337, 0, 800, 801, 858,
	802, 803, 804, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 346, 348, 347, 349, 350, 351, 352,
	0, 353, 354, 0, 0, 0, 0, 0, 805, 0,
	0, 0, 356, 0, 355, 0, 357, 358, 359, 0,
	360, 361, 362, 363, 364, 365, 366, 367, 806, 807,
	0, 368, 808, 369, 809, 0, 810, 370, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 0, 0, 0,
	380, 811, 812, 813, 0, 381, 382, 383, 384, 814,
	0, 0, 0, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 0, 394, 395, 396, 393, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 412, 0, 0, 0,
	0, 0, 0, 0, 413, 414, 415, 416, 417, 0,
	418, 420, 421, 815, 422, 816, 0, 425, 427, 419,
	423, 0, 426, 424, 428, 429, 0, 430, 431, 432,
	433, 0, 0, 434, 435, 436, 0, 437, 438, 440,
	439, 0, 441, 442, 443, 0, 444, 445, 817, 446,
	447, 448, 450, 452, 449, 451, 453, 454, 455, 456,
	457, 818, 819, 458, 459, 0, 0, 0, 0, 0,
	0, 0, 460, 461, 462, 820, 0, 0, 0, 463,
	0, 465, 469, 466, 467, 468, 470, 0, 464, 471,
	472, 0, 0, 473, 474, 475, 821, 822, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 486,
	823, 0, 824, 487, 0, 488, 489, 490, 491, 492,
	493, 494, 825, 826, 827, 595, 0, 495, 496, 497,
	0, 498, 499, 500, 501, 502, 503, 504, 0, 0,
	0, 505, 506, 507, 508, 0, 0, 0, 0, 0,
	828, 509, 596, 510, 829, 830, 0, 831, 0, 511,
	512, 515, 0, 832, 0, 514, 516, 517, 0, 518,
	0, 0, 0, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 528, 527, 0, 530, 833, 529, 0, 531,
	532, 0, 0, 533, 534, 535, 536, 537, 538, 541,
	0, 0, 539, 540, 542, 543, 0, 544, 545, 547,
	550, 546, 548, 549, 551, 552, 565, 566, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	568, 0, 567, 0, 569, 570, 571, 572, 573, 581,
	583, 584, 579, 580, 582, 585, 586, 588, 589, 576,
	577, 578, 0, 587, 574, 0, 575, 0, 0, 590,
	591, 592, 593, 0, 834, 594, 835, 597, 598, 0,
	0, 599, 0, 600, 0, 0, 602, 603, 604, 0,
	0, 605, 606, 836, 0, 607, 0, 837, 608, 609,
	601, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 0, 620, 621, 838, 622, 623, 624, 839, 625,
	626, 627, 840, 628, 841, 629, 630, 0, 631, 632,
	633, 0, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 842, 644, 645, 647, 646, 648, 649, 0,
	650, 0, 651, 652, 653, 0, 0, 0, 0, 0,
	654, 655, 657, 0, 658, 659, 660, 661, 662, 656,
	663, 664, 665, 666, 667, 668, 669, 0, 671, 672,
	670, 673, 674, 0, 989, 676, 677, 678, 679, 843,
	680, 0, 681, 682, 690, 691, 692, 683, 684, 686,
	988, 685, 694, 695, 696, 697, 699, 698, 0, 701,
	702, 700, 703, 704, 705, 706, 0, 707, 844, 708,
	687, 688, 709, 710, 711, 0, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 845, 0, 721, 0, 722,
	723, 724, 725, 726, 727, 729, 689, 730, 731, 732,
	737, 738, 846, 733, 734, 735, 736, 847, 740, 741,
	742, 743, 0, 744, 745, 0, 739, 728, 0, 746,
	747, 748, 749, 750, 751, 752, 753, 754, 755, 0,
	756, 986, 849, 850, 851, 0, 768, 0, 757, 759,
	760, 761, 762, 852, 763, 853, 0, 764, 765, 766,
	767, 758, 769, 770, 0, 0, 771, 772, 773, 774,
	776, 778, 779, 780, 775, 777, 781, 0, 782, 0,
	0, 783, 784, 785, 854, 855, 856, 0, 787, 788,
	786, 789, 790, 793, 791, 792, 857, 796, 513, 797,
	798, 799, 794, 795, 1633, 0, 337, 0, 800, 801,
	858, 802, 803, 804, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 346, 348, 347, 349, 350, 351,
	352, 0, 353, 354, 0, 0, 0, 0, 0, 805,
	0, 0, 0, 356, 0, 355, 0, 357, 358, 359,
	0, 360, 361, 362, 363, 364, 365, 366, 367, 806,
	807, 0, 368, 808, 369, 809, 0, 810, 370, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 0, 0,
	0, 380, 811, 812, 813, 0, 381, 382, 383, 384,
	814, 0, 0, 0, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 0, 394, 395, 396, 393, 397, 398,
	0, 399, 0, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 412, 0, 0,
	0, 0, 0, 0, 0, 413, 414, 415, 416, 417,
	0, 418, 420, 421, 815, 422, 816, 0, 425, 427,
	419, 423, 0, 426, 424, 428, 429, 0, 430, 431,
	432, 433, 0, 0, 434, 435, 436, 0, 437, 438,
	440, 439, 0, 441, 442, 443, 0, 444, 445, 817,
	446, 447, 448, 450, 452, 449, 451, 453, 454, 455,
	456, 457, 818, 819, 458, 459, 0, 0, 0, 0,
	0, 0, 0, 460, 461, 462, 820, 0, 0, 0,
	463, 0, 465, 469, 466, 467, 468, 470, 0, 464,
	471, 472, 0, 0, 473, 474, 475, 821, 822, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	486, 823, 0, 824, 487, 0, 488, 489, 490, 491,
	492, 493, 494, 1632, 826, 827, 595, 0, 495, 496,
	497, 0, 498, 499, 500, 501, 502, 503, 504, 0,
	0, 0, 505, 506, 507, 508, 0, 0, 0, 0,
	0, 828, 509, 596, 510, 829, 830, 0, 831, 0,
	511, 512, 515, 0, 832, 0, 514, 516, 517, 0,
	518, 0, 0, 0, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 528, 527, 0, 530, 833, 529, 0,
	531, 532, 0, 0, 533, 534, 535, 536, 537, 538,
	541, 0, 0, 539, 540, 542, 543, 0, 544, 545,
	547, 550, 546, 548, 549, 551, 552, 565, 566, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 568, 0, 567, 0, 569, 570, 571, 572, 573,
	581, 583, 584, 579, 580, 582, 585, 586, 588, 589,
	576, 577, 578, 0, 587, 574, 0, 575, 0, 0,
	590, 591, 592, 593, 0, 834, 594, 835, 597, 598,
	0, 0, 599, 0, 600, 0, 0, 602, 603, 604,
	0, 0, 605, 606, 836, 0, 607, 0, 837, 608,
	609, 601, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 0, 620, 621, 838, 622, 623, 624, 839,
	625, 626, 627, 840, 628, 841, 629, 630, 0, 631,
	632, 633, 0, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 842, 644, 645, 647, 646, 648, 649,
	0, 650, 0, 651, 652, 653, 0, 0, 0, 0,
	0, 654, 655, 657, 0, 658, 659, 660, 661, 662,
	656, 663, 664, 665, 666, 667, 668, 669, 0, 671,
	672, 670, 673, 674, 0, 675, 676, 677, 678, 679,
	843, 680, 0, 681, 682, 690, 691, 692, 683, 684,
	686, 693, 685, 694, 695, 696, 697, 699, 698, 0,
	701, 702, 700, 703, 704, 705, 706, 0, 707, 844,
	708, 687, 688, 709, 710, 711, 0, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 845, 0, 721, 0,
	722, 723, 724, 725, 726, 727, 729, 689, 730, 731,
	732, 737, 738, 846, 733, 734, 735, 736, 847, 740,
	741, 742, 743, 0, 744, 745, 0, 739, 728, 0,
	746, 747, 748, 749, 750, 751, 752, 753, 754, 755,
	0, 756, 848, 849, 850, 851, 0, 768, 0, 757,
	759, 760, 761, 762, 852, 763, 853, 0, 764, 765,
	766, 767, 758, 769, 770, 0, 0, 771, 772, 773,
	774, 776, 778, 779, 780, 775, 777, 781, 0, 782,
	0, 0, 783, 784, 785, 854, 855, 856, 0, 787,
	788, 786, 789, 790, 793, 791, 792, 857, 796, 513,
	797, 798, 799, 794, 795, 1619, 0, 337, 0, 800,
	801, 858, 802, 803, 804, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 346, 348, 347, 349, 350,
	351, 352, 0, 353, 354, 0, 0, 0, 0, 0,
	805, 0, 0, 0, 356, 0, 355, 0, 357, 358,
	359, 0, 360, 361, 362, 363, 364, 365, 366, 367,
	806, 807, 0, 368, 808, 369, 809, 0, 810, 370,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 0,
	0, 0, 380, 811, 812, 813, 0, 381, 382, 383,
	384, 814, 0, 0, 0, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 0, 394, 395, 396, 393, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 412, 0,
	0, 0, 0, 0, 0, 0, 413, 414, 415, 416,
	417, 0, 418, 420, 421, 815, 422, 816, 0, 425,
	427, 419, 423, 0, 426, 424, 428, 429, 0, 430,
	431, 432, 433, 0, 0, 434, 435, 436, 0, 437,
	438, 440, 439, 0, 441, 442, 443, 0, 444, 445,
	817, 446, 447, 448, 450, 452, 449, 451, 453, 454,
	455, 456, 457, 818, 819, 458, 459, 0, 0, 0,
	0, 0, 0, 0, 460, 461, 462, 820, 0, 0,
	0, 463, 0, 465, 469, 466, 467, 468, 470, 0,
	464, 471, 472, 0, 0, 473, 474, 475, 821, 822,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 0,
	485, 486, 823, 0, 824, 487, 0, 488, 489, 490,
	491, 492, 493, 494, 1618, 826, 827, 595, 0, 495,
	496, 497, 0, 498, 499, 500, 501, 502, 503, 504,
	0, 0, 0, 505, 506, 507, 508, 0, 0, 0,
	0, 0, 828, 509, 596, 510, 829, 830, 0, 831,
	0, 511, 512, 515, 0, 832, 0, 514, 516, 517,
	0, 518, 0, 0, 0, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 528, 527, 0, 530, 833, 529,
	0, 531, 532, 0, 0, 533, 534, 535, 536, 537,
	538, 541, 0, 0, 539, 540, 542, 543, 0, 544,
	545, 547, 550, 546, 548, 549, 551, 552, 565, 566,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 568, 0, 567, 0, 569, 570, 571, 572,
	573, 581, 583, 584, 579, 580, 582, 585, 586, 588,
	589, 576, 577, 578, 0, 587, 574, 0, 575, 0,
	0, 590, 591, 592, 593, 0, 834, 594, 835, 597,
	598, 0, 0, 599, 0, 600, 0, 0, 602, 603,
	604, 0, 0, 605, 606, 836, 0, 607, 0, 837,
	608, 609, 601, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 620, 621, 838, 622, 623, 624,
	839, 625, 626, 627, 840, 628, 841, 629, 630, 0,
	631, 632, 633, 0, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 842, 644, 645, 647, 646, 648,
	649, 0, 650, 0, 651, 652, 653, 0, 0, 0,
	0, 0, 654, 655, 657, 0, 658, 659, 660, 661,
	662, 656, 663, 664, 665, 666, 667, 668, 669, 0,
	671, 672, 670, 673, 674, 0, 675, 676, 677, 678,
	679, 843, 680, 0, 681, 682, 690, 691, 692, 683,
	684, 686, 693, 685, 694, 695, 696, 697, 699, 698,
	0, 701, 702, 700, 703, 704, 705, 706, 0, 707,
	844, 708, 687, 688, 709, 710, 711, 0, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 845, 0, 721,
	0, 722, 723, 724, 725, 726, 727, 729, 689, 730,
	731, 732, 737, 738, 846, 733, 734, 735, 736, 847,
	740, 741, 742, 743, 0, 744, 745, 0, 739, 728,
	0, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	755, 0, 756, 848, 849, 850, 851, 0, 768, 0,
	757, 759, 760, 761, 762, 852, 763, 853, 0, 764,
	765, 766, 767, 758, 769, 770, 0, 0, 771, 772,
	773, 774, 776, 778, 779, 780, 775, 777, 781, 0,
	782, 0, 0, 783, 784, 785, 854, 855, 856, 0,
	787, 788, 786, 789, 790, 793, 791, 792, 857, 796,
	513, 797, 798, 799, 794, 795, 337, 0, 0, 0,
	800, 801, 858, 802, 803, 804, 0, 0, 0, 0,
	0, 0, 0, 345, 346, 348, 347, 349, 350, 351,
	352, 1557, 353, 354, 0, 0, 0, 0, 0, 805,
	0, 0, 0, 356, 0, 355, 0, 357, 358, 359,
	0, 360, 361, 362, 363, 364, 365, 366, 367, 806,
	807, 0, 368, 808, 369, 809, 0, 810, 370, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 0, 0,
	0, 380, 811, 812, 813, 0, 381, 382, 383, 384,
	814, 0, 0, 0, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 0, 394, 395, 396, 393, 397, 398,
	0, 399, 0, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 412, 0, 0,
	0, 0, 0, 0, 0, 413, 414, 415, 416, 417,
	0, 418, 420, 421, 815, 422, 816, 0, 425, 427,
	419, 423, 0, 426, 424, 428, 429, 0, 430, 431,
	432, 433, 0, 0, 434, 435, 436, 0, 437, 438,
	440, 439, 0, 441, 442, 443, 0, 444, 445, 817,
	446, 447, 448, 450, 452, 449, 451, 453, 454, 455,
	456, 457, 818, 819, 458, 459, 0, 0, 0, 0,
	0, 0, 0, 460, 461, 462, 820, 0, 0, 0,
	463, 0, 465, 469, 466, 467, 468, 470, 0, 464,
	471, 472, 0, 0, 473, 474, 475, 821, 822, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	486, 823, 0, 824, 487, 0, 488, 489, 490, 491,
	492, 493, 494, 825, 826, 827, 595, 0, 495, 496,
	497, 0, 498, 499, 500, 501, 502, 503, 504, 0,
	0, 0, 505, 506, 507, 508, 0, 0, 0, 0,
	0, 828, 509, 596, 510, 829, 830, 0, 831, 0,
	511, 512, 515, 0, 832, 0, 514, 516, 517, 0,
	518, 0, 0, 0, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 528, 527, 0, 530, 833, 529, 0,
	531, 532, 0, 0, 533, 534, 535, 536, 537, 538,
	541, 0, 0, 539, 540, 542, 543, 0, 544, 545,
	547, 550, 546, 548, 549, 551, 552, 565, 566, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 568, 0, 567, 0, 569, 570, 571, 572, 573,
	581, 583, 584, 579, 580, 582, 585, 586, 588, 589,
	576, 577, 578, 0, 587, 574, 0, 575, 0, 0,
	590, 591, 592, 593, 0, 834, 594, 835, 597, 598,
	0, 0, 599, 0, 600, 0, 0, 602, 603, 604,
	0, 0, 605, 606, 836, 0, 607, 0, 837, 608,
	609, 601, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 0, 620, 621, 838, 622, 623, 624, 839,
	625, 626, 627, 840, 628, 841, 629, 630, 0, 631,
	632, 633, 0, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 842, 644, 645, 647, 646, 648, 649,
	0, 650, 0, 651, 652, 653, 0, 0, 0, 0,
	0, 654, 655, 657, 0, 658, 659, 660, 661, 662,
	656, 663, 664, 665, 666, 667, 668, 669, 0, 671,
	672, 670, 673, 674, 0, 675, 676, 677, 678, 679,
	843, 680, 0, 681, 682, 690, 691, 692, 683, 684,
	686, 693, 685, 694, 695, 696, 697, 699, 698, 0,
	701, 702, 700, 703, 704, 705, 706, 0, 707, 844,
	708, 687, 688, 709, 710, 711, 0, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 845, 0, 721, 0,
	722, 723, 724, 725, 726, 727, 729, 689, 730, 731,
	732, 737, 738, 846, 733, 734, 735, 736, 847, 740,
	741, 742, 743, 0, 744, 745, 0, 739, 728, 0,
	746, 747, 748, 749, 750, 751, 752, 753, 754, 755,
	0, 756, 848, 849, 850, 851, 0, 768, 0, 757,
	759, 760, 761, 762, 852, 763, 853, 0, 764, 765,
	766, 767, 758, 769, 770, 0, 0, 771, 772, 773,
	774, 776, 778, 779, 780, 775, 777, 781, 0, 782,
	0, 0, 783, 784, 785, 854, 855, 856, 0, 787,
	788, 786, 789, 790, 793, 791, 792, 857, 796, 513,
	797, 798, 799, 794, 795, 1000, 0, 337, 0, 800,
	801, 858, 802, 803, 804, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 346, 348, 347, 349, 350,
	351, 352, 0, 353, 354, 0, 0, 0, 0, 0,
	805, 0, 0, 0, 356, 0, 355, 0, 357, 358,
	359, 0, 360, 361, 362, 363, 364, 365, 366, 367,
	806, 807, 0, 368, 808, 369, 809, 0, 810, 370,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 0,
	0, 0, 380, 811, 812, 813, 0, 381, 382, 383,
	384, 814, 0, 0, 0, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 0, 394, 395, 396, 393, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 412, 0,
	0, 0, 0, 0, 0, 0, 413, 414, 415, 416,
	417, 0, 418, 420, 421, 815, 422, 816, 0, 425,
	427, 419, 423, 0, 426, 424, 428, 429, 0, 430,
	431, 432, 433, 0, 0, 434, 435, 436, 0, 437,
	438, 440, 439, 0, 441, 442, 443, 0, 444, 445,
	817, 446, 447, 448, 450, 452, 449, 451, 453, 454,
	455, 456, 457, 818, 819, 458, 459, 0, 0, 0,
	0, 0, 0, 0, 460, 461, 462, 820, 0, 0,
	0, 463, 0, 465, 469, 466, 467, 468, 470, 0,
	464, 471, 472, 0, 0, 473, 474, 475, 821, 822,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 0,
	485, 486, 823, 0, 824, 487, 0, 488, 489, 490,
	491, 492, 493, 494, 825, 826, 827, 595, 0, 495,
	496, 497, 0, 498, 499, 500, 501, 502, 503, 504,
	0, 0, 0, 505, 506, 507, 508, 0, 0, 0,
	0, 0, 828, 509, 596, 510, 829, 830, 0, 831,
	0, 511, 512, 515, 0, 832, 0, 514, 516, 517,
	0, 518, 0, 0, 0, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 528, 527, 0, 530, 833, 529,
	0, 531, 532, 0, 0, 533, 534, 535, 536, 537,
	538, 541, 0, 0, 539, 540, 542, 543, 0, 544,
	545, 547, 550, 546, 548, 549, 551, 552, 565, 566,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 568, 0, 567, 0, 569, 570, 571, 572,
	573, 581, 583, 584, 579, 580, 582, 585, 586, 588,
	589, 576, 577, 578, 0, 587, 574, 0, 575, 0,
	0, 590, 591, 592, 593, 0, 834, 594, 835, 597,
	598, 0, 0, 599, 0, 600, 0, 0, 602, 603,
	604, 0, 0, 605, 606, 836, 0, 607, 0, 837,
	608, 609, 601, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 620, 621, 838, 622, 623, 624,
	839, 625, 626, 627, 840, 628, 841, 629, 630, 0,
	631, 632, 633, 0, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 842, 644, 645, 647, 646, 648,
	649, 0, 650, 0, 651, 652, 653, 0, 0, 0,
	0, 0, 654, 655, 657, 0, 658, 659, 660, 661,
	662, 656, 663, 664, 665, 666, 667, 668, 669, 0,
	671, 672, 670, 673, 674, 0, 675, 676, 677, 678,
	679, 843, 680, 0, 681, 682, 690, 691, 692, 683,
	684, 686, 693, 685, 694, 695, 696, 697, 699, 698,
	0, 701, 702, 700, 703, 704, 705, 706, 0, 707,
	844, 708, 687, 688, 709, 710, 711, 0, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 845, 0, 721,
	0, 722, 723, 724, 725, 726, 727, 729, 689, 730,
	731, 732, 737, 738, 846, 733, 734, 735, 736, 847,
	740, 741, 742, 743, 0, 744, 745, 0, 739, 728,
	0, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	755, 0, 756, 848, 849, 850, 851, 0, 768, 0,
	757, 759, 760, 761, 762, 852, 763, 853, 0, 764,
	765, 766, 767, 758, 769, 770, 0, 0, 771, 772,
	773, 774, 776, 778, 779, 780, 775, 777, 781, 0,
	782, 0, 0, 783, 784, 785, 854, 855, 856, 0,
	787, 788, 786, 789, 790, 793, 791, 792, 857, 796,
	513, 797, 798, 799, 794, 795, 980, 0, 337, 0,
	800, 801, 858, 802, 803, 804, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 346, 348, 347, 349,
	350, 351, 352, 0, 353, 354, 0, 0, 0, 0,
	0, 805, 0, 0, 0, 356, 0, 355, 0, 357,
	358, 359, 0, 360, 361, 362, 363, 364, 365, 366,
	367, 806, 807, 0, 368, 808, 369, 809, 0, 810,
	370, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	0, 0, 0, 380, 811, 812, 813, 0, 381, 382,
	976, 384, 814, 0, 0, 0, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 0, 394, 395, 396, 393,
	397, 398, 0, 975, 0, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 412,
	0, 0, 0, 0, 0, 0, 0, 413, 414, 415,
	416, 417, 0, 418, 420, 421, 815, 422, 816, 0,
	425, 427, 419, 423, 0, 426, 424, 428, 429, 0,
	430, 431, 432, 433, 0, 0, 434, 435, 436, 0,
	437, 438, 440, 439, 0, 441, 442, 443, 0, 444,
	445, 817, 446, 447, 448, 450, 452, 449, 451, 453,
	454, 455, 456, 457, 818, 819, 458, 459, 0, 0,
	0, 0, 0, 0, 0, 460, 461, 462, 820, 0,
	0, 0, 463, 0, 465, 469, 466, 467, 468, 470,
	0, 464, 471, 472, 0, 0, 473, 474, 475, 821,
	822, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 486, 823, 0, 824, 487, 0, 488, 489,
	490, 491, 492, 493, 494, 825, 826, 827, 595, 0,
	495, 496, 497, 0, 498, 499, 500, 501, 502, 503,
	504, 0, 0, 0, 505, 506, 507, 508, 0, 0,
	0, 0, 0, 828, 509, 596, 510, 829, 830, 0,
	831, 0, 511, 512, 515, 0, 832, 0, 514, 516,
	517, 0, 518, 0, 0, 0, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 528, 527, 0, 530, 833,
	529, 0, 531, 532, 0, 0, 533, 534, 535, 536,
	537, 981, 541, 0, 0, 539, 540, 542, 543, 0,
	544, 545, 547, 550, 546, 548, 549, 551, 552, 565,
	566, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 568, 0, 990, 0, 569, 570, 571,
	572, 573, 581, 583, 584, 579, 580, 582, 585, 586,
	588, 589, 576, 577, 578, 0, 587, 574, 0, 575,
	0, 0, 590, 591, 592, 593, 0, 834, 594, 835,
	597, 598, 0, 0, 599, 0, 600, 0, 0, 602,
	603, 604, 0, 0, 605, 606, 836, 0, 607, 0,
	837, 608, 609, 601, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 0, 620, 621, 838, 622, 623,
	624, 839, 625, 626, 627, 840, 628, 841, 629, 630,
	0, 631, 632, 633, 0, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 842, 644, 645, 647, 646,
	648, 649, 0, 650, 0, 651, 652, 653, 0, 0,
	0, 0, 0, 654, 655, 657, 0, 658, 659, 660,
	661, 662, 656, 663, 664, 665, 666, 667, 668, 669,
	0, 671, 672, 670, 673, 674, 0, 989, 676, 677,
	678, 679, 977, 680, 0, 681, 682, 690, 691, 692,
	683, 684, 686, 988, 685, 694, 695, 696, 697, 699,
	698, 0, 701, 702, 700, 703, 704, 978, 706, 0,
	707, 844, 708, 687, 688, 709, 710, 711, 0, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 845, 0,
	721, 0, 722, 723, 724, 725, 726, 727, 729, 689,
	730, 731, 732, 737, 738, 846, 733, 734, 735, 736,
	847, 740, 741, 742, 743, 0, 744, 745, 0, 739,
	728, 0, 746, 747, 748, 749, 750, 751, 752, 753,
	754, 755, 0, 756, 986, 849, 850, 851, 0, 768,
	0, 757, 982, 760, 761, 762, 852, 763, 853, 0,
	764, 765, 766, 767, 758, 769, 770, 0, 0, 771,
	772, 773, 774, 776, 778, 779, 780, 775, 777, 781,
	0, 782, 0, 0, 783, 784, 785, 854, 855, 856,
	0, 787, 788, 786, 789, 790, 793, 791, 792, 857,
	796, 513, 797, 798, 799, 794, 795, 969, 0, 337,
	0, 800, 801, 858, 802, 803, 804, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 346, 348, 347,
	349, 350, 351, 352, 0, 353, 354, 0, 0, 0,
	0, 0, 805, 0, 0, 0, 356, 0, 355, 0,
	357, 358, 359, 0, 360, 361, 362, 363, 364, 365,
	366, 367, 806, 807, 0, 368, 808, 369, 809, 0,
	810, 370, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 0, 0, 0, 380, 811, 812, 813, 0, 381,
	382, 383, 384, 814, 0, 0, 0, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 0, 394, 395, 396,
	393, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	412, 0, 0, 0, 0, 0, 0, 0, 413, 414,
	415, 416, 417, 0, 418, 420, 421, 815, 422, 816,
	0, 425, 427, 419, 423, 0, 426, 424, 428, 429,
	0, 430, 431, 432, 433, 0, 0, 434, 435, 436,
	0, 437, 438, 440, 439, 0, 441, 442, 443, 0,
	444, 445, 817, 446, 447, 448, 450, 452, 449, 451,
	453, 454, 455, 456, 457, 818, 819, 458, 459, 0,
	0, 0, 0, 0, 0, 0, 460, 461, 462, 820,
	0, 0, 0, 463, 0, 465, 469, 466, 467, 468,
	470, 0, 464, 471, 472, 0, 0, 473, 474, 475,
	821, 822, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 0, 485, 486, 823, 0, 824, 487, 0, 488,
	489, 490, 491, 492, 493, 494, 825, 826, 827, 595,
	0, 495, 496, 497, 0, 498, 499, 500, 501, 502,
	503, 504, 0, 0, 0, 505, 506, 507, 508, 0,
	0, 0, 0, 0, 828, 509, 596, 510, 829, 830,
	0, 831, 0, 511, 512, 515, 0, 832, 0, 514,
	516, 517, 0, 518, 0, 0, 0, 519, 520, 521,
	522, 523, 524, 525, 0, 526, 528, 527, 0, 530,
	833, 529, 0, 531, 532, 0, 0, 533, 534, 535,
	536, 537, 538, 541, 0, 0, 539, 540, 542, 543,
	0, 544, 545, 547, 550, 546, 548, 549, 551, 552,
	565, 566, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 568, 0, 567, 0, 569, 570,
	571, 572, 573, 581, 583, 584, 579, 580, 582, 585,
	586, 588, 589, 576, 577, 578, 0, 587, 574, 0,
	575, 0, 0, 590, 591, 592, 593, 0, 834, 594,
	835, 597, 598, 0, 0, 599, 0, 600, 0, 0,
	602, 603, 604, 0, 0, 605, 606, 836, 0, 607,
	0, 837, 608, 609, 601, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 0, 620, 621, 838, 622,
	623, 624, 839, 625, 626, 627, 840, 628, 841, 629,
	630, 0, 631, 632, 633, 0, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 842, 644, 645, 647,
	646, 648, 649, 0, 650, 0, 651, 652, 653, 0,
	0, 0, 0, 0, 654, 655, 657, 0, 658, 659,
	660, 661, 662, 656, 663, 664, 665, 666, 667, 668,
	669, 0, 671, 672, 670, 673, 674, 0, 675, 676,
	677, 678, 679, 843, 680, 0, 681, 682, 970, 691,
	692, 683, 684, 686, 693, 685, 694, 695, 696, 697,
	699, 698, 0, 701, 702, 700, 703, 704, 705, 706,
	0, 707, 844, 708, 687, 688, 709, 710, 711, 0,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 845,
	0, 721, 0, 722, 723, 724, 725, 726, 727, 729,
	689, 730, 731, 732, 737, 738, 846, 733, 734, 735,
	736, 847, 740, 741, 742, 743, 0, 744, 745, 0,
	739, 728, 0, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 755, 0, 756, 848, 849, 850, 851, 0,
	768, 0, 757, 759, 760, 761, 762, 852, 763, 853,
	0, 764, 765, 766, 767, 758, 769, 770, 0, 0,
	771, 772, 773, 774, 776, 778, 779, 780, 775, 777,
	781, 0, 782, 0, 0, 783, 784, 785, 854, 855,
	856, 0, 787, 788, 786, 789, 790, 793, 791, 792,
	857, 796, 513, 797, 798, 799, 794, 795, 927, 0,
	337, 0, 800, 801, 858, 802, 803, 804, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 346, 348,
	347, 349, 350, 351, 352, 0, 353, 354, 0, 0,
	0, 0, 0, 805, 0, 0, 0, 356, 0, 355,
	0, 357, 358, 359, 0, 360, 361, 362, 363, 364,
	365, 366, 367, 806, 807, 0, 368, 808, 369, 809,
	0, 810, 370, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 0, 0, 380, 811, 812, 813, 0,
	381, 382, 383, 384, 814, 0, 0, 0, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 0, 394, 395,
	396, 393, 397, 398, 0, 399, 0, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 412, 0, 0, 0, 0, 0, 0, 0, 413,
	414, 415, 416, 417, 0, 418, 420, 421, 815, 422,
	816, 0, 425, 427, 419, 423, 0, 426, 424, 428,
	429, 0, 430, 431, 432, 433, 0, 0, 434, 435,
	436, 0, 437, 438, 440, 439, 0, 441, 442, 443,
	0, 444, 445, 817, 446, 447, 448, 450, 452, 449,
	451, 453, 454, 455, 456, 457, 818, 819, 458, 459,
	0, 0, 0, 0, 0, 0, 0, 460, 461, 462,
	820, 0, 0, 0, 463, 0, 465, 469, 466, 467,
	468, 470, 0, 464, 471, 472, 0, 0, 473, 474,
	475, 821, 822, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 486, 823, 0, 824, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 825, 826, 827,
	595, 0, 495, 496, 497, 0, 498, 499, 500, 501,
	502, 503, 504, 0, 0, 0, 505, 506, 507, 508,
	0, 0, 0, 0, 0, 828, 509, 596, 510, 829,
	830, 0, 831, 0, 511, 512, 515, 0, 832, 0,
	514, 516, 517, 0, 518, 0, 0, 0, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 528, 527, 0,
	530, 833, 529, 0, 531, 532, 0, 0, 533, 534,
	535, 536, 537, 538, 541, 0, 0, 539, 540, 542,
	543, 0, 544, 545, 547, 550, 546, 548, 549, 551,
	552, 565, 566, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 568, 0, 567, 0, 569,
	570, 571, 572, 573, 581, 583, 584, 579, 580, 582,
	585, 586, 588, 589, 576, 577, 578, 0, 587, 574,
	0, 575, 0, 0, 590, 591, 592, 593, 0, 834,
	594, 835, 597, 598, 0, 0, 599, 0, 600, 0,
	0, 602, 603, 604, 0, 0, 605, 606, 836, 0,
	607, 0, 837, 608, 609, 601, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 0, 620, 621, 838,
	622, 623, 624, 839, 625, 626, 627, 840, 628, 841,
	629, 630, 0, 631, 632, 633, 0, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 842, 644, 645,
	647, 646, 648, 649, 0, 650, 0, 651, 652, 653,
	0, 0, 0, 0, 0, 654, 655, 657, 0, 658,
	659, 660, 661, 662, 656, 663, 664, 665, 666, 667,
	668, 669, 0, 671, 672, 670, 673, 674, 0, 675,
	676, 677, 678, 679, 843, 680, 0, 681, 682, 690,
	691, 692, 683, 684, 686, 693, 685, 694, 695, 696,
	697, 699, 698, 0, 701, 702, 700, 703, 704, 705,
	706, 0, 707, 844, 708, 687, 688, 709, 710, 711,
	0, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	845, 0, 721, 0, 722, 723, 724, 725, 726, 727,
	729, 689, 730, 731, 732, 737, 738, 846, 733, 734,
	735, 736, 847, 740, 741, 742, 743, 0, 744, 745,
	0, 739, 728, 0, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 0, 756, 848, 849, 850, 851,
	0, 768, 0, 757, 759, 760, 761, 762, 852, 763,
	853, 0, 764, 765, 766, 767, 758, 769, 770, 0,
	0, 771, 772, 773, 774, 776, 778, 779, 780, 775,
	777, 781, 0, 782, 0, 0, 783, 784, 785, 854,
	855, 856, 0, 787, 788, 786, 789, 790, 793, 791,
	792, 857, 796, 513, 797, 798, 799, 794, 795, 919,
	0, 337, 0, 800, 801, 858, 802, 803, 804, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 346,
	348, 347, 349, 350, 351, 352, 0, 353, 354, 0,
	0, 0, 0, 0, 805, 0, 0, 0, 356, 0,
	355, 0, 357, 358, 359, 0, 360, 361, 362, 363,
	364, 365, 366, 367, 806, 807, 0, 368, 808, 369,
	809, 0, 810, 370, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 0, 0, 0, 380, 811, 812, 813,
	0, 381, 382, 383, 384, 814, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 0, 394,
	395, 396, 393, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 0, 0, 0, 0, 0, 0,
	413, 414, 415, 416, 417, 0, 418, 420, 421, 815,
	422, 816, 0, 425, 427, 419, 423, 0, 426, 424,
	428, 429, 0, 430, 431, 432, 433, 0, 0, 434,
	435, 436, 0, 437, 438, 440, 439, 0, 441, 442,
	443, 0, 444, 445, 817, 446, 447, 448, 450, 452,
	449, 451, 453, 454, 455, 456, 457, 818, 819, 458,
	459, 0, 0, 0, 0, 0, 0, 0, 460, 461,
	462, 820, 0, 0, 0, 463, 0, 465, 469, 466,
	467, 468, 470, 0, 464, 471, 472, 0, 0, 473,
	474, 475, 821, 822, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 0, 485, 486, 823, 0, 824, 487,
	0, 488, 489, 490, 491, 492, 493, 494, 825, 826,
	827, 595, 0, 495, 496, 497, 0, 498, 499, 500,
	501, 502, 503, 504, 0, 0, 0, 505, 506, 507,
	508, 0, 0, 0, 0, 0, 828, 509, 596, 510,
	829, 830, 0, 831, 0, 511, 512, 515, 0, 832,
	0, 514, 516, 517, 0, 518, 0, 0, 0, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 528, 527,
	0, 530, 833, 529, 0, 531, 532, 0, 0, 533,
	534, 535, 536, 537, 538, 541, 0, 0, 539, 540,
	542, 543, 0, 544, 545, 547, 550, 546, 548, 549,
	551, 552, 565, 566, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 568, 0, 567, 0,
	569, 570, 571, 572, 573, 581, 583, 584, 579, 580,
	582, 585, 586, 588, 589, 576, 577, 578, 0, 587,
	574, 0, 575, 0, 0, 590, 591, 592, 593, 0,
	834, 594, 835, 597, 598, 0, 0, 599, 0, 600,
	0, 0, 602, 603, 604, 0, 0, 605, 606, 836,
	0, 607, 0, 837, 608, 609, 601, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 0, 620, 621,
	838, 622, 623, 624, 839, 625, 626, 627, 840, 628,
	841, 629, 630, 0, 631, 632, 633, 0, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 842, 644,
	645, 647, 646, 648, 649, 0, 650, 0, 651, 652,
	653, 0, 0, 0, 0, 0, 654, 655, 657, 0,
	658, 659, 660, 661, 662, 656, 663, 664, 665, 666,
	667, 668, 669, 0, 671, 672, 670, 673, 674, 0,
	675, 676, 677, 678, 679, 843, 680, 0, 681, 682,
	690, 691, 692, 683, 684, 686, 693, 685, 694, 695,
	696, 697, 699, 698, 0, 701, 702, 700, 703, 704,
	705, 706, 0, 707, 844, 708, 687, 688, 709, 710,
	711, 0, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 845, 0, 721, 0, 722, 723, 724, 725, 726,
	727, 729, 689, 730, 731, 732, 737, 738, 846, 733,
	734, 735, 736, 847, 740, 741, 742, 743, 0, 744,
	745, 0, 739, 728, 0, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 0, 756, 848, 849, 850,
	851, 0, 768, 0, 757, 759, 760, 761, 762, 852,
	763, 853, 0, 764, 765, 766, 767, 758, 769, 770,
	0, 0, 771, 772, 773, 774, 776, 778, 779, 780,
	775, 777, 781, 0, 782, 0, 0, 783, 784, 785,
	854, 855, 856, 0, 787, 788, 786, 789, 790, 793,
	791, 792, 857, 796, 513, 797, 798, 799, 794, 795,
	896, 0, 337, 0, 800, 801, 858, 802, 803, 804,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	346, 348, 347, 349, 350, 351, 352, 0, 353, 354,
	0, 0, 0, 0, 0, 805, 0, 0, 0, 356,
	0, 355, 0, 357, 358, 359, 0, 360, 361, 362,
	363, 364, 365, 366, 367, 806, 807, 0, 368, 808,
	369, 809, 0, 810, 370, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 0, 0, 0, 380, 811, 812,
	813, 0, 381, 382, 383, 384, 814, 0, 0, 0,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 0,
	394, 395, 396, 393, 397, 398, 0, 399, 0, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 412, 0, 0, 0, 0, 0, 0,
	0, 413, 414, 415, 416, 417, 0, 418, 420, 421,
	815, 422, 816, 0, 425, 427, 419, 423, 0, 426,
	424, 428, 429, 0, 430, 431, 432, 433, 0, 0,
	434, 435, 436, 0, 437, 438, 440, 439, 0, 441,
	442, 443, 0, 444, 445, 817, 446, 447, 448, 450,
	452, 449, 451, 453, 454, 455, 456, 457, 818, 819,
	458, 459, 0, 0, 0, 0, 0, 0, 0, 460,
	461, 462, 820, 0, 0, 0, 463, 0, 465, 469,
	466, 467, 468, 470, 0, 464, 471, 472, 0, 0,
	473, 474, 475, 821, 822, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 486, 823, 0, 824,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 825,
	826, 827, 595, 0, 495, 496, 497, 0, 498, 499,
	500, 501, 502, 503, 504, 0, 0, 0, 505, 506,
	507, 508, 0, 0, 0, 0, 0, 828, 509, 596,
	510, 829, 830, 0, 831, 0, 511, 512, 515, 0,
	832, 0, 514, 516, 517, 0, 518, 0, 0, 0,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 528,
	527, 0, 530, 833, 529, 0, 531, 532, 0, 0,
	533, 534, 535, 536, 537, 538, 541, 0, 0, 539,
	540, 542, 543, 0, 544, 545, 547, 550, 546, 548,
	549, 551, 552, 565, 566, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 568, 0, 567,
	0, 569, 570, 571, 572, 573, 581, 583, 584, 579,
	580, 582, 585, 586, 588, 589, 576, 577, 578, 0,
	587, 574, 0, 575, 0, 0, 590, 591, 592, 593,
	0, 834, 594, 835, 597, 598, 0, 0, 599, 0,
	600, 0, 0, 602, 603, 604, 0, 0, 605, 606,
	836, 0, 607, 0, 837, 608, 609, 601, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 0, 620,
	621, 838, 622, 623, 624, 839, 625, 626, 627, 840,
	628, 841, 629, 630, 0, 631, 632, 633, 0, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 842,
	644, 645, 647, 646, 648, 649, 0, 650, 0, 651,
	652, 653, 0, 0, 0, 0, 0, 654, 655, 657,
	0, 658, 659, 660, 661, 662, 656, 663, 664, 665,
	666, 667, 668, 669, 0, 671, 672, 670, 673, 674,
	0, 675, 676, 677, 678, 679, 843, 680, 0, 681,
	682, 690, 691, 692, 683, 684, 686, 693, 685, 694,
	695, 696, 697, 699, 698, 0, 701, 702, 700, 703,
	704, 705, 706, 0, 707, 844, 708, 687, 688, 709,
	710, 711, 0, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 845, 0, 721, 0, 722, 723, 724, 725,
	726, 727, 729, 689, 730, 731, 732, 737, 738, 846,
	733, 734, 735, 736, 847, 740, 741, 742, 743, 0,
	744, 745, 0, 739, 728, 0, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 0, 756, 848, 849,
	850, 851, 0, 768, 0, 757, 759, 760, 761, 762,
	852, 763, 853, 0, 764, 765, 766, 767, 758, 769,
	770, 0, 0, 771, 772, 773, 774, 776, 778, 779,
	780, 775, 777, 781, 0, 782, 0, 0, 783, 784,
	785, 854, 855, 856, 0, 787, 788, 786, 789, 790,
	793, 791, 792, 857, 796, 513, 797, 798, 799, 794,
	795, 337, 0, 0, 0, 800, 801, 858, 802, 803,
	804, 0, 0, 0, 0, 0, 0, 0, 345, 346,
	348, 347, 349, 350, 351, 352, 0, 353, 354, 0,
	0, 0, 0, 0, 805, 0, 0, 0, 356, 0,
	355, 0, 357, 358, 359, 0, 360, 361, 362, 363,
	364, 365, 366, 367, 806, 807, 0, 368, 808, 369,
	809, 0, 810, 370, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 0, 0, 0, 380, 811, 812, 813,
	0, 381, 382, 383, 384, 814, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 0, 394,
	395, 396, 393, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 0, 0, 0, 0, 0, 0,
	413, 414, 415, 416, 417, 0, 418, 420, 421, 815,
	422, 816, 0, 425, 427, 419, 423, 0, 426, 424,
	428, 429, 0, 430, 431, 432, 433, 0, 0, 434,
	435, 436, 0, 437, 438, 440, 439, 0, 441, 442,
	443, 0, 444, 445, 817, 446, 447, 448, 450, 452,
	449, 451, 453, 454, 455, 456, 457, 818, 819, 458,
	459, 0, 0, 0, 0, 0, 0, 0, 460, 461,
	462, 820, 0, 0, 0, 463, 0, 465, 469, 466,
	467, 468, 470, 0, 464, 471, 472, 0, 0, 473,
	474, 475, 821, 822, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 0, 485, 486, 823, 0, 824, 487,
	0, 488, 489, 490, 491, 492, 493, 494, 825, 826,
	827, 595, 0, 495, 496, 497, 0, 498, 499, 500,
	501, 502, 503, 504, 0, 0, 0, 505, 506, 507,
	508, 0, 0, 0, 0, 0, 828, 509, 596, 510,
	829, 830, 0, 831, 0, 511, 512, 515, 0, 832,
	0, 514, 516, 517, 0, 518, 0, 0, 0, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 528, 527,
	0, 530, 833, 529, 0, 531, 532, 0, 0, 533,
	534, 535, 536, 537, 538, 541, 0, 0, 539, 540,
	542, 543, 0, 544, 545, 547, 550, 546, 548, 549,
	551, 552, 565, 566, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 568, 0, 567, 0,
	569, 570, 571, 572, 573, 581, 583, 584, 579, 580,
	582, 585, 586, 588, 589, 576, 577, 578, 0, 587,
	574, 0, 575, 0, 0, 590, 591, 592, 593, 0,
	834, 594, 835, 597, 598, 0, 0, 599, 0, 600,
	0, 0, 602, 603, 604, 0, 0, 605, 606, 836,
	0, 607, 0, 837, 608, 609, 601, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 0, 620, 621,
	838, 622, 623, 624, 839, 625, 626, 627, 840, 628,
	841, 629, 630, 0, 631, 632, 633, 0, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 842, 644,
	645, 647, 646, 648, 649, 0, 650, 0, 651, 652,
	653, 0, 0, 0, 0, 0, 654, 655, 657, 0,
	658, 659, 660, 661, 662, 656, 663, 664, 665, 666,
	667, 668, 669, 0, 671, 672, 670, 673, 674, 0,
	675, 676, 677, 678, 679, 843, 680, 0, 681, 682,
	690, 691, 692, 683, 684, 686, 693, 685, 694, 695,
	696, 697, 699, 698, 0, 701, 702, 700, 703, 704,
	705, 706, 0, 707, 844, 708, 687, 688, 709, 710,
	711, 0, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 845, 0, 721, 0, 722, 723, 724, 725, 726,
	727, 729, 689, 730, 731, 732, 737, 738, 846, 733,
	734, 735, 736, 847, 740, 741, 742, 743, 0, 744,
	745, 0, 739, 728, 0, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 0, 756, 848, 849, 850,
	851, 0, 768, 0, 757, 759, 760, 761, 762, 852,
	763, 853, 0, 764, 765, 766, 767, 758, 769, 770,
	0, 0, 771, 772, 773, 774, 776, 778, 779, 780,
	775, 777, 781, 0, 782, 0, 0, 783, 784, 785,
	854, 855, 856, 0, 787, 788, 786, 789, 790, 793,
	791, 792, 857, 796, 513, 797, 798, 799, 794, 795,
	337, 0, 0, 0, 800, 801, 858, 802, 803, 804,
	0, 0, 0, 0, 0, 0, 0, 345, 346, 348,
	347, 349, 350, 351, 352, 0, 353, 354, 0, 0,
	0, 0, 0, 805, 0, 0, 0, 356, 0, 355,
	0, 357, 358, 359, 0, 360, 361, 362, 363, 364,
	365, 366, 367, 806, 807, 0, 368, 808, 369, 809,
	0, 810, 370, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 0, 0, 380, 811, 812, 813, 0,
	381, 382, 383, 384, 814, 0, 0, 0, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 0, 394, 395,
	396, 393, 397, 398, 0, 399, 0, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 412, 0, 0, 0, 0, 0, 0, 0, 413,
	414, 415, 416, 417, 0, 418, 420, 421, 815, 422,
	816, 0, 425, 427, 419, 423, 0, 426, 424, 428,
	429, 0, 430, 431, 432, 433, 0, 0, 434, 435,
	436, 0, 437, 438, 440, 439, 0, 441, 442, 443,
	0, 444, 445, 817, 446, 447, 448, 450, 452, 449,
	451, 453, 454, 455, 456, 457, 818, 819, 458, 459,
	0, 0, 0, 0, 0, 0, 0, 460, 461, 462,
	820, 0, 0, 0, 463, 0, 465, 469, 466, 467,
	468, 470, 0, 464, 471, 472, 0, 0, 473, 474,
	475, 821, 822, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 486, 823, 0, 824, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 5119, 826, 827,
	595, 0, 495, 496, 497, 0, 498, 499, 500, 501,
	502, 503, 504, 0, 0, 0, 505, 506, 507, 508,
	0, 0, 0, 0, 0, 828, 509, 596, 510, 829,
	830, 0, 831, 0, 511, 512, 515, 0, 832, 0,
	514, 516, 517, 0, 518, 0, 0, 0, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 528, 527, 0,
	530, 833, 529, 0, 531, 532, 0, 0, 533, 534,
	535, 536, 537, 538, 541, 0, 0, 539, 540, 542,
	543, 0, 544, 545, 547, 550, 546, 548, 549, 551,
	552, 565, 566, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 568, 0, 567, 0, 569,
	570, 571, 572, 573, 581, 583, 584, 579, 580, 582,
	585, 586, 588, 589, 576, 577, 578, 0, 587, 574,
	0, 575, 0, 0, 590, 591, 592, 593, 0, 834,
	594, 835, 597, 598, 0, 0, 599, 0, 600, 0,
	0, 602, 603, 604, 0, 0, 605, 606, 836, 0,
	607, 0, 837, 608, 609, 601, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 0, 620, 621, 838,
	622, 623, 624, 839, 625, 626, 627, 840, 628, 841,
	629, 630, 0, 631, 632, 633, 0, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 842, 644, 645,
	647, 646, 648, 649, 0, 650, 0, 651, 652, 653,
	0, 0, 0, 0, 0, 654, 655, 657, 0, 658,
	659, 660, 661, 662, 656, 663, 664, 665, 666, 667,
	668, 669, 0, 671, 672, 670, 673, 674, 0, 675,
	676, 677, 678, 679, 843, 680, 0, 681, 682, 690,
	691, 692, 683, 684, 686, 693, 685, 694, 695, 696,
	697, 699, 698, 0, 701, 702, 700, 703, 704, 705,
	706, 0, 707, 844, 708, 687, 688, 709, 710, 711,
	0, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	845, 0, 721, 0, 722, 723, 724, 725, 726, 727,
	729, 689, 730, 731, 732, 737, 738, 846, 733, 734,
	735, 736, 847, 740, 741, 742, 743, 0, 744, 745,
	0, 739, 728, 0, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 0, 756, 848, 849, 850, 851,
	0, 768, 0, 757, 759, 760, 761, 762, 852, 763,
	853, 0, 764, 765, 766, 767, 758, 769, 770, 0,
	0, 771, 772, 773, 774, 776, 778, 779, 780, 775,
	777, 781, 0, 782, 0, 0, 783, 784, 785, 854,
	855, 856, 0, 787, 788, 786, 789, 790, 793, 791,
	792, 857, 796, 513, 797, 798, 799, 794, 795, 337,
	0, 0, 0, 800, 801, 858, 802, 803, 804, 0,
	0, 0, 0, 0, 0, 0, 345, 346, 348, 347,
	349, 350, 351, 352, 0, 353, 354, 0, 0, 0,
	0, 0, 805, 0, 0, 0, 356, 0, 355, 0,
	357, 358, 359, 0, 360, 361, 362, 363, 364, 365,
	366, 367, 806, 807, 0, 368, 808, 369, 809, 0,
	810, 370, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 0, 0, 0, 380, 811, 812, 813, 0, 381,
	382, 383, 384, 814, 0, 0, 0, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 0, 394, 395, 396,
	393, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	412, 0, 0, 0, 0, 0, 0, 0, 413, 414,
	415, 416, 417, 0, 418, 420, 421, 815, 422, 816,
	0, 425, 427, 419, 423, 0, 426, 424, 428, 429,
	0, 430, 431, 432, 433, 0, 0, 434, 435, 436,
	0, 437, 438, 440, 439, 0, 441, 442, 443, 0,
	444, 445, 817, 446, 447, 448, 450, 452, 449, 451,
	453, 454, 455, 456, 457, 818, 819, 458, 459, 0,
	0, 0, 0, 0, 0, 0, 460, 461, 462, 820,
	0, 0, 0, 463, 0, 465, 469, 466, 467, 468,
	470, 0, 464, 471, 472, 0, 0, 473, 474, 475,
	821, 822, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 0, 485, 486, 823, 0, 824, 487, 0, 488,
	489, 490, 491, 492, 493, 494, 825, 826, 827, 595,
	0, 495, 496, 497, 0, 498, 499, 500, 501, 502,
	503, 504, 0, 0, 0, 505, 506, 507, 508, 0,
	0, 0, 0, 0, 828, 509, 596, 510, 829, 830,
	0, 831, 0, 511, 512, 515, 0, 832, 0, 514,
	516, 517, 0, 518, 0, 0, 0, 519, 520, 521,
	522, 523, 524, 525, 0, 526, 528, 527, 0, 530,
	833, 529, 0, 531, 532, 0, 0, 533, 534, 535,
	536, 537, 538, 541, 0, 0, 539, 540, 542, 543,
	0, 544, 545, 547, 550, 546, 548, 549, 551, 552,
	565, 566, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 568, 0, 567, 0, 569, 570,
	571, 572, 573, 581, 583, 584, 579, 580, 582, 585,
	586, 588, 589, 576, 577, 578, 0, 587, 574, 0,
	575, 0, 0, 590, 591, 592, 593, 0, 834, 594,
	835, 597, 598, 0, 0, 599, 0, 600, 0, 0,
	602, 603, 604, 0, 0, 605, 606, 836, 0, 607,
	0, 837, 608, 609, 601, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 0, 620, 621, 838, 622,
	623, 624, 839, 625, 626, 627, 840, 628, 841, 629,
	630, 0, 631, 632, 633, 0, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 842, 644, 645, 647,
	646, 648, 649, 0, 650, 0, 651, 652, 653, 0,
	0, 0, 0, 0, 654, 655, 657, 0, 658, 659,
	660, 661, 662, 656, 663, 664, 665, 666, 667, 668,
	669, 0, 671, 672, 670, 673, 674, 0, 989, 676,
	677, 678, 679, 843, 680, 0, 681, 682, 690, 691,
	692, 683, 684, 686, 988, 685, 694, 695, 696, 697,
	699, 698, 0, 701, 702, 700, 703, 704, 705, 706,
	0, 707, 844, 708, 687, 688, 709, 710, 711, 0,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 845,
	0, 721, 0, 722, 723, 724, 725, 726, 727, 729,
	689, 730, 731, 732, 737, 738, 846, 733, 734, 735,
	736, 847, 740, 741, 742, 743, 0, 744, 745, 0,
	739, 728, 0, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 755, 0, 756, 986, 849, 850, 851, 0,
	768, 0, 757, 759, 760, 761, 762, 852, 763, 853,
	0, 764, 765, 766, 767, 758, 769, 770, 0, 0,
	771, 772, 773, 774, 776, 778, 779, 780, 775, 777,
	781, 0, 782, 0, 0, 783, 784, 785, 854, 855,
	856, 0, 787, 788, 786, 789, 790, 793, 791, 792,
	857, 796, 513, 797, 798, 799, 794, 795, 337, 0,
	0, 0, 800, 801, 858, 802, 803, 804, 0, 0,
	0, 0, 0, 0, 0, 345, 346, 348, 347, 349,
	350, 351, 352, 0, 353, 354, 0, 0, 0, 0,
	0, 805, 0, 0, 0, 356, 0, 355, 0, 357,
	358, 359, 0, 360, 361, 362, 363, 364, 365, 366,
	367, 806, 807, 0, 368, 808, 369, 809, 0, 810,
	370, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	0, 0, 0, 380, 811, 812, 813, 0, 381, 382,
	383, 384, 814, 0, 0, 0, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 0, 394, 395, 396, 393,
	397, 398, 0, 399, 0, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 412,
	0, 0, 0, 0, 0, 0, 0, 413, 414, 415,
	416, 417, 0, 418, 420, 421, 815, 422, 816, 0,
	425, 427, 419, 423, 0, 426, 424, 428, 429, 0,
	430, 431, 432, 433, 0, 0, 434, 435, 436, 0,
	437, 438, 440, 439, 0, 441, 442, 443, 0, 444,
	445, 817, 446, 447, 448, 450, 452, 449, 451, 453,
	454, 455, 456, 457, 818, 819, 458, 459, 0, 0,
	0, 0, 0, 0, 0, 460, 461, 462, 820, 0,
	0, 0, 463, 0, 465, 469, 466, 467, 468, 470,
	0, 464, 471, 472, 0, 0, 473, 474, 475, 821,
	822, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 486, 823, 0, 824, 487, 0, 488, 489,
	490, 491, 492, 493, 494, 4987, 826, 827, 595, 0,
	495, 496, 497, 0, 498, 499, 500, 501, 502, 503,
	504, 0, 0, 0, 505, 506, 507, 508, 0, 0,
	0, 0, 0, 828, 509, 596, 510, 829, 830, 0,
	831, 0, 511, 512, 515, 0, 832, 0, 514, 516,
	517, 0, 518, 0, 0, 0, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 528, 527, 0, 530, 833,
	529, 0, 531, 532, 0, 0, 533, 534, 535, 536,
	537, 538, 541, 0, 0, 539, 540, 542, 543, 0,
	544, 545, 547, 550, 546, 548, 549, 551, 552, 565,
	566, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 568, 0, 567, 0, 569, 570, 571,
	572, 573, 581, 583, 584, 579, 580, 582, 585, 586,
	588, 589, 576, 577, 578, 0, 587, 574, 0, 575,
	0, 0, 590, 591, 592, 593, 0, 834, 594, 835,
	597, 598, 0, 0, 599, 0, 600, 0, 0, 602,
	603, 604, 0, 0, 605, 606, 836, 0, 607, 0,
	837, 608, 609, 601, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 0, 620, 621, 838, 622, 623,
	624, 839, 625, 626, 627, 840, 628, 841, 629, 630,
	0, 631, 632, 633, 0, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 842, 644, 645, 647, 646,
	648, 649, 0, 650, 0, 651, 652, 653, 0, 0,
	0, 0, 0, 654, 655, 657, 0, 658, 659, 660,
	661, 662, 656, 663, 664, 665, 666, 667, 668, 669,
	0, 671, 672, 670, 673, 674, 0, 675, 676, 677,
	678, 679, 843, 680, 0, 681, 682, 690, 691, 692,
	683, 684, 686, 693, 685, 694, 695, 696, 697, 699,
	698, 0, 701, 702, 700, 703, 704, 705, 706, 0,
	707, 844, 708, 687, 688, 709, 710, 711, 0, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 845, 0,
	721, 0, 722, 723, 724, 725, 726, 727, 729, 689,
	730, 731, 732, 737, 738, 846, 733, 734, 735, 736,
	847, 740, 741, 742, 743, 0, 744, 745, 0, 739,
	728, 0, 746, 747, 748, 749, 750, 751, 752, 753,
	754, 755, 0, 756, 848, 849, 850, 851, 0, 768,
	0, 757, 759, 760, 761, 762, 852, 763, 853, 0,
	764, 765, 766, 767, 758, 769, 770, 0, 0, 771,
	772, 773, 774, 776, 778, 779, 780, 775, 777, 781,
	0, 782, 0, 0, 783, 784, 785, 854, 855, 856,
	0, 787, 788, 786, 789, 790, 793, 791, 792, 857,
	796, 513, 797, 798, 799, 794, 795, 337, 0, 0,
	0, 800, 801, 858, 802, 803, 804, 0, 0, 0,
	0, 0, 0, 0, 345, 346, 348, 347, 349, 350,
	351, 352, 0, 353, 354, 0, 0, 0, 0, 0,
	805, 0, 0, 0, 356, 0, 355, 0, 357, 358,
	359, 0, 360, 361, 362, 363, 364, 365, 366, 367,
	806, 807, 0, 368, 808, 369, 809, 0, 810, 370,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 0,
	0, 0, 380, 811, 812, 813, 0, 381, 382, 383,
	384, 814, 0, 0, 0, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 0, 394, 395, 396, 393, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 412, 0,
	0, 0, 0, 0, 0, 0, 413, 414, 415, 416,
	417, 0, 418, 420, 421, 815, 422, 816, 0, 425,
	427, 419, 423, 0, 426, 424, 428, 429, 0, 430,
	431, 432, 433, 0, 0, 434, 435, 436, 0, 437,
	438, 440, 439, 0, 441, 442, 443, 0, 444, 445,
	817, 446, 447, 448, 450, 452, 449, 451, 453, 454,
	455, 456, 457, 818, 819, 458, 459, 0, 0, 0,
	0, 0, 0, 0, 460, 461, 462, 820, 0, 0,
	0, 463, 0, 465, 469, 466, 467, 468, 470, 0,
	464, 471, 472, 0, 0, 473, 474, 475, 821, 822,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 0,
	485, 486, 823, 0, 824, 487, 0, 488, 489, 490,
	491, 492, 493, 494, 4891, 826, 827, 595, 0, 495,
	496, 497, 0, 498, 499, 500, 501, 502, 503, 504,
	0, 0, 0, 505, 506, 507, 508, 0, 0, 0,
	0, 0, 828, 509, 596, 510, 829, 830, 0, 831,
	0, 511, 512, 515, 0, 832, 0, 514, 516, 517,
	0, 518, 0, 0, 0, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 528, 527, 0, 530, 833, 529,
	0, 531, 532, 0, 0, 533, 534, 535, 536, 537,
	538, 541, 0, 0, 539, 540, 542, 543, 0, 544,
	545, 547, 550, 546, 548, 549, 551, 552, 565, 566,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 568, 0, 567, 0, 569, 570, 571, 572,
	573, 581, 583, 584, 579, 580, 582, 585, 586, 588,
	589, 576, 577, 578, 0, 587, 574, 0, 575, 0,
	0, 590, 591, 592, 593, 0, 834, 594, 835, 597,
	598, 0, 0, 599, 0, 600, 0, 0, 602, 603,
	604, 0, 0, 605, 606, 836, 0, 607, 0, 837,
	608, 609, 601, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 620, 621, 838, 622, 623, 624,
	839, 625, 626, 627, 840, 628, 841, 629, 630, 0,
	631, 632, 633, 0, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 842, 644, 645, 647, 646, 648,
	649, 0, 650, 0, 651, 652, 653, 0, 0, 0,
	0, 0, 654, 655, 657, 0, 658, 659, 660, 661,
	662, 656, 663, 664, 665, 666, 667, 668, 669, 0,
	671, 672, 670, 673, 674, 0, 675, 676, 677, 678,
	679, 843, 680, 0, 681, 682, 690, 691, 692, 683,
	684, 686, 693, 685, 694, 695, 696, 697, 699, 698,
	0, 701, 702, 700, 703, 704, 705, 706, 0, 707,
	844, 708, 687, 688, 709, 710, 711, 0, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 845, 0, 721,
	0, 722, 723, 724, 725, 726, 727, 729, 689, 730,
	731, 732, 737, 738, 846, 733, 734, 735, 736, 847,
	740, 741, 742, 743, 0, 744, 745, 0, 739, 728,
	0, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	755, 0, 756, 848, 849, 850, 851, 0, 768, 0,
	757, 759, 760, 761, 762, 852, 763, 853, 0, 764,
	765, 766, 767, 758, 769, 770, 0, 0, 771, 772,
	773, 774, 776, 778, 779, 780, 775, 777, 781, 0,
	782, 0, 0, 783, 784, 785, 854, 855, 856, 0,
	787, 788, 786, 789, 790, 793, 791, 792, 857, 796,
	513, 797, 798, 799, 794, 795, 337, 0, 0, 0,
	800, 801, 858, 802, 803, 804, 0, 0, 0, 0,
	0, 0, 0, 345, 346, 348, 347, 349, 350, 351,
	352, 0, 353, 354, 0, 0, 0, 0, 0, 805,
	0, 0, 0, 356, 0, 355, 0, 357, 358, 359,
	0, 360, 361, 362, 363, 364, 365, 366, 367, 806,
	807, 0, 368, 808, 369, 809, 0, 810, 370, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 0, 0,
	0, 380, 811, 812, 813, 0, 381, 382, 383, 384,
	814, 0, 0, 0, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 0, 394, 395, 396, 393, 397, 398,
	0, 399, 0, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 412, 0, 0,
	0, 0, 0, 0, 0, 413, 414, 415, 416, 417,
	0, 418, 420, 421, 815, 422, 816, 0, 425, 427,
	419, 423, 0, 426, 424, 428, 429, 0, 430, 431,
	432, 433, 0, 0, 434, 435, 436, 0, 437, 438,
	440, 439, 0, 441, 442, 443, 0, 444, 445, 817,
	446, 447, 448, 450, 452, 449, 451, 453, 454, 455,
	456, 457, 818, 819, 458, 459, 0, 0, 0, 0,
	0, 0, 0, 460, 461, 462, 820, 0, 0, 0,
	463, 0, 465, 469, 466, 467, 468, 470, 0, 464,
	471, 472, 0, 0, 473, 474, 475, 821, 822, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	486, 823, 0, 824, 487, 0, 488, 489, 490, 491,
	492, 493, 494, 4889, 826, 827, 595, 0, 495, 496,
	497, 0, 498, 499, 500, 501, 502, 503, 504, 0,
	0, 0, 505, 506, 507, 508, 0, 0, 0, 0,
	0, 828, 509, 596, 510, 829, 830, 0, 831, 0,
	511, 512, 515, 0, 832, 0, 514, 516, 517, 0,
	518, 0, 0, 0, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 528, 527, 0, 530, 833, 529, 0,
	531, 532, 0, 0, 533, 534, 535, 536, 537, 538,
	541, 0, 0, 539, 540, 542, 543, 0, 544, 545,
	547, 550, 546, 548, 549, 551, 552, 565, 566, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 568, 0, 567, 0, 569, 570, 571, 572, 573,
	581, 583, 584, 579, 580, 582, 585, 586, 588, 589,
	576, 577, 578, 0, 587, 574, 0, 575, 0, 0,
	590, 591, 592, 593, 0, 834, 594, 835, 597, 598,
	0, 0, 599, 0, 600, 0, 0, 602, 603, 604,
	0, 0, 605, 606, 836, 0, 607, 0, 837, 608,
	609, 601, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 0, 620, 621, 838, 622, 623, 624, 839,
	625, 626, 627, 840, 628, 841, 629, 630, 0, 631,
	632, 633, 0, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 842, 644, 645, 647, 646, 648, 649,
	0, 650, 0, 651, 652, 653, 0, 0, 0, 0,
	0, 654, 655, 657, 0, 658, 659, 660, 661, 662,
	656, 663, 664, 665, 666, 667, 668, 669, 0, 671,
	672, 670, 673, 674, 0, 675, 676, 677, 678, 679,
	843, 680, 0, 681, 682, 690, 691, 692, 683, 684,
	686, 693, 685, 694, 695, 696, 697, 699, 698, 0,
	701, 702, 700, 703, 704, 705, 706, 0, 707, 844,
	708, 687, 688, 709, 710, 711, 0, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 845, 0, 721, 0,
	722, 723, 724, 725, 726, 727, 729, 689, 730, 731,
	732, 737, 738, 846, 733, 734, 735, 736, 847, 740,
	741, 742, 743, 0, 744, 745, 0, 739, 728, 0,
	746, 747, 748, 749, 750, 751, 752, 753, 754, 755,
	0, 756, 848, 849, 850, 851, 0, 768, 0, 757,
	759, 760, 761, 762, 852, 763, 853, 0, 764, 765,
	766, 767, 758, 769, 770, 0, 0, 771, 772, 773,
	774, 776, 778, 779, 780, 775, 777, 781, 0, 782,
	0, 0, 783, 784, 785, 854, 855, 856, 0, 787,
	788, 786, 789, 790, 793, 791, 792, 857, 796, 513,
	797, 798, 799, 794, 795, 337, 0, 0, 0, 800,
	801, 858, 802, 803, 804, 0, 0, 0, 0, 0,
	0, 0, 345, 346, 348, 347, 349, 350, 351, 352,
	0, 353, 354, 0, 0, 0, 0, 0, 805, 0,
	0, 0, 356, 0, 355, 0, 357, 358, 359, 0,
	360, 361, 362, 363, 364, 365, 366, 367, 806, 807,
	0, 368, 808, 369, 809, 0, 810, 370, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 0, 0, 0,
	380, 811, 812, 813, 0, 381, 382, 383, 384, 814,
	0, 0, 0, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 0, 394, 395, 396, 393, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 412, 0, 0, 0,
	0, 0, 0, 0, 413, 414, 415, 416, 417, 0,
	418, 420, 421, 815, 422, 816, 0, 425, 427, 419,
	423, 0, 426, 424, 428, 429, 0, 430, 431, 432,
	433, 0, 0, 434, 435, 436, 0, 437, 438, 440,
	439, 0, 441, 442, 443, 0, 444, 445, 817, 446,
	447, 448, 450, 452, 449, 451, 453, 454, 455, 456,
	457, 818, 819, 458, 459, 0, 0, 0, 0, 0,
	0, 0, 460, 461, 462, 820, 0, 0, 0, 463,
	0, 465, 469, 466, 467, 468, 470, 0, 464, 471,
	472, 0, 0, 473, 474, 475, 821, 822, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 486,
	823, 0, 824, 487, 0, 488, 489, 490, 491, 492,
	493, 494, 4877, 826, 827, 595, 0, 495, 496, 497,
	0, 498, 499, 500, 501, 502, 503, 504, 0, 0,
	0, 505, 506, 507, 508, 0, 0, 0, 0, 0,
	828, 509, 596, 510, 829, 830, 0, 831, 0, 511,
	512, 515, 0, 832, 0, 514, 516, 517, 0, 518,
	0, 0, 0, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 528, 527, 0, 530, 833, 529, 0, 531,
	532, 0, 0, 533, 534, 535, 536, 537, 538, 541,
	0, 0, 539, 540, 542, 543, 0, 544, 545, 547,
	550, 546, 548, 549, 551, 552, 565, 566, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	568, 0, 567, 0, 569, 570, 571, 572, 573, 581,
	583, 584, 579, 580, 582, 585, 586, 588, 589, 576,
	577, 578, 0, 587, 574, 0, 575, 0, 0, 590,
	591, 592, 593, 0, 834, 594, 835, 597, 598, 0,
	0, 599, 0, 600, 0, 0, 602, 603, 604, 0,
	0, 605, 606, 836, 0, 607, 0, 837, 608, 609,
	601, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 0, 620, 621, 838, 622, 623, 624, 839, 625,
	626, 627, 840, 628, 841, 629, 630, 0, 631, 632,
	633, 0, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 842, 644, 645, 647, 646, 648, 649, 0,
	650, 0, 651, 652, 653, 0, 0, 0, 0, 0,
	654, 655, 657, 0, 658, 659, 660, 661, 662, 656,
	663, 664, 665, 666, 667, 668, 669, 0, 671, 672,
	670, 673, 674, 0, 675, 676, 677, 678, 679, 843,
	680, 0, 681, 682, 690, 691, 692, 683, 684, 686,
	693, 685, 694, 695, 696, 697, 699, 698, 0, 701,
	702, 700, 703, 704, 705, 706, 0, 707, 844, 708,
	687, 688, 709, 710, 711, 0, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 845, 0, 721, 0, 722,
	723, 724, 725, 726, 727, 729, 689, 730, 731, 732,
	737, 738, 846, 733, 734, 735, 736, 847, 740, 741,
	742, 743, 0, 744, 745, 0, 739, 728, 0, 746,
	747, 748, 749, 750, 751, 752, 753, 754, 755, 0,
	756, 848, 849, 850, 851, 0, 768, 0, 757, 759,
	760, 761, 762, 852, 763, 853, 0, 764, 765, 766,
	767, 758, 769, 770, 0, 0, 771, 772, 773, 774,
	776, 778, 779, 780, 775, 777, 781, 0, 782, 0,
	0, 783, 784, 785, 854, 855, 856, 0, 787, 788,
	786, 789, 790, 793, 791, 792, 857, 796, 513, 797,
	798, 799, 794, 795, 337, 0, 0, 0, 800, 801,
	858, 802, 803, 804, 0, 0, 0, 0, 0, 0,
	0, 345, 346, 348, 347, 349, 350, 351, 352, 0,
	353, 354, 0, 0, 0, 0, 0, 805, 0, 0,
	0, 356, 0, 355, 0, 357, 358, 359, 0, 360,
	361, 362, 363, 364, 365, 366, 367, 806, 807, 0,
	368, 808, 369, 809, 0, 810, 370, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 0, 0, 0, 380,
	811, 812, 813, 0, 381, 382, 383, 384, 814, 0,
	0, 0, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 0, 394, 395, 396, 393, 397, 398, 0, 399,
	0, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 412, 0, 0, 0, 0,
	0, 0, 0, 413, 414, 415, 416, 417, 0, 418,
	420, 421, 815, 422, 816, 0, 425, 427, 419, 423,
	0, 426, 424, 428, 429, 0, 430, 431, 432, 433,
	0, 0, 434, 435, 436, 0, 437, 438, 440, 439,
	0, 441, 442, 443, 0, 444, 445, 817, 446, 447,
	448, 450, 452, 449, 451, 453, 454, 455, 456, 457,
	818, 819, 458, 459, 0, 0, 0, 0, 0, 0,
	0, 460, 461, 462, 820, 0, 0, 0, 463, 0,
	465, 469, 466, 467, 468, 470, 0, 464, 471, 472,
	0, 0, 473, 474, 475, 821, 822, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 486, 823,
	0, 824, 487, 0, 488, 489, 490, 491, 492, 493,
	494, 4874, 826, 827, 595, 0, 495, 496, 497, 0,
	498, 499, 500, 501, 502, 503, 504, 0, 0, 0,
	505, 506, 507, 508, 0, 0, 0, 0, 0, 828,
	509, 596, 510, 829, 830, 0, 831, 0, 511, 512,
	515, 0, 832, 0, 514, 516, 517, 0, 518, 0,
	0, 0, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 528, 527, 0, 530, 833, 529, 0, 531, 532,
	0, 0, 533, 534, 535, 536, 537, 538, 541, 0,
	0, 539, 540, 542, 543, 0, 544, 545, 547, 550,
	546, 548, 549, 551, 552, 565, 566, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 568,
	0, 567, 0, 569, 570, 571, 572, 573, 581, 583,
	584, 579, 580, 582, 585, 586, 588, 589, 576, 577,
	578, 0, 587, 574, 0, 575, 0, 0, 590, 591,
	592, 593, 0, 834, 594, 835, 597, 598, 0, 0,
	599, 0, 600, 0, 0, 602, 603, 604, 0, 0,
	605, 606, 836, 0, 607, 0, 837, 608, 609, 601,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	0, 620, 621, 838, 622, 623, 624, 839, 625, 626,
	627, 840, 628, 841, 629, 630, 0, 631, 632, 633,
	0, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 842, 644, 645, 647, 646, 648, 649, 0, 650,
	0, 651, 652, 653, 0, 0, 0, 0, 0, 654,
	655, 657, 0, 658, 659, 660, 661, 662, 656, 663,
	664, 665, 666, 667, 668, 669, 0, 671, 672, 670,
	673, 674, 0, 675, 676, 677, 678, 679, 843, 680,
	0, 681, 682, 690, 691, 692, 683, 684, 686, 693,
	685, 694, 695, 696, 697, 699, 698, 0, 701, 702,
	700, 703, 704, 705, 706, 0, 707, 844, 708, 687,
	688, 709, 710, 711, 0, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 845, 0, 721, 0, 722, 723,
	724, 725, 726, 727, 729, 689, 730, 731, 732, 737,
	738, 846, 733, 734, 735, 736, 847, 740, 741, 742,
	743, 0, 744, 745, 0, 739, 728, 0, 746, 747,
	748, 749, 750, 751, 752, 753, 754, 755, 0, 756,
	848, 849, 850, 851, 0, 768, 0, 757, 759, 760,
	761, 762, 852, 763, 853, 0, 764, 765, 766, 767,
	758, 769, 770, 0, 0, 771, 772, 773, 774, 776,
	778, 779, 780, 775, 777, 781, 0, 782, 0, 0,
	783, 784, 785, 854, 855, 856, 0, 787, 788, 786,
	789, 790, 793, 791, 792, 857, 796, 513, 797, 798,
	799, 794, 795, 337, 0, 0, 0, 800, 801, 858,
	802, 803, 804, 0, 0, 0, 0, 0, 0, 0,
	345, 346, 348, 347, 349, 350, 351, 352, 0, 353,
	354, 0, 0, 0, 0, 0, 805, 0, 0, 0,
	356, 0, 355, 0, 357, 358, 359, 0, 360, 361,
	362, 363, 364, 365, 366, 367, 806, 807, 0, 368,
	808, 369, 809, 0, 810, 370, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 0, 0, 0, 380, 811,
	812, 813, 0, 381, 382, 383, 384, 814, 0, 0,
	0, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	0, 394, 395, 396, 393, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 412, 0, 0, 0, 0, 0,
	0, 0, 413, 414, 415, 416, 417, 0, 418, 420,
	421, 815, 422, 816, 0, 425, 427, 419, 423, 0,
	426, 424, 428, 429, 0, 430, 431, 432, 433, 0,
	0, 434, 435, 436, 0, 437, 438, 440, 439, 0,
	441, 442, 443, 0, 444, 445, 817, 446, 447, 448,
	450, 452, 449, 451, 453, 454, 455, 456, 457, 818,
	819, 458, 459, 0, 0, 0, 0, 0, 0, 0,
	460, 461, 462, 820, 0, 0, 0, 463, 0, 465,
	469, 466, 467, 468, 470, 0, 464, 471, 472, 0,
	0, 473, 474, 475, 821, 822, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 0, 485, 486, 823, 0,
	824, 487, 0, 488, 489, 490, 491, 492, 493, 494,
	4447, 826, 827, 595, 0, 495, 496, 497, 0, 498,
	499, 500, 501, 502, 503, 504, 0, 0, 0, 505,
	506, 507, 508, 0, 0, 0, 0, 0, 828, 509,
	596, 510, 829, 830, 0, 831, 0, 511, 512, 515,
	0, 832, 0, 514, 516, 517, 0, 518, 0, 0,
	0, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	528, 527, 0, 530, 833, 529, 0, 531, 532, 0,
	0, 533, 534, 535, 536, 537, 538, 541, 0, 0,
	539, 540, 542, 543, 0, 544, 545, 547, 550, 546,
	548, 549, 551, 552, 565, 566, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 568, 0,
	567, 0, 569, 570, 571, 572, 573, 581, 583, 584,
	579, 580, 582, 585, 586, 588, 589, 576, 577, 578,
	0, 587, 574, 0, 575, 0, 0, 590, 591, 592,
	593, 0, 834, 594, 835, 597, 598, 0, 0, 599,
	0, 600, 0, 0, 602, 603, 604, 0, 0, 605,
	606, 836, 0, 607, 0, 837, 608, 609, 601, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 0,
	620, 621, 838, 622, 623, 624, 839, 625, 626, 627,
	840, 628, 841, 629, 630, 0, 631, 632, 633, 0,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	842, 644, 645, 647, 646, 648, 649, 0, 650, 0,
	651, 652, 653, 0, 0, 0, 0, 0, 654, 655,
	657, 0, 658, 659, 660, 661, 662, 656, 663, 664,
	665, 666, 667, 668, 669, 0, 671, 672, 670, 673,
	674, 0, 675, 676, 677, 678, 679, 843, 680, 0,
	681, 682, 690, 691, 692, 683, 684, 686, 693, 685,
	694, 695, 696, 697, 699, 698, 0, 701, 702, 700,
	703, 704, 705, 706, 0, 707, 844, 708, 687, 688,
	709, 710, 711, 0, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 845, 0, 721, 0, 722, 723, 724,
	725, 726, 727, 729, 689, 730, 731, 732, 737, 738,
	846, 733, 734, 735, 736, 847, 740, 741, 742, 743,
	0, 744, 745, 0, 739, 728, 0, 746, 747, 748,
	749, 750, 751, 752, 753, 754, 755, 0, 756, 848,
	849, 850, 851, 0, 768, 0, 757, 759, 760, 761,
	762, 852, 763, 853, 0, 764, 765, 766, 767, 758,
	769, 770, 0, 0, 771, 772, 773, 774, 776, 778,
	779, 780, 775, 777, 781, 0, 782, 0, 0, 783,
	784, 785, 854, 855, 856, 0, 787, 788, 786, 789,
	790, 793, 791, 792, 857, 796, 513, 797, 798, 799,
	794, 795, 337, 0, 0, 0, 800, 801, 858, 802,
	803, 804, 0, 0, 0, 0, 0, 0, 0, 345,
	346, 348, 347, 349, 350, 351, 352, 0, 353, 354,
	0, 0, 0, 0, 0, 805, 0, 0, 0, 356,
	0, 355, 0, 357, 358, 359, 0, 360, 361, 362,
	363, 364, 365, 366, 367, 806, 807, 0, 368, 808,
	369, 809, 0, 810, 370, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 0, 0, 0, 380, 811, 812,
	813, 0, 381, 382, 383, 384, 814, 0, 0, 0,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 0,
	394, 395, 396, 393, 397, 398, 0, 399, 0, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 412, 0, 0, 0, 0, 0, 0,
	0, 413, 414, 415, 416, 417, 0, 418, 420, 421,
	815, 422, 816, 0, 425, 427, 419, 423, 0, 426,
	424, 428, 429, 0, 430, 431, 432, 433, 0, 0,
	434, 435, 436, 0, 437, 438, 440, 439, 0, 441,
	442, 443, 0, 444, 445, 817, 446, 447, 448, 450,
	452, 449, 451, 453, 454, 455, 456, 457, 818, 819,
	458, 459, 0, 0, 0, 0, 0, 0, 0, 460,
	461, 462, 820, 0, 0, 0, 463, 0, 465, 469,
	466, 467, 468, 470, 0, 464, 471, 472, 0, 0,
	473, 474, 475, 821, 822, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 486, 823, 0, 824,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 825,
	826, 827, 595, 0, 495, 496, 497, 0, 498, 499,
	500, 501, 502, 503, 504, 0, 0, 0, 505, 506,
	507, 508, 0, 0, 0, 0, 0, 828, 509, 596,
	510, 829, 830, 0, 831, 0, 511, 512, 515, 0,
	832, 0, 514, 516, 517, 0, 518, 0, 0, 0,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 528,
	527, 0, 530, 833, 529, 0, 531, 532, 0, 0,
	533, 534, 535, 536, 537, 538, 541, 0, 0, 539,
	540, 542, 543, 0, 544, 545, 547, 550, 546, 548,
	549, 551, 552, 565, 566, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 568, 0, 567,
	0, 569, 570, 571, 572, 573, 581, 583, 584, 579,
	580, 582, 585, 586, 588, 589, 576, 577, 578, 0,
	587, 574, 0, 575, 0, 0, 590, 591, 592, 593,
	0, 834, 594, 835, 597, 598, 0, 0, 599, 0,
	600, 0, 0, 602, 603, 604, 0, 0, 605, 606,
	836, 0, 607, 0, 837, 608, 609, 601, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 0, 620,
	621, 838, 622, 623, 624, 839, 625, 626, 627, 840,
	628, 841, 629, 630, 0, 631, 632, 633, 0, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 842,
	644, 645, 647, 646, 648, 649, 0, 650, 0, 651,
	652, 653, 0, 0, 0, 0, 0, 654, 655, 657,
	0, 658, 659, 660, 661, 662, 656, 663, 664, 665,
	666, 667, 668, 669, 0, 671, 672, 670, 673, 674,
	0, 675, 676, 677, 678, 679, 843, 680, 0, 681,
	682, 970, 691, 692, 683, 684, 686, 693, 685, 694,
	695, 696, 697, 699, 698, 0, 701, 702, 700, 703,
	704, 705, 706, 0, 707, 844, 708, 687, 688, 709,
	710, 711, 0, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 845, 0, 721, 0, 722, 723, 724, 725,
	726, 727, 729, 689, 730, 731, 732, 737, 738, 846,
	733, 734, 735, 736, 847, 740, 741, 742, 743, 0,
	744, 745, 0, 739, 728, 0, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 0, 756, 848, 849,
	850, 851, 0, 768, 0, 757, 759, 760, 761, 762,
	852, 763, 853, 0, 764, 765, 766, 767, 758, 769,
	770, 0, 0, 771, 772, 773, 774, 776, 778, 779,
	780, 775, 777, 781, 0, 782, 0, 0, 783, 784,
	785, 854, 855, 856, 0, 787, 788, 786, 789, 790,
	793, 791, 792, 857, 796, 513, 797, 798, 799, 794,
	795, 337, 0, 0, 0, 800, 801, 858, 802, 803,
	804, 0, 0, 0, 0, 0, 0, 0, 345, 346,
	348, 347, 349, 350, 351, 352, 0, 353, 354, 0,
	0, 0, 0, 0, 805, 0, 2966, 0, 356, 0,
	355, 0, 357, 358, 359, 0, 360, 361, 362, 363,
	364, 365, 366, 367, 806, 807, 0, 368, 808, 369,
	809, 0, 810, 370, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 0, 0, 0, 380, 811, 812, 813,
	0, 381, 382, 383, 384, 814, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 0, 394,
	395, 396, 393, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 0, 0, 0, 0, 0, 0,
	413, 414, 415, 416, 417, 0, 418, 420, 421, 815,
	422, 816, 0, 425, 427, 419, 423, 0, 426, 424,
	428, 429, 0, 430, 431, 432, 433, 0, 0, 434,
	435, 436, 0, 437, 438, 440, 439, 0, 441, 442,
	443, 0, 444, 445, 817, 446, 447, 448, 450, 452,
	449, 451, 453, 454, 455, 456, 457, 818, 819, 458,
	459, 0, 0, 0, 0, 0, 0, 0, 460, 461,
	462, 820, 0, 0, 0, 463, 0, 465, 469, 466,
	467, 468, 470, 0, 464, 471, 472, 0, 0, 473,
	474, 475, 821, 822, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 0, 485, 486, 823, 0, 824, 487,
	0, 488, 489, 490, 491, 492, 493, 494, 825, 826,
	827, 595, 0, 495, 496, 497, 0, 498, 499, 500,
	501, 502, 503, 504, 0, 0, 0, 505, 506, 507,
	508, 0, 0, 0, 0, 0, 828, 509, 596, 510,
	829, 830, 0, 831, 0, 511, 512, 515, 0, 832,
	0, 514, 516, 517, 0, 518, 0, 0, 0, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 528, 527,
	0, 530, 833, 529, 0, 531, 532, 0, 0, 533,
	534, 535, 536, 537, 538, 541, 0, 0, 539, 540,
	542, 543, 0, 544, 545, 547, 550, 546, 548, 549,
	551, 552, 565, 566, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 568, 0, 567, 0,
	569, 570, 571, 572, 573, 581, 583, 584, 579, 580,
	582, 585, 586, 588, 589, 576, 577, 578, 0, 587,
	574, 0, 575, 0, 0, 590, 591, 592, 593, 0,
	834, 594, 835, 597, 598, 0, 0, 599, 0, 600,
	0, 0, 602, 603, 604, 0, 0, 605, 606, 836,
	0, 607, 0, 837, 608, 609, 601, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 0, 620, 621,
	838, 622, 623, 624, 839, 625, 626, 627, 840, 628,
	841, 629, 630, 0, 631, 632, 633, 0, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 842, 644,
	645, 647, 646, 648, 649, 0, 650, 0, 651, 652,
	653, 0, 0, 0, 0, 0, 654, 655, 657, 0,
	658, 659, 660, 661, 662, 656, 663, 664, 665, 666,
	667, 668, 669, 0, 671, 672, 670, 673, 674, 0,
	675, 676, 677, 678, 679, 843, 680, 0, 681, 682,
	690, 691, 692, 683, 684, 686, 693, 685, 694, 695,
	696, 697, 699, 698, 0, 701, 702, 700, 703, 704,
	705, 706, 0, 0, 844, 708, 687, 688, 709, 710,
	711, 0, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 845, 0, 721, 0, 722, 723, 724, 725, 726,
	727, 729, 689, 730, 731, 732, 737, 738, 846, 733,
	734, 735, 736, 847, 740, 741, 742, 743, 0, 744,
	745, 0, 739, 728, 0, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 0, 756, 848, 849, 850,
	851, 0, 768, 0, 757, 759, 760, 761, 762, 852,
	763, 853, 0, 764, 765, 766, 767, 758, 769, 770,
	0, 0, 771, 772, 773, 774, 776, 778, 779, 780,
	775, 777, 781, 0, 782, 0, 0, 783, 784, 785,
	854, 855, 856, 0, 787, 788, 786, 789, 790, 793,
	791, 792, 857, 796, 513, 797, 798, 799, 794, 795,
	337, 0, 0, 0, 800, 801, 858, 802, 803, 804,
	0, 0, 0, 0, 0, 0, 0, 345, 346, 348,
	347, 349, 350, 351, 352, 0, 353, 354, 0, 0,
	0, 0, 0, 805, 0, 0, 0, 356, 0, 355,
	0, 357, 358, 359, 0, 360, 361, 362, 363, 364,
	365, 366, 367, 806, 807, 0, 368, 808, 369, 809,
	0, 810, 370, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 0, 0, 380, 811, 812, 813, 0,
	381, 382, 383, 384, 814, 0, 0, 0, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 0, 394, 395,
	396, 393, 397, 398, 0, 399, 0, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 412, 0, 0, 0, 0, 0, 0, 0, 413,
	414, 415, 416, 417, 0, 418, 420, 421, 815, 422,
	816, 0, 425, 427, 419, 423, 0, 426, 424, 428,
	429, 0, 430, 431, 432, 433, 0, 0, 434, 435,
	436, 0, 437, 438, 440, 439, 0, 441, 442, 443,
	0, 444, 445, 817, 446, 2640, 448, 450, 452, 449,
	451, 453, 454, 455, 456, 457, 818, 819, 458, 459,
	0, 0, 0, 0, 0, 0, 0, 460, 461, 462,
	820, 0, 0, 0, 463, 0, 465, 469, 466, 467,
	468, 470, 0, 464, 471, 472, 0, 0, 473, 474,
	475, 821, 822, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 486, 823, 0, 824, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 825, 826, 827,
	595, 0, 495, 496, 497, 0, 498, 499, 500, 501,
	502, 503, 504, 0, 0, 0, 505, 506, 507, 508,
	0, 0, 0, 0, 0, 828, 509, 596, 510, 829,
	830, 0, 831, 0, 511, 512, 515, 0, 832, 0,
	514, 516, 517, 0, 518, 0, 0, 0, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 528, 527, 0,
	530, 833, 529, 0, 531, 532, 0, 0, 533, 534,
	535, 536, 537, 538, 541, 0, 0, 539, 540, 542,
	543, 0, 544, 545, 547, 550, 546, 548, 549, 551,
	552, 565, 566, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 568, 0, 567, 0, 569,
	570, 571, 572, 573, 581, 583, 584, 579, 580, 582,
	585, 586, 588, 589, 576, 577, 578, 0, 587, 574,
	0, 575, 0, 0, 590, 591, 592, 593, 0, 834,
	594, 835, 597, 598, 0, 0, 599, 0, 600, 0,
	0, 602, 603, 604, 0, 0, 605, 606, 836, 0,
	607, 0, 837, 608, 609, 601, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 0, 620, 621, 838,
	622, 623, 624, 839, 625, 626, 627, 840, 628, 841,
	629, 630, 0, 631, 632, 633, 0, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 842, 644, 645,
	1501, 646, 648, 649, 0, 650, 0, 651, 652, 653,
	0, 0, 0, 0, 0, 654, 655, 657, 0, 658,
	659, 660, 661, 662, 656, 663, 664, 665, 666, 667,
	668, 669, 0, 671, 672, 670, 673, 674, 0, 675,
	676, 677, 678, 679, 843, 680, 0, 681, 682, 690,
	691, 692, 683, 684, 686, 693, 685, 694, 695, 696,
	697, 699, 698, 0, 701, 702, 700, 703, 704, 705,
	706, 0, 707, 844, 708, 687, 688, 709, 710, 711,
	0, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	845, 0, 721, 0, 722, 723, 724, 725, 726, 727,
	729, 689, 730, 731, 732, 737, 738, 846, 733, 734,
	735, 736, 847, 740, 741, 742, 743, 0, 744, 745,
	0, 739, 728, 0, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 0, 756, 848, 849, 850, 851,
	0, 768, 0, 757, 759, 760, 761, 762, 852, 763,
	853, 0, 764, 765, 766, 767, 758, 769, 770, 0,
	0, 771, 772, 773, 774, 776, 778, 779, 780, 775,
	777, 781, 0, 782, 0, 0, 783, 784, 785, 854,
	855, 856, 0, 787, 788, 786, 789, 790, 793, 791,
	792, 857, 796, 513, 797, 798, 799, 794, 795, 337,
	0, 0, 0, 800, 801, 858, 802, 803, 804, 0,
	0, 0, 0, 0, 0, 0, 345, 346, 348, 347,
	349, 350, 351, 352, 0, 353, 354, 0, 0, 0,
	0, 0, 805, 0, 0, 0, 356, 0, 355, 0,
	357, 358, 359, 0, 360, 361, 362, 363, 364, 365,
	366, 367, 806, 807, 0, 368, 808, 369, 809, 0,
	810, 370, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 0, 0, 0, 380, 811, 812, 813, 0, 381,
	382, 383, 384, 814, 0, 0, 0, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 0, 394, 395, 396,
	393, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	412, 0, 0, 0, 0, 0, 0, 0, 413, 414,
	415, 416, 417, 0, 418, 420, 421, 815, 422, 816,
	0, 425, 427, 419, 423, 0, 426, 424, 428, 429,
	0, 430, 431, 432, 433, 0, 0, 434, 435, 436,
	0, 437, 438, 440, 439, 0, 441, 442, 443, 0,
	444, 445, 817, 446, 447, 448, 450, 452, 449, 451,
	453, 454, 455, 456, 457, 818, 819, 458, 459, 0,
	0, 0, 0, 0, 0, 0, 460, 461, 462, 820,
	0, 0, 0, 463, 0, 465, 469, 466, 467, 468,
	470, 0, 464, 471, 472, 0, 0, 473, 474, 475,
	821, 822, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 0, 485, 486, 823, 0, 824, 487, 0, 488,
	489, 490, 491, 492, 493, 494, 1588, 826, 827, 595,
	0, 495, 496, 497, 0, 498, 499, 500, 501, 502,
	503, 504, 0, 0, 0, 505, 506, 507, 508, 0,
	0, 0, 0, 0, 828, 509, 596, 510, 829, 830,
	0, 831, 0, 511, 512, 515, 0, 832, 0, 514,
	516, 517, 0, 518, 0, 0, 0, 519, 520, 521,
	522, 523, 524, 525, 0, 526, 528, 527, 0, 530,
	833, 529, 0, 531, 532, 0, 0, 533, 534, 535,
	536, 537, 538, 541, 0, 0, 539, 540, 542, 543,
	0, 544, 545, 547, 550, 546, 548, 549, 551, 552,
	565, 566, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 568, 0, 567, 0, 569, 570,
	571, 572, 573, 581, 583, 584, 579, 580, 582, 585,
	586, 588, 589, 576, 577, 578, 0, 587, 574, 0,
	575, 0, 0, 590, 591, 592, 593, 0, 834, 594,
	835, 597, 598, 0, 0, 599, 0, 600, 0, 0,
	602, 603, 604, 0, 0, 605, 606, 836, 0, 607,
	0, 837, 608, 609, 601, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 0, 620, 621, 838, 622,
	623, 624, 839, 625, 626, 627, 840, 628, 841, 629,
	630, 0, 631, 632, 633, 0, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 842, 644, 645, 647,
	646, 648, 649, 0, 650, 0, 651, 652, 653, 0,
	0, 0, 0, 0, 654, 655, 657, 0, 658, 659,
	660, 661, 662, 656, 663, 664, 665, 666, 667, 668,
	669, 0, 671, 672, 670, 673, 674, 0, 675, 676,
	677, 678, 679, 843, 680, 0, 681, 682, 690, 691,
	692, 683, 684, 686, 693, 685, 694, 695, 696, 697,
	699, 698, 0, 701, 702, 700, 703, 704, 705, 706,
	0, 707, 844, 708, 687, 688, 709, 710, 711, 0,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 845,
	0, 721, 0, 722, 723, 724, 725, 726, 727, 729,
	689, 730, 731, 732, 737, 738, 846, 733, 734, 735,
	736, 847, 740, 741, 742, 743, 0, 744, 745, 0,
	739, 728, 0, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 755, 0, 756, 848, 849, 850, 851, 0,
	768, 0, 757, 759, 760, 761, 762, 852, 763, 853,
	0, 764, 765, 766, 767, 758, 769, 770, 0, 0,
	771, 772, 773, 774, 776, 778, 779, 780, 775, 777,
	781, 0, 782, 0, 0, 783, 784, 785, 854, 855,
	856, 0, 787, 788, 786, 789, 790, 793, 791, 792,
	857, 796, 513, 797, 798, 799, 794, 795, 337, 0,
	0, 0, 800, 801, 858, 802, 803, 804, 0, 0,
	0, 0, 0, 0, 0, 345, 346, 348, 347, 349,
	350, 351, 352, 0, 353, 354, 0, 0, 0, 0,
	0, 805, 0, 0, 0, 356, 0, 355, 0, 357,
	358, 359, 0, 360, 361, 362, 363, 364, 365, 366,
	367, 806, 807, 0, 368, 808, 369, 809, 0, 810,
	370, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	0, 0, 0, 380, 811, 812, 813, 0, 381, 382,
	383, 384, 814, 0, 0, 0, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 0, 394, 395, 396, 393,
	397, 398, 0, 399, 0, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 412,
	0, 0, 0, 0, 0, 0, 0, 413, 414, 415,
	416, 417, 0, 418, 420, 421, 815, 422, 816, 0,
	425, 427, 419, 423, 0, 426, 424, 428, 429, 0,
	430, 431, 432, 433, 0, 0, 434, 435, 436, 0,
	437, 438, 440, 439, 0, 441, 442, 443, 0, 444,
	445, 817, 446, 447, 448, 450, 452, 449, 451, 453,
	454, 455, 456, 457, 818, 819, 458, 459, 0, 0,
	0, 0, 0, 0, 0, 460, 461, 462, 820, 0,
	0, 0, 463, 0, 465, 469, 466, 467, 468, 470,
	0, 464, 471, 472, 0, 0, 473, 474, 475, 821,
	822, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 486, 823, 0, 824, 487, 0, 488, 489,
	490, 491, 492, 493, 494, 825, 826, 827, 595, 0,
	495, 496, 497, 0, 498, 499, 500, 501, 502, 503,
	504, 0, 0, 0, 505, 506, 507, 508, 0, 0,
	0, 0, 0, 828, 509, 596, 510, 829, 830, 0,
	831, 0, 511, 512, 515, 0, 832, 0, 514, 516,
	517, 0, 518, 0, 0, 0, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 528, 527, 0, 530, 833,
	529, 0, 531, 532, 0, 0, 533, 534, 535, 536,
	537, 538, 541, 0, 0, 539, 540, 542, 543, 0,
	544, 545, 547, 550, 546, 548, 549, 551, 552, 565,
	566, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 568, 0, 567, 0, 569, 570, 571,
	572, 573, 581, 583, 584, 579, 580, 582, 585, 586,
	588, 589, 576, 577, 578, 0, 587, 574, 0, 575,
	0, 0, 590, 591, 592, 593, 0, 834, 594, 835,
	597, 598, 0, 0, 599, 0, 600, 0, 0, 602,
	603, 604, 0, 0, 605, 606, 836, 0, 607, 0,
	837, 608, 609, 601, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 0, 620, 621, 838, 622, 623,
	624, 839, 625, 626, 627, 840, 628, 841, 629, 630,
	0, 631, 632, 633, 0, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 842, 644, 645, 1501, 646,
	648, 649, 0, 650, 0, 651, 652, 653, 0, 0,
	0, 0, 0, 654, 655, 657, 0, 658, 659, 660,
	661, 662, 656, 663, 664, 665, 666, 667, 668, 669,
	0, 671, 672, 670, 673, 674, 0, 675, 676, 677,
	678, 679, 843, 680, 0, 681, 682, 690, 691, 692,
	683, 684, 686, 693, 685, 694, 695, 696, 697, 699,
	698, 0, 701, 702, 700, 703, 704, 705, 706, 0,
	707, 844, 708, 687, 688, 709, 710, 711, 0, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 845, 0,
	721, 0, 722, 723, 724, 725, 726, 727, 729, 689,
	730, 731, 732, 737, 738, 846, 733, 734, 735, 736,
	847, 740, 741, 742, 743, 0, 744, 745, 0, 739,
	728, 0, 746, 747, 748, 749, 750, 751, 752, 753,
	754, 755, 0, 756, 848, 849, 850, 851, 0, 768,
	0, 757, 759, 760, 761, 762, 852, 763, 853, 0,
	764, 765, 766, 767, 758, 769, 770, 0, 0, 771,
	772, 773, 774, 776, 778, 779, 780, 775, 777, 781,
	0, 782, 0, 0, 783, 784, 785, 854, 855, 856,
	0, 787, 788, 786, 789, 790, 793, 791, 792, 857,
	796, 513, 797, 798, 799, 794, 795, 337, 0, 0,
	0, 800, 801, 858, 802, 803, 804, 0, 0, 0,
	0, 0, 0, 0, 345, 346, 348, 347, 349, 350,
	351, 352, 0, 353, 354, 0, 0, 0, 0, 0,
	805, 0, 0, 0, 356, 0, 355, 0, 357, 358,
	359, 0, 360, 361, 362, 363, 364, 365, 366, 367,
	806, 807, 0, 368, 808, 369, 809, 0, 810, 370,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 0,
	0, 0, 380, 811, 812, 813, 0, 381, 382, 383,
	384, 814, 0, 0, 0, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 0, 394, 395, 396, 393, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 412, 0,
	0, 0, 0, 0, 0, 0, 413, 414, 415, 416,
	417, 0, 418, 420, 421, 815, 422, 816, 0, 425,
	427, 419, 423, 0, 426, 424, 428, 429, 0, 430,
	431, 432, 433, 0, 0, 434, 435, 436, 0, 437,
	438, 440, 439, 0, 441, 442, 443, 0, 444, 445,
	817, 446, 447, 448, 450, 452, 449, 451, 453, 454,
	455, 456, 457, 818, 819, 458, 459, 0, 0, 0,
	0, 0, 0, 0, 460, 461, 462, 820, 0, 0,
	0, 463, 0, 465, 469, 466, 467, 468, 470, 0,
	464, 471, 472, 0, 0, 473, 474, 475, 821, 822,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 0,
	485, 486, 823, 0, 824, 0, 0, 488, 489, 490,
	491, 492, 493, 494, 825, 826, 827, 595, 0, 495,
	496, 497, 0, 498, 499, 500, 501, 502, 503, 504,
	0, 0, 0, 505, 506, 507, 508, 0, 0, 0,
	0, 0, 828, 509, 596, 510, 829, 830, 0, 831,
	0, 511, 512, 515, 0, 832, 0, 514, 516, 517,
	0, 518, 0, 0, 0, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 528, 527, 0, 530, 833, 529,
	0, 531, 532, 0, 0, 533, 534, 535, 536, 537,
	538, 541, 0, 0, 539, 540, 542, 543, 0, 544,
	545, 547, 550, 546, 548, 549, 551, 552, 565, 566,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 568, 0, 567, 0, 569, 570, 571, 572,
	573, 581, 583, 584, 579, 580, 582, 585, 586, 588,
	589, 576, 577, 578, 0, 587, 574, 0, 575, 0,
	0, 590, 591, 592, 593, 0, 834, 594, 835, 597,
	598, 0, 0, 599, 0, 600, 0, 0, 602, 603,
	604, 0, 0, 605, 606, 836, 0, 607, 0, 837,
	608, 609, 601, 610, 611, 612, 0, 614, 615, 616,
	617, 618, 619, 0, 620, 621, 838, 622, 623, 624,
	839, 625, 626, 627, 840, 628, 841, 629, 630, 0,
	631, 632, 633, 0, 634, 635, 636, 637, 638, 639,
	640, 0, 642, 643, 842, 644, 645, 647, 646, 648,
	649, 0, 650, 0, 651, 652, 653, 0, 0, 0,
	0, 0, 654, 655, 657, 0, 658, 659, 660, 661,
	662, 656, 663, 664, 665, 666, 667, 668, 669, 0,
	671, 672, 670, 673, 674, 0, 675, 676, 677, 678,
	679, 843, 0, 0, 681, 682, 690, 691, 692, 683,
	684, 686, 693, 685, 694, 695, 696, 697, 699, 698,
	0, 701, 702, 700, 703, 704, 705, 706, 0, 707,
	844, 708, 687, 688, 709, 710, 711, 0, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 845, 0, 721,
	0, 722, 723, 724, 725, 726, 727, 729, 689, 730,
	731, 732, 737, 738, 846, 733, 734, 735, 736, 847,
	740, 741, 742, 743, 0, 744, 745, 0, 739, 728,
	0, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	755, 0, 756, 848, 849, 850, 851, 0, 768, 0,
	757, 759, 760, 761, 762, 852, 763, 853, 0, 764,
	765, 766, 767, 758, 769, 770, 0, 0, 771, 772,
	773, 774, 776, 778, 779, 780, 775, 777, 781, 0,
	782, 0, 0, 783, 784, 785, 854, 855, 856, 0,
	787, 788, 786, 789, 790, 793, 791, 792, 857, 796,
	513, 797, 798, 799, 794, 795, 2080, 0, 1640, 0,
	800, 801, 858, 802, 803, 804, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 346, 348, 347, 349,
	350, 351, 352, 0, 353, 354, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 356, 0, 355, 0, 357,
	358, 359, 0, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 0, 0, 368, 0, 369, 0, 0, 0,
	370, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	0, 0, 0, 380, 0, 0, 0, 0, 381, 382,
	383, 384, 0, 0, 0, 0, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 0, 394, 395, 396, 393,
	397, 398, 0, 399, 0, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 412,
	0, 0, 0, 0, 0, 0, 1642, 413, 414, 415,
	416, 417, 0, 418, 420, 421, 0, 422, 0, 0,
	425, 427, 419, 423, 0, 426, 424, 428, 429, 0,
	430, 431, 432, 433, 0, 0, 434, 435, 436, 0,
	437, 438, 440, 439, 0, 441, 442, 443, 0, 444,
	445, 0, 446, 447, 448, 450, 452, 449, 451, 453,
	454, 455, 456, 457, 0, 0, 458, 459, 0, 0,
	0, 0, 0, 0, 0, 460, 461, 462, 0, 0,
	0, 0, 463, 0, 465, 469, 466, 467, 468, 470,
	0, 464, 471, 472, 0, 0, 473, 474, 475, 0,
	0, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 486, 0, 0, 0, 487, 0, 488, 489,
	490, 491, 492, 493, 494, 2079, 0, 0, 595, 0,
	495, 496, 497, 0, 498, 499, 500, 501, 502, 503,
	504, 0, 0, 0, 505, 506, 507, 508, 0, 0,
	0, 0, 0, 0, 509, 596, 510, 0, 0, 0,
	0, 0, 511, 512, 515, 0, 0, 0, 514, 516,
	517, 0, 518, 0, 0, 0, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 528, 527, 0, 530, 0,
	529, 0, 531, 532, 0, 0, 533, 534, 535, 536,
	537, 538, 541, 0, 0, 539, 540, 542, 543, 0,
	544, 545, 547, 550, 546, 548, 549, 551, 552, 565,
	566, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 568, 0, 567, 0, 569, 570, 571,
	572, 573, 581, 583, 584, 579, 580, 582, 585, 586,
	588, 589, 576, 577, 578, 0, 587, 574, 0, 575,
	0, 0, 590, 591, 592, 593, 0, 0, 594, 0,
	597, 598, 0, 0, 599, 0, 600, 0, 0, 602,
	603, 604, 0, 0, 605, 606, 0, 0, 607, 0,
	0, 608, 609, 601, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 0, 620, 621, 0, 622, 623,
	624, 0, 625, 626, 627, 0, 628, 0, 629, 630,
	0, 631, 632, 633, 0, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 647, 646,
	648, 649, 0, 650, 0, 651, 652, 653, 0, 0,
	0, 0, 0, 654, 655, 657, 0, 658, 659, 660,
	661, 662, 656, 663, 664, 665, 666, 667, 668, 669,
	0, 671, 672, 670, 673, 674, 0, 675, 676, 677,
	678, 679, 0, 680, 0, 681, 682, 690, 691, 692,
	683, 684, 686, 693, 685, 694, 695, 696, 697, 699,
	698, 0, 701, 702, 700, 703, 704, 705, 706, 1643,
	707, 0, 708, 687, 688, 709, 710, 711, 0, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 0, 0,
	721, 0, 722, 723, 724, 725, 726, 727, 729, 689,
	730, 731, 732, 737, 738, 0, 733, 734, 735, 736,
	0, 740, 741, 742, 743, 0, 744, 745, 0, 739,
	728, 0, 746, 747, 748, 749, 750, 751, 752, 753,
	754, 755, 0, 756, 0, 0, 0, 0, 0, 768,
	0, 757, 759, 760, 761, 762, 0, 763, 0, 0,
	764, 765, 766, 767, 758, 769, 770, 0, 0, 771,
	772, 773, 774, 776, 778, 779, 780, 775, 777, 781,
	0, 782, 0, 0, 783, 784, 785, 0, 0, 0,
	0, 787, 788, 786, 789, 790, 793, 791, 792, 0,
	796, 513, 797, 798, 799, 794, 795, 1996, 0, 1640,
	0, 800, 801, 0, 802, 803, 804, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 346, 348, 347,
	349, 350, 351, 352, 0, 353, 354, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 356, 0, 355, 0,
	357, 358, 359, 0, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 0, 0, 368, 0, 369, 0, 0,
	0, 370, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 0, 0, 0, 380, 0, 0, 0, 0, 381,
	382, 383, 384, 0, 0, 0, 0, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 0, 394, 395, 396,
	393, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	412, 0, 0, 0, 0, 0, 0, 1642, 413, 414,
	415, 416, 417, 0, 418, 420, 421, 0, 422, 0,
	0, 425, 427, 419, 423, 0, 426, 424, 428, 429,
	0, 430, 431, 432, 433, 0, 0, 434, 435, 436,
	0, 437, 438, 440, 439, 0, 441, 442, 443, 0,
	444, 445, 0, 446, 447, 448, 450, 452, 449, 451,
	453, 454, 455, 456, 457, 0, 0, 458, 459, 0,
	0, 0, 0, 0, 0, 0, 460, 461, 462, 0,
	0, 0, 0, 463, 0, 465, 469, 466, 467, 468,
	470, 0, 464, 471, 472, 0, 0, 473, 474, 475,
	0, 0, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 0, 485, 486, 0, 0, 0, 487, 0, 488,
	489, 490, 491, 492, 493, 494, 1995, 0, 0, 595,
	0, 495, 496, 497, 0, 498, 499, 500, 501, 502,
	503, 504, 0, 0, 0, 505, 506, 507, 508, 0,
	0, 0, 0, 0, 0, 509, 596, 510, 0, 0,
	0, 0, 0, 511, 512, 515, 0, 0, 0, 514,
	516, 517, 0, 518, 0, 0, 0, 519, 520, 521,
	522, 523, 524, 525, 0, 526, 528, 527, 0, 530,
	0, 529, 0, 531, 532, 0, 0, 533, 534, 535,
	536, 537, 538, 541, 0, 0, 539, 540, 542, 543,
	0, 544, 545, 547, 550, 546, 548, 549, 551, 552,
	565, 566, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 568, 0, 567, 0, 569, 570,
	571, 572, 573, 581, 583, 584, 579, 580, 582, 585,
	586, 588, 589, 576, 577, 578, 0, 587, 574, 0,
	575, 0, 0, 590, 591, 592, 593, 0, 0, 594,
	0, 597, 598, 0, 0, 599, 0, 600, 0, 0,
	602, 603, 604, 0, 0, 605, 606, 0, 0, 607,
	0, 0, 608, 609, 601, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 0, 620, 621, 0, 622,
	623, 624, 0, 625, 626, 627, 0, 628, 0, 629,
	630, 0, 631, 632, 633, 0, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 647,
	646, 648, 649, 0, 650, 0, 651, 652, 653, 0,
	0, 0, 0, 0, 654, 655, 657, 0, 658, 659,
	660, 661, 662, 656, 663, 664, 665, 666, 667, 668,
	669, 0, 671, 672, 670, 673, 674, 0, 675, 676,
	677, 678, 679, 0, 680, 0, 681, 682, 690, 691,
	692, 683, 684, 686, 693, 685, 694, 695, 696, 697,
	699, 698, 0, 701, 702, 700, 703, 704, 705, 706,
	1643, 707, 0, 708, 687, 688, 709, 710, 711, 0,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 0,
	0, 721, 0, 722, 723, 724, 725, 726, 727, 729,
	689, 730, 731, 732, 737, 738, 0, 733, 734, 735,
	736, 0, 740, 741, 742, 743, 0, 744, 745, 0,
	739, 728, 0, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 755, 0, 756, 0, 0, 0, 0, 0,
	768, 0, 757, 759, 760, 761, 762, 0, 763, 0,
	0, 764, 765, 766, 767, 758, 769, 770, 0, 0,
	771, 772, 773, 774, 776, 778, 779, 780, 775, 777,
	781, 0, 782, 0, 0, 783, 784, 785, 0, 0,
	0, 0, 787, 788, 786, 789, 790, 793, 791, 792,
	0, 796, 513, 797, 798, 799, 794, 795, 1638, 0,
	1640, 0, 800, 801, 0, 802, 803, 804, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 346, 348,
	347, 349, 350, 351, 352, 0, 353, 354, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 356, 0, 355,
	0, 357, 358, 359, 0, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 0, 0, 368, 0, 369, 0,
	0, 0, 370, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 0, 0, 380, 0, 0, 0, 0,
	381, 382, 383, 384, 0, 0, 0, 0, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 0, 394, 395,
	396, 393, 397, 398, 0, 399, 0, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 412, 0, 0, 0, 0, 0, 0, 1642, 413,
	414, 415, 416, 417, 0, 418, 420, 421, 0, 422,
	0, 0, 425, 427, 419, 423, 0, 426, 424, 428,
	429, 0, 430, 431, 432, 433, 0, 0, 434, 435,
	436, 0, 437, 438, 440, 439, 0, 441, 442, 443,
	0, 444, 445, 0, 446, 447, 448, 450, 452, 449,
	451, 453, 454, 455, 456, 457, 0, 0, 458, 459,
	0, 0, 0, 0, 0, 0, 0, 460, 461, 462,
	0, 0, 0, 0, 463, 0, 465, 469, 466, 467,
	468, 470, 0, 464, 471, 472, 0, 0, 473, 474,
	475, 0, 0, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 486, 0, 0, 0, 487, 0,
	488, 489, 490, 491, 492, 493, 494, 1637, 0, 0,
	595, 0, 495, 496, 497, 0, 498, 499, 500, 501,
	502, 503, 504, 0, 0, 0, 505, 506, 507, 508,
	0, 0, 0, 0, 0, 0, 509, 596, 510, 0,
	0, 0, 0, 0, 511, 512, 515, 0, 0, 0,
	514, 516, 517, 0, 518, 0, 0, 0, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 528, 527, 0,
	530, 0, 529, 0, 531, 532, 0, 0, 533, 534,
	535, 536, 537, 538, 541, 0, 0, 539, 540, 542,
	543, 0, 544, 545, 547, 550, 546, 548, 549, 551,
	552, 565, 566, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 568, 0, 567, 0, 569,
	570, 571, 572, 573, 581, 583, 584, 579, 580, 582,
	585, 586, 588, 589, 576, 577, 578, 0, 587, 574,
	0, 575, 0, 0, 590, 591, 592, 593, 0, 0,
	594, 0, 597, 598, 0, 0, 599, 0, 600, 0,
	0, 602, 603, 604, 0, 0, 605, 606, 0, 0,
	607, 0, 0, 608, 609, 601, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 0, 620, 621, 0,
	622, 623, 624, 0, 625, 626, 627, 0, 628, 0,
	629, 630, 0, 631, 632, 633, 0, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	647, 646, 648, 649, 0, 650, 0, 651, 652, 653,
	0, 0, 0, 0, 0, 654, 655, 657, 0, 658,
	659, 660, 661, 662, 656, 663, 664, 665, 666, 667,
	668, 669, 0, 671, 672, 670, 673, 674, 0, 675,
	676, 677, 678, 679, 0, 680, 0, 681, 682, 690,
	691, 692, 683, 684, 686, 693, 685, 694, 695, 696,
	697, 699, 698, 0, 701, 702, 700, 703, 704, 705,
	706, 1643, 707, 0, 708, 687, 688, 709, 710, 711,
	0, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	0, 0, 721, 0, 722, 723, 724, 725, 726, 727,
	729, 689, 730, 731, 732, 737, 738, 0, 733, 734,
	735, 736, 0, 740, 741, 742, 743, 0, 744, 745,
	0, 739, 728, 0, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 0, 756, 0, 0, 0, 0,
	0, 768, 0, 757, 759, 760, 761, 762, 0, 763,
	0, 0, 764, 765, 766, 767, 758, 769, 770, 0,
	0, 771, 772, 773, 774, 776, 778, 779, 780, 775,
	777, 781, 0, 782, 0, 0, 783, 784, 785, 0,
	0, 0, 0, 787, 788, 786, 789, 790, 793, 791,
	792, 0, 796, 513, 797, 798, 799, 794, 795, 2528,
	0, 1640, 0, 800, 801, 0, 802, 803, 804, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 346,
	348, 347, 349, 350, 351, 352, 0, 353, 354, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 356, 0,
	355, 0, 357, 358, 359, 0, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 0, 0, 368, 0, 369,
	0, 0, 0, 370, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 0, 0, 0, 380, 0, 0, 0,
	0, 381, 382, 383, 384, 0, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 0, 394,
	395, 396, 393, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 0, 0, 0, 0, 0, 1642,
	413, 414, 415, 416, 417, 0, 418, 420, 421, 0,
	422, 0, 0, 425, 427, 419, 423, 0, 426, 424,
	428, 429, 0, 430, 431, 432, 433, 0, 0, 434,
	435, 436, 0, 437, 438, 440, 439, 0, 441, 442,
	443, 0, 444, 445, 0, 446, 447, 448, 450, 452,
	449, 451, 453, 454, 455, 456, 457, 0, 0, 458,
	459, 0, 0, 0, 0, 0, 0, 0, 460, 461,
	462, 0, 0, 0, 0, 463, 0, 465, 469, 466,
	467, 468, 470, 0, 464, 471, 472, 0, 0, 473,
	474, 475, 0, 0, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 0, 485, 486, 0, 0, 0, 487,
	0, 488, 489, 490, 491, 492, 493, 494, 0, 0,
	0, 595, 0, 495, 496, 497, 0, 498, 499, 500,
	501, 502, 503, 504, 0, 0, 0, 505, 506, 507,
	508, 0, 0, 0, 0, 0, 0, 509, 596, 510,
	0, 0, 0, 0, 0, 511, 512, 515, 0, 0,
	0, 514, 516, 517, 0, 518, 0, 0, 0, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 528, 527,
	0, 530, 0, 529, 0, 531, 532, 0, 0, 533,
	534, 535, 536, 537, 538, 541, 0, 0, 539, 540,
	542, 543, 0, 544, 545, 547, 550, 546, 548, 549,
	551, 552, 565, 566, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 568, 0, 567, 0,
	569, 570, 571, 572, 573, 581, 583, 584, 579, 580,
	582, 585, 586, 588, 589, 576, 577, 578, 0, 587,
	574, 0, 575, 0, 0, 590, 591, 592, 593, 0,
	0, 594, 0, 597, 598, 0, 0, 599, 0, 600,
	0, 0, 602, 603, 604, 0, 0, 605, 606, 0,
	0, 607, 0, 0, 608, 609, 601, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 0, 620, 621,
	0, 622, 623, 624, 0, 625, 626, 627, 0, 628,
	0, 629, 630, 0, 631, 632, 633, 0, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 0, 644,
	645, 647, 646, 648, 649, 0, 650, 0, 651, 652,
	653, 0, 0, 0, 0, 0, 654, 655, 657, 0,
	658, 659, 660, 661, 662, 656, 663, 664, 665, 666,
	667, 668, 669, 0, 671, 672, 670, 673, 674, 0,
	675, 676, 677, 678, 679, 0, 680, 0, 681, 682,
	690, 691, 692, 683, 684, 686, 693, 685, 694, 695,
	696, 697, 699, 698, 0, 701, 702, 700, 703, 704,
	705, 706, 1643, 707, 0, 708, 687, 688, 709, 710,
	711, 0, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 0, 0, 721, 0, 722, 723, 724, 725, 726,
	727, 729, 689, 730, 731, 732, 737, 738, 0, 733,
	734, 735, 736, 0, 740, 741, 742, 743, 0, 744,
	745, 0, 739, 728, 0, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 0, 756, 0, 0, 0,
	0, 0, 768, 0, 757, 759, 760, 761, 762, 0,
	763, 0, 0, 764, 765, 766, 767, 758, 769, 770,
	0, 0, 771, 772, 773, 774, 776, 778, 779, 780,
	775, 777, 781, 0, 782, 0, 0, 783, 784, 785,
	0, 0, 0, 0, 787, 788, 786, 789, 790, 793,
	791, 792, 0, 796, 513, 797, 798, 799, 794, 795,
	2481, 0, 1640, 0, 800, 801, 0, 802, 803, 804,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	346, 348, 347, 349, 350, 351, 352, 0, 353, 354,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 356,
	0, 355, 0, 357, 358, 359, 0, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 0, 0, 368, 0,
	369, 0, 0, 0, 370, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 0, 0, 0, 380, 0, 0,
	0, 0, 381, 382, 383, 384, 0, 0, 0, 0,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 0,
	394, 395, 396, 393, 397, 398, 0, 399, 0, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 412, 0, 0, 0, 0, 0, 0,
	1642, 413, 414, 415, 416, 417, 0, 418, 420, 421,
	0, 422, 0, 0, 425, 427, 419, 423, 0, 426,
	424, 428, 429, 0, 430, 431, 432, 433, 0, 0,
	434, 435, 436, 0, 437, 438, 440, 439, 0, 441,
	442, 443, 0, 444, 445, 0, 446, 447, 448, 450,
	452, 449, 451, 453, 454, 455, 456, 457, 0, 0,
	458, 459, 0, 0, 0, 0, 0, 0, 0, 460,
	461, 462, 0, 0, 0, 0, 463, 0, 465, 469,
	466, 467, 468, 470, 0, 464, 471, 472, 0, 0,
	473, 474, 475, 0, 0, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 486, 0, 0, 0,
	487, 0, 488, 489, 490, 491, 492, 493, 494, 0,
	0, 0, 595, 0, 495, 496, 497, 0, 498, 499,
	500, 501, 502, 503, 504, 0, 0, 0, 505, 506,
	507, 508, 0, 0, 0, 0, 0, 0, 509, 596,
	510, 0, 0, 0, 0, 0, 511, 512, 515, 0,
	0, 0, 514, 516, 517, 0, 518, 0, 0, 0,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 528,
	527, 0, 530, 0, 529, 0, 531, 532, 0, 0,
	533, 534, 535, 536, 537, 538, 541, 0, 0, 539,
	540, 542, 543, 0, 544, 545, 547, 550, 546, 548,
	549, 551, 552, 565, 566, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 568, 0, 567,
	0, 569, 570, 571, 572, 573, 581, 583, 584, 579,
	580, 582, 585, 586, 588, 589, 576, 577, 578, 0,
	587, 574, 0, 575, 0, 0, 590, 591, 592, 593,
	0, 0, 594, 0, 597, 598, 0, 0, 599, 0,
	600, 0, 0, 602, 603, 604, 0, 0, 605, 606,
	0, 0, 607, 0, 0, 608, 609, 601, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 0, 620,
	621, 0, 622, 623, 624, 0, 625, 626, 627, 0,
	628, 0, 629, 630, 0, 631, 632, 633, 0, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 647, 646, 648, 649, 0, 650, 0, 651,
	652, 653, 0, 0, 0, 0, 0, 654, 655, 657,
	0, 658, 659, 660, 661, 662, 656, 663, 664, 665,
	666, 667, 668, 669, 0, 671, 672, 670, 673, 674,
	0, 675, 676, 677, 678, 679, 0, 680, 0, 681,
	682, 690, 691, 692, 683, 684, 686, 693, 685, 694,
	695, 696, 697, 699, 698, 0, 701, 702, 700, 703,
	704, 705, 706, 1643, 707, 0, 708, 687, 688, 709,
	710, 711, 0, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 0, 0, 721, 0, 722, 723, 724, 725,
	726, 727, 729, 689, 730, 731, 732, 737, 738, 0,
	733, 734, 735, 736, 0, 740, 741, 742, 743, 0,
	744, 745, 0, 739, 728, 0, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 0, 756, 0, 0,
	0, 0, 0, 768, 0, 757, 759, 760, 761, 762,
	0, 763, 0, 0, 764, 765, 766, 767, 758, 769,
	770, 0, 0, 771, 772, 773, 774, 776, 778, 779,
	780, 775, 777, 781, 0, 782, 0, 0, 783, 784,
	785, 0, 0, 0, 0, 787, 788, 786, 789, 790,
	793, 791, 792, 0, 796, 513, 797, 798, 799, 794,
	795, 1640, 0, 0, 0, 800, 801, 0, 802, 803,
	804, 0, 0, 0, 0, 0, 0, 0, 345, 346,
	348, 347, 349, 350, 351, 352, 0, 353, 354, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 356, 0,
	355, 0, 357, 358, 359, 0, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 0, 0, 368, 0, 369,
	0, 0, 0, 370, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 0, 0, 0, 380, 0, 0, 0,
	0, 381, 382, 383, 384, 0, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 0, 394,
	395, 396, 393, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 412, 0, 0, 0, 0, 0, 0, 1642,
	413, 414, 415, 416, 417, 0, 418, 420, 421, 0,
	422, 0, 0, 425, 427, 419, 423, 0, 426, 424,
	428, 429, 0, 430, 431, 432, 433, 0, 0, 434,
	435, 436, 0, 437, 438, 440, 439, 0, 441, 442,
	443, 0, 444, 445, 0, 446, 447, 448, 450, 452,
	449, 451, 453, 454, 455, 456, 457, 0, 0, 458,
	459, 0, 0, 0, 0, 0, 0, 0, 460, 461,
	462, 0, 0, 0, 0, 463, 0, 465, 469, 466,
	467, 468, 470, 0, 464, 471, 472, 0, 0, 473,
	474, 475, 0, 0, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 0, 485, 486, 0, 0, 0, 487,
	0, 488, 489, 490, 491, 492, 493, 494, 0, 0,
	0, 595, 0, 495, 496, 497, 0, 498, 499, 500,
	501, 502, 503, 504, 0, 0, 0, 505, 506, 507,
	508, 0, 0, 0, 0, 0, 0, 509, 596, 510,
	0, 0, 0, 0, 0, 511, 512, 515, 0, 0,
	0, 514, 516, 517, 0, 518, 0, 0, 0, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 528, 527,
	0, 530, 0, 529, 0, 531, 532, 0, 0, 533,
	534, 535, 536, 537, 538, 541, 0, 0, 539, 540,
	542, 543, 0, 544, 545, 547, 550, 546, 548, 549,
	551, 552, 565, 566, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 568, 0, 567, 0,
	569, 570, 571, 572, 573, 581, 583, 584, 579, 580,
	582, 585, 586, 588, 589, 576, 577, 578, 0, 587,
	574, 0, 575, 0, 0, 590, 591, 592, 593, 0,
	0, 594, 0, 597, 598, 0, 0, 599, 0, 600,
	0, 0, 602, 603, 604, 0, 0, 605, 606, 0,
	0, 607, 0, 0, 608, 609, 601, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 0, 620, 621,
	0, 622, 623, 624, 0, 625, 626, 627, 0, 628,
	0, 629, 630, 0, 631, 632, 633, 0, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 0, 644,
	645, 647, 646, 648, 649, 0, 650, 0, 651, 652,
	653, 0, 0, 0, 0, 0, 654, 655, 657, 0,
	658, 659, 660, 661, 662, 656, 663, 664, 665, 666,
	667, 668, 669, 0, 671, 672, 670, 673, 674, 0,
	675, 676, 677, 678, 679, 0, 680, 0, 681, 682,
	690, 691, 692, 683, 684, 686, 693, 685, 694, 695,
	696, 697, 699, 698, 0, 701, 702, 700, 703, 704,
	705, 706, 1643, 707, 0, 708, 687, 688, 709, 710,
	711, 0, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 0, 0, 721, 0, 722, 723, 724, 725, 726,
	727, 729, 689, 730, 731, 732, 737, 738, 0, 733,
	734, 735, 736, 0, 740, 741, 742, 743, 0, 744,
	745, 0, 739, 728, 0, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 0, 756, 0, 0, 0,
	0, 0, 768, 0, 757, 759, 760, 761, 762, 0,
	763, 0, 0, 764, 765, 766, 767, 758, 769, 770,
	0, 0, 771, 772, 773, 774, 776, 778, 779, 780,
	775, 777, 781, 0, 782, 0, 0, 783, 784, 785,
	0, 0, 0, 0, 787, 788, 786, 789, 790, 793,
	791, 792, 0, 796, 513, 797, 798, 799, 794, 795,
	0, 0, 0, 0, 800, 801, 0, 802, 803, 804,
	2187, 2188, 0, 2221, 2222, 2223, 2232, 2233, 2234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2225, 2218, 0, 0, 0, 0, 0,
	0, 2219, 0, 0, 2190, 0, 0, 2187, 2188, 0,
	2221, 2222, 2223, 2232, 2233, 2234, 2238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2225, 2218, 0, 0, 0, 0, 0, 2244, 2219, 0,
	0, 2190, 0, 0, 0, 0, 0, 0, 2189, 0,
	0, 0, 0, 2238, 0, 0, 0, 0, 0, 2209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2206,
	0, 0, 0, 0, 2244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2206, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2187, 2188, 0, 2221, 2222, 2223, 2232, 2233, 2234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2225, 2218, 2212, 2213, 2214, 2215,
	0, 0, 2219, 0, 0, 2190, 2195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2212, 2213, 2214, 2215, 0, 2244, 0,
	0, 0, 0, 2195, 0, 0, 0, 0, 0, 2189,
	0, 0, 0, 0, 2229, 0, 0, 0, 2239, 0,
	2209, 0, 0, 0, 0, 0, 0, 2217, 2220, 0,
	2206, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2235, 2229, 2236, 0, 0, 2239, 0, 0, 0, 2204,
	2205, 0, 0, 0, 2217, 2220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2227,
	0, 0, 0, 0, 0, 0, 0, 2235, 0, 2236,
	0, 0, 0, 0, 2210, 0, 2204, 2205, 0, 0,
	0, 0, 2187, 2188, 0, 2221, 2222, 2223, 2232, 2233,
	2234, 0, 0, 0, 0, 0, 2227, 2212, 2213, 2214,
	2215, 0, 0, 0, 0, 2225, 2218, 2195, 0, 0,
	0, 2210, 0, 2219, 0, 0, 2190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2237, 0, 2238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2226, 0, 2244,
	0, 0, 0, 0, 0, 2229, 0, 0, 2241, 2239,
	2189, 0, 0, 2237, 0, 0, 0, 0, 2217, 2220,
	0, 2209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2206, 0, 0, 2226, 0, 0, 0, 0, 0,
	0, 2235, 0, 2236, 0, 2241, 0, 0, 0, 0,
	2204, 2205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2227, 2216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2211,
	0, 0, 0, 0, 0, 0, 0, 0, 2216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2212, 2213,
	2214, 2215, 0, 0, 0, 0, 0, 0, 2195, 0,
	0, 0, 0, 2230, 0, 0, 2211, 2237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2241,
	2230, 0, 0, 2243, 0, 0, 2229, 0, 0, 0,
	2239, 0, 0, 0, 0, 0, 0, 0, 0, 2217,
	2220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2243, 0, 2235, 0, 2236, 0, 0, 0, 0, 0,
	0, 2204, 2205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2216, 0, 0, 0, 0, 0, 0, 0,
	0, 2227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2210, 0, 0, 0,
	2211, 0, 2228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2201, 2202, 2208, 2231, 2207,
	2203, 0, 2200, 2198, 2199, 2191, 2192, 2193, 2194, 2196,
	2197, 0, 0, 0, 2230, 0, 5718, 0, 0, 2228,
	0, 0, 0, 0, 0, 0, 0, 0, 2237, 0,
	0, 0, 2201, 2202, 2208, 2231, 2207, 2203, 0, 2200,
	2198, 2199, 2191, 2192, 2193, 2194, 2196, 2197, 0, 2226,
	0, 0, 0, 5717, 2243, 0, 0, 0, 0, 0,
	2241, 0, 0, 2187, 2188, 0, 2221, 2222, 2223, 2232,
	2233, 2234, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2225, 2218, 0, 0,
	0, 0, 0, 0, 2219, 0, 0, 2190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2216, 0, 0, 0, 0, 0, 0,
	2244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2189, 0, 2228, 0, 0, 0, 0, 0, 0,
	0, 2211, 2209, 0, 0, 0, 2201, 2202, 2208, 2231,
	2207, 2203, 2206, 2200, 2198, 2199, 2191, 2192, 2193, 2194,
	2196, 2197, 0, 0, 0, 0, 0, 5253, 0, 0,
	0, 0, 0, 0, 0, 2230, 0, 2187, 2188, 0,
	2221, 2222, 2223, 2232, 2233, 2234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2225, 2218, 0, 0, 0, 0, 0, 0, 2219, 0,
	0, 2190, 0, 0, 0, 2243, 0, 0, 0, 0,
	0, 0, 0, 2238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2212,
	2213, 2214, 2215, 0, 2244, 0, 0, 0, 0, 2195,
	0, 0, 0, 0, 0, 2189, 2187, 2188, 0, 2221,
	2222, 2223, 2232, 2233, 2234, 0, 2209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2206, 0, 0, 2225,
	2218, 0, 0, 0, 0, 0, 0, 2219, 0, 0,
	2190, 0, 0, 0, 0, 0, 0, 2229, 0, 0,
	0, 2239, 2238, 0, 2228, 0, 0, 0, 0, 0,
	2217, 2220, 0, 0, 0, 0, 0, 2201, 2202, 2208,
	2231, 2207, 2203, 2244, 2200, 2198, 2199, 2191, 2192, 2193,
	2194, 2196, 2197, 2235, 2189, 2236, 0, 0, 4584, 0,
	0, 0, 2204, 2205, 0, 2209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2206, 0, 0, 0, 0,
	0, 0, 2227, 2212, 2213, 2214, 2215, 0, 0, 0,
	0, 0, 0, 2195, 0, 0, 0, 2210, 0, 0,
	2187, 2188, 0, 2221, 2222, 2223, 2232, 2233, 2234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2225, 2218, 0, 0, 0, 0, 0,
	0, 2219, 0, 0, 2190, 0, 0, 0, 0, 0,
	0, 2229, 0, 0, 0, 2239, 2238, 0, 0, 2237,
	0, 0, 0, 0, 2217, 2220, 0, 0, 0, 0,
	0, 0, 2212, 2213, 2214, 2215, 0, 2244, 0, 0,
	2226, 0, 2195, 0, 0, 0, 0, 2235, 2189, 2236,
	0, 2241, 0, 0, 0, 0, 2204, 2205, 0, 2209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2206,
	0, 0, 0, 0, 0, 0, 2227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2229, 2210, 0, 0, 2239, 0, 0, 0, 0, 0,
	0, 0, 0, 2217, 2220, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2235, 0, 2236, 0,
	0, 0, 0, 0, 0, 2204, 2205, 0, 0, 0,
	0, 0, 2211, 2237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2227, 2212, 2213, 2214, 2215,
	0, 0, 0, 0, 2226, 0, 2195, 0, 0, 0,
	2210, 0, 0, 0, 0, 2241, 2230, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2229, 0, 2243, 0, 2239, 0,
	0, 0, 2237, 0, 0, 0, 0, 2217, 2220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2216, 0,
	0, 0, 0, 2226, 0, 0, 0, 0, 0, 0,
	2235, 0, 2236, 0, 2241, 0, 0, 0, 0, 2204,
	2205, 0, 0, 0, 0, 0, 2211, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2210, 0, 0, 0, 0, 0,
	2230, 0, 0, 0, 0, 2228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2216, 2201, 2202,
	2208, 2231, 2207, 2203, 0, 2200, 2198, 2199, 2191, 2192,
	2193, 2194, 2196, 2197, 0, 0, 0, 0, 0, 4583,
	2243, 0, 0, 0, 0, 2211, 2237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2241, 2230,
	0, 2187, 2188, 0, 2221, 2222, 2223, 2232, 2233, 2234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2225, 2218, 0, 0, 0, 0,
	0, 0, 2219, 0, 0, 2190, 0, 0, 0, 2243,
	0, 0, 0, 0, 0, 0, 0, 2238, 0, 2228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2216, 2201, 2202, 2208, 2231, 2207, 2203, 2244, 2200,
	2198, 2199, 2191, 2192, 2193, 2194, 2196, 2197, 0, 2189,
	0, 0, 0, 4582, 0, 0, 0, 0, 0, 2211,
	2209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2206, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2230, 0, 0, 0, 0, 2228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2201, 2202, 2208, 2231, 2207, 2203, 0, 2200, 2198,
	2199, 2191, 2192, 2193, 2194, 2196, 2197, 0, 0, 0,
	0, 0, 4581, 2243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2212, 2213, 2214,
	2215, 0, 0, 0, 0, 0, 0, 2195, 0, 0,
	0, 0, 0, 0, 2187, 2188, 0, 2221, 2222, 2223,
	2232, 2233, 2234, 0, 0, 0, 0, 0, 2852, 0,
	0, 0, 0, 0, 0, 0, 0, 2225, 2218, 0,
	0, 0, 0, 0, 0, 2219, 0, 0, 2190, 0,
	0, 0, 0, 0, 0, 2229, 0, 0, 0, 2239,
	2238, 0, 2228, 0, 0, 0, 0, 0, 2217, 2220,
	0, 0, 0, 0, 0, 2201, 2202, 2208, 2231, 2207,
	2203, 2244, 2200, 2198, 2199, 2191, 2192, 2193, 2194, 2196,
	2197, 2235, 2189, 2236, 4552, 0, 0, 0, 0, 0,
	2204, 2205, 0, 2209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2206, 0, 0, 0, 0, 0, 0,
	2227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2210, 0, 0, 2187, 2188,
	0, 2221, 2222, 2223, 2232, 2233, 2234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2225, 2218, 0, 0, 0, 0, 2853, 0, 2219,
	0, 0, 2190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2238, 0, 0, 2237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2212, 2213, 2214, 2215, 0, 2244, 0, 0, 2226, 0,
	2195, 0, 0, 0, 0, 0, 2189, 0, 0, 2241,
	0, 0, 0, 0, 0, 0, 0, 2209, 0, 0,
	0, 2747, 0, 0, 0, 0, 0, 2206, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2229, 0,
	0, 0, 2239, 0, 0, 0, 0, 0, 0, 0,
	0, 2217, 2220, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2235, 0, 2236, 0, 0, 0,
	0, 0, 0, 2204, 2205, 0, 0, 0, 0, 0,
	2211, 2745, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2227, 2212, 2213, 2214, 2215, 0, 0,
	0, 0, 0, 0, 2195, 0, 0, 0, 2210, 0,
	0, 0, 0, 0, 2230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2229, 0, 2243, 0, 2239, 0, 0, 0,
	2237, 0, 0, 0, 0, 2217, 2220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2226, 0, 0, 0, 0, 0, 0, 2235, 0,
	2236, 0, 2241, 0, 0, 0, 0, 2204, 2205, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2216, 2201, 2202, 2208, 2231,
	2207, 2203, 0, 2200, 2198, 2199, 2191, 2192, 2193, 2194,
	2196, 2197, 0, 0, 0, 4040, 0, 0, 0, 0,
	0, 0, 0, 2211, 2237, 0, 0, 0, 0, 0,
	0, 2187, 2188, 0, 2221, 2222, 2223, 2232, 2233, 2234,
	0, 0, 0, 0, 0, 2226, 0, 0, 0, 2854,
	0, 0, 0, 0, 2225, 2218, 2241, 2230, 0, 0,
	0, 0, 2219, 0, 0, 2190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2243, 2244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2189,
	0, 0, 0, 0, 0, 0, 0, 0, 2746, 2216,
	2209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2206, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2855, 2211, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2230, 0, 0, 0, 0, 2228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2201,
	2202, 2208, 2231, 2207, 2203, 0, 2200, 2198, 2199, 2191,
	2192, 2193, 2194, 2196, 2197, 0, 0, 2212, 2213, 2214,
	2215, 2243, 0, 0, 0, 0, 0, 2195, 6666, 0,
	0, 0, 0, 2744, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2229, 0, 0, 0, 2239,
	0, 0, 0, 0, 0, 0, 0, 0, 2217, 2220,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2228, 2235, 0, 2236, 0, 0, 0, 0, 0, 0,
	2204, 2205, 0, 2201, 2202, 2208, 2231, 2207, 2203, 0,
	2200, 2198, 2199, 2191, 2192, 2193, 2194, 2196, 2197, 186,
	2227, 0, 0, 0, 0, 0, 0, 0, 90, 0,
	55, 54, 0, 0, 0, 2210, 0, 0, 0, 2187,
	2188, 0, 2221, 2222, 2223, 2232, 2233, 2234, 0, 91,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2225, 2218, 0, 0, 0, 56, 0, 96,
	2219, 0, 0, 2190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 77, 0, 2238, 0, 2237, 0, 0,
	0, 58, 0, 184, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2244, 0, 2226, 0,
	0, 0, 0, 57, 0, 0, 106, 2189, 0, 2241,
	0, 0, 0, 0, 0, 0, 0, 0, 2209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2206, 0,
	0, 0, 6665, 0, 0, 0, 60, 78, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 61, 0, 0,
	0, 0, 67, 0, 0, 0, 0, 0, 6629, 0,
	0, 0, 0, 0, 0, 0, 59, 0, 130, 0,
	0, 0, 2216, 0, 114, 127, 0, 0, 0, 0,
	0, 0, 0, 0, 79, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2211, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2212, 2213, 2214, 2215, 0,
	0, 0, 0, 0, 62, 2195, 0, 4649, 0, 0,
	0, 0, 0, 0, 2230, 0, 0, 0, 4648, 0,
	0, 0, 0, 0, 0, 0, 115, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2229, 2243, 0, 0, 2239, 0, 0,
	0, 0, 0, 0, 0, 0, 2217, 2220, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2235,
	0, 2236, 0, 0, 0, 0, 0, 0, 2204, 2205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 80, 0, 0, 0, 2227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2201, 2202, 2208, 2231,
	2207, 2203, 0, 2200, 2198, 2199, 2191, 2192, 2193, 2194,
	2196, 2197, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2237, 0, 0, 0, 0,
	0, 0, 0, 0, 119, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2226, 0, 0, 0,
	0, 0, 63, 0, 0, 0, 0, 2241, 0, 0,
	2187, 2188, 0, 2221, 2222, 2223, 2232, 2233, 2234, 0,
	0, 66, 0, 0, 0, 0, 0, 69, 0, 0,
	0, 0, 0, 2225, 2218, 0, 0, 81, 0, 4522,
	0, 2219, 0, 0, 2190, 0, 68, 229, 0, 122,
	0, 0, 126, 0, 0, 6247, 2238, 0, 0, 64,
	0, 0, 0, 185, 0, 0, 0, 0, 0, 0,
	2216, 65, 0, 0, 0, 0, 0, 2244, 0, 0,
	0, 0, 0, 0, 0, 295, 0, 0, 2189, 0,
	0, 0, 0, 0, 72, 0, 0, 0, 2211, 2209,
	0, 83, 0, 0, 0, 0, 0, 0, 0, 2206,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 0, 0, 0,
	0, 0, 0, 0, 4523, 0, 0, 0, 2187, 2188,
	0, 2221, 2222, 2223, 2232, 2233, 2234, 0, 0, 0,
	0, 0, 2243, 0, 182, 0, 0, 0, 0, 0,
	0, 2225, 2218, 0, 82, 0, 0, 0, 0, 2219,
	0, 0, 2190, 235, 0, 0, 2212, 2213, 2214, 2215,
	0, 296, 0, 0, 2238, 0, 2195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 2244, 0, 0, 0, 0,
	0, 0, 0, 290, 0, 0, 2189, 230, 0, 0,
	0, 0, 0, 234, 0, 0, 0, 2209, 0, 0,
	0, 0, 0, 0, 2229, 0, 0, 2206, 2239, 0,
	0, 2228, 0, 0, 233, 0, 0, 2217, 2220, 0,
	0, 0, 0, 0, 2201, 2202, 2208, 2231, 2207, 2203,
	0, 2200, 2198, 2199, 2191, 2192, 2193, 2194, 2196, 2197,
	2235, 0, 2236, 0, 0, 0, 0, 0, 0, 2204,
	2205, 0, 0, 0, 0, 0, 2187, 2188, 0, 2221,
	2222, 2223, 2232, 2233, 2234, 0, 0, 0, 0, 2227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2225,
	2218, 0, 0, 0, 2210, 0, 0, 2219, 0, 0,
	2190, 0, 0, 0, 2212, 2213, 2214, 2215, 0, 0,
	0, 0, 2238, 0, 2195, 0, 6201, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2189, 0, 2237, 0, 0, 0,
	0, 0, 0, 0, 0, 2209, 0, 0, 0, 0,
	0, 0, 2229, 0, 0, 2206, 2239, 2226, 0, 0,
	0, 0, 0, 0, 0, 2217, 2220, 0, 2241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2235, 0,
	2236, 0, 0, 0, 0, 0, 0, 2204, 2205, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2216, 2210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2212, 2213, 2214, 2215, 0, 0, 0, 0,
	0, 0, 2195, 0, 0, 0, 0, 0, 0, 2211,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2237, 0, 0, 0, 0, 0,
	0, 0, 0, 2230, 0, 0, 0, 0, 0, 0,
	2229, 0, 0, 0, 2239, 2226, 0, 0, 0, 0,
	0, 0, 0, 2217, 2220, 0, 2241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2243, 0, 0, 2235, 0, 2236, 0,
	0, 0, 0, 0, 0, 2204, 2205, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2216,
	2210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2211, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2237, 0, 0, 2201, 2202, 2208, 2231, 2207,
	2203, 2230, 2200, 2198, 2199, 2191, 2192, 2193, 2194, 2196,
	2197, 0, 0, 2226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2241, 0, 0, 2187, 2188, 0,
	2221, 2222, 2223, 2232, 2233, 2234, 0, 0, 0, 0,
	0, 2243, 0, 0, 0, 0, 0, 0, 0, 0,
	2225, 2218, 0, 0, 0, 0, 0, 0, 2219, 0,
	0, 2190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2216, 0, 0,
	0, 0, 0, 0, 2244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2211, 2209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2206, 0, 0, 0,
	2228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2201, 2202, 2208, 2231, 2207, 2203, 2230,
	2200, 2198, 2199, 2191, 2192, 2193, 2194, 2196, 2197, 0,
	2187, 2188, 0, 2221, 2222, 2223, 2232, 2233, 2234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2225, 2218, 0, 0, 0, 0, 2243,
	0, 2219, 0, 0, 2190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2238, 0, 0, 5904,
	0, 0, 0, 2212, 2213, 2214, 2215, 0, 0, 0,
	0, 0, 0, 2195, 0, 0, 0, 2244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2206,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2229, 0, 0, 0, 2239, 0, 0, 2228, 0,
	0, 0, 0, 0, 2217, 2220, 0, 0, 0, 0,
	0, 2201, 2202, 2208, 2231, 2207, 2203, 0, 2200, 2198,
	2199, 2191, 2192, 2193, 2194, 2196, 2197, 2235, 0, 2236,
	0, 0, 0, 0, 0, 0, 2204, 2205, 0, 0,
	0, 2187, 2188, 0, 2221, 2222, 2223, 2232, 2233, 2234,
	0, 0, 0, 0, 0, 0, 2227, 0, 0, 0,
	0, 0, 0, 0, 2225, 2218, 2212, 2213, 2214, 2215,
	0, 2210, 2219, 0, 0, 2190, 2195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2189,
	0, 0, 0, 2237, 2229, 0, 0, 0, 2239, 0,
	2209, 0, 0, 0, 0, 0, 0, 2217, 2220, 0,
	2206, 0, 0, 0, 2226, 3944, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2241, 0, 0, 0, 0,
	2235, 0, 2236, 0, 0, 0, 0, 0, 0, 2204,
	2205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2216, 0,
	0, 0, 0, 0, 0, 0, 0, 2212, 2213, 2214,
	2215, 0, 0, 0, 0, 0, 0, 2195, 0, 5510,
	0, 0, 0, 0, 0, 0, 2211, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2226, 0, 0,
	2230, 0, 0, 0, 0, 2229, 0, 0, 2241, 2239,
	0, 0, 0, 0, 0, 0, 0, 0, 2217, 2220,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2243, 2235, 0, 2236, 0, 0, 0, 0, 0, 0,
	2204, 2205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2227, 2216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2211,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2228,
	0, 0, 0, 2230, 0, 0, 0, 2237, 0, 0,
	0, 0, 2201, 2202, 2208, 2231, 2207, 2203, 0, 2200,
	2198, 2199, 2191, 2192, 2193, 2194, 2196, 2197, 2226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2241,
	0, 0, 0, 2243, 2187, 2188, 0, 2221, 2222, 2223,
	2232, 2233, 2234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 5511, 0, 0, 0, 2225, 2218, 0,
	0, 0, 0, 0, 0, 2219, 0, 0, 2190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2216, 0, 0, 0, 0, 0, 0, 0,
	0, 2244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2189, 0, 0, 0, 0, 0, 0, 0,
	2211, 0, 2228, 2209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2206, 0, 2201, 2202, 2208, 2231, 2207,
	2203, 0, 2200, 2198, 2199, 2191, 2192, 2193, 2194, 2196,
	2197, 0, 0, 0, 2230, 0, 0, 0, 2187, 2188,
	0, 2221, 2222, 2223, 2232, 2233, 2234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2225, 2218, 0, 0, 0, 0, 0, 0, 2219,
	0, 0, 2190, 0, 2243, 2187, 2188, 0, 2221, 2222,
	2223, 2232, 2233, 2234, 2238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2225, 2218,
	2212, 2213, 2214, 2215, 0, 2244, 2219, 0, 0, 2190,
	2195, 0, 0, 0, 0, 0, 2189, 0, 0, 0,
	0, 2238, 0, 0, 0, 0, 0, 2209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2206, 0, 0,
	0, 0, 2244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2189, 0, 0, 0, 0, 2229, 0,
	0, 0, 2239, 2228, 2209, 0, 0, 0, 0, 0,
	0, 2217, 2220, 0, 2206, 0, 2201, 2202, 2208, 2231,
	2207, 2203, 0, 2200, 2198, 2199, 2191, 2192, 2193, 2194,
	2196, 2197, 0, 0, 2235, 0, 2236, 0, 0, 0,
	0, 0, 0, 2204, 2205, 0, 0, 0, 0, 2187,
	2188, 0, 2221, 2222, 2223, 2232, 2233, 2234, 0, 0,
	0, 0, 0, 2227, 2212, 2213, 2214, 2215, 0, 0,
	0, 0, 2225, 2218, 2195, 0, 0, 4650, 2210, 0,
	2219, 0, 0, 2190, 0, 0, 0, 4655, 0, 0,
	0, 0, 0, 0, 0, 2238, 0, 0, 0, 0,
	0, 2212, 2213, 2214, 2215, 0, 0, 0, 0, 0,
	0, 2195, 0, 0, 0, 0, 2244, 0, 0, 0,
	0, 0, 2229, 0, 0, 0, 2239, 2189, 0, 0,
	2237, 0, 0, 0, 0, 2217, 2220, 0, 2209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2206, 0,
	0, 2226, 0, 0, 0, 0, 0, 0, 2235, 2229,
	2236, 0, 2241, 2239, 0, 0, 0, 2204, 2205, 0,
	0, 0, 2217, 2220, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2227, 0, 0,
	0, 0, 0, 0, 0, 2235, 0, 2236, 0, 0,
	0, 0, 2210, 0, 2204, 2205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2227, 2216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2212, 2213, 2214, 2215, 2210,
	0, 0, 0, 0, 0, 2195, 0, 0, 0, 0,
	0, 0, 0, 2211, 2237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2241, 2230, 0, 0,
	0, 2237, 0, 2229, 0, 0, 0, 2239, 0, 0,
	0, 0, 0, 0, 0, 0, 2217, 2220, 0, 0,
	0, 0, 2226, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2241, 0, 0, 0, 2243, 0, 2235,
	0, 2236, 0, 0, 4615, 0, 0, 0, 2204, 2205,
	0, 5234, 0, 0, 0, 0, 0, 0, 0, 2216,
	0, 0, 0, 0, 0, 0, 0, 0, 2227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2210, 0, 0, 0, 2211, 0, 0,
	0, 0, 0, 0, 0, 0, 2216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2230, 0, 0, 2211, 0, 2228, 0, 0, 0,
	0, 0, 0, 0, 0, 2237, 0, 0, 0, 2201,
	2202, 2208, 2231, 2207, 2203, 0, 2200, 2198, 2199, 2191,
	2192, 2193, 2194, 2196, 2197, 0, 2226, 0, 2230, 0,
	0, 2243, 0, 0, 0, 0, 0, 2241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2228, 0, 0, 0, 0, 0, 0, 0, 2211, 0,
	0, 0, 0, 2201, 2202, 2208, 2231, 2207, 2203, 0,
	2200, 2198, 2199, 2191, 2192, 2193, 2194, 2196, 2197, 0,
	0, 0, 0, 0, 0, 0, 0, 2228, 0, 0,
	0, 0, 2230, 0, 0, 0, 0, 0, 0, 0,
	2201, 2202, 2208, 2231, 2207, 2203, 0, 2200, 2198, 2199,
	2191, 2192, 2193, 2194, 2196, 2197, 2187, 2188, 0, 2221,
	2222, 2223, 2232, 2233, 2234, 0, 0, 0, 0, 0,
	0, 0, 2243, 0, 0, 0, 0, 0, 0, 2225,
	2218, 0, 0, 0, 4585, 0, 0, 2219, 0, 0,
	2190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2206, 0, 0, 0, 0,
	0, 2228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2201, 2202, 2208, 2231, 2207, 2203,
	0, 2200, 2198, 2199, 2191, 2192, 2193, 2194, 2196, 2197,
	2187, 2188, 0, 2221, 2222, 2223, 2232, 2233, 2234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2225, 2218, 0, 0, 0, 0, 0,
	0, 2219, 0, 0, 2190, 0, 0, 2187, 2188, 0,
	2221, 2222, 2223, 2232, 2233, 2234, 2238, 0, 0, 0,
	0, 0, 2212, 2213, 2214, 2215, 0, 0, 0, 0,
	2225, 2218, 2195, 0, 0, 0, 0, 2244, 2219, 0,
	0, 2190, 0, 0, 0, 0, 0, 0, 2189, 0,
	0, 0, 0, 2238, 0, 0, 0, 0, 0, 2209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2206,
	0, 0, 0, 0, 2244, 0, 0, 0, 0, 0,
	2229, 0, 0, 0, 2239, 2189, 0, 0, 0, 0,
	0, 0, 0, 2217, 2220, 0, 2209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2206, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2235, 0, 2236, 0,
	0, 0, 0, 0, 0, 2204, 2205, 0, 0, 0,
	0, 2187, 2188, 0, 2221, 2222, 2223, 2232, 2233, 2234,
	0, 0, 0, 0, 0, 2227, 0, 0, 0, 0,
	0, 0, 0, 0, 2225, 2218, 2212, 2213, 2214, 2215,
	2210, 0, 2219, 0, 0, 2190, 2195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2212, 2213, 2214, 2215, 0, 2244, 0,
	0, 0, 0, 2195, 0, 0, 0, 0, 0, 2189,
	0, 0, 2237, 0, 2229, 0, 0, 0, 2239, 0,
	2209, 0, 0, 0, 0, 0, 0, 2217, 2220, 0,
	2206, 0, 0, 2226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2241, 0, 0, 0, 0, 0,
	2235, 2229, 2236, 0, 0, 2239, 0, 0, 0, 2204,
	2205, 0, 0, 0, 2217, 2220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2227,
	0, 0, 0, 0, 0, 0, 0, 2235, 0, 2236,
	0, 0, 0, 0, 2210, 0, 2204, 2205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2216, 0, 0,
	0, 0, 0, 0, 0, 0, 2227, 2212, 2213, 2214,
	2215, 0, 0, 0, 0, 0, 0, 2195, 0, 0,
	0, 2210, 0, 0, 0, 2211, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2226, 0, 2230,
	0, 0, 0, 0, 0, 2229, 0, 0, 2241, 2239,
	0, 0, 0, 2237, 0, 0, 0, 0, 2217, 2220,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2226, 0, 0, 0, 0, 2243,
	0, 2235, 0, 2236, 0, 2241, 0, 0, 0, 0,
	2204, 2205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2227, 2216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2211,
	0, 0, 0, 0, 0, 0, 0, 0, 2216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2228, 0,
	0, 0, 0, 2230, 0, 0, 2211, 2237, 0, 0,
	0, 2201, 2202, 2208, 2231, 2207, 2203, 0, 2200, 2198,
	2199, 2191, 2192, 2193, 2194, 2196, 2197, 0, 2226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2241,
	2230, 0, 0, 2243, 2187, 2188, 0, 2221, 2222, 2223,
	2232, 2233, 2234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2218, 0,
	0, 0, 0, 0, 0, 2219, 0, 0, 2190, 0,
	2243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2216, 0, 0, 0, 0, 0, 0, 0,
	0, 2244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2189, 0, 0, 2978, 0, 0, 0, 0,
	2211, 0, 2228, 2209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2206, 0, 2201, 2202, 2208, 2231, 2207,
	2203, 0, 2200, 2198, 2199, 2191, 2192, 2193, 2194, 2196,
	2197, 0, 2650, 0, 2230, 0, 0, 0, 0, 2228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2201, 2202, 2208, 2231, 2207, 2203, 0, 2200,
	2198, 2199, 2191, 2192, 2193, 2194, 2196, 2197, 0, 0,
	0, 0, 0, 0, 2243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2212, 2213, 2214, 2215, 0, 0, 0, 0, 0, 0,
	2195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2229, 0,
	0, 0, 2239, 2228, 0, 0, 0, 0, 0, 0,
	0, 2217, 2220, 0, 0, 0, 2201, 2202, 2208, 2231,
	2207, 2203, 0, 2200, 2198, 2199, 2191, 2192, 2193, 2194,
	2196, 2197, 0, 0, 2235, 0, 2236, 0, 1030, 0,
	1090, 0, 0, 2204, 2205, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2227, 0, 1038, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2210, 0,
	0, 0, 0, 0, 0, 1055, 0, 1036, 1035, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1057, 0, 0, 0, 0,
	0, 0, 1037, 0, 0, 0, 0, 0, 1040, 0,
	2237, 1051, 0, 1103, 0, 1069, 0, 0, 0, 0,
	0, 0, 0, 0, 1052, 1053, 0, 0, 0, 0,
	0, 0, 0, 0, 1074, 0, 0, 0, 0, 0,
	0, 0, 2241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1091, 1042, 0, 0, 0, 0, 0, 0,
	0, 1043, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1044, 0,
	0, 0, 0, 0, 0, 0, 0, 1084, 0, 0,
	0, 0, 0, 0, 0, 2216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2211, 0, 0, 0, 1085, 0, 1064,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1046, 0, 0, 0, 0, 0,
	0, 0, 0, 1034, 0, 0, 0, 2230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1048, 1049, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2243, 0, 0,
	0, 1058, 1056, 0, 0, 0, 0, 0, 0, 1050,
	0, 0, 0, 0, 1070, 0, 0, 1096, 1095, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1100, 1083, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1092, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2201,
	2202, 2208, 2231, 2207, 2203, 0, 2200, 2198, 2199, 2191,
	2192, 2193, 2194, 2196, 2197, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1041, 0, 0, 1102, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1065, 1039,
	0, 0, 0, 0, 1078, 1079, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1081,
	0, 0, 0, 0, 1030, 0, 1090, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1093,
	1076, 1038, 0, 0, 0, 0, 0, 0, 1101, 1071,
	0, 0, 1061, 1059, 0, 0, 0, 1066, 0, 0,
	0, 1055, 0, 1036, 1035, 1067, 0, 0, 0, 1032,
	0, 1094, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1057, 0, 0, 0, 0, 0, 0, 1037, 0,
	1033, 0, 0, 0, 1040, 0, 0, 0, 0, 1103,
	0, 1069, 0, 1082, 0, 0, 1080, 0, 1068, 1047,
	1052, 1053, 0, 0, 1063, 0, 0, 0, 0, 1088,
	1074, 1087, 0, 0, 0, 0, 1098, 0, 0, 0,
	0, 0, 0, 0, 1072, 0, 1073, 0, 1091, 1042,
	0, 0, 0, 0, 0, 1045, 1097, 1043, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1075, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1044, 0, 0, 0, 0, 0,
	0, 1089, 0, 1084, 0, 0, 0, 1099, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1077, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1086,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1085, 0, 1064, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1046, 0, 0, 0, 0, 0, 0, 0, 0, 1034,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1048, 1049, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1058, 1056, 0,
	0, 0, 0, 0, 0, 1050, 0, 0, 0, 0,
	1070, 0, 0, 1096, 1095, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1100,
	1083, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1092, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1041, 0, 0, 1102,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1065, 1039, 0, 0, 0, 0,
	1078, 1079, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1081, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1093, 1076, 0, 0, 0,
	0, 0, 0, 0, 1101, 1071, 0, 0, 1061, 1059,
	0, 0, 0, 1066, 0, 0, 0, 0, 0, 0,
	0, 1067, 0, 0, 0, 1032, 0, 1094, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1033, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1082,
	0, 0, 1080, 0, 1068, 1047, 0, 0, 0, 0,
	1063, 0, 0, 0, 0, 1088, 0, 1087, 0, 0,
	0, 0, 1098, 0, 0, 0, 0, 0, 0, 0,
	1072, 0, 1073, 0, 0, 0, 0, 0, 0, 0,
	0, 1045, 1097, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1075,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1089, 0, 0,
	0, 0, 0, 1099, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1077, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1086,
}

var sqlPact = [...]int32{
	8241, -1000, -1000, -1000, -1000, -1000, -1000, 385, -1000, -1000,
	-1000, 384, 373, 368, 365, 363, 362, 356, 355, 354,
	351, 349, -1000, -1000, 348, 346, 345, 344, -1000, -1000,
	341, 339, 337, -1000, 334, -1000, -1000, 332, -1000, 330,
	329, 324, -1000, -1000, 321, -1000, 320, -1000, -1000, -1000,
	-1000, 319, 312, 309, 126715, 126054, 84985, 86979, 3060, 163018,
	141890, 2976, 132650, 162357, 131989, 161696, 2920, 15932, 161035, 3625,
	307, -1000, 160374, 306, 304, 303, -1000, 141229, 159713, 137269,
	136608, 2619, 99544, 183726, 2109, 2105, -1000, 302, -1000, -1000,
	9736, 96905, 299, 296, 294, 292, 3809, 289, -1000, 287,
	285, 279, 275, 272, -1000, -1000, 13704, 1971, -1000, 271,
	270, 269, 267, -1000, 508, 135947, 266, 265, 263, 3190,
	260, 259, 92942, 256, 254, 247, 3097, 3746, -1000, -1000,
	2695, -1000, -1000, 244, 241, 238, 237, 236, 235, 232,
	230, 228, 227, 222, 220, 218, 217, -1000, 216, 215,
	214, 210, 209, 207, 206, -1000, 205, 204, 203, -1000,
	197, -1000, 196, 194, 190, 189, 182, 181, 180, 179,
	178, 177, 176, 175, 174, 173, 172, 171, -1000, -1000,
	169, -1000, 2443, 2090, 2089, 2088, 1270, 166, 164, 163,
	162, 161, 160, 159, 158, 153, 151, 150, 147, 145,
	143, 142, 141, 138, 137, 135, 134, 129, 128, 127,
	124, 123, 122, 120, 118, 117, 115, 114, 109, 261,
	108, 107, 106, 103, 102, 101, 100, 95, 93, 3502,
	4475, -1000, 1996, 1076, 1543, 40551, 3858, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 172244,
	163677, 92, -56, 90, -1000, 4223, 1311, 76980, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 471, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 930, -1000, 3671, -1000, -1000, -1000, -1000, -1000,
	-1000, 467, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 653, 191, 2759, 925, -1000, -1000, -1000, 159052,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3059, 10,
	133309, -1000, 2794, -1000, -1000, -1000, -1000, -1000, 923, -1000,
	3058, 2991, 377, 2984, 133309, -1000, -1000, -1000, 4333, 4190,
	125393, 124732, 3283, 4853, 4852, 4851, 4850, 4849, 171585, 2324,
	3364, 4848, 4844, 4843, 4842, 4840, 4839, 4837, -1000, 124071,
	1362, 123410, 122749, 4317, 158393, 122088, 72965, 157732, 174886, 61054,
	1073, 4332, -1000, -1000, 4270, -1000, -1000, -1000, -1000, -1000,
	163677, -1000, 1358, -1000, -1000, 4836, 2641, 922, 140568, -1000,
	-1000, 157071, 2173, -1000, -1000, -1000, 1189, 1463, 44086, 44086,
	44086, 464, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 4329,
	-1000, -1000, -1000, -1000, 163677, 3565, 3565, 1796, 1710, 1710,
	3565, 3565, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	4835, 4834, 4832, 4831, 4828, -1000, -1000, -1000, 1295, 4826,
	-1000, -1000, 2940, 2039, 4542, 3593, 106230, 2638, 1768, 4272,
	3974, 3972, 1911, 2793, 3969, 4825, 3413, 3648, 3968, 3966,
	3963, 1552, 3962, 3956, 1999, 3424, 505, 3415, 39844, 3848,
	2326, 60347, 1949, 1904, 3950, 3942, 3938, 3931, 4593, 4407,
	2773, 2584, 2768, 2604, 109537, 4824, 4823, 4219, 3922, 1893,
	3657, 3908, 2656, -1000, 3814, 1952, 4474, -1000, 74305, 1751,
	461, -1000, -1000, -1000, -1000, -1000, -1000, 461, 1839, -1000,
	-1000, -1000, -1000, -1000, 1690, -1000, -1000, -1000, -1000, -1000,
	-1000, 111520, 33557, 110859, 110198, 121427, 120766, 156410, 59640, 120105,
	119444, 105559, 4821, 4820, 58933, 72294, 4473, 1673, 155749, 174225,
	4472, 4471, 1357, 2787, 1800, -1000, -1000, -1000, -1000, -1000,
	-1000, 57, 98885, 4557, 163677, 4270, -1000, -1000, 458, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 58226, 843, 57519, 818,
	56812, 785, 155088, -1000, -1000, -1000, -1000, -1000, -1000, 104888,
	4188, -1000, 71623, 154427, 1859, 3274, 4816, 4813, 1469, 4812,
	4150, 2306, 4805, 4804, 4801, 4800, 4799, 4798, 4795, 1938,
	153766, 3541, 153105, 2262, 173564, 2636, 1356, 118783, 127374, 3456,
	152444, 1950, 1892, -1000, -1000, -1000, -1000, 4420, 3745, 3744,
	1361, -1000, -1000, -1000, -1000, -1000, -1000, 81641, 3338, 3156,
	-1000, -1000, -1000, -1000, 16889, 184202, 151783, 84323, 127374, 127374,
	-1000, -1000, -1000, -1000, -1000, -1000, 56105, 563, 55398, 1071,
	151122, -1000, -1000, 82313, 3810, 1407, -1000, -1000, -1000, -1000,
	-1000, 150461, 54691, 534, 53984, 1007, 163677, -1000, 3857, 2532,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 112179, -1000, -1000, 1690, -1000, -1000, -1000, 1833,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1996, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2661,
	-1000, 2681, -1000, -1000, -1000, 3299, 4191, 4191, 4191, 4330,
	614, 598, -1000, 261, 1080, 1443, -1000, -1000, 183020, -1000,
	-1000, 61761, 61761, 61761, 61761, 61761, 61761, 61761, 61761, 2924,
	-1000, 921, -1000, -1000, -1000, 972, -1000, 920, 798, 789,
	-1000, -1000, -1000, -1000, -1000, -1000, 916, -1000, -1000, -1000,
	-1000, -1000, -1000, 4522, -1000, 35602, -1000, -1000, -1000, 689,
	915, 61761, 4673, 4672, 1236, -1000, 454, 1243, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3856,
	911, 910, -1000, 908, 904, 903, 902, 900, -1000, 899,
	-1000, 898, 896, 893, 891, 890, 887, 882, 881, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 837, 2810,
	836, 836, 836, -1000, 1341, 835, 880, -1000, 490, 831,
	478, 827, 826, 824, -1000, 870, 866, 859, 857, 856,
	855, 852, 849, 848, 1343, -1000, -1000, -1000, -1000, 1392,
	53, 163677, -1000, 782, 53, -1000, -1000, 847, -1000, 42672,
	42672, 42672, -1000, -1000, 3052, 61761, -1000, 3401, -1000, 63,
	63, 1158, 78966, -1000, 75646, 1158, 374, 979, 86317, -1000,
	3808, -1000, -1000, 452, 34226, 32867, 4555, 34226, 1890, 163677,
	608, 83, 80, -1000, 77, 76, 163677, 163677, 127374, 127374,
	127374, 163677, 4793, 4789, 3990, 61761, -1000, -1000, 96243, 176867,
	135286, 1829, 56, -1000, -1000, 4446, 100873, 95584, 3854, 176867,
	3853, 3806, 176208, 104217, 315, 4042, -1000, -1000, 846, 315,
	4041, -1000, 4787, -1000, -1000, -1000, -1000, -1000, 4040, 4786,
	4785, 4784, 163677, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	3004, 4039, -1000, 54, -1000, 131328, 3004, 4038, -1000, 54,
	3004, 4036, -1000, 54, 130669, -1000, -1000, 3004, 4035, -1000,
	-1000, 314, 4033, -1000, -1000, 3600, 1145, -1000, -1000, 68124,
	-1000, 313, 4032, -1000, -1000, 448, -47, 4030, -1000, -1000,
	-1000, -1000, -1000, -1000, 183020, -1000, -1000, -1000, 175547, -1000,
	-1000, 4222, -1000, 163677, -1000, 61761, -1000, -1000, 4445, 2027,
	4233, 4388, -1000, -1000, 34, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3342, 3340, 1456, 3121, -1000, 4082, 1789, 44086,
	4133, -1000, -1000, -1000, -1000, -1000, 447, 34226, 3711, -1000,
	-1000, 163677, -1000, 163677, 3565, 3565, -1000, -1000, -1000, 4572,
	4571, 3565, 3565, 163677, 163677, -1000, -1000, -1000, -1000, -1000,
	-1000, 2993, -1000, -1000, -1000, 1887, 3390, -1000, -1000, -1000,
	82313, 3802, 1650, 106899, 106899, 106899, 106899, 106899, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 149800, -1000,
	-1000, 1906, 2665, 1989, 4204, 2664, 127374, -1000, 2429, -1000,
	-1000, -1000, 4252, 4037, 163677, -1000, -1000, 3851, -1000, 98226,
	3851, 130010, -1000, 129351, -1000, 128692, -1000, -1000, 127374, -1000,
	127374, -1000, 4781, 4779, 4778, -1000, -1000, 4777, 170926, -1000,
	1905, 4234, -1000, 2408, 926, 53277, 182896, 4227, -1000, 4774,
	2609, 3848, 183020, -1000, 4034, 2120, 2084, 163677, -1000, -1000,
	163677, -1000, 163677, -1000, 163677, -1000, 163677, -1000, -1000, -1000,
	3095, 2041, -1000, -1000, 3339, -1000, -1000, -1000, 1294, -1000,
	1288, 127374, 127374, 127374, 127374, 3801, 3489, 127374, 127374, 2204,
	-1000, 52570, 4187, -1000, -1000, 3903, 4773, 2284, -1000, 2364,
	-1000, -1000, 2771, 3798, 4228, -1000, 3796, 1396, 2435, -1000,
	-1000, 74305, 4470, -1000, 441, 4678, 441, -1000, -1000, -1000,
	34, -1000, 6878, 4029, 1551, -1000, 3119, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2639, 4028, -1000, 3142, 4026, 2528,
	-1000, -1000, 3310, -1000, 2517, -1000, 2448, -1000, 179337, 1686,
	-1000, -1000, -1000, -1000, 2854, 4024, 65, -1000, -1000, 3133,
	-1000, 4533, 3761, -1000, -1000, -1000, 179213, -1000, -1000, 3159,
	2769, 4468, 2710, -1000, 1641, 4022, -1000, 3586, 3586, 118122,
	4027, 83653, 82313, 98885, 36, -1000, -1000, -1000, -1000, -1000,
	30, -1000, 31482, 183020, -1000, -1000, -1000, -1000, 183020, 1142,
	-1000, -1000, 4021, -1000, 183020, 1141, -1000, -1000, 4020, -1000,
	3419, -1000, 3847, -1000, -1000, -1000, 3218, 103546, 3329, 801,
	-1000, 3215, 1292, -1000, 117463, 116802, 2780, 4771, -1000, 4768,
	-1000, -1000, 4767, -1000, 4766, 4764, 4762, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 116141, 3050, -1000, -1000, 1864, 1253,
	106899, -1000, 3214, 4378, -1000, 115480, 1353, -1000, 1261, 3213,
	-1000, 1873, 128033, 1231, 3211, -1000, 4761, 4307, 3505, 1261,
	3209, -1000, -1000, -1000, -1000, -1000, 3792, -1000, 845, 87641,
	-1000, 87641, -1000, 2168, -1000, 170267, 63, 127374, 4522, -1000,
	8, -1000, -1000, -1000, 1311, -1000, 80969, -1000, 80969, 139907,
	106899, 1253, 3789, 92280, 182859, -1000, 1291, -1000, -1000, 183020,
	-1000, -1000, -1000, 3418, -1000, -144, 3575, -1000, 106899, 82313,
	3787, 3416, -1000, 183020, -1000, -1000, -1000, -1000, 183020, -1000,
	-1000, -1000, 106899, 1864, -1000, 149141, 114819, 316, -1000, -1000,
	169608, -1000, 3299, -1000, 163677, -1000, 3298, 3838, 3845, 2101,
	3094, 3445, -1000, 51863, 3404, 67417, 3118, 261, -1000, -1000,
	261, 261, 41965, -1000, -1000, 44086, 1080, 100873, 100873, 34226,
	1683, 61761, 61761, 61761, 61761, 61761, 61761, 61761, 61761, 61761,
	61761, 61761, 61761, 61761, 61761, 61761, 61761, 61761, 61761, 61761,
	61761, 61761, 61761, 61761, 61761, 61761, 61761, 61761, 61761, 61761,
	61761, 61761, 61761, 61761, 61761, 61761, 61761, 61761, 2822, 61761,
	1563, 61761, 61761, 61761, 61761, 2839, -1000, -1000, 2502, 704,
	2712, 798, -1000, -1000, -1000, 4503, 4503, 4503, 1675, 1675,
	1675, 183433, 183433, 809, 4760, 972, -1000, 61761, -1000, 191,
	80288, 61761, 32867, -1000, 598, 13985, 3285, -1000, 597, 32160,
	-1000, -1000, -1000, 35602, 789, 66710, 61761, 1304, 183020, -1000,
	-1000, 1790, 4555, 30804, 3721, 3645, 844, 1143, 928, 39137,
	38430, 37723, 37016, 906, 905, 61761, 61761, 61761, 61761, 61761,
	61761, 61761, 61761, -1000, 4569, -1000, -1000, 4555, -1000, -1000,
	842, -1000, 4555, 4555, -1000, 4555, 1750, 1694, 4555, -1000,
	4555, 4555, 10792, 10792, 51156, 50449, 49742, 68831, 49035, 61761,
	36309, 48328, 47621, -1000, 70952, 163677, 53, 4444, 163677, 61761,
	370, -1000, 25395, -1000, 370, 370, 841, 2, 183020, 3386,
	3386, 77642, 3070, 2928, 2928, 2928, -1000, 1158, 24012, 1158,
	145844, 2950, 1158, 1158, 469, 595, 74976, 3401, 145185, 949,
	839, 75, 74, 72, -1000, -1000, 71, 68, -1000, -1000,
	127374, 838, 34226, 434, -1000, 154, 61761, 61761, 61761, 594,
	-1000, 943, -1000, 433, 2591, 2578, -6, 1827, -1000, -1000,
	-1000, -1000, 3453, 3451, 3450, 3447, -1000, 3438, 3046, -1000,
	-1000, -1000, 2450, -8, 1817, 127374, 163677, 2377, -1000, -1000,
	-1000, -1000, 98885, 51, 98885, 163677, 4176, 127374, 127374, -14,
	-1000, 176867, 6993, -18, -1000, 1609, 423, 4555, -1000, -1000,
	-1000, 4759, 4756, -1000, 483, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 837, 836, 836, 836, -1000, 1341, 835,
	490, 831, 478, 827, 826, 824, -1000, -1000, -1000, -1000,
	-1000, 3786, 127374, 163677, 2325, 97567, 134627, -47, 135286, 176867,
	-15, -1000, -1000, -1000, -1000, 127374, -1000, -1000, 127374, -1000,
	89623, -1000, 127374, -1000, 163677, -1000, -1000, -1000, 4755, -1000,
	127374, 127374, 3004, 4019, -1000, 127374, -1000, 127374, 311, 4016,
	-1000, -1000, 163677, -1000, 127374, 127374, -1000, -1000, 74305, 179010,
	4555, -1000, 163677, 163677, 163677, 176867, 176867, 308, -1000, 127374,
	1080, -24, 1476, 34, -1000, -1000, -1000, -1000, 1690, -1000,
	2252, -1000, -1000, -1000, -1000, -1000, -1000, 1961, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1236, -1000, -1000, -1000,
	-1000, 4549, 4529, 37, -1000, -1000, 34226, -1000, 2596, -1000,
	-1000, -1000, -1000, 163677, 163677, -1000, -1000, 163677, 163677, -1000,
	-1000, 50, 2022, -1000, 127374, 3844, -1000, -1000, 106899, 82313,
	-1000, 3435, 1260, 1260, 1260, 1260, 1290, -1000, -1000, -1000,
	-1000, -1000, -1000, 4754, 4753, 4752, 4749, -1000, -1000, 1281,
	127374, 163677, 127374, -1000, 3536, 2108, -1000, 420, -1000, 176867,
	-1000, 176867, 163677, 127374, -1000, -1000, 1281, 163677, 1281, 163677,
	1281, 163677, 1281, 1281, -1000, -1000, -1000, -1000, 40, -1000,
	4064, 3924, -1000, 191, 191, 61761, -1000, -1000, 183020, -1000,
	3924, 61761, -1000, -1000, 2035, -1000, 4748, 2181, -1000, 3843,
	-1000, 3839, -1000, 113, 419, 415, -1000, -1000, 4567, 2556,
	-1000, 4670, -1000, 2737, 1288, 1288, -1000, -1000, -1000, -1000,
	127374, 3783, -1000, -1000, -1000, -1000, -1000, 4746, 4169, 183020,
	-1000, 102875, 2473, -1000, -1000, -1000, -1000, 127374, 127374, 127374,
	127374, 163677, 1286, 49, -1000, -1000, -1000, -1000, -1000, 4108,
	-1000, 163677, 4097, 4106, 127374, 74305, -1000, -1000, -1000, 4677,
	-1000, 28, 2058, 717, 1815, -1000, 114158, 3239, 4182, 4742,
	3497, 4167, 2166, -1000, 2024, 823, -1000, 4352, 112179, 4405,
	4419, 1664, -1000, 3779, -1000, -1000, -1000, 1187, 2258, 2402,
	1810, 1809, 112179, 3142, -1000, 100873, -1000, 3510, 4328, 1710,
	1775, 1710, 1710, 1773, 1746, -1000, 112179, 2400, 1806, 1805,
	3368, 1798, 2399, 1760, 4073, -1000, -1000, 3045, 3146, -1000,
	-1000, -1000, -1000, 2238, 3588, -1000, 3341, 1685, 1685, 163677,
	-1000, 1754, 2397, 1747, 1739, -1000, -1000, 2078, 2092, -1000,
	-1000, 148480, 2219, -1000, 1676, 1669, 164995, 4466, 2661, 2868,
	997, 2716, -1000, 1677, 1668, 3778, -1000, -1000, 27, 4401,
	4418, 1664, -1000, -1000, 3777, 1665, -1000, 1325, -1000, -1000,
	4518, -1000, -1000, 4327, 127374, 34226, 1993, 1990, 1965, 2396,
	1655, 48, -1000, 4393, 2164, -1000, 4481, 106899, -1000, 3240,
	2005, -1000, 1864, 1864, 143208, 163677, 1653, 2817, 2751, 2628,
	2625, 2616, 2970, -1000, 4383, 4375, -1000, -1000, 4269, -1000,
	-1000, 4268, 2752, 1581, 1580, -1000, 1303, 9386, 4104, -1000,
	176867, 1303, 1303, 2456, 4010, 3534, 2071, -1000, 3571, 1085,
	3566, -1000, -1000, 1085, 36, 98885, 163677, 408, -1000, 61761,
	191, 61761, 191, -1000, 4322, 4007, 4443, -1000, 3775, 74305,
	4000, 3998, 4741, 822, -1000, -1000, 820, -1000, 3363, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 816, 3208, 3774, 163677,
	295, -1000, 127374, -1000, 4442, 147821, -1000, 3995, 176867, 3142,
	3207, -1000, 113499, -1000, 3994, 2745, 653, 3206, -1000, 946,
	4740, 3992, -1000, 168949, -1000, 4222, 1788, 3991, 1242, 2045,
	865, 4441, -1000, 865, 90294, -1000, 163677, -1000, 63, 784,
	108217, -26, -33, 593, -1000, 163677, 163677, 4120, 2762, 2756,
	-1000, 1256, 82313, -1000, 82313, -40, -1000, -144, 3562, 82313,
	-1000, 1253, -163, 1085, -1000, 1085, -1000, -1000, 112179, -1000,
	3298, 3838, -1000, -1000, -1000, -1000, -1000, -1000, 1778, 2996,
	-1000, 3400, -1000, 2095, -1000, -1000, -1000, 183020, 69538, -1000,
	-1000, 183020, 2458, -1000, 66003, 65296, -1000, -1000, 2254, 127374,
	3468, -1000, 3468, -29, -1000, -1000, 180459, 3391, 127374, 37,
	44086, -1000, -1000, -1000, -1000, -1000, 1186, 1075, 1075, 1745,
	1745, 1745, 1745, 4341, 8785, 3399, 8140, 7983, 7983, 7082,
	7082, 7082, 7082, 7082, 7983, 439, 1675, 1675, 439, 439,
	439, 439, 439, 1675, 1675, 439, 1675, 7983, 7983, 7983,
	1675, 183433, 12555, 14886, 61761, 61761, 1578, 2511, 704, 13267,
	61761, 15677, 15677, 15677, 15677, -1000, 2455, -1000, -1000, -1000,
	-1000, 3773, 813, 68831, 68831, -1000, -1000, -1000, -1000, 34895,
	61761, -1000, -1000, -1000, -1000, 46914, -1000, -1000, 178599, -339,
	592, -1000, 407, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 591, -21, 154,
	388, 61761, 163677, -1000, 18284, 940, -98, -1000, 64589, -57,
	1797, -1000, 61761, -1000, -1000, 1577, -1000, 1568, 1567, 1564,
	-1000, 811, 590, 375, -1000, 2931, 808, 800, 61761, -1000,
	-1000, -1000, -1000, -1000, 178475, -1000, -1000, 178396, -1000, -1000,
	178272, -1000, -1000, 177861, -1000, -1000, -1000, -1000, -1000, 182725,
	17825, 16588, 15533, 13936, 15010, 14683, -62, 589, -63, 4555,
	588, 587, 584, 1185, 1183, 583, 581, 578, -64, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -69, 574, -1000, 3771, -21, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 573, -1000, 572, -1000, 182034, -21,
	570, 3387, -1000, 68831, 68831, 68831, 68831, 567, -1000, 180048,
	-1000, 182168, 46207, 46207, 46207, 561, 181997, 61761, -21, -70,
	-1000, -71, -1000, -1000, -1000, -1000, 3234, -72, -1000, -77,
	1301, 42672, 76318, 1683, 61761, 61761, 61761, 61761, 1563, 2839,
	2502, 704, 34226, -1000, 798, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1301, 1301, 61761, -1000, 61761, 3412, -1000,
	-1000, -1000, -1000, 3411, 2494, 3386, 77642, -1000, -1000, -1000,
	-1000, 145844, -1000, 4522, 3622, -1000, 145844, -1000, -1000, 163677,
	782, -1000, 145844, 145844, 1158, -1000, -1000, 163677, 781, 1158,
	145844, 814, -1000, -1000, -1000, -1000, -1000, 559, 79628, 326,
	34226, 558, 45500, -1000, 4326, 181166, 152, -78, -1000, -1000,
	34226, 1261, -1000, 1261, -1000, -1000, 2576, 3550, 3550, 3550,
	3550, 3550, 127374, -1000, -1000, 176867, 1561, 42, -38, 3561,
	3556, 3553, 3551, 36, 98885, 36, 30, 163677, 47, 47,
	4479, -271, -1000, 2823, -1000, 100873, -1000, 961, 1340, 34226,
	-1000, -1000, -1000, -1000, 4555, 176867, 3769, 336, 3548, 3545,
	3544, 3543, -1000, 3043, 133309, 282, -47, 176867, -1000, 315,
	-79, -1000, -1000, 100203, 94922, -1000, 2938, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 315, 4737, -1000, 3004, -1000, -1000,
	127374, 3004, 3004, -1000, 127374, 127374, 3004, -1000, 314, 3600,
	-1000, -1000, 313, -1000, -1000, -47, -1000, 1287, 44086, -1000,
	1690, -1000, -1000, 1974, -1000, 2753, -1000, 1591, -1000, -1000,
	44086, -1000, 4123, -1000, 2405, -1000, -1000, -1000, -1000, 2992,
	-1000, 1253, 1879, 3539, 1260, 43, 797, -1000, -1000, -1000,
	2064, -1000, -1000, 1133, 1132, 1131, -1000, 1130, -1000, -1000,
	-1000, -1000, -1000, -1000, 2072, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 61, -1000, 2393, 176867, 2506, 176867, 163677,
	-47, -47, 17, -1000, -1000, 225, 42, -1000, 1281, -1000,
	1281, -1000, 1281, -1000, -1000, 3924, -1000, 40, 4064, -1000,
	-1000, 183020, 40, 183020, -1000, -1000, -1000, 2177, 2172, 163677,
	-1000, 163677, 163677, 3836, -1000, 163677, -1000, -1000, -1000, -1000,
	-1000, 127374, -1000, 4736, -1000, -1000, 34226, 163677, 127374, 34226,
	127374, 3833, 3832, 1286, 1286, 1286, -1000, 2684, 163677, -1000,
	-1000, 163677, -1000, -1000, -1000, 3417, 163677, 163677, 127374, -1000,
	143867, 163677, -1000, 2906, 176867, -1000, 3205, 168290, 3178, 167631,
	100873, -1000, -1000, 796, 1215, 3385, 3384, 1398, 163677, 163677,
	3379, 166972, 166313, -1000, 4735, 163677, 2829, 61761, 143867, 4325,
	2919, 5319, 191, 191, -1000, 191, -1000, -1000, 795, 1651,
	127374, 127374, 163677, 176867, 127374, 2407, -1000, -1000, -1000, -1000,
	-1000, 112838, -1000, -1000, 1710, -1000, -1000, -1000, 1710, -1000,
	1710, 3142, 2391, 163677, 176867, 127374, -1000, -1000, -1000, -1000,
	163677, 163677, 176867, 3042, 3141, 3037, 3585, -1000, -1000, -1000,
	-1000, -1000, -1000, 163677, 163677, 176867, 176867, 147162, 2713, 146503,
	2708, 2700, -1000, -1000, -1000, 2659, 2690, 2903, 2390, 163677,
	-1000, -1000, -1000, -1000, -1000, 1785, -1000, 997, 1560, 3768,
	61761, 61761, 2880, 191, 191, -1000, 191, 794, 34226, -1000,
	-1000, 1588, -1000, 3804, 163677, 4669, 165654, 4665, 163677, 163677,
	163677, 176867, 4196, 163677, 39, -1000, 1643, -1000, 4481, -1000,
	1129, -1000, -163, 38, -49, -1000, 1126, 1124, 30, 73635,
	2438, -1000, -1000, -1000, -1000, -1000, 1558, 2641, 2526, 163677,
	4306, -1000, 163677, 4302, -1000, -1000, -1000, 163677, 176867, -1000,
	164995, 9386, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2846, 3564, 1418, 163677, 1641, -1000, -1000, 2380, 1557,
	1553, 112179, 2761, 2373, 2499, 82313, 1257, 82313, 3513, -1000,
	-1000, 30126, 183020, -1000, 183020, -1000, 94263, 2266, 106899, 106899,
	2608, -1000, 73635, 163677, -1000, 90956, 90956, 163677, 108876, 1207,
	3989, 88301, 30, 1253, 1864, 3874, 2209, -49, 793, 163677,
	-1000, -1000, 3142, 3988, 653, 3203, -1000, 176867, 1345, 4440,
	3987, 792, 163677, 4734, -1000, 127374, 3036, 3200, -1000, -1000,
	164336, 3961, 997, 163677, 1412, -80, -1000, 61761, 2658, -1000,
	85647, 1382, 163677, 2553, 276, -1000, -1000, -1000, 88, 163677,
	-1000, 977, -1000, -1000, 784, 784, 1253, 82983, -86, -1000,
	212, 790, 1118, 1117, -1000, 9058, -1000, -144, -1000, 106899,
	1256, 82313, -144, 3537, 3767, -1000, -1000, 1284, -1000, -1000,
	-1000, -1000, 1432, -1000, 2458, 2978, -1000, 789, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 3302, -1000, -1000,
	41965, 1149, -1000, -1000, 127374, 60, 37, 61761, 61761, 11613,
	10133, 61761, 68831, 68831, -1000, 61761, 9432, -1000, -1000, -1000,
	-1000, -1000, 3765, 788, 61761, 100873, 2848, 2772, -1000, 557,
	11453, 439, -1000, 61761, -1000, 642, -1000, 556, 24705, -21,
	-87, -1000, -1000, 960, -1000, 3945, -1000, 61761, 181873, 3263,
	2493, 2515, 2249, 4555, 4660, 29448, -1000, 91618, 1302, 2956,
	177690, -1000, -1000, -1000, -1000, 100873, 100873, 61761, 61761, -1000,
	61761, 61761, 61761, -1000, -1000, -1000, 4555, 550, -1000, -1000,
	1178, -1000, -1000, -1000, 1178, -1000, -1000, 1710, -1000, 1710,
	-1000, 61761, -1000, -1000, 3760, 61761, -1000, 100873, 100873, 68831,
	68831, 68831, 68831, 68831, 68831, 68831, 68831, 68831, 68831, 68831,
	68831, 68831, 68831, 68831, 68831, 68831, 68831, 68831, 68831, 3353,
	68831, 4497, 4497, 4497, 1170, -1000, 3831, 3760, 61761, 61761,
	100873, 544, 543, 542, -1000, 61761, -21, -1000, -1000, 786,
	-1000, 3291, -1000, 163677, -1000, 3639, -1000, 61761, -1000, -88,
	-1000, 3401, -1000, -1000, 3639, 3639, -92, 183020, 77642, 77642,
	-1000, 783, 61761, 3408, -1000, -1000, 939, -330, -1000, 1115,
	-1000, -1000, -1000, -1000, -1000, -1000, 1114, 1113, -1000, 782,
	-1000, -1000, -1000, 145844, 781, -1000, 163677, 145844, 938, -1000,
	-95, -1000, -1000, -105, -1000, 145185, 34226, -1000, -1000, 61761,
	61761, 541, 540, -1000, 89, 1301, 325, -1000, 1261, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 3422, -271, 176867,
	176867, 2369, 2365, 2361, 2359, 36, 30, 2980, -1000, 3655,
	4659, -1000, 4552, 957, 937, 192, 539, -47, 176867, 176867,
	2357, 2354, 2350, 2336, 93601, 3759, 176867, -1000, -1000, -1000,
	90956, 100873, -1000, 100873, -1000, -1000, -1000, -1000, -1000, 3004,
	-1000, -1000, -1000, 311, -1000, -1000, -1000, -1000, -1000, 3488,
	-1000, 34, -1000, -1000, -1000, 61761, -1000, 1213, -1000, 2016,
	-1000, -1000, 127374, 82313, -1000, 3496, 3496, -1000, 82313, 82313,
	106899, 106899, 33, 777, -1000, 1112, 1111, 1108, 28770, 163677,
	255, 3536, -47, -1000, 101535, -1000, -1000, -1000, -1000, -1000,
	-1000, 1281, -1000, -1000, 4641, 30, -1000, -1000, -1000, -1000,
	-1000, 2883, 3105, 2883, 2485, 2480, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 4181, 765, 1548,
	1538, -1000, -107, -1000, 1107, -1000, -1000, -1000, -1000, -1000,
	3713, -1000, 3984, -1000, 3199, -1000, 1386, 3195, 2104, -1000,
	61761, 764, 3504, 756, 752, 4733, 2796, 4732, 1404, 3977,
	3004, 3970, 3004, -1000, -1000, -1000, 1193, -1000, 183020, -108,
	-1000, 2919, -1000, 751, 750, -1000, 28, 1998, 610, 1537,
	1279, -1000, -1000, 61761, 61761, 144526, -1000, 636, 4194, 59,
	-1000, -1000, -1000, 2318, 1532, 1530, -1000, -1000, -1000, -1000,
	-1000, 3142, 2315, 1529, 1526, -1000, -1000, -1000, -1000, -1000,
	-1000, 3889, 3476, 3140, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3193, -1000, -1000, 142549, -1000, 3960, 142549, 3607, 997,
	142549, 4194, 3677, 1274, -1000, 3879, 3878, 1177, 142549, 61761,
	61761, 181460, 181299, -1000, 1269, -1000, -1000, 61761, -1000, 27,
	-1000, 1525, 4387, 3192, 127374, -1000, 3004, 3959, 1524, -1000,
	1523, -1000, -1000, -1000, 4392, 4390, 1542, 2164, 106899, 82313,
	2554, -1000, 4376, 2979, 4521, 4481, 82313, -1000, 143208, 106899,
	106899, -1000, -1000, -1000, 2167, -36, -1000, 1092, 1544, 26,
	-1000, 1080, -1000, 26, -1000, -1000, -1000, -1000, 4521, -1000,
	-1000, -1000, -1000, 102204, -1000, -1000, 1303, 163677, 176867, 127374,
	2384, -1000, -1000, 133309, 133968, 163677, 3534, 1085, -1000, 2624,
	1085, 1257, 3758, -1000, 3464, -1000, 165, 1253, -1000, 106899,
	-1000, -1000, 3104, 3329, 1266, 538, 25, -1000, 1550, 535,
	4731, 528, -116, 24, 100873, -1000, -1000, -1000, -1000, 3178,
	127374, 749, 163677, 1607, 3482, 163677, 163677, 4438, -1000, 3091,
	833, 127374, 1238, -1000, 4522, -1000, -1000, -1000, 163677, 42672,
	143208, -1000, 4355, 127374, 4437, 3955, 1261, 127374, 191, 127374,
	4585, 525, 23, 100873, -1000, 4436, 127374, 3954, 3034, 3181,
	3347, 997, 107558, 1261, 1301, 77642, -1000, 2045, 183020, -1000,
	2553, 44793, 4192, -124, -1000, -1000, -1000, 1301, 90294, 77642,
	61761, 4730, -126, -1000, -1000, -1000, -1000, -1000, 106899, 1253,
	163677, 163677, 4728, 106899, 106899, 106899, 22, 748, -1000, 1082,
	1079, 1078, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1070,
	1065, 1062, 1061, 1059, 1050, -1000, -1000, -1000, 3309, 4079,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1256, -1000, -1000,
	-144, 1256, 82313, 191, -1000, 2967, -1000, 2972, -1000, -1000,
	-1000, -1000, -1000, 3463, 4189, 34226, 4356, 15677, 61761, 61761,
	3221, 1729, 779, 15677, 61761, 61761, 100873, 8894, -127, 61761,
	61761, -1000, 61761, 936, 183020, -1000, 4637, -1000, -1000, 4539,
	-1000, -1000, -1000, 183020, 61761, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 524, -1000, 184, -1000, -1000, -1000, 172903, -1000,
	61761, 520, 4324, -1000, 517, 514, 9602, 7934, 177566, 177529,
	23216, 510, -1000, -1000, -1000, 509, 506, 183020, 3831, 183020,
	-1000, -1000, 1275, 1275, 1667, 1667, 1667, 1667, 4497, 971,
	1298, 744, 657, 657, 657, 884, 1170, 1170, 657, 657,
	657, 1170, 3757, 3337, 743, 3640, -1000, -1000, 183020, 183020,
	501, -1000, -1000, -1000, -21, 7494, -1000, -1000, 3630, 4323,
	183020, -1000, 77642, 3630, 3630, -1000, -1000, 2494, 163677, 183020,
	77642, -1000, 3622, -1000, 26745, 26076, 955, -1000, -1000, -1000,
	-133, -1000, 100873, -1000, -1000, -1000, 4522, -1000, 79628, -1000,
	89, 181166, 19, -1000, -1000, -1000, 34226, -1000, 3716, 5757,
	-1000, 1048, -1000, -1000, 106899, 106899, 4726, 4724, -1000, 4610,
	4609, 2927, 4604, -1000, 3550, -1000, -271, -196, 163677, 163677,
	163677, 163677, -1000, 2977, -1000, 934, 4723, 947, 34226, -1000,
	-47, -47, 163677, 163677, 163677, 163677, 3747, 127374, 163677, 2295,
	176867, -47, -1000, -1000, -1000, -1000, -1000, -1000, 4119, 183020,
	3829, 3620, 3616, -1000, 1253, 1260, -1000, -135, -1000, -1000,
	-1000, -1000, 1984, 1984, 106899, 106899, 61761, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 34226, 2180, -1000, 742,
	730, 163677, 163677, -1000, 143867, 44086, 2060, 139246, 163677, 3948,
	-1000, 3940, -1000, 1398, 3333, 22760, 78304, -1000, 78304, 163677,
	-1000, -1000, -1000, -1000, 2415, 1958, 4722, 1459, -1000, 4256,
	163677, -1000, 163677, -1000, -1000, -1000, 143867, -1000, 163677, 163677,
	127374, 163677, -1000, 176867, 3907, -136, 183020, 18, -1000, 1046,
	-1000, 1679, -1000, 28092, 163677, 176867, 127374, 163677, 176867, 127374,
	163677, -1000, 3475, 3937, 1381, 142549, -1000, 3936, 142549, 1379,
	-1000, -1000, 142549, 2908, -1000, -1000, 3877, -1000, 183020, 180755,
	191, 61761, 3893, -138, 34226, -1000, 4602, 4601, 3934, 4261,
	-1000, 163677, 4599, 163677, 127374, 4116, -1000, -1000, -1000, -1000,
	1041, 1034, 1023, 1020, 1017, 3307, 1016, 1015, 4488, 143208,
	-1000, 1259, -1000, -1000, -1000, 1555, -1000, 2526, 73635, 1014,
	163677, 44086, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2308,
	1521, 1516, 3032, 3024, 2975, 17, 2761, 1257, 16, 729,
	-1000, 1257, -1000, 106899, 82313, 1253, 4434, -1000, 73635, 3743,
	4721, 2520, 90956, 61761, 61761, 7236, -1000, 3493, -1000, 138587,
	108876, 3084, -1000, -1000, 78304, 728, 163677, 727, 163677, 725,
	-1000, 191, -1000, 4720, 143867, 723, -1000, 1267, 2963, -1000,
	4514, -1000, 3884, -1000, 932, -1000, -1000, 274, -143, 176867,
	3142, 191, 127374, -1000, 653, 1255, 653, 498, 15, -1000,
	-1000, 163677, -1000, 1049, 1390, 34226, 127374, 3933, 3352, 997,
	107558, -1000, 1788, 2954, 12, -1000, -1000, 13, -1000, 700,
	191, 2954, -1000, 12, 183020, -1000, 1012, 497, -1000, 4115,
	-1000, -1000, -149, -1000, -1000, 10695, 10695, 106899, 82313, 106899,
	106899, 106899, 61761, 82313, 106899, 106899, 1011, 4145, -1000, 1256,
	-1000, -144, -1000, 3288, -1000, -1000, -1000, -1000, 4189, 15677,
	15677, 61761, 61761, 61761, 15677, 8894, -154, -1000, 15677, 15677,
	-21, -1000, -1000, -1000, 183020, -1000, 27414, 2891, -1000, 22589,
	-1000, 41965, -1000, -1000, 61761, 61761, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 68831, 3740, 718, 100873, -1000, 496,
	1276, 61761, 63882, 3401, 1276, 1276, -1000, -156, -1000, -1000,
	-1000, 4522, -1000, 4522, 4522, -1000, 163677, -1000, -1000, -1000,
	495, 41965, -1000, -1000, -157, -1000, 106899, 2516, 106899, 106899,
	4714, 4712, 1907, 4598, 4597, 4711, 4709, 4708, 4596, 106899,
	-1000, -1000, -1000, -1000, -1000, -1000, 4707, 3135, 4706, 4704,
	-1000, -1000, -1000, 3888, -117, -118, -119, -125, -1000, 907,
	-1000, 4703, -1000, 243, 229, 224, 221, 176867, 3717, 211,
	3533, 3531, 3530, -47, -1000, 191, -1000, -1000, -1000, -1000,
	-1000, -1000, -162, -1000, -1000, 183020, -1000, 127374, 127374, 61761,
	61761, -1000, -1000, -1000, -1000, 3528, 4433, -1000, 2682, -1000,
	163677, 163677, -1000, 163677, -1000, 34226, 163677, 3662, 1595, -1000,
	1215, 3374, 715, 68831, 1430, 127374, 1188, 3611, 3594, -1000,
	4456, 4320, 3609, -165, -1000, 163677, 61761, 163677, -168, -174,
	3128, -1000, -1000, 1428, 1587, 61761, 1427, -1000, -1000, -1000,
	100873, 714, 3004, 3004, -1000, -177, -180, -1000, -1000, -1000,
	61761, 1514, 163677, 43379, -1000, 4702, 4194, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 142549, 142549, -1000, -1000, -1000,
	142549, 4194, 163677, -1000, 61761, -1000, 180607, 61761, 1511, -1000,
	-1000, -1000, 4595, 3004, 34226, 3004, -1000, 3004, 4261, 1451,
	106899, 61761, 1902, 82313, 82313, 1010, 61761, 61761, -1000, -1000,
	-1000, 3072, 61761, -1000, -1000, 73635, -1000, -1000, 163677, 176867,
	127374, 2130, 2130, 3815, -1000, -1000, -1000, 2554, 2554, -1000,
	11, 1257, 2743, 2202, 3021, 2537, -1000, 1814, -1000, 183020,
	183020, 2955, 7236, -1000, 4594, 107558, -1000, -1000, -1000, 2886,
	4697, -1000, -1000, -1000, -1000, 3371, -1000, -1000, -1000, 163677,
	3370, 3606, -182, 78304, 712, 78304, 709, 163677, 1254, -1000,
	-185, 108876, 1207, -1000, 1267, -1000, -1000, -1000, 87641, -1000,
	-1000, -1000, -1000, 653, 4432, -1000, 3486, 4430, -1000, 4591,
	100873, 708, 163677, 706, 163677, 3020, 705, 34226, 4171, 997,
	107558, -1000, 3961, 3445, -1000, 3154, 163677, 4163, -1000, 3445,
	704, 1253, 703, 1253, -1000, -187, -1000, -1000, -1000, -1000,
	-1000, 183020, -1000, -1000, -1000, 106899, -1000, -1000, 1256, 5,
	-1000, 4465, 701, 991, -1000, -1000, 15677, 15677, 15677, -1000,
	-1000, 2953, 4315, -1000, -1, -11, 22133, 21252, 7842, 68831,
	100873, -195, -1000, -1000, 163677, 183020, -13, -1000, 183020, 696,
	695, 663, -1000, -1000, -1000, 929, 885, 815, -1000, -1000,
	-1000, -1000, -1000, 5757, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	4696, -1000, -1000, 4695, -1000, -1000, -1000, 176867, 176867, 176867,
	176867, 4694, -1000, 176867, 176867, 176867, 176867, -47, 176867, 176867,
	2293, 2279, 2256, -1000, -1000, -1000, -1000, -198, -203, 137928,
	163677, -1000, -1000, 2104, 2317, -1000, -1000, 163677, 3180, -1000,
	-1000, -1000, 1258, 61761, 3640, 68831, 692, 61761, -1000, 691,
	690, 4429, 4088, -1000, 3487, 3703, 2475, 78304, -1000, 4189,
	-1000, 20086, -1000, 1389, 2667, -1000, -1000, -1000, -1000, 183020,
	68831, 4261, 78304, -1000, -1000, 675, 673, 183020, 672, 1004,
	3714, -1000, -1000, -1000, -1000, -106, -1000, -106, -1000, -1000,
	183020, 191, 183020, 668, 4387, -1000, -1000, -1000, -1000, 3004,
	127374, -1000, 183020, -1000, -1000, -1000, -1000, 106899, 183020, 183020,
	1003, 183020, -1000, -1000, -1000, -1000, 1498, -1000, -1000, -1000,
	-1000, -1000, 4692, 3712, 133309, -1000, -206, 2743, 1249, 42672,
	73635, 3102, 2124, -1000, -1000, -1000, 4395, 61761, -1000, -19,
	-1000, -1000, 1207, -1000, -1000, 3084, 661, -1000, 1232, 3279,
	3279, 1389, -212, 78304, -214, 78304, -219, 3001, 3481, -1000,
	492, 4428, 1267, 1301, -1000, 4427, 191, 4114, -1000, 191,
	-1000, -1000, 4585, 487, 78304, -1000, 127374, 78304, 3014, 2802,
	3321, 107558, -1000, 3347, 2553, -1000, -1000, -234, 163677, 2553,
	-1000, -1000, 106899, -1000, -1000, -1000, -1000, 3288, -1000, 163677,
	-1000, 163677, 2735, 61761, 41965, 41965, -1000, -1000, 7842, -235,
	-1000, -20, -1000, 4422, 63882, 4690, 4687, 4686, -1000, -1000,
	-1000, -1000, -1000, -1000, -271, -271, -271, -271, -1000, -47,
	-47, -47, -47, -47, -47, 163677, 163677, 163677, -1000, -1000,
	-1000, 2677, -1000, 3178, -1000, -1000, 3929, -1000, 3626, 660,
	19504, 3640, 3295, 163677, 411, 3142, 3142, -1000, 4421, 3672,
	-1000, -1000, 2880, 656, -1000, -1000, -1000, -1000, 1149, 163677,
	1232, 3615, 127374, 3640, 1393, -236, 2883, 2883, 61761, 41258,
	2907, 142549, -1000, 61761, -1000, -1000, 4261, -1000, 82313, 176867,
	-1000, 176867, 3010, -1000, 3674, -1000, 2410, 200, 1252, 73635,
	100873, -1000, -1000, 183020, -1000, 4576, 3001, 163677, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2475, 1389, -242, 2880, -245, -1000, -1000, 4236, -1000, 4113,
	3493, 191, -1000, 191, -1000, 4685, 1255, 485, -1000, -247,
	1390, -250, 127374, 2741, -1000, 997, -1000, 3352, -1000, 1301,
	4043, -1000, -252, -1000, -253, -264, 484, 63175, 63175, 63175,
	-21, -29, -29, -1000, 163677, 655, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 199, 198, 183, -1000, -1000, 3873,
	1156, -1000, 1144, 2463, 479, 1406, 245, 167, -1000, -1000,
	-1000, 3609, -1000, 163677, -1000, -1000, -1000, 1156, 653, -1000,
	61761, 1389, -269, -1000, 1376, -274, -1000, 1375, -275, -1000,
	3710, -1000, -1000, -290, 3004, -1000, -271, 308, 2130, 1249,
	4373, 2957, 87641, -1000, 2652, 3002, 7236, -1000, 180018, -1000,
	3306, -295, -1000, -1000, 2880, 2475, 1389, 1232, 2880, 3116,
	-1000, 2886, 1254, -1000, -1000, -1000, -1000, 1389, 643, 2475,
	641, 1966, 997, -1000, -1000, 1710, 4171, 3978, 1719, 1253,
	-1000, -1000, -1000, 3926, -1000, 70245, 3065, 2474, 179720, 3926,
	3926, -1000, -1000, 176867, 176867, 176867, 163677, 1232, 4343, -1000,
	1148, 1146, 1901, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1301, -296, -1000, 3295, 183020, 1232, -1000, 2883, 3524,
	-1000, 2883, 3688, -1000, 2905, -1000, -1000, -1000, -1000, 3682,
	-1000, 4486, 88961, 1301, -36, 638, 73635, 2955, -320, -1000,
	-1000, -1000, -1000, -1000, 1232, 163677, 1232, 2880, 2475, 1301,
	1232, 2444, 2441, 4683, 1207, 3001, 2475, 78304, 2880, 78304,
	2836, -1000, 142549, -1000, 2802, 1688, -1000, 2153, -1000, -1000,
	2339, 4452, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -47,
	-47, -47, -1000, -1000, 1001, -1000, 4076, -1000, 1424, 2595,
	2595, -1000, -1000, 1144, -1000, -1000, 619, -1000, 618, -1000,
	176867, -1000, -1000, -49, 143208, 2743, 2526, 1252, -1000, -1000,
	-1000, -1000, 1301, 1232, 2880, 1584, 1301, -1000, 4682, -1000,
	3001, -1000, 2880, -297, 1232, -298, 2909, -1000, -106, 2741,
	-1000, 2150, 90294, 2460, -1000, -1000, 2944, 62468, 61761, -1000,
	4483, -1000, -1000, 3381, -1000, 3609, 61761, 61761, 308, -305,
	1249, -306, -1000, 1584, 1301, 1232, -1000, 1315, -1000, -1000,
	4501, 1584, -1000, 3306, 1232, 1389, 1301, 2475, 1981, 997,
	1966, 90294, -277, -1000, -1000, -1000, 183020, -1000, -1000, -1000,
	-1000, -307, -313, -1000, -1000, -1000, -1000, -1000, 1584, 1301,
	-1000, -1000, -1000, -1000, 1301, 2475, 1584, 2880, 2240, -1000,
	2663, 176867, 2836, -277, -1000, 2880, 1484, -1000, 1584, 1584,
	2880, -1000, 1232, -1000, -1000, 2659, 142549, -1000, 2909, -1000,
	-1000, -1000, 617, -1000, -1000, 1232, 1301, 1372, 1981, 61761,
	1301, 1584, 142549, 2240, -314, 1584, -1000, -106, -1000, 2880,
	-1000, -1000,
}

var sqlPgo = [...]int16{
	0, 5645, 5643, 69, 5642, 5639, 5638, 5635, 5633, 5632,
	5631, 5630, 5628, 5627, 5626, 5625, 211, 5624, 5623, 5622,
	5621, 5619, 5618, 5616, 5615, 5614, 5613, 5612, 5611, 5610,
	5609, 5608, 5607, 5606, 5605, 145, 230, 5604, 5603, 5602,
	5601, 5600, 5599, 5598, 5597, 5596, 5593, 5590, 5589, 5587,
	5581, 5580, 5578, 5577, 5573, 5572, 5571, 5569, 5567, 5566,
	5563, 5561, 5560, 5559, 5558, 5556, 5555, 5554, 5553, 5551,
	5550, 5548, 5547, 5544, 5543, 5537, 5535, 5534, 5531, 5530,
	5523, 5522, 5521, 5520, 5519, 61, 5511, 5509, 5508, 5500,
	5498, 5496, 5490, 5485, 5482, 5481, 84, 53, 5480, 5479,
	5478, 5477, 5476, 5475, 5473, 5472, 5470, 5468, 5467, 5466,
	5465, 5464, 5463, 5462, 5459, 5458, 5457, 5456, 5453, 5452,
	183, 5451, 5450, 116, 94, 5448, 366, 5445, 5444, 5442,
	5441, 5440, 5438, 5435, 5434, 5433, 5432, 5431, 5430, 5429,
	5428, 5426, 247, 5425, 361, 5424, 48, 227, 5423, 5422,
	5421, 51, 5420, 5419, 364, 5418, 5414, 5413, 5412, 5411,
	369, 5410, 5408, 5406, 5405, 5404, 315, 5403, 5402, 5398,
	5397, 5395, 5394, 176, 175, 5393, 5392, 1844, 5390, 5389,
	5388, 5387, 5382, 5381, 5380, 297, 317, 5378, 5377, 5376,
	335, 233, 5375, 359, 5374, 5373, 5372, 5371, 5367, 300,
	5366, 5365, 5364, 5362, 5361, 5360, 5358, 5357, 5353, 5352,
	5351, 5350, 5348, 5346, 5343, 5342, 5340, 5338, 5337, 5336,
	5334, 5332, 5330, 5329, 5327, 5320, 5319, 5317, 5316, 5315,
	5312, 5309, 5308, 5307, 5281, 5279, 5277, 5276, 5275, 5274,
	5272, 5270, 5269, 5267, 354, 293, 159, 5266, 5265, 5264,
	5262, 5261, 5260, 362, 358, 5259, 5258, 5257, 5256, 5255,
	4372, 5254, 5253, 5252, 5250, 5249, 5245, 5244, 5240, 5238,
	168, 28, 128, 5237, 14, 194, 121, 124, 171, 135,
	133, 21, 149, 20, 5233, 245, 303, 164, 200, 198,
	152, 5231, 148, 201, 161, 5222, 96, 5219, 180, 150,
	5214, 151, 142, 31, 106, 246, 332, 7992, 327, 5212,
	5211, 5204, 344, 268, 5200, 334, 5199, 5198, 5194, 5184,
	5181, 5179, 98, 78, 285, 5171, 187, 5162, 5161, 185,
	234, 249, 242, 232, 241, 337, 83, 134, 114, 86,
	70, 15, 33, 299, 25, 294, 3, 5160, 4, 9,
	350, 11, 345, 10, 190, 12, 39, 5159, 5158, 5157,
	5153, 5109, 177, 5152, 355, 328, 226, 5151, 5150, 5148,
	5147, 5146, 706, 5145, 79, 329, 439, 129, 143, 257,
	170, 5144, 220, 287, 50, 5142, 228, 105, 5138, 5137,
	155, 127, 15133, 9116, 5136, 5135, 219, 109, 163, 6274,
	256, 248, 306, 617, 195, 239, 229, 5131, 156, 5128,
	254, 210, 238, 378, 5127, 336, 5125, 4406, 139, 252,
	222, 7703, 5124, 5120, 5119, 117, 5118, 140, 5115, 5113,
	91, 19, 1, 2, 193, 46, 43, 29, 5112, 27,
	196, 74, 32, 5111, 34, 5110, 5108, 5107, 5106, 73,
	5105, 131, 225, 5104, 5103, 365, 5102, 5101, 138, 104,
	82, 5098, 108, 5097, 7, 240, 269, 310, 5096, 5091,
	318, 188, 5090, 5088, 260, 270, 272, 250, 307, 5087,
	59, 321, 5086, 5085, 5084, 5083, 5082, 370, 107, 8,
	172, 5080, 5079, 208, 5078, 81, 341, 274, 5077, 87,
	5072, 5071, 182, 5070, 278, 80, 207, 363, 197, 319,
	169, 323, 253, 330, 5069, 5068, 5067, 259, 5065, 5064,
	316, 221, 5063, 291, 5062, 5061, 281, 374, 126, 72,
	110, 331, 113, 271, 224, 5059, 276, 206, 5053, 209,
	5052, 122, 5051, 368, 251, 305, 55, 13, 42, 125,
	144, 112, 5, 326, 223, 290, 165, 5050, 10206, 2708,
	325, 99, 5045, 214, 174, 111, 202, 218, 356, 101,
	5044, 5043, 663, 5041, 5038, 5036, 5035, 262, 5033, 5032,
	301, 212, 217, 5031, 205, 265, 5030, 136, 137, 97,
	76, 26, 184, 56, 357, 162, 320, 261, 280, 5028,
	5027, 5026, 258, 5025, 102, 178, 284, 186, 5024, 275,
	339, 95, 5023, 5022, 115, 2360, 120, 213, 2512, 90,
	215, 5020, 312, 5015, 5014, 5012, 5009, 5008, 5004, 5001,
	4998, 324, 4997, 4996, 4995, 44, 277, 4992, 273, 216,
	283, 132, 77, 266, 173, 3211, 153, 166, 279, 85,
	17, 6, 314, 4990, 7126, 88, 4989, 0, 15519, 11494,
	16651, 4987, 4984, 17723, 4983, 3155, 4981, 4979, 4977, 296,
	103, 4976, 4972, 4968, 141, 4967, 118, 4943, 4942, 100,
	4941, 30, 23, 24, 35, 36, 367, 973, 4939, 4936,
	45, 181, 64, 4935, 360, 322, 4934, 4933, 4932, 4931,
	147, 4929, 68, 4927, 63, 4926, 4923, 71, 18, 38,
	4922, 4920, 264, 235, 4261, 237, 204, 4919, 158, 47,
	4918, 351, 89, 199, 4917, 4913, 372, 286, 295, 130,
	4908, 338, 4907, 289, 4906, 22, 37, 4905, 4904, 352,
	167, 160, 93, 343, 189, 67, 4903, 4902, 4901, 4900,
	255, 4898, 231, 4897, 4896, 4895, 146, 203, 4894, 75,
	60, 4892, 4891, 119, 304, 244, 349, 66, 4890, 4889,
	41, 309, 311, 4888, 342, 267, 4887, 191, 308, 4886,
	4885, 243, 157, 4879, 4878, 4877, 399, 4876, 4875, 347,
	4874, 4873, 4363, 353, 4872, 40, 4871, 4870, 4868, 16,
	4867, 4866, 282, 4093, 4865, 4860, 58, 4856, 263,
}

var sqlR1 = [...]int16{
	0, 1, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 4, 4,
	4, 4, 4, 4, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 8, 8, 8, 8, 8, 8,
	8, 8, 8, 8, 8, 14, 14, 10, 10, 10,
	10, 11, 11, 11, 11, 11, 71, 71, 12, 12,
	12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
	12, 12, 12, 12, 20, 20, 20, 20, 20, 20,
	21, 21, 21, 21, 21, 50, 52, 51, 45, 45,
	46, 46, 47, 48, 48, 53, 55, 54, 56, 57,
	57, 58, 58, 58, 13, 13, 13, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 24, 24, 59, 59,
	25, 25, 61, 61, 26, 26, 62, 62, 726, 726,
	726, 727, 727, 728, 728, 728, 29, 64, 66, 66,
	465, 465, 465, 465, 22, 23, 23, 23, 23, 729,
	729, 729, 729, 49, 30, 65, 42, 42, 42, 42,
	42, 273, 273, 273, 273, 28, 28, 60, 60, 332,
	332, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 725, 725, 334, 334, 333, 319, 319, 320, 320,
	321, 321, 730, 730, 335, 335, 335, 336, 336, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 619,
	619, 619, 650, 650, 650, 650, 652, 652, 780, 780,
	781, 781, 781, 781, 781, 176, 176, 501, 501, 501,
	83, 83, 83, 83, 83, 715, 715, 275, 275, 275,
	277, 277, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 782, 782, 110, 110, 111,
	111, 327, 327, 326, 326, 326, 326, 326, 326, 326,
	736, 736, 735, 774, 774, 734, 734, 737, 737, 737,
	274, 274, 274, 107, 107, 131, 131, 172, 172, 172,
	172, 172, 172, 172, 173, 173, 174, 174, 278, 278,
	278, 280, 280, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 784, 784, 783, 783,
	298, 19, 19, 155, 155, 155, 155, 155, 155, 155,
	150, 150, 654, 654, 655, 655, 269, 269, 270, 270,
	270, 270, 271, 271, 272, 272, 272, 85, 99, 99,
	99, 99, 99, 99, 293, 293, 293, 295, 295, 297,
	297, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 86, 86, 86, 86, 86, 86, 86,
	86, 86, 87, 87, 87, 87, 87, 88, 88, 88,
	88, 88, 88, 89, 89, 89, 89, 89, 89, 90,
	90, 97, 97, 97, 97, 97, 97, 97, 97, 246,
	246, 100, 100, 100, 100, 100, 100, 100, 100, 100,
	100, 100, 100, 100, 100, 100, 100, 115, 115, 115,
	115, 115, 786, 786, 120, 120, 281, 281, 281, 283,
	283, 282, 282, 101, 101, 101, 101, 101, 106, 106,
	106, 106, 106, 118, 118, 119, 119, 746, 746, 747,
	747, 748, 748, 766, 752, 752, 753, 753, 756, 756,
	756, 757, 757, 757, 757, 757, 765, 765, 765, 765,
	765, 759, 758, 760, 760, 761, 761, 763, 763, 763,
	763, 763, 764, 764, 764, 764, 764, 764, 764, 764,
	764, 764, 764, 764, 764, 764, 764, 764, 764, 751,
	767, 768, 768, 769, 769, 770, 770, 770, 773, 773,
	139, 139, 139, 140, 140, 140, 772, 772, 771, 771,
	754, 754, 755, 755, 75, 762, 762, 787, 787, 76,
	77, 78, 79, 80, 81, 82, 749, 749, 785, 785,
	785, 785, 785, 785, 785, 785, 785, 785, 785, 785,
	785, 785, 785, 785, 785, 788, 788, 789, 789, 790,
	790, 790, 790, 790, 790, 790, 790, 790, 790, 790,
	790, 790, 790, 790, 790, 790, 790, 104, 104, 104,
	104, 104, 104, 104, 104, 104, 104, 104, 104, 104,
	104, 104, 104, 104, 104, 104, 104, 104, 121, 121,
	453, 453, 416, 416, 122, 122, 122, 123, 123, 124,
	124, 124, 124, 102, 102, 102, 103, 103, 103, 712,
	712, 713, 719, 791, 791, 608, 608, 606, 606, 607,
	126, 126, 469, 469, 469, 503, 503, 502, 500, 500,
	127, 127, 127, 127, 127, 127, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 137, 137, 137, 137, 137,
	138, 138, 138, 135, 135, 135, 132, 132, 132, 130,
	130, 130, 136, 136, 136, 141, 141, 141, 142, 142,
	718, 402, 402, 134, 134, 134, 133, 133, 133, 475,
	475, 476, 478, 477, 143, 143, 143, 143, 417, 144,
	144, 144, 144, 144, 144, 144, 144, 147, 147, 147,
	147, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 149, 149, 149, 149, 149, 149,
	149, 149, 149, 610, 610, 5, 5, 325, 325, 324,
	324, 324, 324, 6, 6, 6, 330, 330, 329, 328,
	231, 231, 524, 524, 524, 524, 524, 524, 232, 232,
	233, 233, 233, 233, 145, 145, 145, 570, 570, 151,
	151, 151, 518, 518, 152, 152, 152, 152, 152, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	722, 722, 467, 467, 364, 364, 364, 364, 164, 164,
	164, 164, 165, 165, 165, 165, 166, 166, 255, 255,
	182, 182, 182, 182, 181, 181, 181, 181, 181, 181,
	181, 181, 91, 91, 91, 92, 92, 93, 93, 94,
	94, 95, 95, 96, 96, 96, 96, 96, 185, 185,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 523, 523, 40, 41, 41, 41, 41, 41, 39,
	39, 39, 39, 39, 37, 37, 37, 37, 37, 186,
	186, 777, 777, 38, 38, 38, 38, 38, 38, 35,
	35, 36, 36, 188, 184, 184, 184, 184, 184, 184,
	184, 183, 183, 187, 187, 187, 187, 189, 191, 191,
	191, 191, 191, 190, 190, 190, 190, 190, 192, 192,
	644, 644, 486, 486, 642, 642, 666, 666, 666, 643,
	643, 423, 423, 423, 423, 423, 424, 424, 424, 653,
	653, 653, 653, 653, 653, 193, 193, 193, 193, 193,
	193, 193, 193, 193, 193, 193, 193, 193, 193, 193,
	193, 193, 193, 193, 193, 193, 193, 193, 193, 193,
	193, 193, 193, 193, 193, 193, 193, 193, 193, 193,
	193, 193, 193, 193, 193, 193, 193, 193, 193, 193,
	193, 193, 193, 193, 193, 193, 193, 193, 193, 193,
	193, 193, 193, 193, 193, 193, 193, 193, 193, 193,
	193, 193, 193, 193, 193, 193, 193, 193, 193, 193,
	193, 193, 193, 193, 193, 193, 193, 193, 193, 256,
	256, 256, 257, 257, 262, 262, 263, 263, 263, 264,
	264, 264, 261, 261, 261, 258, 258, 259, 259, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 267,
	267, 265, 265, 266, 266, 793, 793, 792, 792, 268,
	268, 268, 268, 268, 224, 224, 224, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 487, 487, 227, 227, 227, 211, 211, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 284, 284,
	284, 284, 284, 287, 287, 287, 289, 289, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 291,
	291, 291, 292, 292, 290, 290, 290, 202, 202, 202,
	202, 202, 202, 202, 202, 203, 203, 203, 195, 195,
	213, 213, 213, 213, 213, 204, 204, 205, 205, 205,
	205, 206, 206, 206, 206, 238, 238, 210, 210, 210,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 196,
	197, 197, 197, 197, 215, 215, 215, 215, 527, 527,
	527, 244, 244, 214, 214, 214, 214, 214, 214, 214,
	214, 214, 214, 214, 214, 214, 214, 214, 214, 214,
	214, 214, 286, 286, 285, 241, 241, 241, 241, 241,
	241, 738, 738, 739, 739, 739, 739, 234, 234, 234,
	234, 234, 234, 586, 586, 225, 225, 225, 225, 230,
	230, 230, 230, 208, 208, 208, 208, 209, 209, 209,
	209, 236, 236, 236, 236, 508, 508, 222, 222, 222,
	223, 223, 223, 228, 228, 243, 229, 454, 454, 226,
	226, 235, 235, 235, 235, 237, 237, 237, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 199, 199, 200, 200, 200, 200, 201, 201, 201,
	201, 239, 239, 221, 221, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 794, 794, 217, 217,
	217, 216, 216, 216, 216, 216, 216, 216, 216, 775,
	775, 776, 776, 776, 776, 776, 776, 776, 776, 776,
	776, 219, 219, 220, 220, 220, 220, 220, 220, 220,
	218, 207, 207, 242, 720, 720, 716, 716, 716, 716,
	716, 716, 716, 716, 716, 716, 716, 714, 714, 714,
	714, 714, 714, 714, 714, 714, 717, 717, 717, 717,
	717, 721, 721, 156, 156, 156, 156, 156, 156, 156,
	167, 167, 167, 167, 167, 167, 167, 170, 170, 157,
	157, 157, 157, 157, 157, 157, 160, 160, 158, 158,
	158, 158, 159, 159, 112, 112, 112, 112, 112, 18,
	18, 18, 113, 113, 355, 355, 303, 303, 303, 441,
	441, 304, 304, 431, 431, 431, 431, 299, 299, 300,
	300, 301, 302, 302, 114, 114, 795, 795, 795, 731,
	731, 731, 732, 732, 732, 732, 732, 732, 425, 425,
	426, 426, 550, 550, 550, 550, 550, 429, 429, 429,
	430, 430, 430, 430, 430, 430, 430, 430, 430, 439,
	440, 440, 432, 432, 438, 437, 437, 436, 436, 435,
	435, 433, 434, 434, 434, 443, 443, 442, 445, 445,
	444, 549, 675, 675, 677, 677, 677, 677, 677, 677,
	677, 679, 679, 679, 679, 679, 679, 679, 679, 679,
	679, 679, 679, 679, 679, 679, 679, 679, 528, 528,
	796, 796, 797, 798, 673, 673, 673, 673, 673, 674,
	669, 669, 670, 670, 670, 670, 670, 427, 427, 428,
	428, 428, 428, 671, 672, 463, 463, 591, 676, 676,
	678, 678, 680, 799, 799, 799, 799, 799, 799, 800,
	800, 800, 548, 548, 547, 547, 546, 546, 451, 451,
	681, 681, 681, 681, 682, 682, 682, 682, 682, 685,
	684, 683, 683, 683, 683, 683, 117, 117, 117, 505,
	505, 504, 504, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 251, 251, 367, 367, 367, 109, 109, 109, 15,
	15, 15, 15, 15, 15, 15, 383, 383, 16, 16,
	16, 16, 733, 733, 733, 116, 116, 116, 116, 116,
	116, 449, 449, 449, 366, 366, 366, 366, 366, 366,
	366, 366, 366, 366, 366, 366, 366, 366, 366, 366,
	366, 366, 366, 366, 366, 366, 366, 366, 366, 366,
	366, 366, 724, 724, 723, 723, 368, 368, 802, 802,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 611,
	611, 612, 612, 614, 614, 613, 613, 108, 108, 108,
	108, 108, 529, 529, 526, 526, 525, 525, 462, 462,
	589, 589, 589, 590, 373, 373, 374, 374, 322, 322,
	322, 464, 464, 464, 464, 464, 44, 43, 27, 27,
	31, 31, 32, 32, 354, 354, 354, 354, 354, 354,
	354, 354, 354, 33, 33, 68, 68, 68, 68, 69,
	69, 69, 69, 72, 72, 73, 73, 67, 67, 67,
	67, 70, 70, 63, 63, 74, 74, 74, 74, 74,
	740, 742, 742, 741, 741, 745, 745, 745, 745, 745,
	745, 743, 743, 404, 404, 744, 744, 778, 778, 779,
	779, 163, 163, 168, 168, 168, 168, 168, 169, 169,
	169, 169, 171, 171, 171, 171, 180, 180, 247, 247,
	247, 247, 247, 247, 247, 84, 84, 98, 98, 178,
	804, 804, 804, 179, 179, 179, 248, 248, 248, 248,
	249, 249, 250, 250, 803, 803, 365, 365, 543, 543,
	544, 544, 805, 805, 545, 545, 545, 545, 545, 358,
	357, 359, 359, 360, 360, 105, 105, 105, 344, 344,
	343, 346, 346, 345, 348, 348, 347, 349, 349, 350,
	350, 341, 341, 656, 656, 352, 352, 352, 353, 353,
	337, 337, 338, 338, 339, 339, 340, 340, 356, 356,
	651, 651, 806, 806, 154, 154, 154, 254, 254, 415,
	415, 415, 536, 536, 536, 452, 452, 380, 380, 542,
	542, 542, 542, 542, 499, 499, 499, 253, 253, 473,
	473, 489, 489, 490, 490, 603, 603, 491, 161, 161,
	162, 162, 177, 177, 307, 307, 305, 305, 305, 305,
	305, 305, 305, 305, 312, 312, 313, 313, 314, 314,
	315, 316, 316, 316, 316, 479, 479, 317, 317, 317,
	306, 306, 306, 308, 308, 308, 308, 308, 308, 308,
	311, 311, 311, 311, 318, 318, 318, 310, 310, 692,
	692, 692, 694, 694, 696, 696, 696, 695, 691, 691,
	693, 693, 801, 801, 507, 507, 507, 448, 450, 446,
	446, 447, 447, 458, 458, 459, 459, 455, 456, 457,
	457, 457, 457, 460, 460, 460, 460, 461, 461, 461,
	588, 588, 587, 323, 323, 323, 496, 496, 496, 496,
	497, 497, 532, 532, 530, 530, 530, 530, 531, 531,
	533, 533, 533, 534, 534, 535, 535, 493, 493, 494,
	494, 495, 495, 495, 495, 566, 566, 309, 309, 309,
	470, 470, 470, 471, 471, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 557, 557, 555,
	555, 555, 555, 592, 592, 592, 592, 592, 592, 592,
	592, 592, 593, 594, 594, 472, 472, 595, 539, 539,
	540, 540, 537, 537, 538, 538, 541, 541, 710, 710,
	710, 711, 711, 585, 585, 596, 596, 596, 596, 596,
	596, 581, 581, 582, 582, 583, 583, 584, 584, 604,
	605, 605, 511, 511, 511, 511, 509, 509, 512, 512,
	512, 512, 512, 510, 510, 597, 597, 597, 597, 498,
	498, 252, 252, 598, 598, 598, 598, 599, 600, 600,
	601, 601, 551, 552, 552, 615, 615, 615, 615, 617,
	468, 468, 468, 468, 468, 668, 667, 667, 616, 616,
	616, 616, 616, 616, 616, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 631, 632, 632, 632,
	632, 632, 632, 632, 618, 618, 618, 618, 618, 618,
	618, 622, 622, 622, 621, 621, 621, 621, 621, 621,
	621, 621, 621, 621, 621, 623, 623, 628, 628, 629,
	629, 629, 624, 625, 630, 630, 630, 630, 807, 807,
	634, 634, 626, 626, 626, 626, 626, 626, 626, 626,
	626, 620, 620, 620, 627, 627, 627, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	519, 519, 521, 521, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 560, 560, 560, 560,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 686, 686, 686, 686, 686,
	686, 686, 686, 372, 372, 562, 562, 689, 689, 690,
	690, 687, 687, 687, 687, 687, 687, 687, 687, 687,
	687, 687, 687, 687, 687, 687, 687, 687, 687, 687,
	687, 687, 687, 687, 688, 688, 688, 688, 688, 688,
	688, 688, 688, 688, 688, 688, 688, 688, 688, 688,
	688, 688, 688, 688, 688, 688, 688, 688, 688, 688,
	688, 688, 688, 688, 688, 688, 688, 688, 688, 688,
	688, 688, 697, 697, 698, 698, 700, 700, 701, 701,
	702, 703, 703, 703, 704, 705, 705, 699, 699, 706,
	706, 706, 706, 707, 707, 708, 708, 708, 708, 708,
	709, 709, 709, 709, 709, 572, 572, 573, 573, 579,
	579, 579, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 422, 422,
	421, 369, 369, 369, 369, 369, 369, 484, 484, 482,
	482, 482, 485, 485, 483, 483, 481, 481, 480, 480,
	569, 569, 567, 567, 571, 571, 513, 513, 633, 633,
	633, 633, 633, 633, 633, 633, 514, 514, 514, 522,
	515, 515, 516, 516, 516, 516, 516, 563, 564, 517,
	517, 517, 565, 565, 574, 578, 578, 577, 576, 576,
	575, 575, 553, 553, 554, 554, 492, 492, 808, 808,
	488, 488, 602, 602, 602, 602, 662, 662, 419, 419,
	474, 474, 418, 418, 410, 410, 411, 411, 411, 411,
	466, 466, 580, 580, 635, 635, 636, 636, 637, 637,
	638, 638, 639, 640, 641, 568, 568, 391, 390, 377,
	378, 389, 388, 387, 376, 379, 384, 385, 386, 381,
	382, 398, 397, 396, 342, 342, 351, 351, 403, 405,
	405, 408, 408, 409, 407, 406, 406, 393, 394, 395,
	609, 375, 412, 412, 413, 413, 413, 414, 414, 414,
	414, 370, 370, 370, 371, 371, 399, 399, 400, 401,
	401, 392, 392, 392, 361, 361, 361, 362, 362, 363,
	363, 649, 649, 646, 646, 646, 647, 647, 647, 750,
	648, 648, 648, 648, 645, 645, 645, 645, 645, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 663, 663, 663, 663, 663,
	663, 663, 663, 663, 663, 663, 663, 663, 663, 663,
	663, 663, 663, 663, 663, 663, 663, 663, 663, 663,
	663, 663, 663, 663, 663, 663, 663, 663, 663, 663,
	663, 663, 663, 663, 663, 663, 663, 663, 663, 663,
	663, 663, 663, 663, 663, 663, 663, 663, 663, 658,
	658, 659, 659, 659, 659, 659, 659, 659, 659, 659,
	659, 659, 659, 659, 659, 659, 659, 659, 659, 660,
	664, 664, 664, 664, 664, 664, 664, 664, 664, 664,
	664, 664, 664, 664, 664, 664, 664, 664, 664, 664,
	664, 664, 664, 664, 664, 664, 664, 664, 664, 664,
	664, 664, 664, 664, 664, 664, 664, 664, 664, 664,
	664, 664, 664, 664, 664, 664, 664, 664, 664, 664,
	664, 664, 664, 664, 664, 664, 664, 664, 664, 664,
	664, 664, 664, 664, 664, 664, 664, 664, 664, 664,
	664, 664, 664, 664, 664, 664, 664, 664, 664, 664,
	665, 665, 665, 665,
}

var sqlR2 = [...]int8{
	0, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 2, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 3, 1, 1, 1,
	3, 1, 1, 1, 1, 3, 4, 6, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 1, 1, 3, 3, 6, 4, 4, 6, 9,
	6, 8, 4, 4, 5, 9, 7, 9, 5, 6,
	8, 7, 7, 9, 1, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 6, 4, 6,
	6, 9, 6, 9, 6, 5, 6, 5, 1, 1,
	1, 1, 1, 1, 0, 1, 6, 6, 4, 6,
	2, 1, 1, 2, 4, 8, 7, 10, 9, 4,
	4, 4, 3, 4, 4, 4, 7, 7, 9, 8,
	9, 5, 3, 5, 7, 4, 12, 4, 12, 1,
	3, 5, 5, 2, 5, 3, 6, 4, 4, 4,
	6, 5, 6, 5, 6, 4, 8, 3, 8, 4,
	2, 3, 10, 3, 6, 4, 3, 1, 3, 4,
	4, 2, 1, 1, 3, 1, 3, 2, 4, 3,
	2, 3, 2, 0, 1, 1, 0, 2, 0, 7,
	10, 6, 8, 6, 6, 6, 9, 4, 3, 2,
	2, 0, 1, 1, 1, 1, 1, 3, 1, 3,
	6, 4, 6, 7, 9, 6, 2, 2, 3, 0,
	8, 6, 8, 7, 2, 0, 1, 2, 5, 0,
	1, 3, 3, 1, 3, 1, 3, 3, 3, 3,
	4, 1, 3, 1, 3, 1, 1, 12, 6, 5,
	4, 1, 3, 3, 3, 3, 2, 4, 4, 4,
	1, 1, 2, 1, 4, 1, 0, 3, 3, 0,
	4, 6, 0, 6, 4, 4, 4, 5, 7, 6,
	8, 7, 9, 2, 1, 3, 1, 3, 2, 5,
	0, 1, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 3, 1, 3, 3, 3, 3,
	1, 1, 1, 4, 3, 1, 1, 1, 1, 1,
	1, 3, 3, 6, 4, 9, 7, 12, 9, 2,
	7, 2, 1, 1, 1, 3, 3, 0, 3, 1,
	3, 1, 1, 3, 2, 5, 0, 2, 7, 5,
	6, 5, 7, 6, 2, 4, 0, 1, 2, 1,
	3, 3, 1, 1, 2, 2, 2, 2, 1, 2,
	2, 3, 4, 3, 3, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 1, 2, 2, 2, 2, 2,
	2, 2, 3, 1, 2, 1, 2, 1, 2, 1,
	2, 2, 3, 3, 3, 3, 3, 3, 5, 3,
	3, 5, 3, 3, 5, 3, 3, 5, 3, 4,
	3, 6, 6, 6, 6, 6, 8, 4, 4, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 4, 7, 11,
	14, 3, 1, 2, 0, 2, 2, 5, 0, 1,
	3, 3, 4, 1, 2, 1, 2, 3, 6, 3,
	8, 5, 3, 13, 4, 9, 4, 2, 0, 1,
	0, 1, 0, 1, 1, 0, 1, 3, 1, 3,
	3, 3, 3, 2, 2, 1, 1, 1, 1, 2,
	1, 1, 1, 1, 0, 1, 2, 3, 2, 1,
	1, 1, 4, 5, 1, 1, 1, 1, 3, 3,
	2, 2, 1, 2, 2, 2, 2, 1, 1, 1,
	2, 1, 1, 3, 0, 1, 4, 0, 2, 0,
	4, 6, 3, 4, 6, 3, 1, 3, 2, 1,
	3, 2, 1, 3, 5, 1, 2, 1, 0, 6,
	6, 6, 8, 6, 6, 6, 1, 0, 4, 3,
	3, 4, 3, 4, 4, 4, 7, 3, 3, 4,
	3, 3, 3, 3, 3, 1, 0, 1, 0, 4,
	3, 3, 3, 3, 3, 6, 4, 4, 4, 5,
	3, 3, 3, 3, 3, 3, 3, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 4, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 7, 3,
	2, 0, 1, 3, 1, 3, 0, 1, 2, 2,
	1, 2, 1, 6, 10, 5, 10, 15, 6, 1,
	3, 3, 1, 1, 0, 2, 0, 2, 0, 2,
	10, 3, 1, 4, 0, 1, 3, 2, 2, 0,
	2, 2, 2, 2, 2, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 4, 6, 5, 7, 3,
	4, 6, 3, 4, 6, 3, 5, 7, 3, 4,
	6, 3, 4, 6, 3, 4, 6, 3, 0, 1,
	1, 1, 3, 4, 6, 3, 3, 5, 3, 1,
	3, 1, 1, 1, 2, 2, 2, 2, 1, 2,
	2, 5, 3, 3, 6, 6, 3, 1, 1, 1,
	1, 1, 1, 2, 1, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 2, 1,
	1, 2, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 3, 4, 3, 1, 2, 3,
	2, 2, 2, 4, 6, 3, 1, 2, 2, 7,
	3, 3, 2, 1, 2, 3, 2, 3, 0, 2,
	2, 1, 4, 3, 5, 7, 2, 3, 0, 3,
	5, 2, 3, 0, 2, 3, 2, 3, 2, 7,
	4, 7, 8, 8, 9, 11, 11, 11, 11, 6,
	2, 6, 9, 4, 7, 7, 10, 7, 10, 10,
	10, 13, 10, 13, 10, 13, 5, 8, 5, 2,
	2, 1, 1, 3, 1, 1, 1, 1, 1, 2,
	1, 2, 2, 3, 2, 2, 4, 3, 2, 2,
	1, 2, 1, 3, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 3, 5, 4, 6, 4, 3,
	0, 1, 3, 2, 4, 2, 4, 1, 6, 3,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	3, 1, 3, 6, 6, 6, 5, 5, 5, 5,
	5, 9, 7, 6, 4, 4, 5, 5, 4, 1,
	1, 1, 1, 6, 6, 6, 6, 5, 5, 1,
	3, 1, 3, 5, 4, 5, 3, 3, 2, 2,
	6, 3, 3, 3, 3, 4, 4, 3, 1, 3,
	3, 2, 2, 1, 3, 3, 3, 1, 2, 1,
	1, 2, 2, 3, 1, 1, 1, 1, 1, 1,
	3, 2, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 2, 1, 1, 1, 2, 1, 2,
	2, 2, 9, 2, 1, 0, 1, 1, 0, 1,
	2, 0, 2, 2, 0, 2, 2, 2, 2, 1,
	2, 3, 3, 4, 4, 4, 4, 3, 3, 1,
	1, 1, 0, 1, 1, 1, 0, 1, 1, 3,
	3, 3, 3, 3, 2, 3, 3, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 2,
	1, 2, 3, 6, 8, 3, 3, 3, 4, 8,
	6, 4, 5, 5, 5, 5, 5, 3, 0, 1,
	1, 1, 1, 2, 5, 0, 1, 3, 1, 1,
	2, 1, 1, 3, 3, 3, 1, 3, 1, 2,
	5, 0, 1, 3, 3, 3, 3, 4, 4, 3,
	4, 4, 3, 4, 4, 1, 4, 4, 5, 3,
	5, 5, 5, 7, 3, 3, 3, 5, 7, 7,
	4, 2, 6, 4, 3, 2, 3, 4, 4, 3,
	5, 3, 6, 5, 6, 3, 5, 6, 3, 3,
	5, 3, 5, 3, 3, 4, 4, 5, 0, 1,
	1, 1, 1, 3, 2, 4, 3, 4, 3, 4,
	3, 5, 5, 3, 4, 4, 3, 5, 4, 5,
	3, 4, 1, 3, 2, 3, 4, 4, 5, 3,
	3, 1, 1, 0, 2, 3, 2, 5, 4, 6,
	4, 6, 4, 1, 0, 3, 4, 4, 5, 7,
	5, 3, 3, 6, 4, 2, 3, 6, 4, 2,
	3, 3, 4, 4, 5, 2, 0, 4, 2, 3,
	4, 2, 3, 3, 3, 7, 5, 2, 0, 3,
	3, 4, 3, 3, 3, 5, 3, 3, 4, 5,
	5, 4, 4, 5, 6, 4, 4, 4, 4, 4,
	3, 0, 2, 4, 5, 4, 4, 5, 6, 5,
	5, 2, 3, 2, 3, 6, 6, 7, 9, 7,
	9, 4, 3, 4, 4, 5, 1, 1, 10, 10,
	3, 6, 6, 6, 5, 3, 3, 4, 4, 0,
	2, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	3, 5, 6, 4, 4, 5, 5, 2, 6, 3,
	2, 5, 5, 4, 2, 0, 1, 1, 1, 1,
	2, 3, 2, 2, 3, 2, 2, 1, 1, 1,
	1, 3, 2, 2, 2, 2, 2, 2, 2, 2,
	1, 2, 0, 1, 2, 1, 2, 1, 2, 2,
	1, 2, 1, 2, 1, 2, 2, 4, 3, 3,
	7, 3, 3, 7, 3, 3, 3, 3, 3, 3,
	3, 3, 4, 3, 3, 6, 5, 8, 3, 6,
	6, 3, 12, 15, 1, 0, 1, 2, 3, 0,
	2, 0, 4, 0, 4, 5, 4, 1, 1, 1,
	3, 3, 1, 3, 10, 13, 0, 2, 3, 1,
	1, 0, 1, 2, 2, 2, 2, 1, 1, 0,
	1, 3, 1, 1, 1, 2, 3, 3, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 0, 1, 0, 1, 1, 0, 1, 4, 1,
	0, 3, 7, 7, 1, 1, 3, 7, 1, 3,
	11, 3, 2, 0, 3, 1, 2, 2, 3, 2,
	6, 2, 1, 2, 2, 3, 6, 4, 2, 3,
	5, 5, 5, 2, 5, 5, 2, 2, 2, 0,
	1, 1, 3, 4, 10, 11, 12, 9, 10, 5,
	3, 1, 5, 9, 7, 11, 3, 3, 0, 2,
	4, 3, 3, 1, 6, 1, 3, 1, 2, 0,
	1, 2, 3, 0, 1, 3, 3, 2, 2, 1,
	1, 1, 4, 0, 3, 0, 4, 0, 3, 0,
	2, 2, 2, 0, 1, 1, 2, 2, 0, 3,
	3, 2, 1, 1, 2, 2, 5, 8, 4, 1,
	0, 1, 2, 2, 1, 2, 3, 3, 2, 2,
	3, 2, 2, 2, 2, 2, 3, 1, 2, 3,
	1, 4, 2, 3, 2, 2, 4, 7, 3, 4,
	6, 5, 7, 5, 5, 3, 3, 0, 2, 2,
	2, 2, 1, 1, 1, 8, 10, 11, 8, 11,
	5, 4, 2, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 0, 3, 3, 0, 1,
	8, 11, 3, 7, 10, 6, 5, 3, 4, 1,
	0, 1, 3, 1, 0, 2, 4, 17, 20, 16,
	19, 4, 2, 0, 1, 0, 1, 0, 1, 3,
	2, 4, 2, 3, 1, 0, 2, 0, 1, 1,
	0, 2, 1, 1, 2, 0, 9, 6, 6, 8,
	6, 8, 5, 7, 2, 6, 7, 4, 4, 5,
	2, 4, 6, 6, 8, 6, 7, 8, 9, 6,
	7, 8, 9, 6, 8, 6, 8, 6, 7, 8,
	9, 6, 8, 6, 8, 6, 6, 8, 8, 4,
	7, 3, 0, 7, 10, 1, 1, 1, 1, 1,
	2, 3, 0, 3, 0, 3, 0, 1, 0, 2,
	0, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 1, 2,
	1, 2, 1, 2, 1, 3, 2, 2, 2, 2,
	1, 1, 0, 2, 4, 2, 1, 2, 1, 2,
	3, 2, 2, 2, 1, 0, 2, 1, 1, 0,
	1, 3, 1, 0, 1, 1, 1, 1, 1, 2,
	3, 2, 2, 1, 2, 16, 19, 3, 1, 0,
	4, 1, 0, 4, 1, 0, 5, 1, 0, 2,
	2, 3, 0, 1, 1, 4, 4, 5, 1, 0,
	3, 0, 3, 0, 3, 0, 3, 0, 4, 0,
	3, 0, 1, 0, 6, 7, 3, 6, 3, 1,
	3, 1, 1, 4, 2, 1, 3, 1, 3, 4,
	8, 11, 7, 10, 2, 2, 0, 10, 3, 2,
	0, 1, 3, 1, 1, 3, 3, 5, 6, 4,
	5, 4, 1, 1, 3, 3, 1, 2, 4, 4,
	2, 3, 5, 5, 1, 3, 1, 0, 1, 2,
	3, 2, 4, 2, 3, 0, 2, 0, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	8, 8, 8, 2, 4, 4, 4, 2, 2, 2,
	2, 3, 1, 3, 1, 2, 0, 7, 1, 0,
	1, 0, 1, 0, 1, 1, 0, 1, 5, 1,
	0, 1, 0, 1, 0, 1, 0, 3, 3, 3,
	3, 5, 5, 1, 1, 3, 3, 1, 3, 3,
	4, 5, 3, 2, 2, 0, 2, 2, 1, 1,
	1, 0, 1, 0, 2, 2, 5, 4, 2, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 1,
	3, 1, 3, 3, 3, 2, 0, 4, 2, 5,
	3, 2, 0, 1, 3, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 3, 5, 5, 1, 3, 2,
	4, 4, 0, 4, 4, 3, 4, 1, 5, 3,
	4, 5, 5, 1, 5, 1, 3, 2, 3, 0,
	1, 3, 0, 3, 1, 3, 1, 2, 0, 2,
	3, 1, 3, 2, 0, 3, 5, 6, 4, 6,
	4, 3, 2, 1, 0, 3, 2, 1, 0, 5,
	1, 0, 2, 2, 2, 1, 1, 0, 1, 1,
	1, 1, 0, 4, 2, 1, 2, 2, 4, 1,
	3, 2, 2, 1, 2, 3, 2, 4, 1, 0,
	1, 0, 2, 1, 0, 2, 5, 7, 2, 1,
	2, 4, 3, 5, 0, 1, 3, 5, 1, 2,
	1, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 6, 6, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 0, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 1, 3, 0, 5, 4, 1,
	2, 1, 4, 1, 1, 2, 1, 1, 1, 1,
	1, 0, 1, 2, 5, 1, 4, 2, 5, 1,
	4, 3, 3, 0, 1, 2, 4, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	1, 0, 1, 4, 1, 3, 3, 3, 5, 2,
	2, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 3, 3,
	3, 2, 2, 3, 5, 4, 6, 3, 5, 4,
	6, 4, 6, 5, 7, 3, 3, 3, 3, 3,
	4, 3, 2, 4, 2, 3, 3, 4, 3, 4,
	3, 4, 5, 6, 6, 7, 6, 7, 6, 7,
	3, 4, 4, 1, 3, 1, 3, 3, 2, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 3, 5, 6, 6, 7, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 6, 1, 1, 1, 1,
	1, 1, 2, 1, 5, 5, 6, 3, 1, 1,
	1, 2, 2, 2, 4, 3, 5, 6, 8, 6,
	5, 4, 3, 1, 4, 2, 2, 4, 1, 1,
	1, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 6, 6, 8, 8, 6, 4, 6,
	6, 6, 4, 1, 3, 3, 3, 3, 3, 4,
	3, 3, 4, 3, 3, 4, 3, 3, 4, 3,
	3, 3, 3, 3, 4, 3, 4, 3, 4, 3,
	4, 4, 3, 6, 5, 5, 5, 4, 4, 3,
	4, 3, 5, 0, 5, 0, 2, 0, 1, 3,
	3, 2, 2, 0, 6, 1, 0, 3, 0, 3,
	3, 3, 0, 1, 4, 2, 2, 2, 2, 2,
	3, 2, 2, 3, 0, 4, 1, 1, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 1, 1, 1, 2, 1, 2, 2, 3, 1,
	2, 3, 2, 3, 2, 3, 1, 0, 1, 3,
	1, 3, 3, 3, 1, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 3, 1, 2,
	3, 0, 3, 3, 2, 2, 1, 2, 2, 3,
	2, 1, 1, 1, 5, 1, 2, 4, 2, 0,
	1, 0, 3, 5, 1, 0, 1, 2, 1, 0,
	1, 3, 3, 2, 1, 1, 1, 1, 1, 3,
	1, 3, 3, 1, 1, 1, 1, 5, 3, 1,
	1, 3, 1, 1, 1, 1, 2, 2, 1, 1,
	2, 2, 1, 1, 1, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 1,
	3, 1, 3, 1, 3, 1, 0, 1, 1, 1,
	1, 1, 1, 1, 3, 5, 7, 1, 7, 5,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 0, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1,
}

var sqlChk = [...]int16{
	-1000, -1, -2, 709, -3, -248, -146, -143, -85, -99,
	-97, -151, -152, -127, -153, -145, -175, -180, -161, -162,
	-163, -176, -182, -247, -256, -257, -258, -259, -268, -252,
	-196, -249, -250, -4, -83, -86, -100, -126, -128, -144,
	-155, -154, -156, -164, -172, -167, -150, -91, -177, -181,
	-193, -251, -253, -254, 33, 32, 69, 115, 93, 178,
	148, 159, 236, 444, 501, 513, 463, 164, 488, 469,
	-187, -188, 536, -84, -98, -179, -178, 85, 149, 196,
	346, 479, 626, 543, 56, 170, -7, -15, -34, -19,
	30, 51, -87, -88, -89, -90, 71, -109, -104, -121,
	-102, -106, -107, -115, -101, -785, 118, -693, -129, -133,
	-171, -131, -141, -790, 186, 258, -157, -158, -159, 426,
	-165, -166, 491, -168, -169, -170, 494, 187, -93, -92,
	180, -305, -307, -184, -183, -185, -255, -194, -195, -197,
	-198, -200, -201, -203, -204, -206, -238, -207, -208, -209,
	-210, -211, -212, -213, -214, -218, -241, -215, -216, -217,
	-220, -219, -221, -226, -222, -223, -224, -225, -227, -228,
	-230, -231, -234, -235, -236, -237, -239, -240, -229, -242,
	-205, -243, 616, 562, 95, 505, 21, -8, -9, -10,
	-11, -12, -13, -14, -18, -17, -74, -5, -6, -20,
	-21, -111, -39, -37, -38, -40, -41, -105, -108, -112,
	-113, -114, -125, -116, -117, -118, -119, -103, -110, -692,
	-130, -132, -135, -137, -138, -134, -136, -139, -140, 489,
	679, -308, -306, 706, 685, 635, -202, -24, -29, -25,
	-26, -28, -30, -27, -31, -32, -33, -59, -64, -61,
	-62, -60, -63, -65, -66, -67, -68, -69, -70, -71,
	-72, -73, -43, -49, -50, -44, -45, -46, -47, -48,
	-51, -52, -53, -54, -55, -56, -57, -58, -22, -23,
	-42, -75, -76, -78, -77, -79, -80, -82, -81, 666,
	675, -311, -309, -310, -318, 527, 643, 587, 709, 709,
	709, 709, 709, 709, 709, 709, 709, 709, 709, 709,
	709, 709, 709, 709, 709, 709, 709, 709, 709, 709,
	709, 709, 709, 709, 709, 709, 709, -417, 2, -393,
	-399, -400, -401, -392, -361, -660, -665, 4, -657, -663,
	195, 276, 275, 277, 386, 21, 22, 24, 23, 25,
	26, 27, 28, 30, 31, 43, 41, 45, 46, 47,
	49, 50, 51, 52, 53, 54, 55, 56, 60, 62,
	66, 67, 68, 69, 70, 71, 72, 73, 74, 75,
	79, 84, 85, 86, 87, 92, 93, 94, 95, 96,
	97, 98, 99, 105, 102, 103, 104, 106, 107, 109,
	111, 112, 113, 114, 115, 116, 117, 119, 120, 121,
	123, 124, 125, 133, 134, 135, 136, 137, 139, 148,
	140, 141, 143, 149, 152, 146, 151, 147, 153, 154,
	156, 157, 158, 159, 162, 163, 164, 166, 167, 169,
	168, 171, 172, 173, 175, 176, 178, 179, 180, 183,
	181, 184, 182, 185, 186, 187, 188, 189, 192, 193,
	201, 202, 203, 208, 217, 210, 212, 213, 214, 211,
	215, 218, 219, 222, 223, 224, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 237, 238, 242, 244, 245,
	246, 247, 248, 249, 250, 256, 257, 258, 260, 261,
	262, 263, 264, 265, 266, 270, 271, 272, 273, 280,
	282, 288, 289, 657, 294, 290, 295, 296, 298, 302,
	303, 304, 305, 306, 307, 308, 310, 312, 311, 316,
	314, 318, 319, 322, 323, 324, 325, 326, 327, 331,
	332, 328, 333, 334, 336, 337, 340, 338, 341, 342,
	339, 343, 344, 347, 348, 349, 350, 351, 352, 353,
	354, 355, 356, 357, 358, 345, 346, 361, 359, 363,
	364, 365, 366, 367, 383, 385, 378, 379, 380, 371,
	372, 368, 373, 369, 370, 374, 375, 382, 376, 377,
	388, 389, 390, 391, 394, 254, 281, 396, 397, 400,
	402, 419, 405, 406, 407, 410, 411, 414, 417, 418,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	431, 432, 434, 435, 436, 438, 439, 440, 442, 444,
	445, 447, 448, 449, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 460, 462, 463, 465, 464, 466, 467,
	469, 471, 472, 473, 479, 480, 488, 481, 483, 484,
	485, 486, 487, 489, 490, 491, 492, 493, 494, 495,
	499, 497, 498, 500, 501, 503, 504, 505, 506, 507,
	509, 511, 512, 516, 517, 520, 518, 539, 540, 565,
	513, 514, 515, 519, 521, 522, 523, 524, 526, 525,
	530, 528, 529, 531, 532, 533, 534, 536, 538, 541,
	542, 543, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 556, 558, 559, 560, 561, 562, 563, 586, 564,
	566, 567, 568, 572, 573, 574, 575, 569, 570, 585,
	577, 578, 579, 580, 582, 583, 588, 589, 590, 591,
	592, 593, 594, 595, 596, 597, 599, 607, 620, 608,
	609, 610, 611, 613, 616, 617, 618, 619, 605, 621,
	622, 625, 626, 627, 628, 633, 629, 634, 630, 631,
	632, 635, 637, 640, 641, 642, 649, 647, 648, 650,
	651, 653, 654, 652, 661, 662, 656, 658, 659, 660,
	667, 668, 670, 671, 672, 37, 57, 58, 61, 63,
	65, 80, 81, 82, 88, 142, 144, 177, 190, 191,
	204, 225, 226, 239, 241, 251, 252, 253, 279, 283,
	284, 286, 292, 315, 393, 395, 412, 416, 433, 437,
	441, 443, 461, 508, 537, 554, 571, 576, 600, 601,
	602, 603, 612, 614, 643, 644, 645, 655, 669, -417,
	2, -686, -372, -370, 704, -646, -413, 275, 4, -657,
	-658, -392, -659, -660, 48, 90, 122, 221, 278, 255,
	291, 293, 297, 317, 320, 362, 381, 387, 413, 415,
	502, 544, -393, 706, 403, -386, 2, -361, -361, 444,
	29, 2, 29, 432, 529, 590, 592, 2, -722, -467,
	583, 2, 29, -364, -361, 118, 236, 527, -386, 2,
	-722, 236, -467, 26, 583, 2, -361, 2, 417, 189,
	222, 451, 23, 28, 77, 90, 113, 162, 188, 216,
	-789, 419, 454, 511, 531, 585, 597, 613, 2, 648,
	337, 528, 587, 270, 136, 618, -786, 519, -733, 516,
	517, 417, 450, 593, 655, 503, 240, 636, -365, 2,
	513, -361, 337, 2, 709, 109, 86, 508, 533, -190,
	2, 327, 608, -191, -192, -189, 600, -644, 519, 503,
	361, -361, 709, 709, 709, 29, -375, 2, -361, -375,
	2, -260, 2, -375, -792, -267, -266, -265, 22, 480,
	203, 308, 220, 259, 366, 447, 218, 53, -260, 2,
	587, 270, 519, 136, 583, -397, 698, -399, -524, -786,
	2, -245, 533, 564, 247, 52, 51, 86, 29, 453,
	92, 424, 137, 145, 172, 619, 238, 583, 270, 271,
	303, 95, 108, 109, -527, 49, 296, 79, 295, 517,
	-738, 516, -586, 588, 223, 452, 521, 529, 582, 99,
	308, 513, 608, 610, 118, 637, 504, 672, 458, 459,
	580, 473, 577, 328, 181, 221, 683, 595, 593, 655,
	4, 136, 361, 503, 535, 312, 311, 620, 600, 661,
	327, 512, 427, 97, -803, 2, 608, -803, 2, 709,
	2, 587, 423, 648, 528, 222, 451, 136, 458, 270,
	618, 51, 162, 28, 79, -786, 683, 655, 519, -733,
	680, 681, 337, 145, -715, 2, -714, 4, -663, -657,
	-411, -410, 587, -786, 136, 655, 593, -401, -392, 698,
	-400, 709, 709, 709, 709, 2, 295, 296, 456, 455,
	533, 534, 29, 709, 709, 709, 709, 709, 709, 516,
	189, 2, -786, 188, -746, 23, 28, 77, 108, 113,
	145, 216, 419, 454, 531, 585, 589, 597, 613, -732,
	564, 79, 519, -731, -733, 408, 337, 618, 162, -525,
	136, 327, 234, 627, 592, 590, 624, 152, 282, 632,
	630, 709, 709, 709, 709, -147, 2, 706, 33, 32,
	-146, -97, -151, -85, 164, 543, 536, -298, 587, 287,
	2, -361, 709, 709, 709, 2, 295, 296, 516, 517,
	29, 709, 709, 220, -714, 583, 2, 709, 709, 709,
	2, 29, 295, 296, 516, 517, 287, 2, 79, 522,
	709, 709, 709, 709, 709, 709, 709, 709, 709, 709,
	709, 709, 709, 709, 709, 709, 709, 709, 709, 709,
	709, 709, 709, 709, 709, 709, 709, 709, 709, 709,
	709, 709, 709, 709, 709, 709, 709, 709, 709, 709,
	709, 709, -801, 2, 587, 608, 2, -803, 2, -803,
	2, -804, 608, 669, 709, 709, 709, 709, 709, 709,
	709, 709, 709, 709, 709, 709, 709, 709, 709, 709,
	709, 709, 709, 709, 709, 709, 709, 709, 709, 709,
	709, 709, 709, 709, 709, 709, -306, -308, -307, 709,
	709, 709, 709, 709, 709, 709, 709, 709, -245, 533,
	2, 86, 29, 29, -455, -458, 623, 285, 174, 409,
	-305, -307, 2, -692, 620, 533, -642, 2, -558, -666,
	-560, 696, 697, 689, 584, 78, -421, 384, 673, -572,
	145, 624, 403, 381, -665, -561, -574, 177, 419, 508,
	-485, 8, 9, 5, 6, 7, -372, -562, -568, 615,
	194, 392, -414, 710, 10, 706, -689, -307, -573, 38,
	241, 76, -371, -618, 286, -412, -392, -686, -687, -413,
	-647, -621, -629, -628, -625, -624, -626, -632, -361, 90,
	127, 128, 126, 131, 130, 330, 329, 132, 129, 535,
	636, 77, 37, 251, 252, 292, 393, 253, 88, -688,
	4, -657, -659, 283, 284, 554, 58, 461, 204, 163,
	144, 142, 395, 63, 61, 644, -630, 138, 600, 601,
	602, 603, 225, 226, 65, 190, 191, 416, 441, 576,
	612, 614, 239, 315, -807, 645, 571, 80, 81, 209,
	-694, 464, -695, -386, -694, 709, 709, 711, 709, -446,
	-448, -450, 2, 29, 160, 706, 2, -592, 2, -593,
	-597, -307, 309, -596, 706, -594, 704, -393, 404, -690,
	509, -686, -687, -392, 708, 706, 222, 708, -451, 706,
	-149, -126, -154, -177, -253, -254, 136, 519, 587, 91,
	270, 108, 188, 222, -518, 706, -361, 29, 403, 604,
	711, -722, -467, -447, 449, -570, 706, 403, 406, 220,
	406, -722, 67, 106, -772, 251, 2, -771, -399, -772,
	251, 2, 341, 2, 2, 2, 2, 2, 251, -361,
	587, 135, 307, 2, 2, 2, 2, 2, 2, 2,
	-477, 251, 2, -475, -399, 648, -478, 251, 2, -475,
	-476, 251, 2, -475, -526, 2, 101, -376, 251, 2,
	-361, -402, 251, 2, -397, -523, 251, 2, -561, 704,
	-572, -408, 251, 2, -405, -361, -652, 251, 2, -650,
	4, -657, 132, 535, -558, 2, -177, 2, 67, 86,
	-361, 648, 2, 539, 2, 706, -190, 2, 82, 608,
	48, 533, -191, 2, -544, 2, -545, -357, -358, -359,
	-604, -360, 294, 448, 460, 676, 150, 384, 672, -777,
	220, 688, 604, -642, -642, -642, -486, 708, -262, 60,
	-375, -793, -792, -793, -640, 29, -635, 8, -636, 696,
	697, -640, -640, -793, -793, 2, 2, 2, 2, 2,
	-232, 666, 2, -245, 2, 209, 638, 2, 8, 2,
	259, -284, -654, 521, 201, 459, 641, 106, 2, -649,
	10, -648, 5, 4, -657, -663, -658, -660, 539, 2,
	540, 459, 86, -527, 672, 86, 220, 2, 220, 2,
	-508, 2, 666, 449, 220, 2, 2, -720, 2, 403,
	238, 220, 2, 220, 2, 220, 2, 602, 220, 2,
	220, 2, -244, 534, 609, 586, 455, 296, 666, 2,
	-177, 663, -160, 209, 296, 295, -558, 663, 2, -739,
	209, 517, -558, 2, 607, 305, 182, 220, -508, 2,
	220, 2, 220, 2, 220, 2, 220, 2, 5, 2,
	45, 456, 565, 2, 294, 448, 565, 2, 563, 2,
	-393, 587, 648, 528, 136, 271, 525, 222, 451, 29,
	2, 516, 189, 2, 2, 102, 103, 220, 2, 220,
	-775, 2, 666, 235, 220, 2, 473, 220, 587, 29,
	-523, 86, 684, 87, -487, 708, -487, 672, 2, -543,
	-544, 2, -597, 251, -393, 2, -390, -645, 4, -657,
	-663, -658, -664, 29, 32, 33, 34, 36, 38, 39,
	40, 44, 64, 76, 77, 83, 89, 91, 101, 108,
	118, 126, 127, 129, 128, 130, 131, 132, 145, 150,
	155, 160, 161, 165, 170, 174, 194, 196, 209, 216,
	220, 236, 240, 243, 259, 274, 285, 287, 309, 313,
	321, 329, 330, 384, 392, 398, 403, 404, 408, 409,
	430, 446, 468, 496, 527, 535, 557, 581, 587, 598,
	604, 606, 615, 623, 624, 636, 638, 646, 663, 664,
	665, 666, -665, 2, -597, 251, 2, -396, 251, -597,
	-399, 2, -771, 2, -771, 2, -376, 2, -558, -726,
	596, 184, 481, 2, -418, 251, -393, -395, -399, -397,
	2, 516, -654, 2, 2, 2, -558, 2, 2, -523,
	29, 684, -405, 2, -650, 251, 2, 29, 29, 648,
	449, 287, 604, 711, -474, -410, -411, -641, 4, 8,
	-466, -361, 708, -558, 2, -177, -160, 2, -558, 251,
	2, -177, 251, 2, -558, 251, 2, -177, 251, 2,
	-361, 2, -734, 2, -774, -654, 251, 106, -561, 251,
	2, 251, -361, 2, 222, 451, -788, 511, 617, 341,
	2, 2, 613, 2, 113, 587, 135, 2, 2, 2,
	2, 2, 2, 2, 587, -381, 2, -361, 209, -606,
	287, -405, 251, -406, 2, 528, -802, 464, -650, 251,
	2, 486, 648, -397, 251, 2, -397, 270, 289, -376,
	251, 2, 592, 590, 592, 590, -469, 2, 54, 287,
	2, 287, 2, -598, 2, -599, -593, -600, 704, 404,
	-610, 2, -609, -648, 643, -147, 706, -147, 706, 533,
	706, -654, -393, -393, -558, 2, -177, -160, 2, -558,
	2, -177, 2, -361, 2, -174, -654, -173, 706, 220,
	637, -361, 2, -558, 2, -177, -160, 2, -558, 2,
	-177, 2, -298, 209, 2, 136, 587, -498, -597, -543,
	604, -455, -458, -245, 539, 2, -312, -496, -314, 209,
	-530, -531, -315, 321, 196, 398, -316, -507, 29, 160,
	-507, -507, 67, 707, 707, -777, 620, 11, 12, 89,
	45, 696, 697, 698, 699, 207, 700, 701, 694, 695,
	693, 686, 687, 691, 300, 301, 110, 690, 688, 100,
	335, 510, 197, 198, 199, 200, 482, 268, 35, 42,
	269, 14, 15, 16, -421, 34, 408, 320, 673, 255,
	544, 689, 17, 18, 19, 291, 293, 387, 57, 259,
	-369, 419, -420, 584, 78, -558, -558, -558, -558, -558,
	-558, -558, -558, 415, 706, -492, -553, 704, -307, 706,
	706, 706, 706, -641, -307, -558, -572, 707, -483, 706,
	-307, -572, -567, 706, 508, 704, 706, -575, -558, 5,
	5, 5, 706, 708, -697, 667, 209, 706, 706, 706,
	706, 706, 706, 706, 706, 706, 706, 706, 706, 706,
	706, 706, 706, -623, 706, 443, -622, 706, -622, -622,
	-634, 649, 706, 706, -620, 706, 675, 668, 706, -620,
	706, 706, 706, 706, 706, 706, 706, 706, 706, 706,
	706, 706, 706, 649, -786, 711, -694, -539, 706, 706,
	-488, -602, -558, 698, -488, -488, 403, -480, -558, 122,
	-511, 297, 362, 221, 317, 502, 278, -555, 710, -555,
	-585, 675, -307, -594, -307, -596, 706, -592, -585, -148,
	-641, -126, -144, -154, -177, -193, -253, -254, 698, -393,
	706, 220, 708, -645, 707, -480, 646, 29, 160, 698,
	2, -639, 8, -645, 220, 604, -466, 707, 709, 709,
	709, 709, -376, -405, -393, -412, -413, -418, -387, -361,
	2, 2, 159, -480, -716, 618, 519, 29, 4, -663,
	-657, -411, 528, -410, 587, 136, 189, 222, 451, -652,
	-364, 604, 39, -569, -615, -616, -668, 710, -667, -618,
	-627, 433, 437, -647, 286, 4, -657, -659, 283, 284,
	554, 58, 461, 204, 144, 142, 395, 63, 61, 644,
	600, 601, 602, 603, 225, 226, 65, 645, 571, 80,
	81, -716, 618, 519, 29, 528, 209, -652, 209, 220,
	-652, 2, -654, 2, -335, 711, 75, 492, 177, -754,
	706, -335, 177, 2, 177, 2, 2, 2, -361, -335,
	177, 711, -477, 251, -335, 177, -335, 177, -419, 251,
	-418, -335, 177, -335, 711, 177, -142, 256, 177, -558,
	222, -335, 711, 177, 708, 711, 177, -652, 2, -526,
	-644, -480, 39, -544, 2, 145, 4, 5, -805, 711,
	319, -424, 334, 383, 246, 404, 670, 396, 150, -653,
	5, 4, -568, -580, 145, 327, 286, -635, -637, 9,
	-638, 696, 697, -643, -642, 125, 708, -645, -263, 281,
	43, -375, -375, -793, -793, 8, 8, -793, -793, -375,
	-375, -233, 487, 73, 587, 298, -173, -654, 220, 259,
	-287, 666, -654, -654, -654, -654, -654, -644, 29, -775,
	2, 540, 2, -244, 534, 609, 103, 540, 2, -393,
	587, 136, 270, 93, -743, 209, 2, -361, -721, 209,
	-717, 503, 519, 618, -716, -721, -393, 136, -393, 136,
	-393, 136, -393, -393, 2, 2, 2, 2, -286, -285,
	179, 666, 2, 98, 517, 516, 2, -177, -558, 2,
	666, 98, 2, 51, 559, 79, -739, 209, 2, 607,
	2, 607, 2, -361, -361, -361, -361, -361, 398, 564,
	319, 666, -199, 666, -393, -393, -396, -399, -394, -399,
	220, 271, -399, -399, 521, 588, 619, 517, 189, -558,
	2, 106, -794, 2, 220, 209, 2, 587, 270, 270,
	587, 136, 126, -776, 588, 271, 158, 303, 186, 220,
	86, 136, 29, 220, 587, -786, 514, -523, 29, 708,
	4, -332, 484, 536, 418, -331, 25, 30, 164, 272,
	367, 641, 183, -436, 273, 489, -433, 423, 177, 558,
	629, -726, -729, 515, 596, 184, 481, 104, 396, 536,
	418, 484, 177, -504, -506, 39, 134, 367, 417, 68,
	264, 339, 340, 562, 490, 655, 177, 536, 418, 484,
	-762, 484, 536, 418, -749, -764, 367, 70, 498, 570,
	257, 561, 659, 189, 526, 316, 384, 116, 509, 578,
	420, 484, 536, 418, 418, -16, -350, 25, 164, -352,
	-343, 536, 30, -729, 114, 484, 685, 679, 489, 429,
	579, 446, -729, -726, 314, -728, 660, 382, -334, 558,
	629, -726, -465, -729, 515, 484, -333, 384, 657, 656,
	658, -438, -433, 423, 177, 710, 25, 164, 484, 536,
	418, -780, -781, 30, -641, 2, -330, 259, -329, 25,
	-325, -324, 25, 164, 536, 633, 484, 562, 568, 426,
	494, 98, 536, -186, 236, 501, -166, -185, 489, -186,
	2, 536, 29, 484, 418, -723, -383, -691, 259, 666,
	177, -383, -383, -597, 251, -743, 209, 2, -736, -173,
	310, 5, 10, -173, -474, 711, 711, -645, 698, 177,
	177, 177, 177, 296, 209, 384, -774, 2, -120, 320,
	384, 384, 666, -766, 2, -399, -766, 2, -789, 2,
	2, 2, 2, 2, 2, 2, -393, 251, -453, 403,
	-712, -713, -791, 587, -272, 666, -654, 384, 48, -396,
	251, 2, 648, -723, 384, -731, -398, 251, -393, 39,
	706, 384, 2, -526, 2, 270, -691, 384, 220, 706,
	-415, -393, -593, -415, 536, -386, 39, -555, -393, 707,
	711, -610, -610, -654, -272, 220, 706, -298, 666, 666,
	296, -605, 711, -604, 259, -655, -654, -174, -654, 220,
	296, -654, -712, -376, 2, -393, 2, -335, 711, -365,
	-312, -496, -644, -497, -496, -313, -312, -315, 209, 460,
	630, 367, 541, 302, -531, -530, 29, -558, -535, 203,
	366, -558, -533, -560, 696, 697, -636, -638, -479, 396,
	-306, -306, -306, -460, -587, -588, -558, 446, 277, -643,
	-777, -617, -615, -615, -391, -645, 600, -558, -558, -558,
	-558, -558, -558, -558, -558, -558, -558, -558, -558, -558,
	-558, -558, -558, -558, -558, -558, -558, -558, -558, -558,
	-558, -558, -558, -558, -558, -558, -558, -558, -558, -558,
	-558, -558, -558, -558, 320, 255, 544, 57, 259, -558,
	604, -558, -558, -558, -558, 359, 384, 392, 615, 194,
	625, 160, 396, -808, 581, 44, -565, -307, -484, 706,
	-579, 36, 557, 29, -572, 706, 2, -553, -558, -554,
	-422, -420, -361, 696, 697, 698, 699, 700, 701, 686,
	687, 688, 14, 15, 16, 691, 695, 693, 694, 207,
	110, 690, 335, 510, 100, 197, 198, 199, 200, 300,
	301, 17, 18, 19, 35, 42, 689, -481, -480, -480,
	707, 711, 39, 707, -558, -481, -571, -567, 704, -480,
	-578, -577, 663, -519, -520, 671, 345, 139, 249, 342,
	-521, 524, -639, -645, 698, -698, 202, 240, 706, 707,
	2, 707, 2, 707, -558, 2, 707, -558, 2, 707,
	-558, 2, 707, -558, 2, 707, 2, 707, 2, -558,
	-558, -558, -558, -558, -558, -558, -480, 8, -639, 706,
	-639, -639, -639, 600, 600, -639, -639, -639, -631, 433,
	434, 435, 436, 322, 323, 324, 325, 437, 438, 439,
	440, 351, 352, 353, 354, 347, 348, 349, 350, 355,
	356, 357, 358, 230, 231, 232, 233, 226, 227, 228,
	229, -631, -513, 2, -633, -480, 4, 671, 345, 139,
	249, 342, 524, 5, -513, 2, -514, 2, -558, -480,
	-515, -559, -560, 696, 697, 689, -421, -516, 2, -558,
	-481, -558, 64, 313, 606, -517, -558, 220, -480, -480,
	2, -480, 2, -523, 2, -695, 39, -540, -361, -480,
	-470, 711, 220, 45, 34, 408, 320, 255, 544, 291,
	57, 259, 39, -662, 419, 4, -661, 21, 22, 23,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	37, 36, 40, 43, 44, 41, 46, 47, 48, 49,
	50, 51, 52, 53, 54, 55, 56, 58, 60, 61,
	63, 64, 65, 62, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 79, 82, 83, 84,
	85, 86, 87, 88, 90, 91, 92, 93, 94, 95,
	96, 97, 98, 99, 101, 102, 103, 104, 105, 106,
	107, 108, 109, 111, 112, 113, 114, 115, 116, 117,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 129,
	128, 130, 131, 132, 133, 134, 135, 136, 137, 148,
	143, 140, 141, 142, 144, 149, 145, 146, 150, 151,
	147, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 175, 176, 178, 179, 177, 180, 183,
	181, 184, 182, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 201, 203, 204, 208, 210, 212,
	213, 214, 211, 215, 216, 217, 218, 219, 221, 222,
	223, 224, 225, 226, 230, 231, 232, 233, 227, 228,
	229, 234, 235, 237, 238, 239, 241, 242, 244, 245,
	246, 247, 248, 250, 251, 252, 253, 254, 256, 257,
	258, 260, 262, 263, 261, 264, 265, 266, 270, 271,
	277, 276, 275, 272, 274, 273, 278, 279, 280, 281,
	282, 283, 284, 286, 288, 289, 657, 290, 292, 294,
	295, 296, 297, 298, 302, 303, 304, 305, 306, 307,
	308, 309, 310, 312, 311, 313, 316, 314, 315, 317,
	318, 319, 322, 323, 324, 325, 326, 327, 328, 329,
	330, 331, 332, 333, 334, 336, 337, 340, 338, 341,
	339, 343, 344, 346, 347, 348, 349, 350, 351, 352,
	353, 354, 355, 356, 357, 358, 361, 359, 362, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	374, 375, 381, 382, 383, 376, 377, 384, 385, 386,
	388, 389, 390, 391, 380, 378, 379, 392, 393, 394,
	395, 396, 397, 400, 402, 404, 405, 406, 407, 410,
	411, 412, 413, 416, 417, 418, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 444,
	445, 446, 447, 448, 449, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 460, 461, 462, 463, 465, 464,
	466, 467, 468, 469, 471, 472, 473, 479, 480, 488,
	481, 483, 484, 485, 486, 487, 489, 490, 491, 492,
	493, 494, 495, 499, 497, 498, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 509, 511, 512, 513, 514,
	515, 516, 517, 519, 521, 520, 518, 522, 523, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 545, 546,
	547, 548, 549, 550, 551, 553, 552, 554, 556, 557,
	558, 559, 560, 561, 562, 563, 586, 564, 565, 566,
	567, 568, 572, 573, 574, 575, 569, 570, 571, 585,
	576, 577, 578, 580, 579, 581, 582, 583, 587, 588,
	589, 590, 591, 592, 593, 595, 594, 596, 597, 598,
	605, 599, 600, 602, 603, 601, 607, 620, 606, 608,
	609, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 621, 622, 624, 625, 626, 627, 628, 633, 629,
	634, 630, 631, 632, 635, 636, 637, 638, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 650, 651, 653,
	654, 652, 655, 661, 662, 656, 658, 659, 660, 663,
	669, 670, 672, -470, -470, 706, 707, 711, -512, 244,
	338, 333, 289, -512, -592, -511, 297, -509, 413, -509,
	-509, -585, -377, 704, 713, -645, -585, -582, -581, 39,
	-386, 410, -585, -585, 707, -584, -583, 39, -386, 705,
	-710, 706, 709, 709, 709, 709, 709, -393, 706, -645,
	708, -459, 711, -456, 409, -558, -480, -480, 707, 705,
	708, 566, 2, 567, 2, 707, 604, 291, 291, 291,
	291, 291, 403, 509, 707, 604, -718, -402, -408, 529,
	588, 223, 452, -474, 711, -474, -466, 106, -772, -772,
	666, -652, -146, 405, 707, 711, -468, 38, 704, 708,
	-639, 2, 2, -520, 706, 220, -718, -408, 588, 529,
	223, 452, 2, -722, 583, -467, -652, 604, -771, -772,
	-755, 707, -757, -765, -750, -759, 259, 412, 279, 646,
	-646, -615, 4, -657, -772, -361, 2, -477, -399, -335,
	177, -478, -476, -335, 711, 177, -376, -397, -402, -523,
	705, -405, -408, -361, -650, -652, -335, -398, -777, 707,
	608, -545, -423, 460, 556, 485, 530, 583, 9, 9,
	711, -645, -264, 518, 367, -375, -375, -375, -375, 711,
	565, -393, 209, -654, -173, -289, 407, -288, 41, 84,
	547, 391, 140, 266, 304, 169, 449, 168, 143, -287,
	-287, -287, -287, -291, 666, 2, 2, 2, 2, -508,
	-393, -376, -418, -393, -404, 259, 237, 29, -733, 708,
	-652, -652, -408, -409, -407, -361, -402, -508, -376, -508,
	-376, -508, -376, -508, -508, 711, 158, -286, 179, -177,
	-177, -558, -286, -558, 564, 2, 533, 209, 209, 708,
	-508, 708, 708, 8, -454, 496, 5, 466, -199, -199,
	-393, 220, 2, 107, -654, 2, 458, 136, 587, 423,
	270, -393, -418, -418, -393, -376, -775, 711, 136, -376,
	137, 136, -393, -523, 4, 711, -778, 108, 604, 91,
	706, 519, -354, 328, 604, -549, 251, 91, -669, 108,
	-379, -670, -361, 83, 624, 446, 216, 175, -778, 108,
	446, -778, 108, 2, 272, 108, 536, 564, 706, 29,
	67, -597, 45, 45, 29, -727, -728, 314, 220, 672,
	587, 270, 519, 604, 604, -597, -506, -615, 134, 339,
	340, 67, -640, -640, 67, -640, -640, -640, 666, -640,
	666, -396, -597, 519, 604, 604, -787, -764, 492, 536,
	604, 519, 604, 154, 403, 392, 526, 147, 290, 316,
	-580, -580, -361, 604, 519, 604, 604, 471, 577, 471,
	577, 525, -343, -345, -191, 525, 577, 328, 604, 604,
	-191, 29, -245, 493, 145, -806, 688, 471, 314, -728,
	604, 220, 711, 45, 45, 29, -727, 220, 604, 656,
	9, -418, -377, 642, 47, 642, 47, 642, 604, 47,
	519, 604, 711, 47, -327, -326, 536, -329, -654, -328,
	365, -324, -712, -712, -271, -270, -361, 5, -466, 604,
	532, 2, 532, 2, 487, 487, 487, 86, 487, 74,
	29, 2, 74, 29, 2, -186, 2, 604, 604, -16,
	536, -724, -366, 121, 373, 332, 374, 112, 370, 111,
	369, 119, 371, 120, 372, 650, 388, 651, 389, 72,
	368, 343, 375, 560, 377, 654, 390, -367, -368, 487,
	376, 167, 425, 640, 136, -650, -16, -16, 536, 418,
	484, 177, -744, 259, 29, 259, -605, 259, -605, -410,
	-361, 708, -558, -177, -558, -177, 51, 79, 177, 39,
	220, -523, 177, 177, 2, 706, 706, 307, 706, -427,
	384, 220, -466, -606, 711, -393, 39, -271, 407, 177,
	-650, -505, -504, 384, -398, 251, 2, 177, -802, -451,
	384, 171, 706, 458, 2, 177, -378, 251, -362, -361,
	-526, -337, 591, 177, -598, -503, -502, 546, -536, -177,
	706, 145, 39, -536, -489, -490, -603, -491, -379, 706,
	-386, -555, -147, -609, 707, 707, 707, -298, -452, -380,
	-379, 135, 462, 462, -278, 666, -173, -174, 707, 711,
	-605, 259, -174, -654, -272, -272, -605, -605, -597, -497,
	-313, 404, 302, 541, -533, -534, -560, 508, 509, -534,
	508, 509, 8, 9, 8, 9, -317, 547, 391, -476,
	711, -322, 40, 155, 302, -393, -643, 672, 173, -558,
	-558, 604, -808, 581, -565, 173, -558, 359, 392, 615,
	194, 625, 160, 396, 220, 706, -559, -559, 707, -482,
	-558, -558, 705, 715, 707, 708, 707, -459, 708, -480,
	-466, 705, 705, 711, 707, -576, -577, 165, -558, 604,
	604, 604, 604, 706, 707, 708, -703, 414, 706, 706,
	-558, 707, 707, 707, 707, 39, 711, 711, 711, 707,
	711, 711, 711, 707, 707, 707, 711, -639, 707, 707,
	707, 672, 672, 707, 707, 707, 707, 711, 707, 711,
	707, 220, 707, 707, -522, 430, 707, 11, 12, 696,
	697, 698, 699, 207, 700, 701, 694, 695, 693, 686,
	687, 688, 100, 335, 510, 14, 15, 16, -421, 291,
	259, -559, -559, -559, -559, 707, -563, -564, 220, 209,
	39, -517, -517, -517, 707, 220, -480, 707, 707, -696,
	337, 384, 707, 711, 707, -552, -551, 664, -602, -471,
	2, -592, -388, -645, -552, -552, -480, -558, 297, 297,
	-510, 638, 403, -512, -592, -582, -641, -557, -556, 211,
	40, 155, 378, 379, 380, 254, 215, 195, -582, -386,
	-539, -582, -582, -585, -386, -537, 706, -585, -581, 707,
	-711, -641, 707, -472, -595, -690, 708, -645, 707, 646,
	67, -459, -459, 707, -645, -293, -691, -293, 567, 2,
	-246, 5, 392, -246, -246, -246, -246, -393, -652, 604,
	604, 259, 259, 259, 259, -474, -466, 26, -742, 666,
	431, -615, 704, 705, 8, -645, -639, -652, 220, 220,
	259, 259, 259, 259, 403, -722, 220, -650, -335, 707,
	711, -750, -759, -765, -759, 412, -335, 2, -335, -477,
	-335, -335, -418, -419, -335, -335, -142, -335, -501, 666,
	-642, -544, 622, 96, 460, 600, -642, 133, 518, 487,
	73, -272, 587, 259, -287, 711, 706, 546, 688, 688,
	688, 688, -292, 407, -290, 610, 600, 101, 710, 519,
	-652, 504, -652, -361, 708, -508, -508, -508, -285, 533,
	533, -361, -361, -361, 209, -466, -393, 2, -389, -645,
	-376, -393, -390, -418, 209, 209, -775, -775, -775, 588,
	271, 158, 186, 303, -376, -376, -331, 484, 536, -379,
	-379, -393, -302, -301, -299, -361, 5, -403, -361, 234,
	472, -650, 384, -549, 251, -336, 384, 251, -387, -615,
	706, -528, 668, 302, 302, 638, -379, -387, 302, 251,
	-379, 251, -387, 2, -387, -725, 460, 397, -558, -300,
	-299, 67, -434, 326, 458, 385, -332, 484, 536, 418,
	-177, -177, -177, 706, -777, 638, 159, -393, -418, -393,
	-403, -650, -398, 536, 418, 484, 381, -412, -640, -640,
	-640, -504, 536, 418, 484, -403, -650, -396, -361, -403,
	-650, 403, 392, 403, 147, 290, -361, -403, -650, -650,
	-342, 251, -361, 5, 471, -342, 251, 471, 471, 471,
	471, 234, 472, 519, -376, 471, 672, 50, -806, 604,
	220, -558, -558, -333, -177, -177, -177, 706, -377, -334,
	-465, 484, 5, 251, -379, 5, -379, 251, 5, -361,
	-379, -403, -650, -781, 25, 164, -379, 711, 306, 287,
	666, -735, 221, 516, 465, -330, 688, -272, 711, 688,
	688, -561, 189, 542, 604, -283, -282, 495, 494, -36,
	-35, -644, 73, -36, 73, -403, -650, -366, 425, -736,
	392, 5, 10, 634, -376, -723, -383, 519, 604, 604,
	-597, -740, -741, 236, 501, 519, 504, -173, -275, 666,
	-173, -269, 265, 698, -715, 2, -712, -607, 2, 287,
	-654, -654, 487, -561, -361, -752, -753, -756, -757, -752,
	-361, -425, -428, -426, -379, -550, -549, -673, -674, -669,
	320, 275, 276, 624, 289, 195, 108, -303, -304, 668,
	666, 177, -416, -393, 704, -272, -713, -608, 195, 527,
	706, -405, -406, 177, -451, 384, -650, 648, 39, 177,
	706, -614, -613, -361, 2, -397, 403, 384, -378, 251,
	-338, 166, -806, -376, -500, 638, 707, 711, -558, -499,
	-542, 496, 403, -452, 643, -386, -499, -473, 711, 220,
	688, 708, -452, -601, 698, -147, -147, -272, 706, -654,
	707, 711, 708, 706, 688, 688, -280, 407, -279, 169,
	304, 288, 549, 550, 551, 552, 553, 157, 548, 141,
	364, -782, 266, -783, -784, 520, 647, 628, 179, 180,
	483, 262, 263, 594, 661, 593, 662, -605, -654, -278,
	-174, -605, 259, 220, -94, 666, 630, -534, 404, 331,
	-587, -588, -323, 674, -393, 710, -558, -558, 173, 173,
	-558, -559, -559, -558, 173, 220, 706, -558, -569, 34,
	34, 707, 711, -554, -558, -420, 707, 698, -645, 710,
	707, -567, 170, -558, 598, 345, 249, 342, -521, 342,
	-521, -521, -639, 5, -645, 698, -704, -382, 706, -361,
	664, -457, 409, 707, -617, -615, -558, -558, -558, -558,
	-558, -639, 707, -620, -620, -635, -635, -558, -563, -558,
	-617, -615, -559, -559, -559, -559, -559, -559, -559, -559,
	-559, -559, -559, -559, -559, -559, -559, -559, -559, -559,
	-559, -559, 160, 384, 396, -559, -564, -563, -558, -558,
	-615, 707, 707, 707, -480, 706, 337, -361, -493, 240,
	-558, -605, 711, -493, -493, 707, -592, -592, 706, -558,
	297, 705, 711, 714, 688, 688, 688, -539, -581, -537,
	-538, -541, -361, -582, 705, 707, 711, 707, 711, -584,
	-645, -558, -461, -587, 707, 707, 708, -552, -295, 706,
	-294, 156, 60, 123, 153, 392, 400, 219, 245, 457,
	173, 210, 166, -293, 291, -742, -652, -652, 519, 519,
	519, 519, 406, 236, 5, 8, 704, 705, 708, 707,
	-652, -652, 519, 519, 519, 519, -716, 618, 519, 29,
	220, -652, -757, -759, -759, -335, -335, 135, 367, -558,
	-261, 666, 668, 565, -393, -173, -288, -289, -173, -173,
	-654, -654, 711, 706, 688, 688, 688, 698, -403, -404,
	-404, 698, -508, 5, -440, -439, 423, 396, -440, 508,
	508, 604, 604, 707, 711, 688, 67, 259, 177, 384,
	640, 384, -670, 175, -675, -558, 706, 270, 706, 706,
	2, -319, -320, -321, 164, 536, 25, -779, 2, 638,
	177, -335, 177, -335, 670, 707, 711, -434, 706, 706,
	604, 519, -354, 604, 666, -480, -558, -273, 145, -644,
	-729, 710, -729, 710, 519, 604, 604, 519, 604, 604,
	188, 280, 392, 384, -342, 177, -342, 251, -806, -342,
	-729, -729, 259, 666, 193, 193, 672, -342, -558, -558,
	209, 604, 666, -480, 604, -619, 55, 27, 384, -397,
	-335, 177, 604, 604, 618, 536, -326, -654, -173, -276,
	169, 500, 157, 304, 266, 179, -782, 631, 51, 406,
	-736, -173, -270, -654, -654, 583, 310, 711, 688, 602,
	711, -777, -736, -654, 392, -16, -403, -650, -398, 536,
	418, 484, -722, -722, 236, -408, -744, -605, -277, 407,
	-276, -605, -275, 220, 287, -607, -272, -654, 396, -120,
	666, 707, 711, 145, 688, 707, 2, 707, 707, 711,
	711, -676, -336, -393, 706, -361, 270, 275, 276, -385,
	-362, 39, 400, 400, 706, -393, -122, -123, 666, -124,
	605, -604, 638, -551, -641, -384, -361, -488, -271, 48,
	-396, 39, 177, -723, -398, -177, -398, -611, -612, 5,
	707, 711, -616, 39, -393, 177, 403, 384, -339, 312,
	-806, -649, -691, -552, -471, -502, -499, -488, 386, 105,
	707, -552, -490, -471, -558, 2, 707, -654, -272, -298,
	-380, 2, -655, -654, -654, 711, 706, 688, 688, 688,
	688, 688, 688, 688, 688, 688, 328, 151, -278, -605,
	-278, -174, -177, 407, 404, 203, 308, -322, -377, -558,
	-558, 173, 34, 34, -558, -558, -569, 707, -558, -558,
	-480, 705, 5, 8, -558, 707, 708, -705, -361, -558,
	707, 67, 707, 707, 711, 711, 707, 707, 707, 707,
	707, 707, 707, -564, 220, 160, 396, 706, 707, -146,
	-566, 243, 67, -592, -566, -566, -510, -466, -592, -556,
	-377, 704, -377, 704, 704, 707, 711, -615, -641, -595,
	-459, 711, -645, -294, -297, -296, 156, 217, 153, 392,
	400, 219, 245, 457, 173, 214, 212, 213, 166, 688,
	-654, -654, 2, 2, 5, 5, 457, 384, 392, 5,
	-246, -742, -742, 666, -408, -408, -408, -408, 406, 705,
	2, 704, -645, -408, -408, -408, -408, 220, -718, -408,
	588, 223, 452, -652, 135, 209, 248, 248, -272, -287,
	707, -290, -292, -654, -654, -558, -390, 587, 270, 706,
	706, -379, -379, -301, -642, 587, 508, -342, 446, -549,
	177, 177, -677, 108, -679, 89, 195, 118, 384, 392,
	624, 446, 83, 145, 403, 468, -796, -797, -798, 39,
	677, 678, 707, -462, -589, -690, 706, -361, -462, -466,
	384, 574, 145, 403, 384, 145, 403, 656, 135, 2,
	618, 92, -379, -387, -299, -466, -466, -393, -403, -650,
	185, 707, 711, 688, 2, 698, 698, -403, -650, -398,
	-403, -650, -396, -361, 280, 177, 643, -342, 177, -342,
	643, -342, 421, 193, 604, -177, -558, 185, 707, -377,
	5, 5, 177, -374, 89, -379, 5, -379, -397, 135,
	688, 688, 688, 688, 688, 328, 688, 688, 31, -736,
	-270, 666, 600, -282, -561, 688, -35, -642, 519, 604,
	604, 403, 403, 406, -740, -741, -275, 711, 706, -275,
	-655, -173, -272, 39, -561, 220, 2, 498, -756, -558,
	-558, -760, -761, -763, 39, 307, 611, 665, -764, -441,
	272, -379, -674, -671, -672, 446, -550, -678, -680, 195,
	446, -429, -462, 706, -378, 706, -361, 706, -177, 2,
	-302, 706, -427, -124, 407, 9, 192, 705, 220, 707,
	-650, -505, -177, -398, -451, -449, 666, -451, 707, 711,
	-361, 171, 706, -529, 638, -377, -393, 177, -340, 311,
	-806, -649, -337, -458, -455, 161, 706, 403, -177, -458,
	688, 707, 135, 707, -279, -280, -654, -173, -654, -654,
	-654, -558, -173, -654, -654, 688, 115, -278, -605, -95,
	-96, 270, 275, 108, 428, -322, -558, -558, -558, 707,
	698, -699, 423, 707, -587, -588, -558, -558, -559, 220,
	706, -569, 707, -700, 665, -558, -494, -495, -558, 506,
	124, 241, -700, -700, 707, -641, -641, -641, -541, 707,
	-587, -588, 707, 711, -654, 60, 123, 597, 5, -654,
	-654, 2, 2, 615, 194, 5, 5, 2, 2, 2,
	5, -654, 2, 392, 2, 2, 2, 604, 604, 604,
	604, 704, 2, 220, 220, 220, 220, -652, 220, 220,
	259, 259, 259, -177, 707, -393, -418, -480, -480, 259,
	39, 471, -549, -387, -387, -391, -384, 195, 251, 392,
	656, -528, 302, 706, -559, 630, -393, 706, 2, 250,
	250, 31, 67, -799, 150, 274, 707, 711, -590, -373,
	-361, -558, -590, 707, 707, 392, 630, 392, 656, -558,
	630, -615, 706, -335, -335, 707, 707, -558, 604, -644,
	115, -642, 2, -729, -342, -351, -342, -351, -729, -376,
	-558, 209, -558, 604, 5, -335, -391, -335, -335, -374,
	618, -654, -558, 615, 194, -173, -173, 688, -558, -558,
	402, -558, -561, -403, -650, -398, -745, 588, 529, 619,
	521, 223, 507, -745, 209, -276, -277, -275, -735, 527,
	403, 487, -747, 587, -770, -767, 56, 497, -763, -751,
	5, -649, -435, -436, 2, -676, 302, -384, 302, 261,
	176, 707, -462, 706, -462, 706, -466, -795, 666, 707,
	-425, -303, -123, -719, -415, -451, 39, 367, 135, 39,
	5, -616, 706, -614, 706, -361, 403, 706, -377, -356,
	106, -806, -649, -338, -532, -530, 385, -466, 108, -532,
	-565, -272, 706, -272, 707, -654, -278, 711, 29, 706,
	29, 706, -459, 67, 711, 711, 707, 707, -559, -569,
	707, -701, -702, -382, 711, 706, 706, 538, 705, 705,
	705, -296, 2, 2, -652, -652, -652, -652, 2, -652,
	-652, -652, -652, -652, -652, 519, 519, 519, 707, 707,
	-342, 446, -361, -670, -679, -384, 384, -304, 638, 666,
	-558, -559, -363, 706, -558, 706, 706, 39, 145, 274,
	151, 256, -548, -800, 117, 575, 260, -589, -322, 707,
	-547, 638, 468, -559, -374, -462, 706, 706, 706, 688,
	220, 711, -177, 706, -619, -335, -397, -654, 688, 604,
	2, 220, -722, 707, -735, -274, 666, -488, -561, 396,
	-748, 537, 46, -558, -773, 711, -303, 706, -304, -430,
	94, 109, 146, 250, 224, 271, 564, 572, 29, -430,
	-547, 707, -462, 707, -462, 707, -431, 403, 135, 367,
	707, 39, -552, 39, -177, 135, -177, -611, 707, -462,
	-393, -462, 403, -344, -343, 321, -649, -339, -499, 707,
	-387, -499, -655, -96, -466, -466, -706, 458, 509, 242,
	-480, -460, -460, 707, 711, 39, -495, 2, 2, 2,
	-742, -742, -742, -742, -408, -408, -408, 471, -336, 177,
	244, 707, -681, 336, -361, 707, -505, -505, 39, 151,
	256, -437, -433, 706, -323, -590, -304, 244, -393, -730,
	638, 707, -443, -442, -439, -445, -444, -439, -480, -642,
	115, 421, -342, -480, -374, -173, -652, -652, 403, -737,
	221, 516, 220, -281, 666, -561, -758, -759, -769, 5,
	-431, -463, -591, -379, -548, -547, 707, -437, 707, 95,
	135, -441, -177, -177, 2, -449, 707, 707, -529, 707,
	-393, -341, -656, 471, 473, -806, -340, -552, 161, 707,
	707, 707, 707, -707, -708, 57, 621, 125, -558, -707,
	-707, -702, -704, 220, 220, 220, 195, -546, 675, -682,
	-685, -684, 682, 545, 221, 422, 707, 574, 655, 707,
	707, -799, -466, -546, -451, -558, -547, 707, 711, 643,
	707, 711, 643, 707, 220, 707, -335, -742, -335, -745,
	-274, 51, 407, -719, -283, 407, 403, -760, -768, 170,
	-3, -767, -355, -354, 707, 711, -437, -548, -547, -304,
	-437, 445, 152, 164, -435, -795, -547, 706, -548, 706,
	-353, -352, -806, -635, -356, 161, 385, 630, -272, -709,
	175, -708, 442, 208, 508, 442, 208, -709, -709, -652,
	-652, -652, -384, -304, 62, -684, 682, -685, 682, 630,
	152, -552, 707, -681, -304, -442, 259, -444, 220, 421,
	220, -736, 31, -271, 706, -552, 706, -561, -770, 712,
	-304, -591, -304, -437, -548, -552, -304, 509, 509, 2,
	-303, -431, -548, -462, -437, -462, -349, -350, -351, -344,
	385, 630, 536, 125, 240, 599, 367, 34, 688, -683,
	367, 492, 75, 536, -683, -682, 706, 706, -652, -271,
	-735, -283, -281, -552, -304, -437, -464, 384, 657, 656,
	658, -552, 2, -431, -437, 707, -304, 707, -651, 418,
	-341, 536, -489, 508, 411, -708, -558, 24, 392, 145,
	-799, -480, -480, -335, 707, -274, 707, -464, -552, -304,
	656, 9, -464, -355, -304, -547, -552, -548, -348, -347,
	577, -806, -353, -489, -552, 707, 707, -464, -552, -552,
	-548, -464, -437, -346, -345, 525, 471, -650, -349, -552,
	-432, -433, 604, -464, -464, -437, -304, -342, -651, 706,
	-304, -552, 643, -348, -480, -552, -464, -351, -346, 707,
	-464, -432,
}

var sqlDef = [...]int16{
	-2, -2, 1, 2, 3, 4, 6, 7, 9, 10,
	11, 12, 14, 16, 18, 20, 22, 24, 26, 28,
	30, 32, 34, 35, 36, 38, 40, 42, 44, 45,
	46, 2006, 2008, 841, 842, 844, 845, 846, 848, 849,
	851, 853, 855, 856, 857, 859, 860, 862, 863, 864,
	865, 866, 868, 870, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	990, 992, 0, 1988, 1990, 1992, 1994, 0, 0, -2,
	-2, 0, 0, -2, -2, -2, 48, 49, 51, 52,
	0, -2, 473, 475, 477, 479, 0, 511, 513, 514,
	516, 518, 520, 522, 524, 525, -2, 0, 756, 757,
	759, 761, 763, 765, -2, 0, 1553, 1555, 1557, 0,
	978, 980, 0, 1560, 1562, 1564, 0, 0, 1002, 1003,
	0, 2112, -2, 994, 996, 998, 1000, 1115, 1117, 1119,
	1121, 1123, 1125, 1127, 1129, 1131, 1133, 1135, 1136, 1138,
	1140, 1142, 1144, 1146, 1148, 1150, 1151, 1153, 1155, 1157,
	1158, 1160, 1161, 1163, 1165, 1167, 1169, 1171, 1173, 1175,
	1177, 1179, 1181, 1183, 1185, 1187, 1189, 1191, 1194, 1195,
	1196, 1198, -2, 0, -2, -2, 2002, 54, 56, 58,
	60, 62, 64, 66, 68, 70, 72, 74, 76, 78,
	80, 82, 1020, 1022, 1024, 1026, 1028, 687, 689, 691,
	693, 695, 698, 700, 702, 704, 706, 543, 545, 2170,
	767, 769, 771, 773, 775, 777, 779, 781, 783, 0,
	0, -2, 2184, 0, 0, 0, 1315, 84, 85, 86,
	87, 88, 89, 90, 91, 92, 93, 157, 158, 159,
	160, 161, 162, 163, 164, 97, 98, 99, 101, 102,
	103, 104, 108, 109, 110, 111, 112, 113, 114, 115,
	116, 117, 118, 119, 120, 121, 122, 123, 154, 155,
	95, 124, 125, 126, 127, 128, 130, 131, 132, 0,
	0, 2143, 2145, 2147, 2149, -2, 0, 0, 8, 13,
	15, 17, 19, 21, 23, 25, 27, 29, 31, 33,
	37, 39, 41, 43, 47, 2007, 2009, 843, 847, 850,
	852, 854, 858, 861, 867, 869, 871, 824, 825, 828,
	2917, 2936, 2937, 2938, 2941, 2942, 2943, 2944, 2945, 2946,
	4079, 4160, 4161, 4162, 4163, 2969, 2970, 2971, 2972, 2973,
	2974, 2975, 2976, 2977, 2978, 2979, 2980, 2981, 2982, 2983,
	2984, 2985, 2986, 2987, 2988, 2989, 2990, 2991, 2992, 2993,
	2994, 2995, 2996, 2997, 2998, 2999, 3000, 3001, 3002, 3003,
	3004, 3005, 3006, 3007, 3008, 3009, 3010, 3011, 3012, 3013,
	3014, 3015, 3016, 3017, 3018, 3019, 3020, 3021, 3022, 3023,
	3024, 3025, 3026, 3027, 3028, 3029, 3030, 3031, 3032, 3033,
	3034, 3035, 3036, 3037, 3038, 3039, 3040, 3041, 3042, 3043,
	3044, 3045, 3046, 3047, 3048, 3049, 3050, 3051, 3052, 3053,
	3054, 3055, 3056, 3057, 3058, 3059, 3060, 3061, 3062, 3063,
	3064, 3065, 3066, 3067, 3068, 3069, 3070, 3071, 3072, 3073,
	3074, 3075, 3076, 3077, 3078, 3079, 3080, 3081, 3082, 3083,
	3084, 3085, 3086, 3087, 3088, 3089, 3090, 3091, 3092, 3093,
	3094, 3095, 3096, 3097, 3098, 3099, 3100, 3101, 3102, 3103,
	3104, 3105, 3106, 3107, 3108, 3109, 3110, 3111, 3112, 3113,
	3114, 3115, 3116, 3117, 3118, 3119, 3120, 3121, 3122, 3123,
	3124, 3125, 3126, 3127, 3128, 3129, 3130, 3131, 3132, 3133,
	3134, 3135, 3136, 3137, 3138, 3139, 3140, 3141, 3142, 3143,
	3144, 3145, 3146, 3147, 3148, 3149, 3150, 3151, 3152, 3153,
	3154, 3155, 3156, 3157, 3158, 3159, 3160, 3161, 3162, 3163,
	3164, 3165, 3166, 3167, 3168, 3169, 3170, 3171, 3172, 3173,
	3174, 3175, 3176, 3177, 3178, 3179, 3180, 3181, 3182, 3183,
	3184, 3185, 3186, 3187, 3188, 3189, 3190, 3191, 3192, 3193,
	3194, 3195, 3196, 3197, 3198, 3199, 3200, 3201, 3202, 3203,
	3204, 3205, 3206, 3207, 3208, 3209, 3210, 3211, 3212, 3213,
	3214, 3215, 3216, 3217, 3218, 3219, 3220, 3221, 3222, 3223,
	3224, 3225, 3226, 3227, 3228, 3229, 3230, 3231, 3232, 3233,
	3234, 3235, 3236, 3237, 3238, 3239, 3240, 3241, 3242, 3243,
	3244, 3245, 3246, 3247, 3248, 3249, 3250, 3251, 3252, 3253,
	3254, 3255, 3256, 3257, 3258, 3259, 3260, 3261, 3262, 3263,
	3264, 3265, 3266, 3267, 3268, 3269, 3270, 3271, 3272, 3273,
	3274, 3275, 3276, 3277, 3278, 3279, 3280, 3281, 3282, 3283,
	3284, 3285, 3286, 3287, 3288, 3289, 3290, 3291, 3292, 3293,
	3294, 3295, 3296, 3297, 3298, 3299, 3300, 3301, 3302, 3303,
	3304, 3305, 3306, 3307, 3308, 3309, 3310, 3311, 3312, 3313,
	3314, 3315, 3316, 3317, 3318, 3319, 3320, 3321, 3322, 3323,
	3324, 3325, 3326, 3327, 3328, 3329, 3330, 3331, 3332, 3333,
	3334, 3335, 3336, 3337, 3338, 3339, 3340, 3341, 3342, 3343,
	3344, 3345, 3346, 3347, 3348, 3349, 3350, 3351, 3352, 3353,
	3354, 3355, 3356, 3357, 3358, 3359, 3360, 3361, 3362, 3363,
	3364, 3365, 3366, 3367, 3368, 3369, 3370, 3371, 3372, 3373,
	3374, 3375, 3376, 3377, 3378, 3379, 3380, 3381, 3382, 3383,
	3384, 3385, 3386, 3387, 3388, 3389, 3390, 3391, 3392, 3393,
	3394, 3395, 3396, 3397, 3398, 3399, 3400, 3401, 3402, 3403,
	3404, 3405, 3406, 3407, 3408, 3409, 3410, 3411, 3412, 3413,
	3414, 3415, 3416, 3417, 3418, 3419, 3420, 3421, 3422, 3423,
	3424, 3425, 3426, 3427, 3428, 4005, 4006, 4007, 4008, 4009,
	4010, 4011, 4012, 4013, 4014, 4015, 4016, 4017, 4018, 4019,
	4020, 4021, 4022, 4023, 4024, 4025, 4026, 4027, 4028, 4029,
	4030, 4031, 4032, 4033, 4034, 4035, 4036, 4037, 4038, 4039,
	4040, 4041, 4042, 4043, 4044, 4045, 4046, 4047, 4048, 4049,
	4050, 4051, 4052, 4053, 4054, 4055, 4056, 4057, 4058, 826,
	827, 427, 0, 2633, 0, 2931, 2932, -2, -2, -2,
	2955, 0, 4059, -2, 4061, 4062, 4063, 4064, 4065, 4066,
	4067, 4068, 4069, 4070, 4071, 4072, 4073, 4074, 4075, 4076,
	4077, 4078, 1749, 2171, 0, 933, 931, 2898, 934, 3253,
	936, 938, 750, 751, 752, 753, 754, 755, 0, 971,
	3369, 950, 2182, 972, 974, 975, 976, 977, 928, 926,
	0, 976, 971, 2974, 3369, 969, 1986, 1987, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 766, 0,
	0, 0, 0, -2, 0, 0, 0, 0, 0, 0,
	0, 0, 667, 532, 0, 1812, 1813, 1814, 1971, 1972,
	3314, 2017, 0, 296, 991, -2, -2, 4043, -2, 1068,
	1069, -2, -2, 1083, 1087, 1078, 4048, 0, 3317, 3299,
	-2, 1090, 1989, 1991, 1993, 1199, 1200, 1201, 2921, 1205,
	1203, 1215, 1216, 1219, 0, 1236, -2, 0, 2970, 3279,
	-2, -2, 1237, 1238, -2, -2, -2, -2, 1217, 1218,
	0, 0, 0, 0, 0, 2331, 2332, 2902, 918, 0,
	1193, 1244, 0, 0, 0, 0, -2, -2, -2, 0,
	0, 0, -2, 0, -2, -2, -2, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -2, 0, 0, 1393,
	0, 0, 0, -2, -2, -2, -2, -2, 0, 0,
	0, 0, 0, 0, 0, -2, -2, 0, 0, -2,
	0, -2, 0, 1520, 0, 0, 0, 913, 532, 0,
	1247, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 0, 1260,
	1360, 1391, 1392, 1403, 2019, 2011, 2014, 2012, 2013, 50,
	53, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 306, -2, -2, -2,
	-2, 0, 0, 0, 3040, 4057, -2, 2866, 2938, 2869,
	2864, 474, 476, 478, 480, 481, 0, 0, 0, 0,
	0, 0, 0, 512, 515, 517, 519, 521, 523, -2,
	0, 526, 0, 0, 666, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 738, -2, -2, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1627, 1619, 1620, 1886, -2, 0, 0,
	-2, 758, 760, 762, 764, 829, 830, 0, 2171, 2171,
	837, 838, 839, 840, -2, -2, 0, 0, 0, 0,
	409, 400, 1554, 1556, 1558, 1559, 0, 0, 0, 0,
	0, 979, 981, 0, 0, 3369, 363, 1561, 1563, 1565,
	1566, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	995, 997, 999, 1001, 1116, 1118, 1120, 1122, 1124, 1126,
	1128, 1130, 1132, 1134, 1137, 1139, 1141, 1143, 1145, 1147,
	1149, 1152, 1154, 1156, 1159, 1162, 1164, 1166, 1168, 1170,
	1172, 1174, 1176, 1178, 1180, 1182, 1184, 1186, 1188, 1190,
	1192, 1197, 0, 1792, 2172, 2019, 1996, 1997, 1998, 2003,
	2005, 1999, 2000, 2001, 55, 57, 59, 61, 63, 65,
	67, 69, 71, 73, 75, 77, 79, 81, 83, 1021,
	1023, 1025, 1027, 1029, 688, 690, 692, 694, 696, 699,
	701, 703, 705, 707, 544, 546, -2, 2141, 2142, 768,
	770, 772, 774, 776, 778, 780, 782, 784, 982, 0,
	985, 0, 1249, 984, -2, 0, 2176, 2176, 2176, 0,
	0, 2142, 2140, 0, 0, 0, 988, 989, 1094, 1095,
	2474, 0, 0, 0, 0, 0, 0, 0, 0, 2737,
	2563, 0, 1096, -2, -2, 2596, 2598, 4017, 3225, 4043,
	2736, 2600, 2601, 2602, 2603, 2604, 0, 2606, 2607, 2608,
	2609, 2610, 2611, 0, 2613, 0, 2618, 2619, 2620, 0,
	4024, 2841, 0, 0, 4031, 2927, 0, 2703, 2638, -2,
	2934, 2404, 2405, 2406, 2407, 2408, 2409, 2410, -2, 4062,
	2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651,
	2652, 0, 4005, 4025, 4026, 4032, 4034, 4027, 4014, 2663,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 3059,
	-2, -2, -2, -2, -2, -2, 2433, 2442, -2, -2,
	-2, -2, -2, -2, -2, 4018, 4019, 4037, 4040, 4047,
	4052, 4053, 4023, 4033, 2434, -2, -2, -2, -2, 0,
	2159, 3271, 2162, 2279, 2160, 2144, 2146, 0, 2148, 0,
	0, 0, 2153, 2179, 2177, 0, 2238, 2157, 2158, 2262,
	2262, 2294, 0, 2267, 0, 2294, 2171, 2325, 0, 2273,
	3304, 2639, 2640, 2938, 0, 0, 0, 0, 0, 0,
	0, 884, 886, 888, 889, 891, 0, 0, 0, 0,
	0, 0, 0, 0, 929, 0, 935, 937, 0, 0,
	0, 0, 971, 970, 2181, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 4025, 622, 626, 629, 266,
	4025, 625, 0, 670, 671, 672, 673, 674, 4025, 0,
	0, 0, 0, 680, 681, 682, 683, 684, 685, 686,
	266, 4025, 789, 823, 819, 0, 266, 4025, 792, 822,
	266, 4025, 795, 821, 0, 798, 1884, 266, 4025, 801,
	2894, 266, 4025, 804, 811, 808, 4025, 807, 1031, 0,
	2737, 266, 4025, 815, 2911, 2909, 816, 0, 818, 286,
	282, 283, 284, 285, 1982, 1983, 1984, 1985, 0, 533,
	2016, 1885, 993, 0, 1019, 0, 1066, 1067, 4013, -2,
	0, 3329, 1071, 1072, -2, 1074, 2020, 2024, 2025, 2026,
	2027, 2028, 0, 0, 0, 0, 2033, 0, 0, 0,
	0, 1051, 1052, 1081, 1082, 1088, 1091, 0, 1208, 1204,
	1220, 0, 1235, 0, 1236, 1236, 2883, 2874, 2875, 0,
	0, 1236, 1236, 0, 0, 1239, 1240, 1241, 1242, 1243,
	910, 0, 911, 1245, 1246, 0, 0, 1265, 1266, 1267,
	0, 0, 1285, -2, -2, -2, -2, 3021, 1277, 412,
	413, 2951, 2952, 2960, 2961, 2962, 2963, 4060, 0, 1309,
	1312, -2, -2, 0, 0, 0, 0, 1319, 0, 1324,
	1325, 1326, 0, -2, 0, 1334, 1336, 1552, 1339, 0,
	1552, 0, 1341, 0, 1345, 0, 1348, 1349, 0, 1351,
	0, 1353, -2, -2, -2, 1361, 1362, -2, 0, 1368,
	-2, 0, 1373, 0, -2, 0, 1376, 0, 1380, -2,
	0, 1393, 1389, 1390, 0, 0, 0, 0, 1411, 1412,
	0, 1416, 0, 1420, 0, 1429, 0, 1432, 1433, 1434,
	0, 0, 1439, 1440, 0, 1442, 1443, 1444, 1446, 1447,
	1461, 0, 3412, 3325, 3040, 3130, 3323, 3097, 3258, 0,
	1460, -2, 3081, 1472, 1474, 0, -2, 0, 1490, 0,
	1495, 1496, 0, 0, 0, 1519, 0, 0, 0, 912,
	914, 533, 0, 916, 1248, 0, 1257, 1258, 1259, 2010,
	-2, 94, 0, 4025, 2325, 96, 0, 2888, 2964, 2965,
	2966, 2967, 2968, 4080, 4081, 4082, 4083, 4084, 4085, 4086,
	4087, 4088, 4089, 4090, 4091, 4092, 4093, 4094, 4095, 4096,
	4097, 4098, 4099, 4100, 4101, 4102, 4103, 4104, 4105, 4106,
	4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4116,
	4117, 4118, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126,
	4127, 4128, 4129, 4130, 4131, 4132, 4133, 4134, 4135, 4136,
	4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146,
	4147, 4148, 4149, 4150, 4151, 4152, 4153, 4154, 4155, 4156,
	4157, 4158, 4159, 100, 0, 4025, 105, 0, 4025, 0,
	-2, 129, 647, 133, 0, 134, 0, 156, 0, 184,
	-2, -2, -2, 165, 0, 4025, 0, 2863, -2, 0,
	278, -2, 0, 905, 401, 402, 0, 896, 1030, 0,
	0, 0, 0, 1591, -2, 0, 1805, 1807, 1807, 0,
	-2, 0, 0, 0, 1542, 2860, 2865, 1543, 1544, 2884,
	1545, 2870, 0, 482, 483, 484, 485, 486, 487, 4025,
	489, 490, 0, 492, 493, 4025, 495, 496, 0, 498,
	0, 500, 0, 547, 345, 343, 4025, 0, 534, 4025,
	531, 4025, 549, 552, 0, 0, 668, 0, 665, 0,
	649, 650, 0, 652, 0, 0, 0, 657, 658, 660,
	661, 662, 663, 664, 0, 711, 709, 2899, 734, 426,
	0, -2, 4025, 0, 1588, 0, 0, 1859, -2, 0,
	1798, -2, 0, 1867, 4025, 1862, 0, -2, 0, 2169,
	4025, 2037, 1623, 1624, 1625, 1626, 0, 741, 742, 0,
	2076, 0, 2078, 0, 2098, 2333, 2262, 0, 0, 2338,
	0, -2, 893, 2920, -2, 832, 0, 833, 0, -2,
	0, 426, 0, 0, 1569, 1571, 1572, 1574, 1575, 1578,
	1579, 1580, 1581, 0, 1583, 2311, 364, 366, 0, 0,
	0, 0, 1568, 1973, 1974, 1975, 1976, 1977, 1978, 1979,
	1980, 1981, 0, 734, 1004, 0, 0, 266, 2329, 1995,
	0, -2, 0, 983, 0, 987, 2211, 2127, 2124, 0,
	2208, 2209, 2128, 0, 0, 0, 2135, 0, 2174, 2175,
	0, 0, 0, 2114, 2115, 0, 0, 0, 0, 0,
	0, 2742, 2743, 2744, 2745, 2758, 2746, 2747, 2757, 2755,
	2756, 2748, 2749, 2754, 2768, 2769, 2759, 2760, 2750, 2763,
	2761, 2762, 2764, 2765, 2766, 2767, 0, 0, 2773, 2774,
	0, 2751, 2752, 2753, 2782, 0, 0, 2783, 0, 2785,
	0, 2775, 2770, 2771, 2772, 0, 2542, 2544, 2849, 0,
	0, 0, 2781, 2776, 2777, 2479, 2480, 2481, 2482, 2483,
	2517, 2521, 2522, 0, 0, 2597, 2846, 2845, 2599, 0,
	0, 2797, 0, 2612, -2, 0, 2737, 2792, 0, 0,
	2621, 2622, 2623, 0, 0, 2797, 0, 0, 2840, 2635,
	2636, 2471, 0, 0, 2705, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2419, 0, 2420, 2421, 0, 2422, 2423,
	0, -2, 0, 0, 2443, 0, 0, 0, 0, 2447,
	0, 0, 0, 0, 0, 0, 0, 2821, -2, 0,
	0, 0, 0, 2435, 0, 0, 2161, 0, 0, 0,
	2242, 2850, 2854, 2855, 2242, 2242, 0, 0, 2798, 2322,
	2322, 0, 0, 2317, 2317, 2317, 2315, 2294, 0, 2294,
	2304, 0, 2294, 2294, -2, 2267, 0, 0, 2308, 0,
	2288, 872, 874, 876, 878, 879, 880, 882, 2326, 2327,
	0, 0, 0, 2939, 2625, 2186, 0, 0, 0, 0,
	2632, 0, 2882, 2924, 0, 0, 0, 0, 885, 887,
	890, 892, 0, 0, 0, 0, 2923, 0, 0, 2893,
	507, 508, 0, 0, 0, 3390, 3317, 0, -2, -2,
	-2, -2, 3325, 0, 0, 3040, 3081, 3097, 3258, 940,
	973, 0, 2171, 0, 2800, 2354, 2358, 0, 2360, 2361,
	2362, 0, 0, 2355, 2454, 2956, 2957, 2958, 2414, 2415,
	2416, 2417, 2418, 2426, 2413, 2413, 2413, 2424, -2, 2431,
	2453, 2445, 2453, 2449, 2397, 2398, 2399, 2436, 2437, 2438,
	2439, 0, 3390, 3317, 0, -2, 0, 953, 0, 0,
	0, 2109, 355, 356, 620, 0, 264, 265, 0, 628,
	0, 623, 0, 669, 0, 676, 677, 678, 0, 785,
	0, 0, 266, 4025, 790, 0, 793, 0, 266, 4025,
	2858, 799, 0, 802, 0, 0, 805, 809, 0, 0,
	3097, 813, 0, 0, 0, 0, 0, 266, 2111, 0,
	0, 0, 0, -2, 1076, 1084, 1085, 1086, 0, 2022,
	0, 2029, 1106, 1107, 1108, 2031, 2032, 0, 2034, 1079,
	1109, 1110, 1111, 1112, 1113, 1114, 0, 2872, 2873, 2878,
	2879, 0, 0, 1077, 1099, 1080, 0, 1092, 1211, 1206,
	1207, 1221, 1222, 0, 0, 2876, 2877, 0, 0, 1227,
	1228, 919, 0, 921, 0, 0, 1268, 364, 0, 0,
	1271, 0, 1285, 1285, 1285, 1285, 1301, 1307, 1308, 1497,
	1498, 1310, 1311, -2, -2, -2, -2, 1313, 1314, 1426,
	0, 0, 0, 1425, 1964, 0, 1330, 1333, 1337, 0,
	1524, 3299, 3317, 3390, 1550, 1338, 1426, 3040, 1426, 3040,
	1426, 3040, 1426, 1426, 1355, 1406, 1422, 1367, 1365, 1382,
	3071, 0, 1375, 0, 0, 0, 1369, 1374, 1378, 1381,
	0, 0, 1386, 1394, 0, 1396, -2, 0, 1398, 0,
	1400, 0, 1402, 1426, 1414, 1418, 1427, 1430, 0, 1438,
	1441, 0, 1448, 0, 1461, 1461, 1451, 2903, 1452, 2918,
	0, 0, 1455, 1456, 1457, 1458, 1459, -2, 0, 1465,
	1466, 0, 0, 1481, 1486, 1487, 1483, 0, 0, 0,
	0, 0, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 0,
	1513, 1514, 0, 0, 0, 0, 1523, 917, 915, 0,
	1261, 166, 1968, 0, 0, 219, 0, 1968, 1968, 0,
	0, 0, 0, 247, 0, 0, 1657, 0, 0, 0,
	0, 184, 204, 215, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 106, 1771, 0, 1774, 0, 0, 0,
	0, 0, 0, 0, 1787, 1790, 0, 0, 0, 0,
	638, 0, 607, 0, 0, 635, 646, 0, 0, 594,
	595, 596, 597, 0, 0, 602, 0, 0, 0, 0,
	608, 0, 0, 0, 0, 136, 137, 0, 0, 142,
	143, 0, 0, 203, 0, 0, 0, 0, 0, 0,
	2073, 0, 194, 184, 0, 0, 183, 185, 168, 0,
	0, 184, 188, 205, 217, 0, 253, 0, 191, 192,
	0, 255, 1654, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 288, 0, 0, 330, 903, 0, 906, 0,
	895, 897, 734, 734, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1044, 0, 0, 1049, 1050, 0, 1045,
	1048, 0, 0, 0, 0, 1799, 0, 0, 0, 2168,
	0, 0, 0, 0, 4025, 1966, 0, 1949, 0, 2311,
	3150, -2, -2, 2311, 1541, 0, 0, 2939, 2868, 0,
	0, 0, 0, 499, 0, 0, 0, 354, 527, 0,
	0, 0, 0, 0, 554, 563, 0, 556, 0, 659,
	648, 651, 653, 654, 655, 697, 1718, 4025, 0, 0,
	738, 729, 0, 733, 0, 0, 737, 0, 0, 1770,
	4025, 1768, 0, 1796, 0, 1858, 1749, 4025, 2901, 0,
	0, 0, 1868, 2948, 1881, 1885, 2061, 0, 2339, 0,
	0, 2079, 2081, 0, 0, 2334, 0, 2336, 2262, 2171,
	0, 0, 0, 0, 404, 0, 0, 0, 0, 0,
	1582, 370, 0, 2310, 0, 0, 414, 2311, 364, 0,
	1567, 426, 426, 2311, 1006, 2311, 1008, 1791, 0, 2004,
	2211, 2127, 986, 2118, 2210, 2119, 2126, 2129, 0, 0,
	2131, 0, 2133, 0, 2206, 2207, 2214, 2215, 0, 2225,
	2226, 2218, 0, -2, 0, 0, 2221, 2222, 2137, 0,
	2154, 2155, 2156, 2187, 2193, 2194, 1900, 0, 4162, 1064,
	0, 2475, 2349, 2476, 2477, 2887, 0, 2484, 2485, 2486,
	2487, 2488, 2489, 2490, 2491, 2492, 2493, -2, -2, -2,
	-2, -2, -2, -2, -2, 2502, 2503, 2504, 2505, 2506,
	2507, 2508, 2509, 2510, 2511, 2512, 2513, -2, -2, -2,
	2518, 2519, 2520, -2, 2784, 2786, 0, 2849, 0, -2,
	0, -2, -2, -2, -2, 2539, 0, 2541, 2546, 2548,
	2550, 0, 0, 0, 0, 2848, 2560, 2832, 2833, 0,
	0, 2739, 2740, 2741, 2545, 0, 2564, 2847, 2844, 0,
	0, 2778, 0, 2742, 2743, 2744, 2745, 2746, 2747, 2748,
	2749, 2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757, 2758,
	2759, 2760, 2761, 2762, 2763, 2764, 2765, 2766, 2767, 2768,
	2769, 2770, 2771, 2772, 2773, 2774, 2775, 0, 2796, 2186,
	2617, 2794, 0, 2793, 0, 0, 0, 2804, 2797, 0,
	2839, 2835, 0, 2885, 2470, 2457, 2458, 2459, 2460, 2461,
	2462, 2472, 0, 2924, 2930, 2713, 0, 0, 0, 2664,
	2665, 2666, 2667, 2668, 0, 2670, 2671, 0, 2673, 2674,
	0, 2676, 2677, 0, 2679, 2680, 2681, 2682, 2683, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2365,
	2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375,
	2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385,
	2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395,
	2396, 0, 0, 2685, 0, 2807, -2, -2, -2, -2,
	-2, -2, -2, -2, 0, 2687, 0, 2689, 2798, 2818,
	0, 0, 2565, 0, 0, 0, 0, 0, 2692, 2798,
	2826, 0, 0, 0, 0, 0, 2798, 0, 2831, 0,
	2699, 0, 2701, 1316, 1317, 2163, 2166, 0, 2280, 0,
	2344, 0, 0, 3449, 3442, 3769, -2, -2, 3889, 3665,
	-2, 3637, 0, 2853, 3765, 2856, 2857, 3429, 3430, 3431,
	3432, 3433, 3434, 3435, 3436, 3437, 3438, 3439, 3440, 3441,
	3443, 3444, 3445, 3446, 3447, 3448, 3450, 3451, 3452, 3453,
	3454, 3455, 3456, 3457, 3458, 3459, 3460, 3462, 3463, 3464,
	3465, 3466, 3467, 3468, 3469, 3470, 3471, 3472, 3473, 3474,
	3475, 3476, 3477, 3478, 3479, 3480, 3481, 3482, 3483, 3484,
	3485, 3486, 3487, 3488, 3489, 3490, 3491, 3492, 3493, 3494,
	3495, 3496, 3497, 3498, 3499, 3500, 3501, 3502, 3503, 3504,
	3505, 3506, 3507, 3508, 3509, 3510, 3511, 3512, 3513, 3514,
	3515, 3516, 3517, 3518, 3519, 3520, 3521, 3522, 3523, 3524,
	3525, 3526, 3527, 3528, 3529, 3530, 3531, 3532, 3533, 3534,
	3535, 3536, 3537, 3538, 3539, 3540, 3541, 3542, 3543, 3544,
	3545, 3546, 3547, 3548, 3549, 3550, 3551, 3552, 3553, 3554,
	3555, 3556, 3557, 3558, 3559, 3560, 3561, 3562, 3563, 3564,
	3565, 3566, 3567, 3568, 3569, 3570, 3571, 3572, 3573, 3574,
	3575, 3576, 3577, 3578, 3579, 3580, 3581, 3582, 3583, 3584,
	3585, 3586, 3587, 3588, 3589, 3590, 3591, 3592, 3593, 3594,
	3595, 3596, 3597, 3598, 3599, 3600, 3601, 3602, 3603, 3604,
	3605, 3606, 3607, 3608, 3609, 3610, 3611, 3612, 3613, 3614,
	3615, 3616, 3617, 3618, 3619, 3620, 3621, 3622, 3623, 3624,
	3625, 3626, 3627, 3628, 3629, 3630, 3631, 3632, 3634, 3635,
	3636, 3638, 3639, 3640, 3641, 3642, 3643, 3644, 3645, 3646,
	3647, 3648, 3649, 3650, 3651, 3652, 3653, 3654, 3655, 3656,
	3657, 3658, 3659, 3660, 3661, 3662, 3663, 3664, 3666, 3667,
	3668, 3669, 3670, 3671, 3672, 3673, 3674, 3675, 3676, 3677,
	3678, 3679, 3680, 3681, 3682, 3683, 3684, 3685, 3686, 3687,
	3688, 3689, 3691, 3692, 3693, 3694, 3695, 3696, 3697, 3698,
	3699, 3700, 3701, 3702, 3703, 3704, 3705, 3706, 3707, 3708,
	3709, 3710, 3711, 3712, 3713, 3714, 3715, 3716, 3717, 3718,
	3719, 3720, 3721, 3722, 3723, 3724, 3725, 3726, 3727, 3728,
	3729, 3730, 3731, 3732, 3733, 3734, 3735, 3736, 3737, 3738,
	3739, 3740, 3741, 3742, 3743, 3744, 3745, 3746, 3747, 3748,
	3749, 3750, 3751, 3752, 3753, 3754, 3755, 3756, 3757, 3758,
	3759, 3760, 3761, 3762, 3763, 3764, 3766, 3767, 3768, 3770,
	3771, 3772, 3773, 3774, 3775, 3776, 3777, 3778, 3779, 3780,
	3781, 3782, 3783, 3784, 3785, 3786, 3787, 3788, 3789, 3790,
	3791, 3792, 3793, 3794, 3795, 3796, 3797, 3798, 3799, 3800,
	3801, 3802, 3803, 3804, 3805, 3806, 3807, 3808, 3809, 3810,
	3811, 3812, 3813, 3814, 3815, 3816, 3817, 3818, 3819, 3820,
	3821, 3822, 3823, 3824, 3825, 3826, 3827, 3828, 3829, 3830,
	3831, 3832, 3833, 3834, 3835, 3836, 3837, 3838, 3839, 3840,
	3841, 3842, 3843, 3844, 3845, 3846, 3847, 3848, 3849, 3850,
	3851, 3852, 3853, 3854, 3855, 3856, 3857, 3858, 3859, 3860,
	3861, 3862, 3863, 3864, 3865, 3866, 3867, 3868, 3869, 3870,
	3871, 3872, 3873, 3874, 3875, 3876, 3877, 3878, 3879, 3880,
	3881, 3882, 3883, 3884, 3885, 3886, 3887, 3888, 3890, 3891,
	3892, 3893, 3894, 3895, 3896, 3897, 3898, 3899, 3900, 3901,
	3902, 3903, 3904, 3905, 3906, 3907, 3908, 3909, 3910, 3911,
	3912, 3913, 3914, 3915, 3916, 3917, 3918, 3919, 3920, 3921,
	3922, 3923, 3924, 3925, 3926, 3927, 3928, 3929, 3930, 3931,
	3932, 3933, 3934, 3935, 3936, 3937, 3938, 3939, 3940, 3941,
	3942, 3943, 3944, 3945, 3946, 3947, 3948, 3949, 3950, 3951,
	3952, 3953, 3954, 3955, 3956, 3957, 3958, 3959, 3960, 3961,
	3962, 3963, 3964, 3965, 3966, 3967, 3968, 3969, 3970, 3971,
	3972, 3973, 3974, 3975, 3976, 3977, 3978, 3979, 3980, 3981,
	3982, 3983, 3984, 3985, 3986, 3987, 3988, 3989, 3990, 3991,
	3992, 3993, 3994, 3995, 3996, 3997, 3998, 3999, 4000, 4001,
	4002, 4003, 4004, 2344, 2344, 0, 2237, 0, 0, 2318,
	2319, 2320, 2321, 0, 0, 2322, 0, 2312, 2316, 2313,
	2314, 2304, 2259, 0, 0, 2889, 2304, 2265, 2303, 0,
	2279, 2293, 2304, 2304, -2, 2269, 2307, 0, 2282, 2294,
	0, 0, 873, 875, 877, 881, 883, 0, 0, -2,
	0, 0, 0, 2185, 0, 2186, 2186, 0, 2631, 2634,
	0, -2, 429, -2, 431, 1748, 0, 0, 0, 0,
	0, 0, 0, 930, 932, 0, 0, 810, 0, 0,
	0, 0, 0, 1530, 0, 1532, 1533, 0, 1535, 1536,
	0, 1952, 924, 0, 927, 0, 2345, 2348, 0, 0,
	2359, 2363, 2364, 2455, 0, 0, 0, 0, 0, 0,
	0, 0, 968, 0, 3369, 0, 966, 0, 627, 266,
	0, 631, 632, 0, 0, 575, 576, 577, 578, 580,
	2959, 581, -2, -2, 266, 0, 679, 266, 820, 787,
	0, 266, 266, 796, 0, 0, 266, 812, 266, 808,
	1032, 2912, 266, 2910, 287, 817, 2110, 299, 0, 1063,
	0, 2021, 2030, 0, 1103, 0, 1105, 0, 2880, 2881,
	0, 1093, 0, 1209, 0, 1223, 1224, 1225, 1226, 0,
	920, 426, 0, 0, 1285, 1283, 0, 1286, 1288, 1289,
	0, 1291, 1292, 0, 0, 0, 1296, 0, 1298, 1272,
	1273, 1274, 1275, 1276, 0, 1357, 1408, 1424, 1485, 1318,
	1320, 1321, 1322, 0, 1327, 0, 0, 0, 0, 0,
	1551, 1546, 1547, 1548, 2913, 2909, 1549, 1340, 1426, 1343,
	1426, 1346, 1426, 1350, 1352, 0, 1384, 1371, 0, 1372,
	1576, 1577, 1377, 1379, 1395, 1388, 1397, 0, 0, 0,
	1410, 0, 0, 0, 1436, 0, 1445, 1462, 1449, 1450,
	1453, 0, 1464, -2, 1469, 1470, 0, 0, 0, 0,
	0, 0, 0, 1499, 1499, 1499, 1494, 0, 1511, 1516,
	1515, 0, 1521, 1522, 1262, 0, 0, 0, 0, 1967,
	0, 0, 1912, 0, 0, 223, 4025, 0, 268, 0,
	0, 1711, 2895, 0, 1699, 0, 0, 3068, 0, 0,
	0, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 175, 0, 181, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 1772, 1773, 1775, 1782,
	1784, 0, 1778, 1779, 0, 1781, 1783, 1785, 0, 1788,
	0, 0, 0, 0, 0, 0, 634, 636, 637, 607,
	0, 0, 0, 0, 0, 0, 0, 600, 601, 603,
	604, 605, 606, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 144, 148, 1808, 3323, 0, 0, 0, 0,
	1809, 1810, 1811, 2049, 2050, 0, 2072, 2073, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 190,
	193, 0, 2862, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 331, 0, 907, 0, 908,
	0, 898, 426, 900, 901, 422, 419, 421, 902, 0,
	0, 1037, 1036, 1038, 1039, 1040, 0, 0, 0, 0,
	0, 1057, 0, 0, 1058, 1046, 1047, 0, 0, 1801,
	0, 1854, 1852, 1824, 1825, 1826, 1827, 1828, 1829, 1830,
	1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840,
	1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850,
	1851, 0, 0, 0, 0, -2, 1803, 1804, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 0, 417, 2861,
	2871, 0, 488, 491, 494, 497, -2, -2, 0, 0,
	0, 535, 0, 0, 551, 565, 565, 0, 1629, 1601,
	0, 0, 710, 426, 734, 736, 0, 424, 3228, 2916,
	1586, 1766, 1769, 0, 1749, 4025, 1820, 0, 0, 0,
	0, 0, 1874, 0, 1866, 0, 0, 4025, 2890, 2947,
	2948, 2063, 2073, 0, 749, 0, 745, 0, 2096, 2082,
	0, 0, 0, 2096, 2100, 2101, 2103, 2104, 0, 0,
	2335, 2341, 831, 894, 2171, 2171, 426, 0, 0, 2085,
	2087, 0, 0, 0, 357, 0, 367, 2311, 365, 0,
	370, 0, 2311, 364, 0, 725, 1005, 1010, 2330, 2122,
	2123, 2125, 0, 2134, 0, 0, 2220, -2, -2, 2219,
	2223, 2224, -2, -2, -2, -2, 2130, 0, 2139, 2136,
	0, 2205, 1898, 1899, 0, 0, 1065, 0, 0, -2,
	-2, 0, 0, 0, 2561, 0, -2, 2540, 2543, 2547,
	2549, 2551, 0, 0, 0, 0, 0, 0, 2787, 0,
	2789, 2562, 2842, 2845, 2780, 0, 2735, 0, 0, 2795,
	0, 2802, 2803, 0, 2624, 0, 2836, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2637, 0, 0, 0,
	0, 2669, 2672, 2675, 2678, 0, 0, 0, 0, 2658,
	0, 0, 0, 2662, 2425, 2411, 0, 0, 2428, 2432,
	2453, 2451, 2452, 2446, 2453, 2450, 2401, 0, 2400, 0,
	2684, 0, 2686, 2688, 0, 0, 2690, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2568, 2569, 2570, 2590, 2691, 2824, 2825, 0, 0,
	0, 0, 0, 0, 2697, 0, 2830, 2698, 2700, 0,
	2164, 0, 2278, 0, 2239, 2228, 2343, 0, 2851, 2311,
	2241, 2243, 2852, 2892, 2228, 2228, 0, 2799, 0, 0,
	2298, 0, 0, 0, 2300, 2263, 0, 0, 2257, 0,
	2247, 2248, 2249, 2250, 2251, 2252, 2253, 0, 2264, 2279,
	2302, 2266, 2270, 0, 2282, 2306, 0, 2304, 0, 2289,
	0, 2291, 2328, 0, 2275, 2308, 0, 2940, 2626, 0,
	0, 0, 0, 2630, 2925, 2344, 0, 430, -2, 433,
	501, 509, 510, 502, 503, 504, 505, 0, 1952, 0,
	0, 0, 0, 0, 0, 1531, 1534, 0, 949, 0,
	0, 2801, 0, 2350, 0, 2356, 0, 951, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2108, 621, 630,
	0, 0, 574, 0, 573, 579, 624, 675, 786, 266,
	791, 794, 2859, 266, 800, 803, 806, 814, 295, 0,
	1018, -2, 1101, 1102, 1104, 0, 1100, 1214, 1210, 0,
	923, 1263, 0, 0, 1270, 0, 0, 1290, 0, 0,
	0, 0, 1299, 0, 1302, 0, 0, 0, 0, 0,
	1964, 1964, 1961, 1332, 0, 1342, 1344, 1347, 1383, 1399,
	1401, 1426, 1413, 1417, 0, 1437, 1454, 1468, 1475, 2891,
	1476, 1651, 0, 1651, 0, 0, 1491, 1492, 1493, 1506,
	1507, 1508, 1509, 1510, 1512, 1518, 220, 1968, 0, 0,
	0, 1908, 0, 1612, 0, 1607, 1608, 1910, 2908, 1914,
	1920, 1923, 0, 225, 4025, 237, 0, 4025, 0, 1673,
	0, 0, 0, 0, 0, 0, 1970, 0, 0, 4025,
	266, 4025, 266, 241, 243, 246, 0, 252, 248, 0,
	1609, 0, 1661, 0, 0, 1664, 167, 1968, 0, 0,
	170, 174, 186, 0, 0, 0, 202, 0, 0, 0,
	1925, 1929, 1937, 0, 0, 0, 1776, 1777, 1780, 1786,
	1789, 107, 0, 0, 0, 1933, 1935, 1941, 639, 640,
	641, 0, 0, 0, 598, 599, 643, 644, 645, 135,
	138, 4025, 2904, 2905, 0, 140, 4025, 0, 149, 2073,
	0, 0, 0, 0, 1907, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 172, 176, 187, 0, 1943, 169,
	189, 0, 281, 0, 0, 271, 266, 4025, 0, 273,
	0, 274, 275, 289, 0, 0, 0, 0, 0, 0,
	0, 336, 0, 0, 0, 904, 0, 899, 0, 0,
	0, 1033, 1034, 1035, 0, 1043, 539, 0, 0, 1053,
	1061, 1059, 1054, 1055, 1056, 1589, 1590, 1853, 0, 1794,
	1795, 340, 341, 0, 1806, 1800, 0, 0, 0, 0,
	0, 1945, 1946, 0, 0, 0, 1966, 2311, 301, 0,
	2311, 309, 0, 2867, 0, 328, 0, 426, 728, 0,
	344, 353, 0, 534, 548, 0, 564, 566, 568, 0,
	0, 0, 0, 1628, 1729, 1630, 1632, 1633, 1634, 268,
	0, 0, 0, 1699, 3136, 2948, 0, 0, 1596, 0,
	0, 0, 716, 712, 0, 723, 730, 731, 0, 0,
	0, -2, 0, 0, 0, 0, -2, 0, 0, 0,
	1870, 0, 1873, 0, 1865, 0, 0, 0, 0, 4025,
	2065, 2073, 0, 2169, 2344, 0, 743, 0, 747, 2074,
	2096, 0, 0, 0, 2084, 2080, 2077, 2344, 0, 0,
	0, 0, 0, 2337, 2340, 834, 835, 403, 0, 426,
	0, 0, 0, 0, 0, 0, 368, 0, 371, 0,
	0, 0, 376, 377, 378, 379, 380, 381, 382, 0,
	0, 385, 0, 0, 0, 390, 391, 392, 0, 0,
	395, 325, 326, 398, 399, 396, 397, 370, 415, 359,
	2311, 370, 0, 0, 1007, 0, 2132, 0, 2217, 2138,
	2195, 2196, 2202, 0, 1900, 0, 2478, 2524, 0, 0,
	-2, 0, 0, 2528, 0, 0, 0, -2, 0, 0,
	0, 2788, 2790, 0, 2844, 2779, 2626, 2614, 2615, 0,
	2738, 2805, 2834, 2838, 0, 2463, 2464, 2465, 2466, 2467,
	2468, 2469, 0, 2886, 2925, 2929, 2711, 2712, 2716, 2900,
	0, 0, 0, 2641, 0, 0, 0, 0, 0, 0,
	0, 0, 2427, 2444, 2448, 0, 0, 2806, 2817, 2819,
	2566, 2567, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578,
	2579, 2580, -2, -2, -2, 2584, 2585, 2586, -2, -2,
	-2, 2591, 0, 0, 0, 2820, 2822, 2823, 2827, 2828,
	0, 2694, 2695, 2696, 2829, 2171, 2165, 2281, 2236, 0,
	2342, 2240, 0, 2236, 2236, 2178, 2296, 0, 0, 2324,
	0, 2260, 0, 2261, 0, 0, 0, 2301, 2268, 2305,
	0, 2284, 2286, 2271, 2272, 2290, 0, 2274, 0, 2277,
	-2, 2186, 2188, 2197, 2627, 2629, 0, 428, 434, 0,
	437, 0, 442, 443, 0, 0, 0, 0, 448, 0,
	0, 0, 0, 432, 0, 939, 1952, 1952, 0, 0,
	0, 0, 941, 0, 925, 0, 0, 2352, 0, 2456,
	955, 957, 0, 0, 0, 0, 0, 3390, 3317, 0,
	0, 954, 633, 571, 572, 788, 797, 297, 0, 2309,
	0, 0, 0, 922, 426, 1285, 1287, 0, 1293, 1294,
	1295, 1297, 0, 0, 0, 0, 0, 1323, 1963, 1328,
	1329, 2914, 1409, 1435, 1477, 1650, 0, 0, 1479, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	267, 0, 1710, 0, 1671, 0, 0, 1698, 0, 0,
	1716, 227, 228, 229, 0, 0, 0, 0, 239, 0,
	0, 235, 0, 245, 251, 250, 0, 1658, 0, 0,
	0, 0, 1913, 0, 0, 0, 199, 200, 201, 0,
	206, 0, 207, 0, 0, 0, 0, 0, 0, 0,
	0, 592, 0, 0, 0, 0, 146, 0, 0, 0,
	151, 152, 0, 0, 2055, 2056, 0, 2040, 196, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 1897,
	291, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	0, 313, 315, 0, 0, 0, 321, 323, 0, 0,
	342, 0, 423, 418, 420, 0, 1042, 0, 0, 0,
	0, 0, 1793, 1856, 1857, 1802, 1926, 1930, 1938, 0,
	0, 0, 0, 0, 976, 1965, 0, 309, 307, 0,
	310, 309, 303, 0, 0, 426, 0, 739, 0, 528,
	0, 0, 0, 0, 0, 584, 656, 1599, 1717, 0,
	0, 1719, 1635, 1639, 0, 0, 2948, 0, 0, 0,
	2897, 0, 1597, 0, 0, 1718, 708, 714, 0, 717,
	0, 720, 0, 722, 0, 735, 2896, 0, 0, 0,
	1770, 0, 0, 1797, 1749, 1823, 1749, 0, 1869, 1871,
	1863, 0, 1875, 0, 1883, 0, 0, 0, 2067, 2073,
	0, 2060, 2061, 2184, 748, 746, 2075, 2094, -2, 0,
	0, 2184, 2102, 2099, 2105, 2106, 0, 0, 406, 0,
	2086, 2088, 0, 1570, 1573, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 358, 370,
	361, 2311, 410, 0, 2216, 2203, 2204, 2200, 1900, 2526,
	2530, 0, 0, 0, 2532, -2, 0, 2554, -2, -2,
	2791, 2843, 2605, 2616, 2837, 2473, 0, 2718, 2715, 0,
	2702, 0, 2653, 2654, 0, 0, 2657, 2659, 2660, 2661,
	2412, 2403, 2402, 2816, 0, 0, 0, 0, 2693, 0,
	2707, 0, 0, 2244, 2707, 2707, 2297, 0, 2299, 2258,
	2245, 0, 2254, 0, 0, 2283, 0, 2287, 2292, 2276,
	0, 0, 2926, 438, 0, 439, 0, 0, 0, 0,
	0, 0, 464, 0, 0, 0, 0, 0, 0, 0,
	444, 445, 446, 447, 449, 450, 0, 0, 0, 0,
	506, 942, 943, 0, 0, 0, 0, 0, 1951, 2346,
	2351, 0, 2357, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 967, 298, 0, 1212, 1213, 1264, 1269,
	1284, 1303, 0, 1304, 1305, 1306, 1649, 0, 0, 0,
	0, 221, 222, 1613, 1611, 1917, 1921, 1918, 0, 224,
	0, 0, 1672, 0, 1675, 0, 0, 0, 0, 1682,
	1699, 0, 0, 0, 0, 0, 0, 1701, 0, 1700,
	0, 0, 1733, 0, 1888, 1895, 0, -2, 0, 0,
	0, 231, 257, 0, 0, 0, 0, 260, 1969, 233,
	0, 0, 266, 266, 1610, 0, 0, 1909, 1911, 1924,
	0, 0, 0, 0, 209, 0, 0, 1927, 1931, 1939,
	1934, 1936, 1942, 642, 593, 0, 0, 141, 150, 2043,
	0, 0, 0, 2057, 0, 195, 0, 0, 0, 1944,
	279, 280, 0, 266, 0, 266, 272, 266, 1897, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 337, 338,
	339, 0, 0, 540, 541, 0, 1062, 1060, 0, 0,
	0, 0, 0, 0, 1947, 1948, 300, 0, 0, 302,
	416, 309, 0, 0, 0, 0, 550, 560, 567, 569,
	570, 617, 583, 585, 0, 0, 589, 590, 591, 1660,
	0, 1729, 1721, 1722, 1723, 0, 1631, 1728, 1730, 0,
	0, 1636, 0, 0, 0, 0, 0, 0, 1616, 1598,
	0, 1629, 1601, 718, 0, 719, 721, 713, 0, 425,
	1587, 1767, 1815, 1749, 0, 1818, 0, 0, 1860, 0,
	0, 0, 1874, 0, 0, 0, 0, 0, 2069, 2073,
	0, 2062, 2063, 2213, 2183, 0, 0, 0, 2083, 2213,
	0, 426, 0, 426, 372, 0, 373, 374, 375, 383,
	384, 386, 387, 388, 389, 0, 394, 360, 370, 1009,
	1011, 0, 0, 0, 1017, 2201, 2534, -2, -2, 2555,
	2928, 2186, 0, 2704, 2189, 2190, 0, 0, -2, 0,
	0, 0, 2167, 2150, 0, 2235, 2227, 2229, 2231, 3302,
	3035, 4024, 2151, 2152, 2323, 0, 0, 0, 2285, 2628,
	2198, 2199, 435, 0, 455, 456, 457, 458, 459, 460,
	461, 462, 463, 465, 466, 467, 468, 469, 470, 471,
	0, 441, 451, 0, 453, 454, 944, 0, 0, 0,
	0, 0, 2353, 0, 0, 0, 0, 952, 0, 0,
	0, 0, 0, 1202, 1300, 1478, 1480, 0, 0, 0,
	0, 1919, 226, 0, 0, 1676, 1677, 1679, 0, 1681,
	1683, 1684, 1601, 0, 1688, 0, 2950, 0, 1693, 1696,
	1697, 0, 0, 1712, 1734, 0, 1743, 0, 1890, 1900,
	1894, 0, 1892, 1745, 0, 230, 259, 232, 261, 256,
	0, 1897, 0, 234, 244, 0, 0, 171, 0, 0,
	3028, 212, 210, 208, 139, 145, 2906, 147, 153, 1906,
	198, 0, 173, 0, 281, 290, 1896, 292, 276, 266,
	0, 312, 314, 316, 317, 318, 319, 0, 322, 324,
	0, 1041, 542, 1928, 1932, 1940, 0, 1955, 1956, 1957,
	1958, 1959, 0, 0, 0, 311, 0, 0, 352, 0,
	0, 0, 562, 559, 555, 615, 0, 0, 586, 619,
	609, 588, 1601, 1659, 1600, 1720, 0, 1731, 1601, 0,
	0, 1745, 0, 0, 0, 0, 0, 1603, 0, 1602,
	0, 0, 715, 2344, 732, 0, 0, 0, 1822, 0,
	1872, 1876, 1870, 0, 0, 1882, 0, 0, 0, 2039,
	0, 0, 2064, 2065, 2096, 2212, 2089, 0, 0, 2096,
	2107, 405, 0, 408, 369, 393, 362, 0, 1013, 0,
	1015, 0, 2722, 0, 0, 0, 2655, 2656, -2, 0,
	2594, 2706, 2708, 0, 0, 0, 0, 0, 2246, 2255,
	2256, 440, 472, 452, 1952, 1952, 1952, 1952, 2347, 959,
	960, 962, 964, 956, 958, 0, 0, 0, 1488, 1489,
	1915, 0, 1922, 268, 1674, 1678, 0, 1685, 0, 0,
	0, 1689, 1753, 0, 0, 1770, 1770, 1702, 0, 0,
	1737, 1738, 1656, 0, 1739, 1740, 1741, 1889, 2205, 1895,
	1601, 0, 0, 258, 263, 0, 0, 0, 0, 0,
	0, 0, 197, 0, 270, 293, 1897, 320, 0, 0,
	1960, 0, 0, 308, 349, 726, 0, 0, 538, 0,
	0, 561, 614, 610, 587, 0, 1603, 0, 1732, 1637,
	1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1638,
	1743, 1745, 0, 1656, 0, 1709, 1614, 0, 1617, 0,
	1599, 0, 724, 0, 1816, 0, 1823, 0, 1864, 0,
	1883, 0, 0, 2052, 2038, 2073, 2066, 2067, 740, 2344,
	0, 2097, 0, 1012, 0, 0, 0, 0, 0, 0,
	2717, 2191, 2192, 2595, 0, 0, 2230, 2232, 2233, 2234,
	945, 946, 947, 948, 0, 0, 0, 1916, 238, 0,
	1747, 1687, 1758, 0, 0, 0, 0, 0, 1703, 1735,
	1736, 1733, 1655, 0, 1893, 1891, 1714, 1747, 1749, 236,
	0, 1745, 0, 1665, 0, 0, 1668, 0, 0, 213,
	3028, 211, 2907, 0, 266, 909, 1952, 266, 0, 352,
	0, 0, 0, 529, 0, 0, 584, 582, 2171, 618,
	1595, 0, 1725, 1727, 1656, 1743, 1745, 1601, 1656, 0,
	1618, 1660, 1616, 1817, 1821, 1819, 1861, 1745, 0, 1743,
	0, 2059, 2073, 2053, 2054, 0, 2069, 0, 0, 426,
	1014, 1016, 2714, 2734, 2723, -2, 3393, 3036, 0, 2734,
	2734, 2709, 2710, 0, 0, 0, 0, 1601, 0, 1690,
	1754, 1755, 0, 1750, 1751, 1752, 2949, 1691, 1692, 1694,
	1695, 2344, 0, 1744, 1753, 262, 1601, 1662, 0, 0,
	1663, 0, 0, 216, 0, 218, 294, 1950, 1953, 0,
	327, 0, 0, 2344, 536, 0, 0, 617, 0, 616,
	611, 612, 1592, 1594, 1601, 0, 1601, 1656, 1743, 2344,
	1601, 0, 0, 0, 1601, 1603, 1743, 0, 1656, 0,
	2048, 2058, 0, 2068, 2039, 0, 2092, 0, 407, 2719,
	0, 0, 2725, 2726, 2727, 2728, 2729, 2720, 2721, 961,
	963, 965, 1680, 1686, 0, 1756, 0, 1757, 0, 0,
	0, 1713, 1742, 1758, 242, 1666, 0, 1669, 0, 214,
	0, 347, 348, 350, 0, 0, 0, 538, 553, 613,
	1724, 1726, 2344, 1601, 1656, 1905, 2344, 1604, 0, 1606,
	1603, 1615, 1656, 0, 1601, 0, 2071, 2047, 2051, 2052,
	2090, 0, 0, 0, 2731, 2732, 0, 0, 0, 1759,
	0, 1762, 1763, 0, 1760, 1733, 0, 0, 266, 0,
	352, 0, 530, 1905, 2344, 1601, 1707, 0, 1902, 1903,
	0, 1905, 1605, 1595, 1601, 1745, 2344, 1743, 2045, 2073,
	2059, 0, 2344, 2730, 2733, 2724, 1746, 1761, 1764, 1765,
	1715, 0, 0, 1954, 351, 727, 537, 1704, 1905, 2344,
	1901, 1904, 1708, 1593, 2344, 1743, 1905, 1656, 2042, 2044,
	0, 0, 2048, 2344, 2093, 1653, 0, 1705, 1905, 1905,
	1656, 1879, 1601, 2035, 2041, 0, 0, 2070, 2071, 2091,
	1667, 1652, 0, 1706, 1877, 1601, 2344, 0, 2045, 0,
	2344, 1905, 0, 2042, 0, 1905, 1880, 2046, 2036, 1653,
	1878, 1670,
}

var sqlTok1 = [...]int16{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 694, 3, 700, 695, 3,
	706, 707, 698, 696, 711, 697, 708, 699, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 715, 712,
	686, 688, 687, 691, 710, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 704, 3, 705, 701, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 713, 693, 714, 689,
}

var sqlTok2 = [...]int16{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]uint16{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 600, 57943, 601, 57944, 602,
	57945, 603, 57946, 604, 57947, 605, 57948, 606, 57949, 607,
	57950, 608, 57951, 609, 57952, 610, 57953, 611, 57954, 612,
	57955, 613, 57956, 614, 57957, 615, 57958, 616, 57959, 617,
	57960, 618, 57961, 619, 57962, 620, 57963, 621, 57964, 622,
	57965, 623, 57966, 624, 57967, 625, 57968, 626, 57969, 627,
	57970, 628, 57971, 629, 57972, 630, 57973, 631, 57974, 632,
	57975, 633, 57976, 634, 57977, 635, 57978, 636, 57979, 637,
	57980, 638, 57981, 639, 57982, 640, 57983, 641, 57984, 642,
	57985, 643, 57986, 644, 57987, 645, 57988, 646, 57989, 647,
	57990, 648, 57991, 649, 57992, 650, 57993, 651, 57994, 652,
	57995, 653, 57996, 654, 57997, 655, 57998, 656, 57999, 657,
	58000, 658, 58001, 659, 58002, 660, 58003, 661, 58004, 662,
	58005, 663, 58006, 664, 58007, 665, 58008, 666, 58009, 667,
	58010, 668, 58011, 669, 58012, 670, 58013, 671, 58014, 672,
	58015, 673, 58016, 674, 58017, 675, 58018, 676, 58019, 677,
	58020, 678, 58021, 679, 58022, 680, 58023, 681, 58024, 682,
	58025, 683, 58026, 684, 58027, 685, 58028, 690, 58029, 692,
	58030, 702, 58031, 703, 58032, 709, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := int(sqlPact[state])
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && int(sqlChk[int(sqlAct[n])]) == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || int(sqlExca[i+1]) != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := int(sqlExca[i])
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = int(sqlTok1[0])
		goto out
	}
	if char < len(sqlTok1) {
		token = int(sqlTok1[char])
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = int(sqlTok2[char-sqlPrivate])
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = int(sqlTok3[i+0])
		if token == char {
			token = int(sqlTok3[i+1])
			goto out
		}
	}

out:
	if token == 0 {
		token = int(sqlTok2[1]) /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = int(sqlPact[sqlstate])
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = int(sqlAct[sqln])
	if int(sqlChk[sqln]) == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = int(sqlDef[sqlstate])
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && int(sqlExca[xi+1]) == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = int(sqlExca[xi+0])
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = int(sqlExca[xi+1])
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = int(sqlPact[sqlS[sqlp].yys]) + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = int(sqlAct[sqln]) /* simulate a shift of "error" */
					if int(sqlChk[sqlstate]) == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= int(sqlR2[sqln])
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = int(sqlR1[sqln])
	sqlg := int(sqlPgo[sqln])
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = int(sqlAct[sqlg])
	} else {
		sqlstate = int(sqlAct[sqlj])
		if int(sqlChk[sqlstate]) != -sqln {
			sqlstate = int(sqlAct[sqlg])
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1777
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1782
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1786
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 8:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1792
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1796
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1797
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1798
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1799
		{
			return helpWith(sqllex, "GRANT")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1800
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1801
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1802
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1803
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1804
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 31:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1805
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1806
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1809
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1810
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1811
		{
			return helpWith(sqllex, "FETCH")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1812
		{
			return helpWith(sqllex, "MOVE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1815
		{
			return helpWith(sqllex, "SHOW COMMIT TIMESTAMP")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1822
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1825
		{
			return helpWith(sqllex, "ALTER")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1828
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 57:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1829
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 59:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1830
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 61:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1831
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 63:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1832
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1833
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 67:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1834
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 69:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1835
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 71:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1836
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1837
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 75:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1838
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1839
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 79:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1840
		{
			return helpWith(sqllex, "ALTER FUNCTION")
		}
	case 81:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1841
		{
			return helpWith(sqllex, "ALTER PROCEDURE")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1842
		{
			return helpWith(sqllex, "ALTER BACKUP SCHEDULE")
		}
	case 94:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1903
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 96:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1929
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1943
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1963
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 106:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1967
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1971
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2034
		{
			return helpWith(sqllex, "ALTER FUNCTION")
		}
	case 133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2051
		{
			return helpWith(sqllex, "ALTER PROCEDURE")
		}
	case 134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2055
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2059
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2066
		{
			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2077
		{
			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2086
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2093
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2103
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2110
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2120
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2129
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2136
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2145
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2155
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2164
		{
			sqlVAL.union.val = &tree.AlterDatabaseAlterSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2174
		{
			sqlVAL.union.val = &tree.AlterDatabaseSecondaryRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SecondaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2183
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSecondaryRegion{
				DatabaseName: tree.Name(sqlDollar[3].str),
				IfExists:     false,
			}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2191
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSecondaryRegion{
				DatabaseName: tree.Name(sqlDollar[3].str),
				IfExists:     true,
			}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2200
		{
			s := sqlDollar[7].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelGlobal,
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2213
		{
			s := sqlDollar[7].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2226
		{
			s := sqlDollar[9].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
				RegionName:    tree.Name(sqlDollar[8].str),
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2262
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2296
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2300
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2304
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2310
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2314
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2320
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2329
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2340
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2344
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2350
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2358
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2368
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2372
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2384
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2390
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 184:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2394
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2399
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 186:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2405
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2417
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2428
		{
			sqlVAL.union.val = &tree.AlterIndexVisible{
				Index:        sqlDollar[3].union.tableIndexName(),
				Invisibility: sqlDollar[4].union.indexInvisibility(),
				IfExists:     false,
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2436
		{
			sqlVAL.union.val = &tree.AlterIndexVisible{
				Index:        sqlDollar[5].union.tableIndexName(),
				Invisibility: sqlDollar[6].union.indexInvisibility(),
				IfExists:     true,
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2446
		{
			sqlVAL.union.val = tree.IndexInvisibility{Value: 1.0}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2450
		{
			sqlVAL.union.val = tree.IndexInvisibility{Value: 1.0}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2454
		{
			sqlVAL.union.val = tree.IndexInvisibility{Value: 0.0}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2458
		{
			visibilityConst, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if visibilityConst < 0.0 || visibilityConst > 1.0 {
				sqllex.Error("index visibility must be between 0 and 1")
				return 1
			}
			invisibilityConst := 1.0 - visibilityConst
			sqlVAL.union.val = tree.IndexInvisibility{Value: invisibilityConst, FloatProvided: true}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2480
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 195:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2500
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2509
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2520
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2529
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2542
		{

			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					YAMLConfig: sqlDollar[4].union.expr(),
				},
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2551
		{
			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					Options: sqlDollar[4].union.kvOptions(),
				},
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2559
		{

			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: true,
				},
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2568
		{
			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					YAMLConfig: tree.DNull,
				},
			}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2578
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 204:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2586
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 205:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2597
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 206:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2607
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 207:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2617
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 208:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2626
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 209:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2637
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 210:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2643
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 211:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2651
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2655
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2659
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 214:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2663
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 215:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2669
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2674
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2685
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2689
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2695
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2699
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 221:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2706
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2711
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2716
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colTableDef()}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2721
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colTableDef()}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2726
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colTableDef()}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2731
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colTableDef()}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2736
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2741
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2746
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2751
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2756
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2761
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2765
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 234:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2770
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2779
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2791
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2801
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2809
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2819
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2822
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2828
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 242:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2834
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2843
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2850
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2859
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2868
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2873
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2880
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2887
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2893
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2900
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2901
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2905
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2909
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2915
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2923
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2927
		{
			sqlVAL.union.val = nil
		}
	case 258:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2933
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2937
		{
			sqlVAL.union.val = nil
		}
	case 260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2943
		{
			sqlVAL.union.val = true
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2947
		{
			sqlVAL.union.val = false
		}
	case 262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2953
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 263:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2957
		{
			sqlVAL.union.val = nil
		}
	case 264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2964
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2968
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 266:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2972
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2978
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 268:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2982
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 269:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3007
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:3018
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3029
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3038
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3048
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3057
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3066
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3075
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 277:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3079
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3082
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3086
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3093
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3100
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3106
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3113
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3120
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3126
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3134
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3138
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 295:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3159
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3166
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3170
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3174
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 299:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3178
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 300:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3222
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3234
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.backupTargetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3244
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3255
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.backupTargetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3264
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 305:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3268
		{
			sqlVAL.union.val = (*tree.BackupTargetList)(nil)
		}
	case 306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3272
		{
			t := sqlDollar[1].union.backupTargetList()
			sqlVAL.union.val = &t
		}
	case 307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3280
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 308:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3284
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 309:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3288
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3295
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3299
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3308
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3312
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: tree.MakeDBool(true)}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3316
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: sqlDollar[3].union.expr()}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3320
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(true)}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3324
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(true)}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3328
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(false)}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3332
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3336
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3340
		{
			sqlVAL.union.val = &tree.BackupOptions{ExecutionLocality: sqlDollar[4].union.expr()}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3344
		{

			sqlVAL.union.val = &tree.BackupOptions{IncludeAllSecondaryTenants: tree.MakeDBool(true)}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3349
		{
			sqlVAL.union.val = &tree.BackupOptions{IncludeAllSecondaryTenants: sqlDollar[3].union.expr()}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3353
		{
			sqlVAL.union.val = &tree.BackupOptions{UpdatesClusterMonitoringMetrics: tree.MakeDBool(true)}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3357
		{
			sqlVAL.union.val = &tree.BackupOptions{UpdatesClusterMonitoringMetrics: sqlDollar[3].union.expr()}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3362
		{
		}
	case 326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3363
		{
		}
	case 327:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3442
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.backupTargetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3453
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3472
		{
			sqlVAL.union.val = &tree.AlterBackupSchedule{
				ScheduleID: uint64(sqlDollar[4].union.int64()),
				Cmds:       sqlDollar[5].union.alterBackupScheduleCmds(),
			}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3478
		{
			return helpWith(sqllex, "ALTER BACKUP SCHEDULE")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3483
		{
			sqlVAL.union.val = tree.AlterBackupScheduleCmds{sqlDollar[1].union.alterBackupScheduleCmd()}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3487
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupScheduleCmds(), sqlDollar[3].union.alterBackupScheduleCmd())
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3494
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetLabel{
				Label: sqlDollar[3].union.expr(),
			}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3500
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetInto{
				Into: sqlDollar[3].union.stringOrPlaceholderOptList(),
			}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3506
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetWith{
				With: sqlDollar[3].union.backupOptions(),
			}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3512
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetRecurring{
				Recurrence: sqlDollar[2].union.expr(),
			}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3518
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetFullBackup{
				FullBackup: tree.FullBackupClause{AlwaysFull: true},
			}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3524
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetFullBackup{
				FullBackup: tree.FullBackupClause{Recurrence: sqlDollar[4].union.expr()},
			}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3530
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetScheduleOption{
				Option: sqlDollar[4].union.kvOption(),
			}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3539
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3543
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3553
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3559
		{
			sqlVAL.union.val = &tree.LabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3563
		{
			sqlVAL.union.val = &tree.LabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3569
		{
			sqlVAL.union.val = sqlDollar[1].union.labelSpec()
		}
	case 346:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3573
		{
			sqlVAL.union.val = &tree.LabelSpec{IfNotExists: false}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3582
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3586
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3590
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 350:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3596
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 351:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3600
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 352:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3604
		{
			sqlVAL.union.val = nil
		}
	case 353:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3621
		{
			sqlVAL.union.val = &tree.CreateExternalConnection{
				ConnectionLabelSpec: *(sqlDollar[4].union.labelSpec()),
				As:                  sqlDollar[6].union.expr(),
			}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3627
		{
			return helpWith(sqllex, "CREATE EXTERNAL CONNECTION")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3638
		{
			sqlVAL.union.val = &tree.DropExternalConnection{
				ConnectionLabel: sqlDollar[4].union.expr(),
			}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3643
		{
			return helpWith(sqllex, "DROP EXTERNAL CONNECTION")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3680
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3689
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3699
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3708
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3718
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3727
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				Subdir:             sqlDollar[5].union.expr(),
				From:               sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[8].union.asOfClause(),
				Options:            *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3736
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3740
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3744
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3750
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3754
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3761
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 369:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3765
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 370:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3769
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3776
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3780
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3789
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3793
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3797
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3801
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3805
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3809
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3813
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3817
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingUDFs: true}
		}
	case 381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3821
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3825
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3829
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3833
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3837
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncludeAllSecondaryTenants: tree.MakeDBool(true)}
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3841
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncludeAllSecondaryTenants: sqlDollar[3].union.expr()}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3845
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3849
		{
			sqlVAL.union.val = &tree.RestoreOptions{AsTenant: sqlDollar[3].union.expr()}
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3853
		{
			sqlVAL.union.val = &tree.RestoreOptions{ForceTenantID: sqlDollar[3].union.expr()}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3857
		{
			sqlVAL.union.val = &tree.RestoreOptions{SchemaOnly: true}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3861
		{
			sqlVAL.union.val = &tree.RestoreOptions{VerifyData: true}
		}
	case 392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3865
		{
			sqlVAL.union.val = &tree.RestoreOptions{UnsafeRestoreIncompatibleVersion: true}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3869
		{
			sqlVAL.union.val = &tree.RestoreOptions{ExecutionLocality: sqlDollar[4].union.expr()}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3873
		{
			sqlVAL.union.val = &tree.RestoreOptions{ExperimentalOnline: true}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3877
		{
			sqlVAL.union.val = &tree.RestoreOptions{RemoveRegions: true, SkipLocalitiesCheck: true}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3882
		{
		}
	case 397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3883
		{
		}
	case 398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3886
		{
		}
	case 399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3887
		{
		}
	case 400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3891
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3897
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3901
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3928
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3933
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 405:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3937
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 406:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3943
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3948
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3953
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3957
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3974
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3977
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3981
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3985
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3993
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3997
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4003
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 417:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4007
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4013
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4017
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4021
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4025
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4031
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4035
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4041
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 425:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4045
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 426:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4049
		{
			sqlVAL.union.val = nil
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4059
		{
			p := sqlDollar[2].union.expr().(*tree.FuncExpr)
			p.InCall = true
			sqlVAL.union.val = &tree.Call{Proc: p}
		}
	case 428:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4073
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 429:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4087
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4091
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyTo{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 431:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4101
		{
			return unimplementedWithIssue(sqllex, 97181)
		}
	case 432:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4105
		{

			sqlVAL.union.val = &tree.CopyTo{
				Statement: sqlDollar[3].union.stmt(),
				Options:   *sqlDollar[7].union.copyOptions(),
			}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4113
		{
			return unimplementedWithIssue(sqllex, 96590)
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4119
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 435:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4123
		{
			sqlVAL.union.val = sqlDollar[3].union.copyOptions()
		}
	case 436:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4127
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4133
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4137
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4145
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4149
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[3].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4157
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4161
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary, HasFormat: true}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4165
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV, HasFormat: true}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4169
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4173
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4177
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "oids")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4181
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "freeze")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4185
		{
			sqlVAL.union.val = &tree.CopyOptions{Header: true, HasHeader: true}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4189
		{
			sqlVAL.union.val = &tree.CopyOptions{Quote: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4193
		{
			sqlVAL.union.val = &tree.CopyOptions{Escape: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4197
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force_quote")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4201
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force_not_null")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4205
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force_null")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4209
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "encoding")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4215
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[2].union.expr()}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4219
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary, HasFormat: true}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4223
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV, HasFormat: true}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4227
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatText, HasFormat: true}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4231
		{
			format := sqlDollar[2].str
			switch format {
			case "csv":
				sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV, HasFormat: true}
			case "binary":
				sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary, HasFormat: true}
			case "text":
				sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatText, HasFormat: true}
			default:
				sqllex.Error("COPY format \"" + format + "\" not recognized")
				return 1
			}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4246
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4250
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4254
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "oids")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4258
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "freeze")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4262
		{
			sqlVAL.union.val = &tree.CopyOptions{Header: true, HasHeader: true}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4266
		{
			sqlVAL.union.val = &tree.CopyOptions{Header: true, HasHeader: true}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4270
		{
			sqlVAL.union.val = &tree.CopyOptions{Header: false, HasHeader: true}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4274
		{
			sqlVAL.union.val = &tree.CopyOptions{Quote: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4278
		{
			sqlVAL.union.val = &tree.CopyOptions{Escape: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4282
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force_quote")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4286
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force_not_null")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4290
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force_null")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4294
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "encoding")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4302
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4303
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4304
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4305
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4306
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4316
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4324
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4326
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4330
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4333
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4343
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4352
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4360
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4362
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 491:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4366
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4369
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4379
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4388
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4396
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4398
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4402
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4405
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4413
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4416
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4420
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4424
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: sqlDollar[4].union.objectNamePrefix(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4428
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4432
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			if columnItem != nil && columnItem.TableName != nil {
				aIdx := sqllex.(*lexer).NewAnnotation()
				columnItem.TableName.AnnotatedNode = tree.AnnotatedNode{AnnIdx: aIdx}
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4449
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4454
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4457
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4458
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4462
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4467
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4479
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4481
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4482
		{
			return helpWith(sqllex, "CREATE CHANGEFEED")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4483
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4484
		{
			return helpWith(sqllex, "CREATE EXTERNAL CONNECTION")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4485
		{
			return helpWith(sqllex, "CREATE VIRTUAL CLUSTER")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4487
		{
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4488
		{
			return helpWith(sqllex, "CREATE")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4499
		{

			sqlVAL.union.val = &tree.CreateTenant{
				TenantSpec: &tree.TenantSpec{IsName: true, Expr: sqlDollar[3].union.expr()},
				Like:       sqlDollar[4].union.likeTenantSpec(),
			}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4507
		{

			sqlVAL.union.val = &tree.CreateTenant{
				IfNotExists: true,
				TenantSpec:  &tree.TenantSpec{IsName: true, Expr: sqlDollar[6].union.expr()},
				Like:        sqlDollar[7].union.likeTenantSpec(),
			}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4516
		{

			sqlVAL.union.val = &tree.CreateTenantFromReplication{
				TenantSpec:                  &tree.TenantSpec{IsName: true, Expr: sqlDollar[3].union.expr()},
				ReplicationSourceTenantName: &tree.TenantSpec{IsName: true, Expr: sqlDollar[8].union.expr()},
				ReplicationSourceAddress:    sqlDollar[10].union.expr(),
				Options:                     *sqlDollar[11].union.tenantReplicationOptions(),
				Like:                        sqlDollar[4].union.likeTenantSpec(),
			}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:4527
		{

			sqlVAL.union.val = &tree.CreateTenantFromReplication{
				IfNotExists:                 true,
				TenantSpec:                  &tree.TenantSpec{IsName: true, Expr: sqlDollar[6].union.expr()},
				ReplicationSourceTenantName: &tree.TenantSpec{IsName: true, Expr: sqlDollar[11].union.expr()},
				ReplicationSourceAddress:    sqlDollar[13].union.expr(),
				Options:                     *sqlDollar[14].union.tenantReplicationOptions(),
				Like:                        sqlDollar[7].union.likeTenantSpec(),
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4538
		{
			return helpWith(sqllex, "CREATE VIRTUAL CLUSTER")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4541
		{
		}
	case 534:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4549
		{
			sqlVAL.union.val = &tree.LikeTenantSpec{}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4553
		{
			sqlVAL.union.val = &tree.LikeTenantSpec{OtherTenant: sqlDollar[2].union.tenantSpec()}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4560
		{
			sqlVAL.union.val = sqlDollar[2].union.tenantReplicationOptions()
		}
	case 537:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4564
		{
			sqlVAL.union.val = sqlDollar[4].union.tenantReplicationOptions()
		}
	case 538:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4568
		{
			sqlVAL.union.val = &tree.TenantReplicationOptions{}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4575
		{
			sqlVAL.union.val = sqlDollar[1].union.tenantReplicationOptions()
		}
	case 540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4579
		{
			if err := sqlDollar[1].union.tenantReplicationOptions().CombineWith(sqlDollar[3].union.tenantReplicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4588
		{
			sqlVAL.union.val = &tree.TenantReplicationOptions{Retention: sqlDollar[3].union.expr()}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4593
		{
			sqlVAL.union.val = &tree.TenantReplicationOptions{ResumeTimestamp: sqlDollar[4].union.expr()}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4603
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR CHANGEFEED")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4604
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4605
		{
			return helpWith(sqllex, "CREATE SCHEDULE")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4612
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: tree.Name(sqlDollar[6].str)}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4615
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: tree.Name(sqlDollar[3].str)}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4619
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4622
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4625
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4644
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToRoutineName()
			sqlVAL.union.val = &tree.CreateRoutine{
				IsProcedure: false,
				Replace:     sqlDollar[2].union.bool(),
				Name:        name,
				Params:      sqlDollar[6].union.routineParams(),
				ReturnType: tree.RoutineReturnType{
					Type:  sqlDollar[11].union.typeReference(),
					SetOf: sqlDollar[10].union.bool(),
				},
				Options:     sqlDollar[12].union.routineOptions(),
				RoutineBody: sqlDollar[13].union.routineBody(),
			}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4659
		{
			return helpWith(sqllex, "CREATE FUNCTION")
		}
	case 555:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4673
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToRoutineName()
			sqlVAL.union.val = &tree.CreateRoutine{
				IsProcedure: true,
				Replace:     sqlDollar[2].union.bool(),
				Name:        name,
				Params:      sqlDollar[6].union.routineParams(),
				Options:     sqlDollar[8].union.routineOptions(),
				RoutineBody: sqlDollar[9].union.routineBody(),
				ReturnType: tree.RoutineReturnType{
					Type: types.Void,
				},
			}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4687
		{
			return helpWith(sqllex, "CREATE PROCEDURE")
		}
	case 557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4690
		{
			sqlVAL.union.val = true
		}
	case 558:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4691
		{
			sqlVAL.union.val = false
		}
	case 559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4694
		{
			return unimplementedWithIssueDetail(sqllex, 100226, "UDF returning TABLE")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4695
		{
			sqlVAL.union.val = false
		}
	case 561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4698
		{
			sqlVAL.union.val = true
		}
	case 562:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4699
		{
			sqlVAL.union.val = false
		}
	case 564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4705
		{
			sqlVAL.union.val = sqlDollar[1].union.routineParams()
		}
	case 565:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4706
		{
			sqlVAL.union.val = tree.RoutineParams{}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4709
		{
			sqlVAL.union.val = tree.RoutineParams{sqlDollar[1].union.routineParam()}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4711
		{
			sqlVAL.union.val = append(sqlDollar[1].union.routineParams(), sqlDollar[3].union.routineParam())
		}
	case 569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4718
		{
			arg := sqlDollar[1].union.routineParam()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4724
		{
			arg := sqlDollar[1].union.routineParam()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4732
		{
			sqlVAL.union.val = tree.RoutineParam{
				Name:  tree.Name(sqlDollar[2].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[1].union.routineParamClass(),
			}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4740
		{
			sqlVAL.union.val = tree.RoutineParam{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[2].union.routineParamClass(),
			}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4748
		{
			sqlVAL.union.val = tree.RoutineParam{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[2].union.typeReference(),
				Class: tree.RoutineParamIn,
			}
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4756
		{
			sqlVAL.union.val = tree.RoutineParam{
				Type:  sqlDollar[2].union.typeReference(),
				Class: sqlDollar[1].union.routineParamClass(),
			}
		}
	case 575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4763
		{
			sqlVAL.union.val = tree.RoutineParam{
				Type:  sqlDollar[1].union.typeReference(),
				Class: tree.RoutineParamIn,
			}
		}
	case 576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4771
		{
			sqlVAL.union.val = tree.RoutineParamIn
		}
	case 577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4772
		{
			return unimplementedWithIssueDetail(sqllex, 100405, "create function with 'OUT' argument class")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4773
		{
			return unimplementedWithIssueDetail(sqllex, 100405, "create function with 'INOUT' argument class")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4774
		{
			return unimplementedWithIssueDetail(sqllex, 100405, "create function with 'IN OUT' argument class")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4775
		{
			return unimplementedWithIssueDetail(sqllex, 88947, "variadic user-defined functions")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4784
		{
			sqlVAL.union.val = sqlDollar[1].union.routineOptions()
		}
	case 584:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4785
		{
			sqlVAL.union.val = tree.RoutineOptions{}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4788
		{
			sqlVAL.union.val = tree.RoutineOptions{sqlDollar[1].union.functionOption()}
		}
	case 586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4790
		{
			sqlVAL.union.val = append(sqlDollar[1].union.routineOptions(), sqlDollar[2].union.functionOption())
		}
	case 587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4796
		{
			sqlVAL.union.val = tree.RoutineBodyStr(sqlDollar[2].str)
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4800
		{
			lang, err := tree.AsRoutineLanguage(sqlDollar[2].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = lang
		}
	case 589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4807
		{
			return unimplemented(sqllex, "create transform function")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4808
		{
			return unimplemented(sqllex, "create window function")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4810
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOption()
		}
	case 592:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4816
		{
			sqlVAL.union.val = tree.RoutineCalledOnNullInput
		}
	case 593:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4820
		{
			sqlVAL.union.val = tree.RoutineReturnsNullOnNullInput
		}
	case 594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4824
		{
			sqlVAL.union.val = tree.RoutineStrict
		}
	case 595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4828
		{
			sqlVAL.union.val = tree.RoutineImmutable
		}
	case 596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4832
		{
			sqlVAL.union.val = tree.RoutineStable
		}
	case 597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4836
		{
			sqlVAL.union.val = tree.RoutineVolatile
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4840
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4844
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4848
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4852
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4856
		{
			sqlVAL.union.val = tree.RoutineLeakproof(true)
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4860
		{
			sqlVAL.union.val = tree.RoutineLeakproof(false)
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4864
		{
			return unimplemented(sqllex, "create function/procedure ... cost")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4868
		{
			return unimplemented(sqllex, "create function/procedure ... rows")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4872
		{
			return unimplemented(sqllex, "create function/procedure ... support")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4879
		{
			return unimplemented(sqllex, "create function/procedure ... set")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4880
		{
			return unimplemented(sqllex, "create function/procedure ... parallel")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4887
		{
			sqlVAL.union.val = &tree.RoutineReturn{
				ReturnVal: sqlDollar[2].union.expr(),
			}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4899
		{
			sqlVAL.union.val = append(sqlDollar[1].union.stmts(), sqlDollar[2].union.stmt())
		}
	case 614:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4903
		{
			sqlVAL.union.val = tree.Statements{}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4909
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: tree.Statements{sqlDollar[1].union.stmt()},
			}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4915
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: sqlDollar[3].union.stmts(),
			}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4921
		{
			sqlVAL.union.val = (*tree.RoutineBody)(nil)
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4927
		{
		}
	case 619:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4930
		{
		}
	case 620:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4941
		{
			sqlVAL.union.val = &tree.DropRoutine{
				Routines:     sqlDollar[3].union.routineObjs(),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4948
		{
			sqlVAL.union.val = &tree.DropRoutine{
				IfExists:     true,
				Routines:     sqlDollar[5].union.routineObjs(),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4955
		{
			return helpWith(sqllex, "DROP FUNCTION")
		}
	case 623:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4965
		{
			sqlVAL.union.val = &tree.DropRoutine{
				Procedure:    true,
				Routines:     sqlDollar[3].union.routineObjs(),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4973
		{
			sqlVAL.union.val = &tree.DropRoutine{
				IfExists:     true,
				Procedure:    true,
				Routines:     sqlDollar[5].union.routineObjs(),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4981
		{
			return helpWith(sqllex, "DROP PROCEDURE")
		}
	case 626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4985
		{
			sqlVAL.union.val = tree.RoutineObjs{sqlDollar[1].union.functionObj()}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4989
		{
			sqlVAL.union.val = append(sqlDollar[1].union.routineObjs(), sqlDollar[3].union.functionObj())
		}
	case 628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4995
		{
			sqlVAL.union.val = tree.RoutineObj{
				FuncName: sqlDollar[1].union.unresolvedObjectName().ToRoutineName(),
				Params:   sqlDollar[2].union.routineParams(),
			}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5002
		{
			sqlVAL.union.val = tree.RoutineObj{
				FuncName: sqlDollar[1].union.unresolvedObjectName().ToRoutineName(),
			}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5010
		{
			sqlVAL.union.val = sqlDollar[2].union.routineParams()
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5014
		{
			sqlVAL.union.val = tree.RoutineParams{}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5020
		{
			sqlVAL.union.val = tree.RoutineParams{sqlDollar[1].union.routineParam()}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5024
		{
			sqlVAL.union.val = append(sqlDollar[1].union.routineParams(), sqlDollar[3].union.routineParam())
		}
	case 634:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5030
		{
			sqlVAL.union.val = &tree.AlterFunctionOptions{
				Function: sqlDollar[3].union.functionObj(),
				Options:  sqlDollar[4].union.routineOptions(),
			}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5039
		{
			sqlVAL.union.val = tree.RoutineOptions{sqlDollar[1].union.functionOption()}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5043
		{
			sqlVAL.union.val = append(sqlDollar[1].union.routineOptions(), sqlDollar[2].union.functionOption())
		}
	case 637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5048
		{
		}
	case 638:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5049
		{
		}
	case 639:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5053
		{
			sqlVAL.union.val = &tree.AlterRoutineRename{
				Function: sqlDollar[3].union.functionObj(),
				NewName:  tree.Name(sqlDollar[6].str),
			}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5062
		{
			sqlVAL.union.val = &tree.AlterRoutineSetSchema{
				Function:      sqlDollar[3].union.functionObj(),
				NewSchemaName: tree.Name(sqlDollar[6].str),
			}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5071
		{
			sqlVAL.union.val = &tree.AlterRoutineSetOwner{
				Function: sqlDollar[3].union.functionObj(),
				NewOwner: sqlDollar[6].union.roleSpec(),
			}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5080
		{
			sqlVAL.union.val = &tree.AlterFunctionDepExtension{
				Function:  sqlDollar[3].union.functionObj(),
				Remove:    sqlDollar[4].union.bool(),
				Extension: tree.Name(sqlDollar[8].str),
			}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5090
		{
			sqlVAL.union.val = &tree.AlterRoutineRename{
				Function:  sqlDollar[3].union.functionObj(),
				NewName:   tree.Name(sqlDollar[6].str),
				Procedure: true,
			}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5100
		{
			sqlVAL.union.val = &tree.AlterRoutineSetSchema{
				Function:      sqlDollar[3].union.functionObj(),
				NewSchemaName: tree.Name(sqlDollar[6].str),
				Procedure:     true,
			}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5110
		{
			sqlVAL.union.val = &tree.AlterRoutineSetOwner{
				Function:  sqlDollar[3].union.functionObj(),
				NewOwner:  sqlDollar[6].union.roleSpec(),
				Procedure: true,
			}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5120
		{
			sqlVAL.union.val = true
		}
	case 647:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5124
		{
			sqlVAL.union.val = false
		}
	case 648:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5129
		{
			return unimplemented(sqllex, "create access method")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5130
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5131
		{
			return unimplemented(sqllex, "create cast")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5132
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5133
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5134
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5135
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5136
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5137
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5138
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5139
		{
			return unimplemented(sqllex, "create publication")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5140
		{
			return unimplemented(sqllex, "create rule")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5141
		{
			return unimplemented(sqllex, "create server")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5142
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5143
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5144
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5145
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5148
		{
		}
	case 666:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5149
		{
		}
	case 667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5152
		{
		}
	case 668:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5153
		{
		}
	case 669:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5156
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5157
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5158
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5159
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5160
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5161
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5162
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5163
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 677:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5164
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5165
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5166
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5167
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5168
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5169
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5170
		{
			return unimplemented(sqllex, "drop server")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5171
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5172
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5173
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5176
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5177
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5178
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5179
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5180
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5182
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5183
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5184
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5185
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5186
		{
			return helpWith(sqllex, "CREATE FUNCTION")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5187
		{
			return helpWith(sqllex, "CREATE PROCEDURE")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5197
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5205
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5209
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 711:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5213
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5219
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5223
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5232
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5236
		{
			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 716:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5240
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5246
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5250
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5261
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5273
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5279
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				UsingExtremes: true,
			}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5285
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Where: tree.NewWhere(tree.AstWhere, sqlDollar[1].union.expr()),
			}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5300
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5309
		{
			target, err := tree.ChangefeedTargetFromTableExpr(sqlDollar[9].union.tblExpr())
			if err != nil {
				return setErr(sqllex, err)
			}

			sqlVAL.union.val = &tree.CreateChangefeed{
				SinkURI: sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
				Targets: tree.ChangefeedTargets{target},
				Select: &tree.SelectClause{
					Exprs: sqlDollar[7].union.selExprs(),
					From:  tree.From{Tables: tree.TableExprs{sqlDollar[9].union.tblExpr()}},
					Where: tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
				},
			}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5327
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5364
		{
			sqlVAL.union.val = &tree.ScheduledChangefeed{
				CreateChangefeed: &tree.CreateChangefeed{
					Targets: sqlDollar[6].union.changefeedTargets(),
					SinkURI: sqlDollar[7].union.expr(),
					Options: sqlDollar[8].union.kvOptions(),
				},
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[9].union.expr(),
				ScheduleOptions:   sqlDollar[10].union.kvOptions(),
			}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:5379
		{
			target, err := tree.ChangefeedTargetFromTableExpr(sqlDollar[12].union.tblExpr())
			if err != nil {
				return setErr(sqllex, err)
			}

			createChangefeedNode := &tree.CreateChangefeed{
				SinkURI: sqlDollar[6].union.expr(),
				Options: sqlDollar[7].union.kvOptions(),
				Targets: tree.ChangefeedTargets{target},
				Select: &tree.SelectClause{
					Exprs: sqlDollar[10].union.selExprs(),
					From:  tree.From{Tables: tree.TableExprs{sqlDollar[12].union.tblExpr()}},
					Where: tree.NewWhere(tree.AstWhere, sqlDollar[13].union.expr()),
				},
			}

			sqlVAL.union.val = &tree.ScheduledChangefeed{
				CreateChangefeed:  createChangefeedNode,
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[14].union.expr(),
				ScheduleOptions:   sqlDollar[15].union.kvOptions(),
			}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5403
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR CHANGEFEED")
		}
	case 729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5407
		{
			sqlVAL.union.val = tree.ChangefeedTargets{sqlDollar[1].union.changefeedTarget()}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5411
		{
			sqlVAL.union.val = append(sqlDollar[1].union.changefeedTargets(), sqlDollar[3].union.changefeedTarget())
		}
	case 731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5417
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[3].str),
			}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5428
		{
		}
	case 734:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5430
		{
		}
	case 735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5434
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 736:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5438
		{
			sqlVAL.str = ""
		}
	case 737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5444
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 738:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5448
		{

			sqlVAL.union.val = nil
		}
	case 739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5455
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 740:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5472
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Batch:     sqlDollar[3].union.batch(),
				Table:     sqlDollar[5].union.tblExpr(),
				Using:     sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5484
		{
			return helpWith(sqllex, "DELETE")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5488
		{
			sqlVAL.union.val = &tree.Batch{}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5492
		{
			sqlVAL.union.val = &tree.Batch{Params: sqlDollar[3].union.batchParams()}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5496
		{
			sqlVAL.union.val = (*tree.Batch)(nil)
		}
	case 745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5502
		{
			sqlVAL.union.val = []tree.BatchParam{sqlDollar[1].union.batchParam()}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5506
		{
			sqlVAL.union.val = append(sqlDollar[1].union.batchParams(), sqlDollar[3].union.batchParam())
		}
	case 747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5512
		{
			sqlVAL.union.val = &tree.SizeBatchParam{Size: sqlDollar[2].union.expr()}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5518
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 749:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5522
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5532
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5535
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5537
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeSequences}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5541
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeTemp}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5545
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeTemp}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5548
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5557
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5558
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5559
		{
			return helpWith(sqllex, "DROP EXTERNAL CONNECTION")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5560
		{
			return helpWith(sqllex, "DROP VIRTUAL CLUSTER")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5561
		{
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5562
		{
			return helpWith(sqllex, "DROP")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5565
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5566
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5567
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5568
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5569
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5570
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5571
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5572
		{
			return helpWith(sqllex, "DROP FUNCTION")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5573
		{
			return helpWith(sqllex, "DROP FUNCTION")
		}
	case 785:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5581
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5585
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5589
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5598
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5606
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5614
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5618
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5621
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5629
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5633
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5636
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5644
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5653
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5661
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5669
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5677
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5684
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5691
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5699
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5706
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5713
		{

			sqlVAL.union.val = &tree.DropTenant{
				TenantSpec: sqlDollar[3].union.tenantSpec(),
				IfExists:   false,
				Immediate:  sqlDollar[4].union.bool(),
			}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5722
		{

			sqlVAL.union.val = &tree.DropTenant{
				TenantSpec: sqlDollar[5].union.tenantSpec(),
				IfExists:   true,
				Immediate:  sqlDollar[6].union.bool(),
			}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5730
		{
			return helpWith(sqllex, "DROP VIRTUAL CLUSTER")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5734
		{
			sqlVAL.union.val = false
		}
	case 809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5736
		{
			sqlVAL.union.val = true
		}
	case 810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5740
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5746
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5750
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 813:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5759
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5767
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5774
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5782
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5786
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5789
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5793
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5798
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5820
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5825
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5827
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5832
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5836
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5859
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5866
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5868
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5876
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5884
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5892
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5900
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5911
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5921
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5924
		{
			return helpWith(sqllex, "DELETE")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5926
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5927
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5928
		{
			return helpWith(sqllex, "INSERT")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5931
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5933
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5936
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5941
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5942
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5943
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5948
		{
			return helpWith(sqllex, "DELETE")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5949
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5950
		{
			return helpWith(sqllex, "INSERT")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5952
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5956
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5957
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5960
		{
			return helpWith(sqllex, "DELETE")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5961
		{
			return helpWith(sqllex, "INSERT")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5963
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5966
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5967
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5971
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5975
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 895:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5985
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5991
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5995
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5999
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6006
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
				Options: sqlDollar[3].union.kvOptions(),
			}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6014
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
			}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6020
		{
			sqlVAL.union.val = &tree.AlterChangefeedSetOptions{
				Options: sqlDollar[2].union.kvOptions(),
			}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6026
		{
			sqlVAL.union.val = &tree.AlterChangefeedUnsetOptions{
				Options: sqlDollar[2].union.nameList(),
			}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6045
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6052
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6059
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6063
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6067
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6073
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6081
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6099
		{

			sqlVAL.union.val = &tree.ShowTenant{
				TenantSpec:        sqlDollar[2].union.tenantSpec(),
				ShowTenantOptions: sqlDollar[3].union.showTenantOpts(),
			}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6106
		{
			return helpWith(sqllex, "SHOW VIRTUAL CLUSTER")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6110
		{

			sqlVAL.union.val = &tree.TenantSpec{All: true}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6115
		{

			sqlVAL.union.val = &tree.TenantSpec{All: true}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6120
		{

			sqlVAL.union.val = sqlDollar[2].union.tenantSpec()
		}
	case 915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6125
		{
			sqlVAL.union.val = &tree.TenantSpec{All: true}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6129
		{
			sqlVAL.union.val = &tree.TenantSpec{All: true}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6133
		{
			sqlVAL.union.val = sqlDollar[3].union.tenantSpec()
		}
	case 918:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6139
		{

			sqlVAL.union.val = tree.ShowTenantOptions{}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6144
		{

			sqlVAL.union.val = sqlDollar[2].union.showTenantOpts()
		}
	case 920:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6151
		{

			sqlVAL.union.val = tree.ShowTenantOptions{WithReplication: true}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6156
		{

			sqlVAL.union.val = tree.ShowTenantOptions{WithCapabilities: true}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6161
		{

			o := sqlDollar[1].union.showTenantOpts()
			o.WithReplication = true
			sqlVAL.union.val = o
		}
	case 923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6168
		{

			o := sqlDollar[1].union.showTenantOpts()
			o.WithCapabilities = true
			sqlVAL.union.val = o
		}
	case 924:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6181
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6189
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6197
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6201
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 928:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6205
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6215
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6222
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6230
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6234
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 933:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6238
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6248
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6252
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6256
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6260
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6263
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6287
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6291
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6295
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6299
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6303
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6314
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 945:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6318
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6330
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6342
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6354
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:               sqlDollar[8].union.objectNamePrefixList(),
					AllProceduresInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6366
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees:        sqlDollar[5].union.roleSpecList(),
				WithGrantOption: sqlDollar[6].union.bool(),
			}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6376
		{
			return helpWith(sqllex, "GRANT")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6400
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), GrantOptionFor: false}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6404
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.grantTargetList(), GrantOptionFor: true}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6408
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6412
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6416
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6420
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.grantTargetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6424
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6435
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6446
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6458
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6470
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6482
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6494
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[11].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6506
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:               sqlDollar[8].union.objectNamePrefixList(),
					AllProceduresInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6518
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:               sqlDollar[11].union.objectNamePrefixList(),
					AllProceduresInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6530
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees: sqlDollar[5].union.roleSpecList(),
			}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6540
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[6].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees:       sqlDollar[8].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6551
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6554
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6560
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6564
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings(), privilege.OriginFromUserInput)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6574
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6578
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6592
		{
			return helpWith(sqllex, "RESET")
		}
	case 981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6593
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6601
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6605
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6609
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6612
		{
			return helpWith(sqllex, "RESET")
		}
	case 986:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6620
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6623
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6634
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6637
		{
			return helpWith(sqllex, "USE")
		}
	case 991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6641
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6642
		{
		}
	case 993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6643
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6647
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6648
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6649
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6650
		{
			return helpWith(sqllex, "USE")
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6666
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6681
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6684
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6702
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6710
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6714
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6718
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6724
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6728
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6734
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6738
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6742
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6746
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6750
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6761
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6764
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6774
		{
			return helpWith(sqllex, "ALTER VIRTUAL CLUSTER REPLICATION")
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6775
		{
			return helpWith(sqllex, "ALTER VIRTUAL CLUSTER SETTING")
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6776
		{
			return helpWith(sqllex, "ALTER VIRTUAL CLUSTER CAPABILITY")
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6777
		{
			return helpWith(sqllex, "ALTER VIRTUAL CLUSTER RENAME")
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6778
		{
			return helpWith(sqllex, "ALTER VIRTUAL CLUSTER SERVICE")
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6779
		{
			return helpWith(sqllex, "ALTER VIRTUAL CLUSTER")
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6783
		{
			sqlVAL.union.val = &tree.TenantSpec{IsName: true, Expr: sqlDollar[1].union.expr()}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6785
		{
			sqlVAL.union.val = &tree.TenantSpec{IsName: false, Expr: sqlDollar[2].union.expr()}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6793
		{

			sqlVAL.union.val = &tree.AlterTenantRename{
				TenantSpec: sqlDollar[3].union.tenantSpec(),
				NewName:    &tree.TenantSpec{IsName: true, Expr: sqlDollar[6].union.expr()},
			}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6809
		{

			sqlVAL.union.val = &tree.AlterTenantService{
				TenantSpec: sqlDollar[3].union.tenantSpec(),
				Command:    tree.TenantStartServiceExternal,
			}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6817
		{

			sqlVAL.union.val = &tree.AlterTenantService{
				TenantSpec: sqlDollar[3].union.tenantSpec(),
				Command:    tree.TenantStartServiceShared,
			}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6825
		{

			sqlVAL.union.val = &tree.AlterTenantService{
				TenantSpec: sqlDollar[3].union.tenantSpec(),
				Command:    tree.TenantStopService,
			}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6832
		{
			return helpWith(sqllex, "ALTER VIRTUAL CLUSTER SERVICE")
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6833
		{
			return helpWith(sqllex, "ALTER VIRTUAL CLUSTER SERVICE")
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6846
		{

			sqlVAL.union.val = &tree.AlterTenantReplication{
				TenantSpec: sqlDollar[3].union.tenantSpec(),
				Command:    tree.PauseJob,
			}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6854
		{

			sqlVAL.union.val = &tree.AlterTenantReplication{
				TenantSpec: sqlDollar[3].union.tenantSpec(),
				Command:    tree.ResumeJob,
			}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6862
		{

			sqlVAL.union.val = &tree.AlterTenantReplication{
				TenantSpec: sqlDollar[3].union.tenantSpec(),
				Cutover: &tree.ReplicationCutoverTime{
					Timestamp: sqlDollar[9].union.expr(),
				},
			}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6872
		{

			sqlVAL.union.val = &tree.AlterTenantReplication{
				TenantSpec: sqlDollar[3].union.tenantSpec(),
				Cutover: &tree.ReplicationCutoverTime{
					Latest: true,
				},
			}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6882
		{

			sqlVAL.union.val = &tree.AlterTenantReplication{
				TenantSpec: sqlDollar[3].union.tenantSpec(),
				Options:    *sqlDollar[6].union.tenantReplicationOptions(),
			}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6899
		{

			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantSpec:        sqlDollar[3].union.tenantSpec(),
			}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6908
		{

			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantSpec:        &tree.TenantSpec{All: true},
			}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6917
		{

			csettingStmt := sqlDollar[5].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantSpec:        &tree.TenantSpec{All: true},
			}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6925
		{
			return helpWith(sqllex, "ALTER VIRTUAL CLUSTER SETTING")
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6926
		{
			return helpWith(sqllex, "ALTER VIRTUAL CLUSTER SETTING")
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6943
		{

			sqlVAL.union.val = &tree.AlterTenantCapability{
				TenantSpec:   sqlDollar[3].union.tenantSpec(),
				Capabilities: sqlDollar[6].union.tenantCapabilities(),
			}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6951
		{

			sqlVAL.union.val = &tree.AlterTenantCapability{
				TenantSpec:      sqlDollar[3].union.tenantSpec(),
				AllCapabilities: true,
			}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6959
		{

			sqlVAL.union.val = &tree.AlterTenantCapability{
				TenantSpec:   sqlDollar[3].union.tenantSpec(),
				Capabilities: sqlDollar[6].union.tenantCapabilities(),
				IsRevoke:     true,
			}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6968
		{

			sqlVAL.union.val = &tree.AlterTenantCapability{
				TenantSpec:      sqlDollar[3].union.tenantSpec(),
				AllCapabilities: true,
				IsRevoke:        true,
			}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6976
		{
			return helpWith(sqllex, "ALTER VIRTUAL CLUSTER CAPABILITY")
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6977
		{
			return helpWith(sqllex, "ALTER VIRTUAL CLUSTER CAPABILITY")
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6981
		{

			sqlVAL.union.val = tree.TenantCapability{
				Name: strings.Join(sqlDollar[1].union.strs(), "."),
			}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6988
		{

			sqlVAL.union.val = tree.TenantCapability{
				Name:  strings.Join(sqlDollar[1].union.strs(), "."),
				Value: sqlDollar[3].union.expr(),
			}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6998
		{

			sqlVAL.union.val = []tree.TenantCapability{sqlDollar[1].union.tenantCapability()}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7003
		{

			sqlVAL.union.val = append(sqlDollar[1].union.tenantCapabilities(), sqlDollar[3].union.tenantCapability())
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7012
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs(), SetRow: true}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7028
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[4].union.exprs()}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7034
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[5].union.exprs()}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7040
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7043
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7045
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7048
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7051
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7065
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7070
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7087
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7090
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7092
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7095
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7099
		{
			sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7111
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7115
		{
			return unimplemented(sqllex, "set from current")
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7119
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7124
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7133
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7138
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7142
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7154
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7159
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7166
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7170
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7176
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7180
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7187
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7210
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7214
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7220
		{
			sqlVAL.union.val = tree.ReadUncommittedIsolation
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7224
		{
			sqlVAL.union.val = tree.ReadCommittedIsolation
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7228
		{
			sqlVAL.union.val = tree.SnapshotIsolation
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7232
		{
			sqlVAL.union.val = tree.RepeatableReadIsolation
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7236
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7242
		{
			sqlVAL.union.val = tree.Low
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7246
		{
			sqlVAL.union.val = tree.Normal
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7250
		{
			sqlVAL.union.val = tree.High
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7261
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7265
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7269
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7274
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7278
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7295
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7296
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7297
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7298
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7299
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7300
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7301
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7302
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7303
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7304
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7306
		{
			return helpWith(sqllex, "SHOW FUNCTIONS")
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7307
		{
			return helpWith(sqllex, "SHOW PROCEDURES")
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7308
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7309
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7310
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7311
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7312
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7314
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7315
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7316
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7318
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7320
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7321
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7322
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7323
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7324
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7325
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7326
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7327
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7328
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7329
		{
			return helpWith(sqllex, "SHOW VIRTUAL CLUSTER")
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7330
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7331
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7332
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7333
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7334
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7335
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7336
		{
			return helpWith(sqllex, "SHOW")
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7339
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7348
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7354
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7359
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7369
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7379
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7383
		{
			sqlVAL.union.val = true
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7387
		{
			sqlVAL.union.val = false
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7393
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7397
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7401
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7407
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7411
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7415
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7421
		{
			sqlVAL.union.val = true
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7425
		{
			sqlVAL.union.val = false
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7429
		{
			sqlVAL.union.val = false
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7439
		{
			sqlVAL.union.val = &tree.FetchCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7444
		{
			return helpWith(sqllex, "FETCH")
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7452
		{
			sqlVAL.union.val = &tree.MoveCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7457
		{
			return helpWith(sqllex, "MOVE")
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7461
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7468
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7475
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7482
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7489
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7496
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7508
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7516
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7524
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7531
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7539
		{
			sqlVAL.union.val = int64(1)
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7540
		{
			sqlVAL.union.val = int64(-1)
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7543
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7544
		{
			sqlVAL.union.val = int64(1)
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7547
		{
			sqlVAL.union.val = int64(1)
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7548
		{
			sqlVAL.union.val = int64(-1)
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7551
		{
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7552
		{
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7555
		{
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7556
		{
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7560
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7565
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7570
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7575
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7580
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7590
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7591
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7592
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7597
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7607
		{
			sqlVAL.str = "client_encoding"
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7612
		{
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7614
		{

			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7619
		{
			sqlVAL.str = "timezone"
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7620
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7625
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7629
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7649
		{
			sqlVAL.union.val = &tree.ShowTableStats{
				Table:   sqlDollar[5].union.unresolvedObjectName(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7656
		{

			sqlVAL.union.val = &tree.ShowTableStats{
				Table:     sqlDollar[7].union.unresolvedObjectName(),
				UsingJSON: true,
				Options:   sqlDollar[8].union.kvOptions(),
			}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7664
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7677
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7685
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7693
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.stringOrPlaceholderOptList(),
			}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7699
		{
			sqlVAL.union.val = &tree.ShowBackup{
				From:         true,
				Details:      sqlDollar[3].union.showBackupDetails(),
				Path:         sqlDollar[5].union.expr(),
				InCollection: sqlDollar[7].union.stringOrPlaceholderOptList(),
				Options:      *sqlDollar[8].union.showBackupOptions(),
			}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7709
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.stringOrPlaceholderOptList(),
				Options:      *sqlDollar[6].union.showBackupOptions(),
			}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7718
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: *sqlDollar[4].union.showBackupOptions(),
			}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7726
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupSchemaDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: *sqlDollar[5].union.showBackupOptions(),
			}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7734
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: *sqlDollar[5].union.showBackupOptions(),
			}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7742
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: *sqlDollar[5].union.showBackupOptions(),
			}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7750
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupValidateDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: *sqlDollar[5].union.showBackupOptions(),
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7758
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupConnectionTest,
				Path:    sqlDollar[4].union.expr(),
				Options: *sqlDollar[5].union.showBackupOptions(),
			}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7765
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7769
		{
			sqlVAL.union.val = tree.BackupDefaultDetails
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7773
		{
			sqlVAL.union.val = tree.BackupSchemaDetails
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7777
		{
			sqlVAL.union.val = tree.BackupFileDetails
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7781
		{
			sqlVAL.union.val = tree.BackupRangeDetails
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7785
		{
			sqlVAL.union.val = tree.BackupValidateDetails
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7791
		{
			sqlVAL.union.val = sqlDollar[2].union.showBackupOptions()
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7795
		{
			sqlVAL.union.val = sqlDollar[4].union.showBackupOptions()
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7799
		{
			sqlVAL.union.val = &tree.ShowBackupOptions{}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7806
		{
			sqlVAL.union.val = sqlDollar[1].union.showBackupOptions()
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7810
		{
			if err := sqlDollar[1].union.showBackupOptions().CombineWith(sqlDollar[3].union.showBackupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7818
		{
			sqlVAL.union.val = &tree.ShowBackupOptions{AsJson: true}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7822
		{
			sqlVAL.union.val = &tree.ShowBackupOptions{CheckFiles: true}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7826
		{
			sqlVAL.union.val = &tree.ShowBackupOptions{SkipSize: true}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7830
		{

			sqlVAL.union.val = &tree.ShowBackupOptions{SkipSize: true}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7835
		{
			sqlVAL.union.val = &tree.ShowBackupOptions{DebugIDs: true}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7839
		{
			sqlVAL.union.val = &tree.ShowBackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7843
		{
			sqlVAL.union.val = &tree.ShowBackupOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7847
		{
			sqlVAL.union.val = &tree.ShowBackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7851
		{
			sqlVAL.union.val = &tree.ShowBackupOptions{Privileges: true}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7855
		{
			sqlVAL.union.val = &tree.ShowBackupOptions{EncryptionInfoDir: sqlDollar[3].union.expr()}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7859
		{
			sqlVAL.union.val = &tree.ShowBackupOptions{DebugMetadataSST: true}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7865
		{
			sqlVAL.union.val = sqlDollar[2].union.showBackupOptions()
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7869
		{
			sqlVAL.union.val = sqlDollar[4].union.showBackupOptions()
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7873
		{
			sqlVAL.union.val = &tree.ShowBackupOptions{}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7880
		{
			sqlVAL.union.val = sqlDollar[1].union.showBackupOptions()
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7884
		{
			if err := sqlDollar[1].union.showBackupOptions().CombineWith(sqlDollar[3].union.showBackupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7892
		{
			sqlVAL.union.val = &tree.ShowBackupOptions{CheckConnectionTransferSize: sqlDollar[3].union.expr()}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7896
		{
			sqlVAL.union.val = &tree.ShowBackupOptions{CheckConnectionDuration: sqlDollar[3].union.expr()}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7900
		{
			sqlVAL.union.val = &tree.ShowBackupOptions{CheckConnectionConcurrency: sqlDollar[3].union.expr()}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7912
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7916
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7919
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7921
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7924
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7926
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7930
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7933
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7937
		{

			sqlVAL.union.val = sqlDollar[1].union.stmt()
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7942
		{

			switch t := sqlDollar[1].union.stmt().(type) {
			case *tree.ShowClusterSetting:
				sqlVAL.union.val = &tree.ShowTenantClusterSetting{
					ShowClusterSetting: t,
					TenantSpec:         sqlDollar[4].union.tenantSpec(),
				}
			case *tree.ShowClusterSettingList:
				sqlVAL.union.val = &tree.ShowTenantClusterSettingList{
					ShowClusterSettingList: t,
					TenantSpec:             sqlDollar[4].union.tenantSpec(),
				}
			}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7957
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7965
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7968
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7976
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7980
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7984
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7988
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7991
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7999
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8002
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8009
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles:  sqlDollar[4].union.roleSpecList(),
				Schema: tree.Name(sqlDollar[5].str),
			}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8015
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles:      sqlDollar[6].union.roleSpecList(),
				ForGrantee: true,
				Schema:     tree.Name(sqlDollar[7].str),
			}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8022
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
				Schema:      tree.Name(sqlDollar[7].str),
			}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8028
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8035
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8039
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8049
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8058
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8065
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8068
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8081
		{
			lst := sqlDollar[3].union.grantTargetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8090
		{
			sqlVAL.union.val = &tree.ShowGrants{
				Targets:  &tree.GrantTargetList{System: true},
				Grantees: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8096
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8104
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8107
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8109
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8113
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8117
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8120
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8122
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8126
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8129
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8143
		{
			sqlVAL.union.val = &tree.ShowCommitTimestamp{}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8153
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8156
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8158
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8161
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8169
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8172
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8174
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8177
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8181
		{
			sqlVAL.union.val = true
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8183
		{
			sqlVAL.union.val = true
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8185
		{
			sqlVAL.union.val = false
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8202
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8206
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Automatic: false,
			}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8212
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Automatic: false,
				Options:   sqlDollar[4].union.showJobOptions(),
			}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8219
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8222
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8223
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8224
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8226
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8230
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs:    sqlDollar[3].union.slct(),
				Options: sqlDollar[5].union.showJobOptions(),
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8237
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8241
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8245
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8248
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8250
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8258
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Options: sqlDollar[5].union.showJobOptions(),
			}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8267
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8275
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8283
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8284
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8290
		{
			sqlVAL.union.val = sqlDollar[1].union.showJobOptions()
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8294
		{
			if err := sqlDollar[1].union.showJobOptions().CombineWith(sqlDollar[3].union.showJobOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8303
		{
			sqlVAL.union.val = &tree.ShowJobOptions{
				ExecutionDetails: true,
			}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8317
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8323
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8325
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8331
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8333
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8339
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8343
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8347
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8353
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8357
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8361
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8365
		{
			sqlVAL.union.val = tree.ScheduledChangefeedExecutor
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8376
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8379
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8381
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8384
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8386
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8390
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8393
		{
			sqlVAL.union.val = true
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8394
		{
			sqlVAL.union.val = false
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8402
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8405
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8407
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8410
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8418
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8428
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8438
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8441
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8448
		{
			sqlVAL.union.val = &tree.ShowRoutines{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			}}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8457
		{
			sqlVAL.union.val = &tree.ShowRoutines{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			}}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8466
		{
			sqlVAL.union.val = &tree.ShowRoutines{}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8469
		{
			return helpWith(sqllex, "SHOW FUNCTIONS")
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8476
		{
			sqlVAL.union.val = &tree.ShowRoutines{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			}, Procedure: true}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8485
		{
			sqlVAL.union.val = &tree.ShowRoutines{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			}, Procedure: true}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8494
		{
			sqlVAL.union.val = &tree.ShowRoutines{Procedure: true}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8497
		{
			return helpWith(sqllex, "SHOW PROCEDURES")
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8504
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8507
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8509
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8512
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8515
		{
			sqlVAL.union.val = true
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8516
		{
			sqlVAL.union.val = false
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8523
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8527
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8530
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8537
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8541
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8544
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8551
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8555
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8559
		{

			sqlVAL.union.val = &tree.ShowCompletions{
				Statement: tree.NewStrVal(sqlDollar[7].str),
				Offset:    sqlDollar[5].union.numVal(),
			}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8569
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8576
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8580
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8591
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8594
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8602
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8607
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8612
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8616
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8623
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8627
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8630
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8643
		{
			sqlVAL.union.val = &tree.ShowCreate{
				Name: sqlDollar[3].union.unresolvedObjectName(), FmtOpt: sqlDollar[4].union.showCreateFormatOption(),
			}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8649
		{

			sqlVAL.union.val = &tree.ShowCreate{
				Mode:   tree.ShowCreateModeTable,
				Name:   sqlDollar[4].union.unresolvedObjectName(),
				FmtOpt: sqlDollar[5].union.showCreateFormatOption(),
			}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8658
		{

			sqlVAL.union.val = &tree.ShowCreate{
				Mode:   tree.ShowCreateModeView,
				Name:   sqlDollar[4].union.unresolvedObjectName(),
				FmtOpt: sqlDollar[5].union.showCreateFormatOption(),
			}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8667
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8672
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8677
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeIndexes, Name: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8682
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSecondaryIndexes, Name: sqlDollar[6].union.unresolvedObjectName()}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8687
		{

			sqlVAL.union.val = &tree.ShowCreateRoutine{
				Name: tree.ResolvableFunctionReference{
					FunctionReference: sqlDollar[4].union.unresolvedObjectName().ToUnresolvedName(),
				},
			}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8696
		{

			sqlVAL.union.val = &tree.ShowCreateRoutine{
				Name: tree.ResolvableFunctionReference{
					FunctionReference: sqlDollar[4].union.unresolvedObjectName().ToUnresolvedName(),
				},
				Procedure: true,
			}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8706
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8710
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8714
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8717
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8721
		{
			sqlVAL.union.val = tree.ShowCreateFormatOptionNone
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8725
		{
			sqlVAL.union.val = tree.ShowCreateFormatOptionRedactedValues
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8737
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8740
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8742
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8745
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8754
		{
			sqlVAL.union.val = &tree.ShowCreateExternalConnections{}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8757
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8759
		{
			sqlVAL.union.val = &tree.ShowCreateExternalConnections{ConnectionLabel: sqlDollar[5].union.expr()}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8762
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8770
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8773
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8781
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8784
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8794
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8798
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8802
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8810
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8818
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8825
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8831
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8833
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8836
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8838
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8841
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8845
		{
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8854
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8862
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8868
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8892
		{
			sqlVAL.union.val = &tree.ShowRanges{Source: tree.ShowRangesIndex, TableOrIndex: sqlDollar[5].union.tableIndexName(), Options: sqlDollar[6].union.showRangesOpts()}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8896
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{Source: tree.ShowRangesTable, TableOrIndex: tree.TableIndexName{Table: name}, Options: sqlDollar[6].union.showRangesOpts()}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8901
		{
			sqlVAL.union.val = &tree.ShowRanges{Source: tree.ShowRangesDatabase, DatabaseName: tree.Name(sqlDollar[5].str), Options: sqlDollar[6].union.showRangesOpts()}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8905
		{
			sqlVAL.union.val = &tree.ShowRanges{Source: tree.ShowRangesCurrentDatabase, Options: sqlDollar[5].union.showRangesOpts()}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8909
		{
			sqlVAL.union.val = &tree.ShowRanges{Source: tree.ShowRangesCurrentDatabase, Options: sqlDollar[3].union.showRangesOpts()}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8912
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8914
		{
			sqlVAL.union.val = &tree.ShowRanges{Source: tree.ShowRangesCluster, Options: sqlDollar[4].union.showRangesOpts()}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8917
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8921
		{
			sqlVAL.union.val = &tree.ShowRangesOptions{}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8923
		{
			sqlVAL.union.val = sqlDollar[2].union.showRangesOpts()
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8926
		{
			sqlVAL.union.val = &tree.ShowRangesOptions{Mode: tree.ExpandTables}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8927
		{
			sqlVAL.union.val = &tree.ShowRangesOptions{Mode: tree.ExpandIndexes}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8928
		{
			sqlVAL.union.val = &tree.ShowRangesOptions{Details: true}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8929
		{
			sqlVAL.union.val = &tree.ShowRangesOptions{Keys: true}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8930
		{
			sqlVAL.union.val = &tree.ShowRangesOptions{Explain: true}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8932
		{
			o := sqlDollar[1].union.showRangesOpts()
			if o.Mode != 0 {
				return setErr(sqllex, errors.New("conflicting modes"))
			}
			o.Mode = tree.ExpandTables
			sqlVAL.union.val = o
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8939
		{
			o := sqlDollar[1].union.showRangesOpts()
			if o.Mode != 0 {
				return setErr(sqllex, errors.New("conflicting modes"))
			}
			o.Mode = tree.ExpandIndexes
			sqlVAL.union.val = o
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8946
		{
			o := sqlDollar[1].union.showRangesOpts()
			o.Details = true
			sqlVAL.union.val = o
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8952
		{
			o := sqlDollar[1].union.showRangesOpts()
			o.Explain = true
			sqlVAL.union.val = o
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8958
		{
			o := sqlDollar[1].union.showRangesOpts()
			o.Keys = true
			sqlVAL.union.val = o
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8972
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8976
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8992
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8998
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9004
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9010
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9017
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9023
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowSuperRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[6].str),
			}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9029
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9033
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9039
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9045
		{

			sqlVAL.union.val = &tree.ShowFingerprints{TenantSpec: sqlDollar[5].union.tenantSpec()}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9052
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9058
		{
			tmp := sqlDollar[2].union.grantTargetList()
			sqlVAL.union.val = &tmp
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9063
		{
			sqlVAL.union.val = (*tree.GrantTargetList)(nil)
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9185
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9189
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9193
		{

			sqlVAL.union.val = tree.GrantTargetList{
				Tables:   tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9232
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9236
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: true, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9240
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9245
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9249
		{
			sqlVAL.union.val = tree.GrantTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9253
		{
			sqlVAL.union.val = tree.GrantTargetList{ExternalConnections: sqlDollar[3].union.nameList()}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9257
		{
			sqlVAL.union.val = tree.GrantTargetList{Functions: sqlDollar[2].union.routineObjs()}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9261
		{
			sqlVAL.union.val = tree.GrantTargetList{Procedures: sqlDollar[2].union.routineObjs()}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9271
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9275
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9279
		{
			sqlVAL.union.val = tree.BackupTargetList{
				Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
			}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9285
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9289
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9294
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9300
		{

			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true, ID: tenID}}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9309
		{

			if sqlDollar[2].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true}}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9319
		{
			sqlVAL.union.val = tree.BackupTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9328
		{
			sqlVAL.union.val = tree.GrantTargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9332
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9336
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9340
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9348
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9352
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9360
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9361
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9362
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9363
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9369
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9370
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9371
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9372
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9380
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9383
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9393
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9402
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9411
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9413
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9417
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9421
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9424
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9429
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9433
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9448
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9456
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9458
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9464
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9472
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9475
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9484
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9490
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9497
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9504
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9511
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9522
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9531
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9539
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:9575
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:9590
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9607
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9611
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9618
		{

			sqlVAL.union.val = nil
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9624
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9630
		{
			sqlVAL.str = ""
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9634
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9640
		{
			sqlVAL.union.val = nil
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9644
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9649
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9653
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9657
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9661
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9671
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9675
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9681
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9687
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9691
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9697
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:9710
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9724
		{
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9725
		{
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9726
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9744
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9745
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9746
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9750
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9751
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9752
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9753
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9754
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9759
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9765
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9769
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9775
		{
			sqlVAL.union.val = sqlDollar[1].union.colTableDef()
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9781
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9794
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9803
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9807
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9813
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9818
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9819
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9820
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9821
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9822
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9823
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9824
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9825
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9826
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9831
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9838
		{
			sqlVAL.str = ""
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9845
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9851
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9859
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9865
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9871
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9877
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9887
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9893
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9899
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9906
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9913
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9919
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9923
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9929
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.Name(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9939
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9943
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9949
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.Name(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9963
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9974
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9978
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9984
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9988
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9992
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9996
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10000
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10004
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10008
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10026
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10030
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10034
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10038
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10044
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10050
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10058
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10062
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10066
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10070
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10080
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10084
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10088
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10093
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10099
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10105
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10109
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10115
		{

			sqlVAL.union.val = true
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10120
		{
			sqlVAL.union.val = false
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10125
		{
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10129
		{
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10132
		{
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10136
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             "",
				Columns:          sqlDollar[3].union.idxElems(),
				Sharded:          sqlDollar[5].union.shardedIndexDef(),
				Storing:          sqlDollar[6].union.nameList(),
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
				Invisibility:     sqlDollar[10].union.indexInvisibility(),
			}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:10149
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
				Invisibility:     sqlDollar[11].union.indexInvisibility(),
			}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:10162
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
					Invisibility:     sqlDollar[12].union.indexInvisibility(),
				},
			}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:10177
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             "",
				Columns:          sqlDollar[4].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[6].union.partitionByIndex(),
				StorageParams:    sqlDollar[7].union.storageParams(),
				Predicate:        sqlDollar[8].union.expr(),
				Invisibility:     sqlDollar[9].union.indexInvisibility(),
			}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10189
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
				Invisibility:     sqlDollar[10].union.indexInvisibility(),
			}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10203
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10215
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10220
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10226
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:10233
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10245
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:10257
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10268
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10275
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10279
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10285
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10295
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10306
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10310
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10317
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10323
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10335
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10339
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10345
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10351
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10355
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10361
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10365
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10371
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10378
		{
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10379
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10380
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10381
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10382
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10383
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10401
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10405
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10411
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10417
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10423
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10427
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10433
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10437
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10457
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10461
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10465
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10469
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10478
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10482
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10486
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10490
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10494
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10500
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10506
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10514
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10518
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10522
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10526
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10530
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10550
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10559
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10567
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10571
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10574
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10575
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10578
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType == nil {
				sqllex.(*lexer).lastError = pgerror.Newf(pgcode.UndefinedObject, "type %q does not exist", sqlDollar[2].union.val)
				sqllex.(*lexer).populateErrorDetails()
				return 1
			}
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10592
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10594
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10595
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10596
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10606
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10608
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10610
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10612
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10614
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10615
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10617
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10618
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10620
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10622
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10623
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10625
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x, OptionalWord: true}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10628
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10636
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10639
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10643
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10649
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10653
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10663
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10667
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10670
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10681
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10685
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10689
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10693
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10697
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10701
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10704
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10708
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10712
		{
			sqlVAL.str = ""
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10720
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10724
		{

			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10731
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10735
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10743
		{
			sqlVAL.union.val = true
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10747
		{

			sqlVAL.union.val = true
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10752
		{
			sqlVAL.union.val = false
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10764
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10778
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:10790
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10802
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
				WithData:     sqlDollar[8].union.bool(),
			}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:10813
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
				WithData:     sqlDollar[11].union.bool(),
			}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10824
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10828
		{
			sqlVAL.union.val = false
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10832
		{
			sqlVAL.union.val = true
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10836
		{
			sqlVAL.union.val = true
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10842
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10846
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10850
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10854
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10858
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10862
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10866
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10870
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10874
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10878
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10882
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10886
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10890
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10894
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10898
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10902
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10906
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10910
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10914
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10918
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10922
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10926
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10930
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10934
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10940
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10944
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10950
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10954
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10960
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10964
		{
			sqlVAL.union.val = nil
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10970
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10974
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10979
		{
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10980
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10989
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:10997
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11005
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11008
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:          sqlDollar[3].union.unresolvedObjectName(),
				Variety:           tree.Composite,
				CompositeTypeList: sqlDollar[6].union.compositeTypeList(),
			}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:11016
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:          sqlDollar[6].union.unresolvedObjectName(),
				Variety:           tree.Composite,
				IfNotExists:       true,
				CompositeTypeList: sqlDollar[9].union.compositeTypeList(),
			}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11025
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11027
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11029
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11031
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11035
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11039
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11045
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11049
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11055
		{
			sqlVAL.union.val = sqlDollar[1].union.compositeTypeList()
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11059
		{
			sqlVAL.union.val = []tree.CompositeTypeElem{}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11065
		{
			sqlVAL.union.val = []tree.CompositeTypeElem{
				tree.CompositeTypeElem{
					Label: tree.Name(sqlDollar[1].str),
					Type:  sqlDollar[2].union.typeReference(),
				},
			}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11074
		{
			sqlVAL.union.val = append(sqlDollar[1].union.compositeTypeList(),
				tree.CompositeTypeElem{
					Label: tree.Name(sqlDollar[3].str),
					Type:  sqlDollar[4].union.typeReference(),
				},
			)
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:11096
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
				Invisibility:     sqlDollar[17].union.indexInvisibility(),
			}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:11114
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
				Invisibility:     sqlDollar[20].union.indexInvisibility(),
			}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:11133
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
				Invisibility:     sqlDollar[16].union.indexInvisibility(),
			}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:11150
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
				Invisibility:     sqlDollar[19].union.indexInvisibility(),
			}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11167
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11171
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11186
		{
			sqlVAL.union.val = false
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11192
		{
			sqlVAL.union.val = true
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11196
		{
			sqlVAL.union.val = false
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11202
		{
			sqlVAL.union.val = true
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11206
		{
			sqlVAL.union.val = false
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11212
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11216
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11225
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11231
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11237
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11245
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder, OpClass: tree.Name(opClass)}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11263
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11264
		{
			sqlVAL.str = ""
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11267
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11268
		{
			sqlVAL.str = ""
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11272
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11276
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11280
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11286
		{
			sqlVAL.union.val = tree.IndexInvisibility{Value: 1.0}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11290
		{
			sqlVAL.union.val = tree.IndexInvisibility{Value: 1.0}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11294
		{
			sqlVAL.union.val = tree.IndexInvisibility{Value: 0.0}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11298
		{
			visibilityConst, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if visibilityConst < 0.0 || visibilityConst > 1.0 {
				sqllex.Error("index visibility must be between 0 and 1")
				return 1
			}
			invisibilityConst := 1.0 - visibilityConst
			sqlVAL.union.val = tree.IndexInvisibility{Value: invisibilityConst, FloatProvided: true}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11308
		{
			sqlVAL.union.val = tree.IndexInvisibility{Value: 0.0}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:11314
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11320
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11326
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11332
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11340
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11346
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11354
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11362
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11372
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11378
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11385
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11391
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11397
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11404
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11410
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11416
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11422
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11431
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11439
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11449
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11455
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11465
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:11471
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11483
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11492
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11502
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:11511
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11523
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11529
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11537
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11546
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11557
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11563
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11575
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:11581
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11595
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11601
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11609
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11613
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11625
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11634
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11643
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11652
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11660
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11664
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.targetObjectType(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11675
		{
			sqlVAL.union.val = true
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11679
		{
			sqlVAL.union.val = false
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11685
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.targetObjectType(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:11693
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.targetObjectType(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11704
		{
			sqlVAL.union.val = privilege.Tables
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11708
		{
			sqlVAL.union.val = privilege.Sequences
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11712
		{
			sqlVAL.union.val = privilege.Types
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11716
		{
			sqlVAL.union.val = privilege.Schemas
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11720
		{
			sqlVAL.union.val = privilege.Routines
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11724
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON ROUTINES ...")
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11730
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11733
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11739
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11743
		{
			sqlVAL.str = ""
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11750
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11754
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11759
		{
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11760
		{
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11763
		{
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11764
		{
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11772
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11775
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11785
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11793
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11795
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11799
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11802
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11815
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11823
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11825
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11831
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11844
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11852
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11854
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11860
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11868
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11871
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11875
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11876
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11877
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11893
		{
			s := sqlDollar[3].union.beginTransaction()
			s.FormatWithStart = true
			sqlVAL.union.val = s
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11898
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11908
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11911
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11915
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11920
		{
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11921
		{
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11922
		{
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11932
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11936
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11939
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11945
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11946
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11950
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11953
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11957
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11960
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11964
		{
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11965
		{
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11969
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11973
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11979
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11983
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11989
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11993
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12006
		{
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12008
		{
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12012
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12017
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12021
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12025
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12029
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12035
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12041
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12047
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12051
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12057
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12061
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:12071
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
				SuperRegion:     sqlDollar[15].union.superRegion(),
				SecondaryRegion: tree.Name(sqlDollar[16].str),
			}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:12089
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
				Owner:           sqlDollar[17].union.roleSpec(),
				SuperRegion:     sqlDollar[18].union.superRegion(),
				SecondaryRegion: tree.Name(sqlDollar[19].str),
			}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12107
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12112
		{
			sqlVAL.str = ""
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12117
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12124
		{
			sqlVAL.str = ""
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12129
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12136
		{
			sqlVAL.union.val = tree.SuperRegion{}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12142
		{
			sqlVAL.union.val = tree.SuperRegion{Name: tree.Name(sqlDollar[3].str), Regions: sqlDollar[5].union.nameList()}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12149
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12155
		{
			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12159
		{
			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12165
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12169
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12175
		{

		}
	case 2055:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12182
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12186
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12190
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12199
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12205
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12209
		{
			sqlVAL.str = ""
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12215
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12219
		{
			sqlVAL.str = ""
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12225
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12229
		{
			sqlVAL.str = ""
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12235
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12239
		{
			sqlVAL.str = ""
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12245
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12253
		{
			sqlVAL.union.val = int32(-1)
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12259
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12263
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12270
		{
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12271
		{
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12286
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12293
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12300
		{
			return helpWith(sqllex, "INSERT")
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12311
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12318
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12322
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12331
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12336
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12342
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12346
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12350
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12356
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12360
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12380
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12384
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12391
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:12399
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12408
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:12415
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12425
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12430
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12434
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:12452
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12464
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12467
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12470
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12476
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12480
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12493
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12496
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12500
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12511
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12517
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12526
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12532
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12573
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12579
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12583
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12598
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12602
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12606
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12610
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12614
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12618
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12622
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12626
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12631
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12632
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12635
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12636
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12640
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12644
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12650
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12659
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12660
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12661
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12662
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12665
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12666
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12669
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12670
		{
			sqlVAL.union.val = tree.LockWaitSkipLocked
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12671
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12676
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12711
		{
			return helpWith(sqllex, "SELECT")
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12712
		{
			return helpWith(sqllex, "VALUES")
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12713
		{
			return helpWith(sqllex, "TABLE")
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12735
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12748
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12762
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12774
		{
			return helpWith(sqllex, "SELECT")
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12778
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12787
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12796
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12811
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12818
		{
			return helpWith(sqllex, "TABLE")
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12830
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12834
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12839
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12845
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12849
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12855
		{
			sqlVAL.union.val = tree.CTEMaterializeAlways
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12859
		{
			sqlVAL.union.val = tree.CTEMaterializeNever
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12862
		{
			sqlVAL.union.val = tree.CTEMaterializeDefault
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12868
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()},
				Mtr:  sqlDollar[4].union.cteMaterializeClause(),
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12877
		{
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12878
		{
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12882
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12886
		{
			sqlVAL.union.val = nil
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12891
		{
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12892
		{
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12896
		{
			sqlVAL.union.val = true
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12900
		{
			sqlVAL.union.val = false
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12904
		{
			sqlVAL.union.val = false
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12910
		{
			sqlVAL.union.val = true
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12916
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12921
		{
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12922
		{
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12925
		{
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12926
		{
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12930
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12934
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12940
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12944
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12950
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12956
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12962
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12966
		{
			return unimplementedWithIssueDetail(sqllex, 109847, "order by index")
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12970
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12975
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12982
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12986
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12990
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12994
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13000
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13004
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13008
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13014
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13019
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13031
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13045
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13049
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13053
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13059
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13068
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13079
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13080
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13084
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13088
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13092
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13106
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13110
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13118
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13125
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13147
		{
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13148
		{
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13151
		{
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13152
		{
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13169
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13173
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13178
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13179
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13185
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13186
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13187
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13188
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13192
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13196
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13215
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13218
		{
			return helpWith(sqllex, "VALUES")
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13220
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13232
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13235
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13237
		{
			sqlVAL.union.val = tree.From{}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13243
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13247
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13253
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13257
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13262
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13267
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13273
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13278
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13283
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13288
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13294
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13299
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13304
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13309
		{

			id := tree.FamilyID(uint32(sqlDollar[4].union.int64()))
			sqlVAL.union.val = &tree.IndexFlags{FamilyID: &id}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13317
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13322
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13333
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13337
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13341
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13349
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13383
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13393
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13403
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13411
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13420
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13424
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13428
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13439
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13463
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13469
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13480
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13484
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13490
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13492
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13496
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13502
		{
			sqlVAL.union.val = sqlDollar[2].union.colDefList()
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13506
		{
			sqlVAL.union.val = tree.ColumnDefList(nil)
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13512
		{
			sqlVAL.union.val = tree.ColumnDefList{tree.ColumnDef{Name: tree.Name(sqlDollar[1].str)}}
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13516
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colDefList(), tree.ColumnDef{Name: tree.Name(sqlDollar[3].str)})
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13523
		{
			sqlVAL.union.val = tree.ColumnDefList(nil)
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13527
		{
			sqlVAL.union.val = sqlDollar[2].union.colDefList()
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13533
		{
			sqlVAL.union.val = tree.ColumnDefList{sqlDollar[1].union.colDef()}
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13537
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colDefList(), sqlDollar[3].union.colDef())
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13543
		{
			sqlVAL.union.val = tree.ColumnDef{Name: tree.Name(sqlDollar[1].str)}
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13547
		{
			sqlVAL.union.val = tree.ColumnDef{Name: tree.Name(sqlDollar[1].str), Type: sqlDollar[2].union.typeReference()}
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13552
		{
			sqlVAL.union.val = nil
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13553
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13554
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13558
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13562
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13568
		{
			sqlVAL.union.val = true
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13572
		{
			sqlVAL.union.val = false
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13592
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13596
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13600
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13604
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13608
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13612
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13618
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.colDefList()}
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13622
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()}
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13629
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13635
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.colDefList()}
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13639
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()}
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13646
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13652
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13659
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13665
		{
			sqlVAL.str = tree.AstFull
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13669
		{
			sqlVAL.str = tree.AstLeft
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13673
		{
			sqlVAL.str = tree.AstRight
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13677
		{
			sqlVAL.str = tree.AstInner
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13683
		{
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13684
		{
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13708
		{
			sqlVAL.str = tree.AstHash
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13712
		{
			sqlVAL.str = tree.AstMerge
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13716
		{
			sqlVAL.str = tree.AstLookup
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13720
		{
			sqlVAL.str = tree.AstInverted
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13724
		{
			sqlVAL.str = ""
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13737
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13741
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13746
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13747
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13748
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13749
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13753
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13758
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13766
		{
			sqlVAL.union.val = &tree.Unlisten{ChannelName: sqlDollar[2].union.unresolvedObjectName(), Star: false}
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13770
		{
			sqlVAL.union.val = &tree.Unlisten{ChannelName: nil, Star: true}
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13784
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13788
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13794
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13800
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 2337:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13810
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13820
		{
			sqlVAL.union.val = true
		}
	case 2339:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13824
		{
			sqlVAL.union.val = false
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13830
		{
			sqlVAL.union.val = true
		}
	case 2341:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13834
		{
			sqlVAL.union.val = false
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13840
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13847
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13859
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13872
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 2347:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13880
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13881
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13891
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13898
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13899
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13901
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 2353:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13909
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13910
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 2356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13922
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2357:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13929
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13938
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13978
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 2360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13983
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13988
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13989
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 2365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13992
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 2366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13993
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 2367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13994
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 2368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13995
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 2369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13996
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 2370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13997
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 2371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13998
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 2372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13999
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 2373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14000
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 2374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14001
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 2375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14002
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 2376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14003
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 2377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14004
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 2378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14005
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 2379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14006
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 2380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14007
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 2381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14008
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 2382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14009
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 2383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14010
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 2384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14011
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 2385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14012
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 2386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14013
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 2387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14014
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 2388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14015
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 2389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14016
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 2390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14017
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 2391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14018
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 2392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14019
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 2393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14020
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 2394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14021
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 2395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14022
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 2396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14023
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 2397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14026
		{
			sqlVAL.union.val = types.Geography
		}
	case 2398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14027
		{
			sqlVAL.union.val = types.Geometry
		}
	case 2399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14028
		{
			sqlVAL.union.val = types.Box2D
		}
	case 2400:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14030
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2401:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14034
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2402:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:14038
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2403:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:14046
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14074
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2412:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14082
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2413:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14090
		{
			sqlVAL.union.val = nil
		}
	case 2414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14097
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14101
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14105
		{
			sqlVAL.union.val = types.Int2
		}
	case 2417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14109
		{
			sqlVAL.union.val = types.Int
		}
	case 2418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14113
		{
			sqlVAL.union.val = types.Float4
		}
	case 2419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14117
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 2420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14121
		{
			sqlVAL.union.val = types.Float
		}
	case 2421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14125
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14133
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14141
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14149
		{
			sqlVAL.union.val = types.Bool
		}
	case 2425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14155
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 2426:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14168
		{
			sqlVAL.union.val = types.Float
		}
	case 2427:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14174
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2428:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14180
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14188
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 2430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14192
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14196
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2432:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14202
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 2433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14214
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 2434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14220
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 2435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14224
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14228
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14232
		{
			sqlVAL.union.val = types.String
		}
	case 2440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14241
		{
			sqlVAL.union.val = true
		}
	case 2441:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14242
		{
			sqlVAL.union.val = false
		}
	case 2442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14247
		{
			sqlVAL.union.val = types.Date
		}
	case 2443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14251
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 2444:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14259
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 2445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14271
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 2446:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14273
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 2447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14282
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 2448:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14290
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 2449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14303
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 2450:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14307
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 2451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14317
		{
			sqlVAL.union.val = true
		}
	case 2452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14318
		{
			sqlVAL.union.val = false
		}
	case 2453:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14319
		{
			sqlVAL.union.val = false
		}
	case 2454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14323
		{
			sqlVAL.union.val = types.Interval
		}
	case 2455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14327
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 2456:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14331
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 2457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14342
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 2458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14350
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14358
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 2460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14366
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14374
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14382
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 2463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14388
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14397
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14406
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14415
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 2467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14421
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14430
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 2469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14436
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 2471:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14446
		{
			sqlVAL.union.val = nil
		}
	case 2472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14452
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 2473:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14460
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 2475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14497
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14501
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14505
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 2478:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14509
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 2479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14520
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14525
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14529
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14533
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14537
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14541
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14545
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14549
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14553
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14557
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14561
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14565
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14569
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14573
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14577
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14581
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14585
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14589
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14593
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14597
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14601
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14605
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14609
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14613
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14617
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14621
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14625
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14629
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14633
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14637
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14641
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14645
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14649
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14653
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.TSMatches), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14657
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14661
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14665
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14669
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14673
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14681
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14691
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14695
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14699
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14703
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14707
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2524:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14711
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2525:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14715
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2526:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:14719
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14723
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2528:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14727
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2529:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14731
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2530:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:14735
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2531:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14739
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2532:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:14743
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2533:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14747
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2534:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:14751
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14755
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14759
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14763
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14767
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14771
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2540:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14779
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14787
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14791
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2543:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14795
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14799
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14803
		{
			t1, t2 := sqlDollar[1].union.tuple(), sqlDollar[3].union.tuple()
			if len(t1.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on left side of OVERLAPS expression")
				return 1
			}
			if len(t2.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on right side of OVERLAPS expression")
				return 1
			}
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("overlaps"), Exprs: tree.Exprs{t1.Exprs[0], t1.Exprs[1], t2.Exprs[0], t2.Exprs[1]}}
		}
	case 2546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14816
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2547:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14820
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14824
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2549:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14828
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14832
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2551:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14836
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2552:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14840
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2553:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:14844
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2554:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:14848
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2555:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:14852
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2556:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:14856
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2557:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:14860
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2558:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:14864
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2559:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:14868
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14872
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2561:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14876
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2562:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14880
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {

				if tree.IsUnaryComplement(subOp) {
					subOp = treecmp.MakeComparisonOperator(treecmp.RegMatch)
				} else {
					sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
						subOp, op, subOp))
					return 1
				}
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2563:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14904
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14909
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14921
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14925
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14929
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14933
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14937
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14941
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14945
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14949
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14953
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14957
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14961
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14965
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14969
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14973
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14977
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14981
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14985
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14989
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14993
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14997
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15001
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15005
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15009
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15013
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:15017
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15025
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2592:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15035
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2593:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:15039
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2594:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:15043
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2595:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:15047
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:15061
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:15069
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15105
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15109
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15113
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15117
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15121
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2605:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:15126
		{
			return unimplemented(sqllex, sqlDollar[1].union.resolvableFuncRef().String()+"(...) SCONST")
		}
	case 2606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15128
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15132
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15136
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15140
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15144
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15148
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:15152
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15161
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2614:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15168
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2615:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15172
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2616:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:15176
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15186
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15191
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15195
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:15199
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:15203
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:15207
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2624:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:15210
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15214
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRef()}
		}
	case 2626:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15218
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRef(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2627:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:15221
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2628:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:15222
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2629:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:15224
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRef(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2630:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15230
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRef(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2631:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:15234
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRef(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15237
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRef())
		}
	case 2633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15241
		{
			sqlVAL.union.val = sqlDollar[1].union.resolvableFuncRefFromName()
		}
	case 2634:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:15245
		{
			id := sqlDollar[3].union.int32()
			sqlVAL.union.val = tree.ResolvableFunctionReference{
				FunctionReference: &tree.FunctionOID{OID: oid.Oid(id)},
			}
		}
	case 2635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:15259
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							un, err := name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
							typ = &un
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:15312
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2637:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:15325
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15337
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15346
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15347
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2641:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15352
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15356
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15360
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15366
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15370
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15374
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15378
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15382
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15386
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15392
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15396
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15400
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2653:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:15404
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2654:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:15408
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2655:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:15412
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2656:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:15416
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2657:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:15420
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2658:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:15424
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2659:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:15428
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2660:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:15432
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2661:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:15436
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2662:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:15440
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15447
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15450
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15452
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15455
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15457
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2669:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:15461
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15464
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15466
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2672:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:15470
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15473
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15475
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2675:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:15479
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15482
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15484
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2678:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:15488
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15491
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15493
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15496
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15498
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15501
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2684:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:15503
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15506
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2686:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:15508
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15511
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2688:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:15513
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15516
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2690:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:15518
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2691:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:15522
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15525
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2693:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:15526
		{
			return unimplemented(sqllex, "treat")
		}
	case 2694:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15528
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2695:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15532
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2696:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15536
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2697:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:15540
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2698:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:15544
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15547
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2700:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:15549
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15552
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2702:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15558
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2703:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15562
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2704:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15568
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2705:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15572
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:15579
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2707:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15583
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15589
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15593
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15599
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:15607
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:15611
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2713:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15615
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2714:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:15622
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2716:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15642
		{
			sqlVAL.str = ""
		}
	case 2717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15648
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2718:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15652
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15658
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15666
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15674
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2722:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15682
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15688
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2724:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:15701
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:15729
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:15733
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:15737
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:15741
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:15748
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15757
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:15761
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:15765
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15769
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2734:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15774
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2735:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:15787
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15791
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2738:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15798
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15810
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15814
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15818
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15834
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15835
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15836
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15837
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15838
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15839
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15840
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15841
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2750:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15842
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15843
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15844
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15845
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15847
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15848
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15849
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15850
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15851
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15852
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15853
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15854
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15855
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15856
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15857
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15858
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15859
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15860
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15861
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15862
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15863
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15864
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15865
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15866
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15867
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.TSMatches)
		}
	case 2775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15868
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15869
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15870
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15875
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2780:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:15891
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15898
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:15899
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15900
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:15901
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:15924
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15928
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15934
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:15938
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15942
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:15953
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15957
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:15963
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15967
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2797:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15974
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15980
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15984
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15990
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15994
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16000
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16004
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16010
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16014
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16020
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16024
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:16047
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16051
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16055
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:16061
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16068
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2821:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:16072
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16089
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16093
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:16097
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:16101
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16105
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:16111
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:16117
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16123
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:16127
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16131
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16137
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2834:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:16149
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16156
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:16160
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2837:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:16166
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:16172
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2839:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:16176
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2841:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:16183
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16189
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2843:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:16193
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2845:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:16200
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16206
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:16210
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16215
		{
		}
	case 2849:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:16216
		{
		}
	case 2850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16220
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16224
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16230
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:16239
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16243
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16247
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2858:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16259
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16263
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16269
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16273
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16292
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16300
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16323
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16332
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2867:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:16336
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16340
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16344
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16350
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16354
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:16369
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:16373
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:16385
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:16389
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16398
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16409
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16418
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16426
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2886:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:16443
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16531
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16535
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16543
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16547
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16553
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16557
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16563
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16569
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name('*'), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2916:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:16576
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16603
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16610
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2925:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:16614
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2926:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:16618
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2928:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:16632
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2929:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:16636
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16640
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16653
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16658
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16666
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16684
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16697
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2940:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:16704
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2948:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:16729
		{
			sqlVAL.str = ""
		}
	case 2949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16735
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2950:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:16739
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
